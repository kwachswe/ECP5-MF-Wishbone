
// pcie_beh.v generated by Lattice IP Model Creator version 1
// created on Mon, May  3, 2021  8:57:29 AM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top































`timescale 1 ns / 100 ps
module pcie_x1_top_fne94d8
   (
   
   sys_clk,            
   rst_n,              
   pcie_x1_top_dgrx_data,          
   pcie_x1_top_dgrx_kcntl,         
   pcie_x1_top_dgrx_err,           

   
   dfrm_ddata,         
   dfrm_dllp_st,       
   dfrm_dllp_end,      
   dfrm_tdata,         
   dfrm_tval,          
   dfrm_st,            
   dfrm_end,           
   dfrm_edb,           
   dfrm_perr           
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam vka2a25 = 2'd0 ;
localparam gq1512b = 2'd1 ;
localparam jea8959 = 2'd0 ;
localparam qt44aca = 2'd1 ;
input                     sys_clk;
input                     rst_n;
input  [15:0]             pcie_x1_top_dgrx_data;
input  [1:0]              pcie_x1_top_dgrx_kcntl;
input  [1:0]              pcie_x1_top_dgrx_err;
output [15:0]             dfrm_ddata;
output                    dfrm_dllp_st;
output                    dfrm_dllp_end;
output [15:0]             dfrm_tdata;
output                    dfrm_tval;
output                    dfrm_st;
output                    dfrm_end;
output                    dfrm_edb;
output                    dfrm_perr;
wire                      dfrm_st;
wire                      dfrm_end;
wire                      dfrm_edb;
wire                      dfrm_perr;
reg    [1:0]              phaaf22;
reg    [1:0]              ps57917;
reg                       cobc8bb;
reg                       xwe45d9;
reg                       zz22ecb;
reg                       oh1765f;
reg                       sjbb2fc;
reg                       wjd97e5;
reg    [7:0]              kqcbf2d;
reg                       jp5f968;
reg    [15:0]             dfrm_ddata;
reg                       goe5a3f;
reg                       ph2d1f8;
reg    [15:0]             dfrm_tdata;
reg                       dfrm_tval;
reg                       zm3f1c2;
reg                       alf8e13;
reg                       jpc709d;
wire   [15:0]             bn384ef;
reg [15 : 0] nrc277e;
reg [1 : 0] hd13bf7;
reg [1 : 0] qi9dfbf;
reg [1 : 0] kqefdf8;
reg [1 : 0] dz7efc1;
reg czf7e0e;
reg rvbf074;
reg off83a7;
reg kqc1d3c;
reg hqe9e1;
reg ld74f0a;
reg [7 : 0] nga7857;
reg wl3c2bb;
reg xwe15dc;
reg wyaee3;
reg zk57718;
reg cbbb8c2;
reg uvdc614;
reg [15 : 0] xje30a5;
reg [2047:0] ux1852e;
wire [18:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 19,jra5d72 = 32'hfdffc68b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif






















assign bn384ef = {nrc277e[15:11], (nrc277e[10:9] ^ qi9dfbf), nrc277e[8:2], (nrc277e[1:0] ^ qi9dfbf)};

assign ykc1b8c = ((xje30a5[7:0]   == K28_2) & hd13bf7[0]);
assign je8c377 = ((xje30a5[15:8]  == K28_2) & hd13bf7[1]);

assign ic775af = ((xje30a5[7:0]   == K27_7) & hd13bf7[0]);
assign lfaf3af = ((xje30a5[15:8]  == K27_7) & hd13bf7[1]);

assign hdafcc5 =  ((xje30a5[7:0]   == K29_7) & hd13bf7[0]);
assign tuc5ff8 =  ((xje30a5[15:8]  == K29_7) & hd13bf7[1]);

assign qtf86e1 = ((xje30a5[7:0]   == K30_7) & hd13bf7[0]);
assign xwe195d = ((xje30a5[15:8]  == K30_7) & hd13bf7[1]);



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kqcbf2d  <= 8'd0;      jp5f968   <= 1'd0;   end   else begin      kqcbf2d  <= xje30a5[7:0];      jp5f968   <= qi9dfbf[0];   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      phaaf22      <= vka2a25;      cobc8bb    <= 1'b0;      dfrm_ddata   <= 16'd0;      goe5a3f    <= 1'b0;      zz22ecb         <= 1'b0;      sjbb2fc    <= 1'b0;   end   else begin      case(kqefdf8)         vka2a25: begin            goe5a3f    <= 1'b0;            zz22ecb         <= 1'b0;            if (je8c377) begin               phaaf22   <= gq1512b;               cobc8bb <= 1'b1;               sjbb2fc <= qi9dfbf[1];            end            else if (ykc1b8c) begin               phaaf22   <= gq1512b;               cobc8bb <= 1'b0;               sjbb2fc <= qi9dfbf[0];            end            else  begin               phaaf22   <= vka2a25;               cobc8bb <= 1'b0;               sjbb2fc <= 1'b0;            end          end         gq1512b: begin            sjbb2fc     <= 1'b0;            if (tuc5ff8 && ykc1b8c) begin               phaaf22    <= gq1512b;               cobc8bb  <= 1'b0;               goe5a3f  <= 1'b0;               zz22ecb       <= 1'b0;            end            else if (tuc5ff8 && ~ykc1b8c) begin               phaaf22    <= vka2a25;               cobc8bb  <= 1'b0;               goe5a3f  <= 1'b0;               zz22ecb       <= 1'b0;            end            else if (hdafcc5) begin               phaaf22    <= vka2a25;               dfrm_ddata <= {nga7857[7:0],xje30a5[15:8]};               cobc8bb  <= 1'b0;               goe5a3f  <= 1'b1;               zz22ecb       <= |{wl3c2bb,qi9dfbf[1], hqe9e1};            end            else begin               phaaf22    <= gq1512b;               dfrm_ddata <= (czf7e0e) ? {nga7857[7:0],xje30a5[15:8]} : xje30a5;               goe5a3f  <= 1'b1;               zz22ecb       <= (czf7e0e) ? |{wl3c2bb,qi9dfbf[1],hqe9e1} : |{|qi9dfbf, hqe9e1};            end          end          default: begin               phaaf22   <= vka2a25;               cobc8bb <= 1'b0;               goe5a3f <= 1'b0;               zz22ecb      <= 1'b0;          end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ps57917    <= jea8959;      xwe45d9  <= 1'b0;      dfrm_tdata <= 16'd0;      dfrm_tval  <= 1'b0;      oh1765f       <= 1'b0;      wjd97e5  <= 1'b0;   end   else begin      case(dz7efc1)         jea8959: begin            dfrm_tval    <= 1'b0;            oh1765f         <= 1'b0;            if (lfaf3af) begin               ps57917   <= qt44aca;               xwe45d9 <= 1'b1;               wjd97e5 <= qi9dfbf[1];            end            else if (ic775af) begin               ps57917   <= qt44aca;               xwe45d9 <= 1'b0;               wjd97e5 <= qi9dfbf[0];            end            else  begin               ps57917   <= jea8959;               xwe45d9 <= 1'b0;               wjd97e5 <= 1'b0;            end         end         qt44aca: begin               wjd97e5 <= 1'b0;            if ((tuc5ff8 || xwe195d) && ic775af) begin               ps57917    <= qt44aca;               xwe45d9  <= 1'b0;               dfrm_tval  <= 1'b0;               oh1765f       <= 1'b0;            end            else if ((tuc5ff8 || xwe195d) && ~ic775af) begin               ps57917    <= jea8959;               xwe45d9  <= 1'b0;               dfrm_tval  <= 1'b0;               oh1765f       <= 1'b0;            end            else if (hdafcc5 || qtf86e1) begin               ps57917    <= jea8959;               dfrm_tdata <= {nga7857[7:0],xje30a5[15:8]};               dfrm_tval  <= 1'b1;               oh1765f       <= |{wl3c2bb,qi9dfbf[1],ld74f0a};            end            else begin               ps57917    <= qt44aca;               dfrm_tdata <= (rvbf074) ? {nga7857[7:0],xje30a5[15:8]} : xje30a5;               dfrm_tval  <= 1'b1;               oh1765f       <= (rvbf074) ? |{wl3c2bb,qi9dfbf[1],ld74f0a} : |{|qi9dfbf,ld74f0a};            end          end          default: begin               ps57917    <= jea8959;               xwe45d9  <= 1'b0;               dfrm_tval  <= 1'b0;               oh1765f       <= 1'b0;          end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ph2d1f8 <= 1'd0;      zm3f1c2 <= 1'd0;      alf8e13  <= 1'd0;      jpc709d  <= 1'd0;   end   else begin      ph2d1f8 <= xwe15dc;      zm3f1c2 <= dfrm_tval;      alf8e13  <= hdafcc5;      jpc709d  <= qtf86e1;   end
end
assign  dfrm_dllp_st    = xwe15dc & !wyaee3;
assign  dfrm_dllp_end   = (xwe15dc) ? (cbbb8c2 | tuc5ff8) : 1'b0;
assign  dfrm_st         = dfrm_tval & !zk57718;
assign  dfrm_end        = (dfrm_tval) ? (cbbb8c2 | tuc5ff8) : 1'b0;
assign  dfrm_edb        = (dfrm_tval) ? (uvdc614 | xwe195d) : 1'b0;


assign  dfrm_perr       = wl3c2bb;

always@* begin nrc277e<={pcie_x1_top_dgrx_data>>1,xjc2975[0]};hd13bf7<={pcie_x1_top_dgrx_kcntl>>1,xjc2975[1]};qi9dfbf<={pcie_x1_top_dgrx_err>>1,xjc2975[2]};kqefdf8<={phaaf22>>1,xjc2975[3]};dz7efc1<={ps57917>>1,xjc2975[4]};czf7e0e<=xjc2975[5];rvbf074<=xjc2975[6];off83a7<=xjc2975[7];kqc1d3c<=xjc2975[8];hqe9e1<=xjc2975[9];ld74f0a<=xjc2975[10];nga7857<={kqcbf2d>>1,xjc2975[11]};wl3c2bb<=xjc2975[12];xwe15dc<=xjc2975[13];wyaee3<=xjc2975[14];zk57718<=xjc2975[15];cbbb8c2<=xjc2975[16];uvdc614<=xjc2975[17];xje30a5<={bn384ef>>1,xjc2975[18]};end
always@* begin ux1852e[2047]<=pcie_x1_top_dgrx_kcntl[0];ux1852e[2046]<=pcie_x1_top_dgrx_err[0];ux1852e[2044]<=phaaf22[0];ux1852e[2040]<=ps57917[0];ux1852e[2032]<=cobc8bb;ux1852e[2017]<=xwe45d9;ux1852e[1987]<=zz22ecb;ux1852e[1926]<=oh1765f;ux1852e[1805]<=sjbb2fc;ux1852e[1679]<=alf8e13;ux1852e[1562]<=wjd97e5;ux1852e[1310]<=jpc709d;ux1852e[1076]<=kqcbf2d[0];ux1852e[1023]<=pcie_x1_top_dgrx_data[0];ux1852e[839]<=zm3f1c2;ux1852e[572]<=bn384ef[0];ux1852e[419]<=ph2d1f8;ux1852e[209]<=goe5a3f;ux1852e[104]<=jp5f968;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


























































`timescale 1 ns / 100 ps
module pcie_x1_top_hd8be55 #(
   parameter D_WIDTH      = 64 ) (
   input wire                   sys_clk,        
   input wire                   rst_n,          
   input wire [D_WIDTH -1:0]    tdmux_data,     
   input wire                   tdmux_st,       
   input wire                   tdmux_end,      
   input wire                   tdmux_edb,      
   `ifdef X4
      input wire                ng96a8a,     
      input wire                tdmux_val,      
      input wire                rvaa29e,     
   `endif 
   `ifdef X1
      input wire                tdmux_dllp_st,  
      input wire                tdmux_dllp_end, 
   `endif 
   input wire                   tdmux_skp,      

   output reg [D_WIDTH -1:0]   vvf6b4f,       
   output reg [D_WIDTH/8-1:0]  doad3f7,      
   output reg                  xw69fbb,        
   output reg                  zx4fdda            );
localparam K27_7 = 8'hFB ;
localparam K28_2 = 8'h5C ;
localparam K29_7 = 8'hFD ;
localparam K30_7 = 8'hFE ;

`ifdef X4
reg [7:0]              yxd6d6b;

`endif

`ifdef X1

`endif
reg [D_WIDTH - 1 : 0] vxb5ae8;
reg puad747;
reg rt6ba3b;
reg fa5d1df;
reg gbe8efb;
reg [2047:0] ux1852e;
wire [4:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

localparam do14bae = 5,jra5d72 = 32'hfdffc68b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif













`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         vvf6b4f  <= 'd0;         doad3f7 <= 'd0;         zx4fdda   <= 'd0;      end      else if (tdmux_val) begin         zx4fdda   <= gbe8efb;         case(1'b1)            rvaa29e : begin               vvf6b4f  <= {K28_2, vxb5ae8[55:8],K29_7};               doad3f7 <= 8'b1000_0001;            end            puad747 : begin               vvf6b4f  <= {K27_7, vxb5ae8[63:8]};               doad3f7 <= 8'b1000_0000;            end            rt6ba3b : begin               if(ng96a8a) begin                  vvf6b4f  <= {yxd6d6b[7:0], vxb5ae8[63:48],K29_7, 32'd0};                  doad3f7 <= 8'b0001_0000;               end               else begin                  vvf6b4f  <= {yxd6d6b[7:0], vxb5ae8[63:16], K29_7};                  doad3f7 <= 8'b0000_0001;               end            end            fa5d1df : begin               if(ng96a8a) begin                  vvf6b4f  <= {yxd6d6b[7:0], vxb5ae8[63:48],K30_7, 32'd0};                  doad3f7 <= 8'b0001_0000;               end               else begin                  vvf6b4f  <= {yxd6d6b[7:0], vxb5ae8[63:16], K30_7};                  doad3f7 <= 8'b0000_0001;               end            end            default : begin               vvf6b4f  <= {yxd6d6b[7:0], vxb5ae8[63:8]};               doad3f7 <= 8'b0000_0000;            end         endcase      end      else begin         zx4fdda <= 1'b0;      end   end      always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         yxd6d6b <= 'd0;      else if (tdmux_val)         yxd6d6b <= vxb5ae8[7:0];   end      always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         xw69fbb   <= 1'b0;      else if (gbe8efb)         xw69fbb   <= 1'b0;      else         xw69fbb   <= tdmux_val;   end

`endif




`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         vvf6b4f  <= 16'd0;         doad3f7 <= 2'd0;         zx4fdda   <= 1'd0;         xw69fbb   <= 1'd0;      end      else begin         zx4fdda   <= gbe8efb;         case(1'b1)            tdmux_dllp_st : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= {K28_2, vxb5ae8[7:0]};               doad3f7 <= 2'b10;            end            tdmux_dllp_end : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= {vxb5ae8[15:8],K29_7};               doad3f7 <= 2'b01;            end            puad747 : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= {K27_7, vxb5ae8[7:0]};               doad3f7 <= 2'b10;            end            rt6ba3b : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= {vxb5ae8[15:8], K29_7};               doad3f7 <= 2'b01;            end            fa5d1df : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= {vxb5ae8[15:8], K30_7};               doad3f7 <= 2'b01;            end            gbe8efb : begin               xw69fbb   <= 1'b0;            end            default : begin               xw69fbb   <= 1'b1;               vvf6b4f  <= vxb5ae8;               doad3f7 <= 2'b00;            end         endcase      end   end

`endif



always@* begin vxb5ae8<={tdmux_data>>1,xjc2975[0]};puad747<=xjc2975[1];rt6ba3b<=xjc2975[2];fa5d1df<=xjc2975[3];gbe8efb<=xjc2975[4];end
always@* begin ux1852e[2047]<=tdmux_st;ux1852e[2046]<=tdmux_end;ux1852e[2044]<=tdmux_edb;ux1852e[2040]<=tdmux_skp;ux1852e[1023]<=tdmux_data[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

































































`timescale 1 ns / 100 ps
module pcie_x1_top_lf8172a #(
   parameter LANE_WIDTH   = 4 ,   parameter D_WIDTH      = 64 ) (
   input wire                     sys_clk,         
   input wire                     rst_n,           
   input wire [D_WIDTH -1:0]      vvf6b4f,       
   input wire [D_WIDTH/8-1:0]     doad3f7,      
   input wire                     xw69fbb,        
   input wire                     zx4fdda,        
   input wire [D_WIDTH -1:0]      an1dcdc,        
   input wire [D_WIDTH/8-1:0]     vi73722,       
   input wire [D_WIDTH/8-1:0]     yxdc89f,      
   input wire [LANE_WIDTH-1:0]    zz227e3,         
   input wire [LANE_WIDTH-1:0]    yz9f8f7,    
   `ifdef X4
      input wire [2:0]            ltssm_cfgln_sum, 
   `endif

   output reg [D_WIDTH -1:0]      frm_data,         
   output reg [D_WIDTH/8-1:0]     frm_kcntl,        
   output reg [D_WIDTH/8-1:0]     frm_fndisp,       
   output reg [LANE_WIDTH-1:0]    frm_eidle_tx,     
   output reg                     frm_val              );
reg [D_WIDTH -1:0]     yxd9972;
reg [D_WIDTH -1:0]     uv65ca5;
reg                    uk2e52c;
reg                    yk72960;
localparam K28_0 = 8'h1C ;
localparam K28_5 = 8'hBC ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif
reg [D_WIDTH - 1 : 0] gb601b5;
reg [D_WIDTH / 8 - 1 : 0] fp6d69;
reg qv36b4e;
reg zzb5a74;
reg [D_WIDTH - 1 : 0] lq69d3b;
reg [D_WIDTH / 8 - 1 : 0] dz74ed4;
reg [D_WIDTH / 8 - 1 : 0] ym3b53a;
reg [LANE_WIDTH - 1 : 0] wwd4e8b;
reg [LANE_WIDTH - 1 : 0] pu3a2c2;
reg [D_WIDTH - 1 : 0] jr8b099;
reg dm584cf;
reg rtc267b;
reg [2047:0] ux1852e;
wire [11:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

localparam do14bae = 12,jra5d72 = 32'hfdffca8b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif





















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      frm_data     <= {(D_WIDTH){1'b0}};      frm_kcntl    <= 'd0;      frm_fndisp   <= 'd0;      frm_eidle_tx <= 'd0;      frm_val      <= 'd0;      yk72960   <= 'd0;   end   else begin      frm_eidle_tx    <= pu3a2c2;



`ifdef X1
         case (1'b1)            |wwd4e8b :  begin               frm_data[15:0]  <= wwd4e8b ? lq69d3b[15:0] : 16'h0000;               frm_kcntl[1:0]  <= wwd4e8b ? dz74ed4[1:0] : 2'b00;               frm_fndisp[1:0] <= wwd4e8b ? ym3b53a[1:0] : 2'b00;               frm_val         <= 1'b1;            end            qv36b4e : begin               frm_data  <= gb601b5;               frm_kcntl <= fp6d69;               frm_fndisp<= 'd0;               frm_val   <= 1'b1;            end    zzb5a74: begin               frm_data  <= (dm584cf) ? yxd9972 : jr8b099;               frm_kcntl  <= {(D_WIDTH/8){1'b1}};               frm_fndisp <= 'd0;               frm_val    <= 1'b1;            end            default :  begin               frm_data   <= {(D_WIDTH){1'b0}};               frm_kcntl  <= 'd0;               frm_fndisp <= 'd0;               frm_val <= 'd0;            end         endcase


`endif



`ifdef X4
         if (!qv36b4e && |wwd4e8b)            yk72960 <= 'b1;         else if (!(|wwd4e8b))            yk72960 <= 'b0; casex ({(qv36b4e & ~rtc267b),zzb5a74,|wwd4e8b})            3'b1xx : begin               frm_data  <= gb601b5;               frm_kcntl <= fp6d69;               frm_fndisp<= 'd0;               frm_val   <= 1'b1;            end            3'b01x : begin               frm_data  <= (dm584cf) ? jr8b099 : yxd9972;               frm_kcntl  <= {(D_WIDTH/8){1'b1}};               frm_fndisp <= 'd0;               frm_val    <= 1'b1;            end            3'b001 : begin               frm_data[63:48] <= wwd4e8b[3] ? lq69d3b[63:48] : 16'h0000;               frm_data[47:32] <= wwd4e8b[2] ? lq69d3b[47:32] : 16'h0000;               frm_data[31:16] <= wwd4e8b[1] ? lq69d3b[31:16] : 16'h0000;               frm_data[15:0]  <= wwd4e8b[0] ? lq69d3b[15:0] : 16'h0000;               frm_kcntl[7:6]  <= wwd4e8b[3] ? dz74ed4[7:6] : 2'b00;               frm_kcntl[5:4]  <= wwd4e8b[2] ? dz74ed4[5:4] : 2'b00;               frm_kcntl[3:2]  <= wwd4e8b[1] ? dz74ed4[3:2] : 2'b00;               frm_kcntl[1:0]  <= wwd4e8b[0] ? dz74ed4[1:0] : 2'b00;               frm_fndisp[7:6] <= wwd4e8b[3] ? ym3b53a[7:6] : 2'b00;               frm_fndisp[5:4] <= wwd4e8b[2] ? ym3b53a[5:4] : 2'b00;               frm_fndisp[3:2] <= wwd4e8b[1] ? ym3b53a[3:2] : 2'b00;               frm_fndisp[1:0] <= wwd4e8b[0] ? ym3b53a[1:0] : 2'b00;               frm_val    <= 1'b1;            end            default :  begin               frm_data   <= {(D_WIDTH){1'b0}};               frm_kcntl  <= 'd0;               frm_fndisp <= 'd0;               frm_val <= (ltssm_cfgln_sum == 3'd4) ? 1'b1 : 1'b0;            end         endcase


`endif
   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      uk2e52c <= 1'b0;   else if (zzb5a74)      uk2e52c <= ~dm584cf;
end













always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yxd9972 <= {(D_WIDTH){1'b0}};      uv65ca5 <= {(D_WIDTH){1'b0}};   end   else begin


`ifdef X4
         case(ltssm_cfgln_sum)            3'd1: begin                yxd9972 <= {K28_5,  K28_0, K28_0, K28_0,K28_5, K28_0, K28_0, K28_0};                uv65ca5 <= {K28_5,  K28_0, K28_0, K28_0,K28_5, K28_0, K28_0, K28_0};            end            3'd2: begin                yxd9972 <= {K28_5,  K28_5, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};                uv65ca5 <= {K28_5,  K28_5, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};            end            3'd4: begin                yxd9972 <= {K28_5,  K28_5, K28_5, K28_5,K28_0, K28_0, K28_0, K28_0};                uv65ca5 <= {K28_0,  K28_0, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};            end         endcase


`endif



`ifdef X1
         uv65ca5 <= {K28_5, K28_0};         yxd9972 <= {K28_0, K28_0};


`endif
   end
end
always@* begin gb601b5<={vvf6b4f>>1,xjc2975[0]};fp6d69<={doad3f7>>1,xjc2975[1]};qv36b4e<=xjc2975[2];zzb5a74<=xjc2975[3];lq69d3b<={an1dcdc>>1,xjc2975[4]};dz74ed4<={vi73722>>1,xjc2975[5]};ym3b53a<={yxdc89f>>1,xjc2975[6]};wwd4e8b<={zz227e3>>1,xjc2975[7]};pu3a2c2<={yz9f8f7>>1,xjc2975[8]};jr8b099<={uv65ca5>>1,xjc2975[9]};dm584cf<=xjc2975[10];rtc267b<=xjc2975[11];end
always@* begin ux1852e[2047]<=doad3f7[0];ux1852e[2046]<=xw69fbb;ux1852e[2044]<=zx4fdda;ux1852e[2040]<=an1dcdc[0];ux1852e[2032]<=vi73722[0];ux1852e[2017]<=yxdc89f[0];ux1852e[1987]<=zz227e3[0];ux1852e[1926]<=yz9f8f7[0];ux1852e[1804]<=uv65ca5[0];ux1852e[1560]<=uk2e52c;ux1852e[1072]<=yk72960;ux1852e[1023]<=vvf6b4f[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_top_ks9d6ee (
   input wire                sys_clk,           
   input wire                rst_n,             
   input wire [9:0]          SKP_INS_CNT,       
   input wire                rgee2ae,           
   input wire [3:0]          dz71572,       
   input wire                pol_compliance,    
   `ifdef X4
      input wire [2:0]       ltssm_cfgln_sum,   
   `endif

   `ifdef X1
      output wire [1:0]      qvae5a6,        
      output wire            su72d34,           
   `endif
   `ifdef X4
      output reg [1:0]       qvae5a6,        
      output reg             su72d34,           
   `endif
   output reg [3:0]          ksa681d            
) ;
reg [10:0]                 wy340e9;
reg                        vxa0748;
localparam L0s       = 4'd4 ;
localparam L1        = 4'd5 ;
localparam L2        = 4'd6 ;

`ifdef X1

`endif

`ifdef X4

`endif
reg [9 : 0] zk48faf;
reg by47d7b;
reg [3 : 0] ie3ebda;
reg osf5ed0;
reg ntaf681;
reg [2047:0] ux1852e;
wire [4:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 5,jra5d72 = 32'hfdffe06b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      wy340e9 <= 11'h000 ;   else if (wy340e9 == {1'b0,zk48faf} || ie3ebda == L0s || ie3ebda == L1 || ie3ebda == L2 || osf5ed0 )      wy340e9 <= 11'h000 ;   else      wy340e9 <= wy340e9 + 11'h001 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      vxa0748   <= 1'b0 ;   else if (wy340e9 == 11'd1)      vxa0748   <= 1'b1 ;   else      vxa0748   <= 1'b0 ;
end





`ifdef X1
   assign qvae5a6 = ntaf681;   assign su72d34   = ntaf681;


`endif



`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         su72d34   <= 1'b0;         qvae5a6 <= 'd0;      end      else begin         su72d34   <= ntaf681;         if (ltssm_cfgln_sum == 3'd1)             qvae5a6 <= 2'd1;         else             qvae5a6 <= 2'd2;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ksa681d <= 4'd0;   end   else if (by47d7b) begin      ksa681d <= 4'd0;   end   else if (su72d34) begin      ksa681d <= ksa681d + 1'b1;   end
end
always@* begin zk48faf<={SKP_INS_CNT>>1,xjc2975[0]};by47d7b<=xjc2975[1];ie3ebda<={dz71572>>1,xjc2975[2]};osf5ed0<=xjc2975[3];ntaf681<=xjc2975[4];end
always@* begin ux1852e[2047]<=rgee2ae;ux1852e[2046]<=dz71572[0];ux1852e[2044]<=pol_compliance;ux1852e[2041]<=vxa0748;ux1852e[1023]<=SKP_INS_CNT[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


















































`timescale 1 ns / 100 ps
module pcie_x1_top_mtd15b #(
   parameter LANE_WIDTH   = 4 ,   parameter D_WIDTH      = 64 ) (
   input wire                   sys_clk,        
   input wire                   rst_n,          
   input wire [9:0]             SKP_INS_CNT,    
   input wire [D_WIDTH -1:0]    tdmux_data,     
   input wire                   tdmux_st,       
   input wire                   tdmux_end,      
   input wire                   tdmux_edb,      
   `ifdef X4
      input wire                ng96a8a,     
      input wire                tdmux_val,      
      input wire                rvaa29e,     
      input wire [2:0]          ltssm_cfgln_sum,
   `endif 
   `ifdef X1
      input wire                tdmux_dllp_st,  
      input wire                tdmux_dllp_end, 
   `endif 
   input wire                   tdmux_skp,      
   input wire [D_WIDTH -1:0]    an1dcdc,       
   input wire [D_WIDTH/8-1:0]   vi73722,      
   input wire [D_WIDTH/8-1:0]   yxdc89f,     
   input wire [LANE_WIDTH-1:0]  zz227e3,        
   input wire [LANE_WIDTH-1:0]  yz9f8f7,   
   input wire [LANE_WIDTH-1:0]  en657c1,    
   input wire [3:0]             dz71572,    
   input wire                   pol_compliance, 

   output wire [3:0]            wjf834e,    
   output wire [1:0]            wwc1a74, 
   output wire                  and3a1,   
   output wire [D_WIDTH -1:0]   frm_data,       
   output wire [D_WIDTH/8-1:0]  frm_kcntl,      
   output wire [D_WIDTH/8-1:0]  frm_fndisp,     
   output wire [LANE_WIDTH-1:0] frm_eidle_tx,   
   output wire                  frm_val            );
wire [D_WIDTH -1:0]     vvf6b4f;
wire [D_WIDTH/8-1:0]    doad3f7;
wire [1:0]              qvae5a6;
wire                    zk4816a;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif 

`ifdef X4

`endif
reg rst_n_split;
reg [9 : 0] zk48faf;
reg [D_WIDTH - 1 : 0] vxb5ae8;
reg puad747;
reg rt6ba3b;
reg fa5d1df;
reg gbe8efb;
reg [D_WIDTH - 1 : 0] lq69d3b;
reg [D_WIDTH / 8 - 1 : 0] dz74ed4;
reg [D_WIDTH / 8 - 1 : 0] ym3b53a;
reg [LANE_WIDTH - 1 : 0] wwd4e8b;
reg [LANE_WIDTH - 1 : 0] pu3a2c2;
reg [LANE_WIDTH - 1 : 0] uv5bce3;
reg [3 : 0] ie3ebda;
reg osf5ed0;
reg [D_WIDTH / 8 - 1 : 0] fp6d69;
reg [1 : 0] kf1d19f;
reg uve8cfd;
reg [2047:0] ux1852e;
wire [17:0] xjc2975;


`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X4

`endif 


`ifdef X4

`endif

localparam do14bae = 18,jra5d72 = 32'hfdffca8b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif 


`ifdef X4


`endif





pcie_x1_top_hd8be55 #(   .D_WIDTH        ( D_WIDTH ))   mta1d9e (      .sys_clk        (sys_clk),   .rst_n          (rst_n_split),   .tdmux_data     (vxb5ae8),   .tdmux_st       (puad747),   .tdmux_end      (rt6ba3b),   .tdmux_edb      (fa5d1df),


`ifdef X4
      .ng96a8a  (ng96a8a),      .tdmux_val   (tdmux_val),      .rvaa29e  (rvaa29e),


`endif



`ifdef X1
      .tdmux_dllp_st  (tdmux_dllp_st),      .tdmux_dllp_end (tdmux_dllp_end),


`endif
   .tdmux_skp      (gbe8efb),      .vvf6b4f      (vvf6b4f),   .doad3f7     (doad3f7),   .xw69fbb       (xw69fbb),   .zx4fdda       (zx4fdda)   );



pcie_x1_top_ks9d6ee yx6a3f2 (      .sys_clk            (sys_clk),   .rst_n              (rst_n_split),   .SKP_INS_CNT        (zk48faf),   .rgee2ae            (|uv5bce3),   .dz71572        (ie3ebda),   .pol_compliance     (osf5ed0),


`ifdef X4
      .ltssm_cfgln_sum (ltssm_cfgln_sum),


`endif 

      .ksa681d             (wjf834e),   .qvae5a6          (wwc1a74),   .su72d34            (and3a1)   );



pcie_x1_top_lf8172a # (   .LANE_WIDTH      ( LANE_WIDTH ),   .D_WIDTH         ( D_WIDTH ))   epb1dc0 (      .sys_clk         (sys_clk),   .rst_n           (rst_n_split),   .vvf6b4f       (vvf6b4f),   .xw69fbb        (xw69fbb),   .doad3f7      (fp6d69),   .zx4fdda        (zx4fdda),   .an1dcdc        (lq69d3b),   .zz227e3         (wwd4e8b),   .vi73722       (dz74ed4),   .yxdc89f      (ym3b53a),   .yz9f8f7    (pu3a2c2),


`ifdef X4
      .ltssm_cfgln_sum (ltssm_cfgln_sum),


`endif

      .frm_data        (frm_data),   .frm_kcntl       (frm_kcntl),   .frm_fndisp      (frm_fndisp),   .frm_eidle_tx    (frm_eidle_tx),   .frm_val         (frm_val)   );
always@* begin rst_n_split<=xjc2975[0];zk48faf<={SKP_INS_CNT>>1,xjc2975[1]};vxb5ae8<={tdmux_data>>1,xjc2975[2]};puad747<=xjc2975[3];rt6ba3b<=xjc2975[4];fa5d1df<=xjc2975[5];gbe8efb<=xjc2975[6];lq69d3b<={an1dcdc>>1,xjc2975[7]};dz74ed4<={vi73722>>1,xjc2975[8]};ym3b53a<={yxdc89f>>1,xjc2975[9]};wwd4e8b<={zz227e3>>1,xjc2975[10]};pu3a2c2<={yz9f8f7>>1,xjc2975[11]};uv5bce3<={en657c1>>1,xjc2975[12]};ie3ebda<={dz71572>>1,xjc2975[13]};osf5ed0<=xjc2975[14];fp6d69<={doad3f7>>1,xjc2975[15]};kf1d19f<={qvae5a6>>1,xjc2975[16]};uve8cfd<=xjc2975[17];end
always@* begin ux1852e[2047]<=SKP_INS_CNT[0];ux1852e[2046]<=tdmux_data[0];ux1852e[2044]<=tdmux_st;ux1852e[2040]<=tdmux_end;ux1852e[2032]<=tdmux_edb;ux1852e[2017]<=tdmux_skp;ux1852e[1987]<=an1dcdc[0];ux1852e[1926]<=vi73722[0];ux1852e[1804]<=yxdc89f[0];ux1852e[1560]<=zz227e3[0];ux1852e[1550]<=qvae5a6[0];ux1852e[1072]<=yz9f8f7[0];ux1852e[1052]<=zk4816a;ux1852e[1023]<=rst_n;ux1852e[775]<=doad3f7[0];ux1852e[387]<=pol_compliance;ux1852e[193]<=dz71572[0];ux1852e[96]<=en657c1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_top_dgtx 
   (
   
   sys_clk,            
   rst_n,              

   frm_data,           
   frm_kcntl,          
   frm_eidle_tx,       
   frm_fndisp,         
   frm_val,            
   ltssm_config_ln,    
   ltssm_cfgln_sum,    
   ltssm_l0,           

   
   pcie_x1_top_dgtx_data,          
   pcie_x1_top_dgtx_kcntl,         
   pcie_x1_top_dgtx_eidle_tx,      
   pcie_x1_top_dgtx_fndisp         
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input  [D_WIDTH-1:0]      frm_data;
input  [(D_WIDTH/8)-1:0]  frm_kcntl;
input  [LANE_WIDTH-1:0]   frm_eidle_tx;
input  [7:0]              frm_fndisp;
input                     frm_val;
input  [LANE_WIDTH-1:0]   ltssm_config_ln;
input  [2:0]              ltssm_cfgln_sum;
input                     ltssm_l0;
output [D_WIDTH-1:0]      pcie_x1_top_dgtx_data;
output [(D_WIDTH/8)-1:0]  pcie_x1_top_dgtx_kcntl;
output [LANE_WIDTH-1:0]   pcie_x1_top_dgtx_eidle_tx;
output [7:0]              pcie_x1_top_dgtx_fndisp;
reg   [D_WIDTH-1:0]       pcie_x1_top_dgtx_data;
reg   [(D_WIDTH/8)-1:0]   pcie_x1_top_dgtx_kcntl;
reg   [LANE_WIDTH-1:0]    pcie_x1_top_dgtx_eidle_tx;
reg   [7:0]               pcie_x1_top_dgtx_fndisp;
reg   [D_WIDTH-1:0]       rv8b8ef;
reg   [(D_WIDTH/8)-1:0]   vve3bf1;
reg   [LANE_WIDTH-1:0]    ykefc7c;
reg   [7:0]               ld7e3e1;
reg rgf1f0f, kf8f87b;

`ifdef ALL_MODES

`endif
reg [D_WIDTH - 1 : 0] hoe1ee2;
reg [(D_WIDTH / 8) - 1 : 0] pf7b891;
reg [LANE_WIDTH - 1 : 0] wje2475;
reg [7 : 0] mt123ac;
reg db91d64;
reg [LANE_WIDTH - 1 : 0] al75936;
reg [2 : 0] coac9b5;
reg nr64da8;
reg [D_WIDTH - 1 : 0] kf36a35;
reg [(D_WIDTH / 8) - 1 : 0] xya8d66;
reg [LANE_WIDTH - 1 : 0] vk35990;
reg [7 : 0] ouacc83;
reg dm66418;
reg rv320c2;
reg [2047:0] ux1852e;
wire [13:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef ALL_MODES

`endif

localparam do14bae = 14,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ALL_MODES


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rv8b8ef     <= 'd0;      vve3bf1    <= 'd0;      ykefc7c <= 'hF;      ld7e3e1   <= 'd0;   end   else begin      ykefc7c <= wje2475;      ld7e3e1   <= mt123ac;      if (db91d64) begin         rv8b8ef     <= hoe1ee2;         vve3bf1    <= pf7b891;                        end      else begin         case (coac9b5)            'd1: begin               rv8b8ef     <= {kf36a35[47:0],16'h0};               vve3bf1    <= {xya8d66[5:0],2'h0};            end            'd2: begin               rv8b8ef     <= {kf36a35[31:0],32'h0};               vve3bf1    <= {xya8d66[3:0],4'h0};            end            'd4: begin               rv8b8ef     <= kf36a35;               vve3bf1    <= xya8d66;            end            default: begin                  rv8b8ef     <= {kf36a35[47:0],16'h0};               vve3bf1    <= {xya8d66[5:0],2'h0};            end         endcase      end   end
end
























always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rgf1f0f  <= 1'b0;      kf8f87b  <= 1'b0;   end   else begin      rgf1f0f  <= nr64da8;      kf8f87b  <= dm66418;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_top_dgtx_data     <= 'd0;      pcie_x1_top_dgtx_kcntl    <= 'd0;      pcie_x1_top_dgtx_eidle_tx <= 'hF;      pcie_x1_top_dgtx_fndisp   <= 'd0;   end      else if (rv320c2) begin      case(al75936)                  4'b1000: begin            pcie_x1_top_dgtx_data     <=  {kf36a35[63:48],16'h0,16'h0,16'h0};            pcie_x1_top_dgtx_kcntl    <=  {xya8d66[7:6],2'h0,2'h0,2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {vk35990[3],1'h1,1'h1,1'h1};            pcie_x1_top_dgtx_fndisp   <=  {ouacc83[7:6],2'h0,2'h0,2'h0};         end          4'b1100: begin            pcie_x1_top_dgtx_data     <=  {kf36a35[63:56],kf36a35[47:40],                               kf36a35[55:48],kf36a35[39:32],                               16'h0,                               16'h0};            pcie_x1_top_dgtx_kcntl    <=  {xya8d66[7],xya8d66[5],                               xya8d66[6],xya8d66[4],                               2'h0,                               2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {vk35990[3]|vk35990[2],                               vk35990[3]|vk35990[2],                               1'h1,                               1'h1};            pcie_x1_top_dgtx_fndisp   <=  {ouacc83[7],ouacc83[5],                               ouacc83[6],ouacc83[4],                               2'h0,                               2'h0};         end


`ifdef ALL_MODES
                  4'b0001: begin            pcie_x1_top_dgtx_data     <=  {16'h0,16'h0,16'h0,kf36a35[63:48]};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,2'h0,2'h0,xya8d66[7:6]};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,1'h1,1'h1,vk35990[3]};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,2'h0,2'h0,ouacc83[7:6]};         end         4'b0010: begin            pcie_x1_top_dgtx_data     <=  {16'h0,16'h0,kf36a35[63:48],16'h0};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,2'h0,xya8d66[7:6],2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,1'h1,vk35990[3],1'h1};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,2'h0,ouacc83[7:6],2'h0};         end         4'b0100: begin            pcie_x1_top_dgtx_data     <=  {16'h0,kf36a35[63:48],16'h0,16'h0};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,xya8d66[7:6],2'h0,2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,vk35990[3],1'h1,1'h1};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,ouacc83[7:6],2'h0,2'h0};         end                  4'b1010: begin            pcie_x1_top_dgtx_data     <=  {kf36a35[63:56],kf36a35[47:40],                               16'h0,                               kf36a35[55:48],kf36a35[39:32],                               16'h0};            pcie_x1_top_dgtx_kcntl    <=  {xya8d66[7],xya8d66[5],                               2'h0,                               xya8d66[6],xya8d66[4],                               2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {vk35990[3]|vk35990[2],                               1'h1,                               vk35990[3]|vk35990[2],                               1'h1};            pcie_x1_top_dgtx_fndisp   <=  {ouacc83[7],ouacc83[5],                               2'h0,                               ouacc83[6],ouacc83[4],                               2'h0};         end         4'b1001: begin            pcie_x1_top_dgtx_data     <=  {kf36a35[63:56],kf36a35[47:40],                               16'h0,                               16'h0,                               kf36a35[55:48],kf36a35[39:32]};            pcie_x1_top_dgtx_kcntl    <=  {xya8d66[7],xya8d66[5],                               2'h0,                               2'h0,                               xya8d66[6],xya8d66[4]};            pcie_x1_top_dgtx_eidle_tx <=  {vk35990[3]|vk35990[2],                               1'h1,                               1'h1,                               vk35990[3]|vk35990[2]};            pcie_x1_top_dgtx_fndisp   <=  {ouacc83[7],ouacc83[5],                               2'h0,                               2'h0,                               ouacc83[6],ouacc83[4]};         end         4'b0110: begin            pcie_x1_top_dgtx_data     <=  {16'h0,                               kf36a35[63:56],kf36a35[47:40],                               kf36a35[55:48],kf36a35[39:32],                               16'h0};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,                               xya8d66[7],xya8d66[5],                               xya8d66[6],xya8d66[4],                               2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,                               vk35990[3]|vk35990[2],                               vk35990[3]|vk35990[2],                               1'h1};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,                               ouacc83[7],ouacc83[5],                               ouacc83[6],ouacc83[4],                               2'h0};         end         4'b0101: begin            pcie_x1_top_dgtx_data     <=  {16'h0,                               kf36a35[63:56],kf36a35[47:40],                               16'h0,                               kf36a35[55:48],kf36a35[39:32]};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,                               xya8d66[7],xya8d66[5],                               2'h0,                               xya8d66[6],xya8d66[4]};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,                               vk35990[3]|vk35990[2],                               1'h1,                               vk35990[3]|vk35990[2]};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,                               ouacc83[7],ouacc83[5],                               2'h0,                               ouacc83[6],ouacc83[4]};         end         4'b0011: begin            pcie_x1_top_dgtx_data     <=  {16'h0,                               16'h0,                               kf36a35[63:56],kf36a35[47:40],                               kf36a35[55:48],kf36a35[39:32]};            pcie_x1_top_dgtx_kcntl    <=  {2'h0,                               2'h0,                               xya8d66[7],xya8d66[5],                               xya8d66[6],xya8d66[4]};            pcie_x1_top_dgtx_eidle_tx <=  {1'h1,                               1'h1,                               vk35990[3]|vk35990[2],                               vk35990[3]|vk35990[2]};            pcie_x1_top_dgtx_fndisp   <=  {2'h0,                               2'h0,                               ouacc83[7],ouacc83[5],                               ouacc83[6],ouacc83[4]};         end


`endif
                  4'b1111: begin            pcie_x1_top_dgtx_data     <= {kf36a35[63:56],kf36a35[31:24],                              kf36a35[55:48],kf36a35[23:16],                              kf36a35[47:40],kf36a35[15:8],                              kf36a35[39:32],kf36a35[7:0]};            pcie_x1_top_dgtx_kcntl    <= {xya8d66[7],xya8d66[3],                              xya8d66[6],xya8d66[2],                              xya8d66[5],xya8d66[1],                              xya8d66[4],xya8d66[0]};            pcie_x1_top_dgtx_eidle_tx <= {vk35990[3]|vk35990[1],                              vk35990[3]|vk35990[1],                              vk35990[2]|vk35990[0],                              vk35990[2]|vk35990[0]};            pcie_x1_top_dgtx_fndisp   <= {ouacc83[7],ouacc83[3],                              ouacc83[6],ouacc83[2],                              ouacc83[5],ouacc83[1],                              ouacc83[4],ouacc83[0]};         end                                             default: begin               pcie_x1_top_dgtx_data     <=  {kf36a35[63:48],16'h0,16'h0,16'h0};            pcie_x1_top_dgtx_kcntl    <=  {xya8d66[7:6],2'h0,2'h0,2'h0};            pcie_x1_top_dgtx_eidle_tx <=  {vk35990[3],1'h1,1'h1,1'h1};            pcie_x1_top_dgtx_fndisp   <=  {ouacc83[7:6],2'h0,2'h0,2'h0};         end      endcase   end   else begin      pcie_x1_top_dgtx_data     <= kf36a35;      pcie_x1_top_dgtx_kcntl    <= xya8d66;      pcie_x1_top_dgtx_eidle_tx <= vk35990;      pcie_x1_top_dgtx_fndisp   <= ouacc83;   end
end
always@* begin hoe1ee2<={frm_data>>1,xjc2975[0]};pf7b891<={frm_kcntl>>1,xjc2975[1]};wje2475<={frm_eidle_tx>>1,xjc2975[2]};mt123ac<={frm_fndisp>>1,xjc2975[3]};db91d64<=xjc2975[4];al75936<={ltssm_config_ln>>1,xjc2975[5]};coac9b5<={ltssm_cfgln_sum>>1,xjc2975[6]};nr64da8<=xjc2975[7];kf36a35<={rv8b8ef>>1,xjc2975[8]};xya8d66<={vve3bf1>>1,xjc2975[9]};vk35990<={ykefc7c>>1,xjc2975[10]};ouacc83<={ld7e3e1>>1,xjc2975[11]};dm66418<=xjc2975[12];rv320c2<=xjc2975[13];end
always@* begin ux1852e[2047]<=frm_kcntl[0];ux1852e[2046]<=frm_eidle_tx[0];ux1852e[2044]<=frm_fndisp[0];ux1852e[2041]<=frm_val;ux1852e[2035]<=ltssm_config_ln[0];ux1852e[2022]<=ltssm_cfgln_sum[0];ux1852e[1996]<=ltssm_l0;ux1852e[1945]<=rv8b8ef[0];ux1852e[1842]<=vve3bf1[0];ux1852e[1637]<=ykefc7c[0];ux1852e[1226]<=ld7e3e1[0];ux1852e[1023]<=frm_data[0];ux1852e[811]<=kf8f87b;ux1852e[405]<=rgf1f0f;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


































`timescale 1 ns / 100 ps
module pcie_x1_top_dgrx 
   (
   
   sys_clk,            
   rst_n,              

   asb_data,           
   asb_kcntl,          
   asb_err,            
   ltssm_config_ln,    
   ltssm_cfgln_sum,    

   
   pcie_x1_top_dgrx_width,         
   pcie_x1_top_dgrx_data,          
   pcie_x1_top_dgrx_kcntl,         
   pcie_x1_top_dgrx_val,           
   pcie_x1_top_dgrx_err            
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input  [D_WIDTH-1:0]      asb_data;
input  [(D_WIDTH/8)-1:0]  asb_kcntl;
input  [3:0]              asb_err;
input  [LANE_WIDTH-1:0]   ltssm_config_ln;
input  [2:0]              ltssm_cfgln_sum;
output [2:0]              pcie_x1_top_dgrx_width;
output [D_WIDTH-1:0]      pcie_x1_top_dgrx_data;
output [(D_WIDTH/8)-1:0]  pcie_x1_top_dgrx_kcntl;
output                    pcie_x1_top_dgrx_val;
output [3:0]              pcie_x1_top_dgrx_err;
reg   [15:0]              bl45932;
reg   [15:0]              oh2c997;
reg   [15:0]              fn64cbc;
reg   [15:0]              gd265e6;
reg   [1:0]               ph32f34;
reg   [1:0]               ou979a6;
reg   [1:0]               ukbcd31;
reg   [1:0]               nre6989;
reg                       uk34c4f;
reg                       gqa6279;
reg                       mg313c8;
reg                       ri89e40;
reg   [15:0]              rt4f203;
reg   [15:0]              ps7901f;
reg   [15:0]              vvc80fa;
reg   [15:0]              th407d6;
reg   [1:0]               zz3eb6;
reg   [1:0]               sw1f5b6;
reg   [1:0]               ayfadb0;
reg   [1:0]               end6d80;
reg                       swb6c05;
reg                       mgb6028;
reg                       xlb0141;
reg                       cb80a0e;
reg   [15:0]              uk5075;
reg   [15:0]              hd283a8;
reg   [15:0]              en41d47;
reg   [15:0]              lsea3d;
reg   [1:0]               qt751ea;
reg   [1:0]               xya8f54;
reg   [1:0]               xw47aa2;
reg   [1:0]               fp3d512;
reg                       qgea896;
reg                       yx544b1;
reg                       xya258d;
reg                       ux12c6a;
reg   [15:0]              ri96355;
reg   [15:0]              qvb1aaa;
reg   [15:0]              aa8d555;
reg   [15:0]              gb6aaa8;
reg   [1:0]               xj55545;
reg   [1:0]               rvaaa2f;
reg   [1:0]               hb5517f;
reg   [1:0]               ria8bff;
reg                       dz45ffa;
reg                       do2ffd7;
reg                       yx7febb;
reg                       meff5dc;
reg   [1:0]               ykfaee1;
reg   [D_WIDTH-1:0]       pcie_x1_top_dgrx_data;
reg   [(D_WIDTH/8)-1:0]   pcie_x1_top_dgrx_kcntl;
reg                       pcie_x1_top_dgrx_val;
reg   [3:0]               pcie_x1_top_dgrx_err;
reg                       ou34ae8;
reg   [2:0]               pcie_x1_top_dgrx_width;

`ifdef ALL_MODES

`endif
reg [D_WIDTH - 1 : 0] dm5d079;
reg [(D_WIDTH / 8) - 1 : 0] yx41e5d;
reg [3 : 0] ouf2ed;
reg [LANE_WIDTH - 1 : 0] al75936;
reg [2 : 0] coac9b5;
reg [15 : 0] uved282;
reg [15 : 0] dm69415;
reg [15 : 0] zx4a0ab;
reg [15 : 0] dz5055f;
reg [1 : 0] ks82aff;
reg [1 : 0] co157f8;
reg [1 : 0] epabfc1;
reg [1 : 0] hb5fe0d;
reg uiff06f;
reg mrf8379;
reg uic1bcc;
reg kfde61;
reg [15 : 0] mr6f30d;
reg [15 : 0] ne7986c;
reg [15 : 0] ipcc363;
reg [15 : 0] th61b1c;
reg [1 : 0] ohd8e6;
reg [1 : 0] rg6c735;
reg [1 : 0] fa639ab;
reg [1 : 0] lf1cd5b;
reg zxe6ade;
reg ng356f7;
reg anab7ba;
reg wj5bdd4;
reg [15 : 0] kqdeea5;
reg [15 : 0] uvf7529;
reg [15 : 0] jrba94d;
reg [15 : 0] wwd4a6e;
reg [1 : 0] fpa5370;
reg [1 : 0] kf29b87;
reg [1 : 0] xw4dc3c;
reg [1 : 0] nr6e1e3;
reg wj70f1e;
reg wy878f5;
reg wl3c7a8;
reg zxe3d44;
reg [15 : 0] ng1ea27;
reg [15 : 0] qgf513b;
reg [15 : 0] xya89d8;
reg [15 : 0] yx44ec2;
reg [1 : 0] rv27615;
reg [1 : 0] wy3b0ae;
reg [1 : 0] dzd8571;
reg [1 : 0] rtc2b8f;
reg gq15c7e;
reg gdae3f0;
reg th71f84;
reg an8fc27;
reg [1 : 0] hb7e13c;
reg kqf09e7;
reg [2047:0] ux1852e;
wire [54:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef ALL_MODES

`endif

localparam do14bae = 55,jra5d72 = 32'hfdffd84b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ALL_MODES


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      bl45932  <= 'd0;      oh2c997  <= 'd0;      fn64cbc  <= 'd0;      gd265e6  <= 'd0;      ph32f34 <= 'd0;      ou979a6 <= 'd0;      ukbcd31 <= 'd0;      nre6989 <= 'd0;      uk34c4f   <= 1'b0;      gqa6279   <= 1'b0;      mg313c8   <= 1'b0;      ri89e40   <= 1'b0;      rt4f203  <= 'd0;      ps7901f  <= 'd0;      vvc80fa  <= 'd0;      th407d6  <= 'd0;      zz3eb6 <= 'd0;      sw1f5b6 <= 'd0;      ayfadb0 <= 'd0;      end6d80 <= 'd0;      swb6c05   <= 1'b0;      mgb6028   <= 1'b0;      xlb0141   <= 1'b0;      cb80a0e   <= 1'b0;      uk5075  <= 'd0;      hd283a8  <= 'd0;      en41d47  <= 'd0;      lsea3d  <= 'd0;      qt751ea <= 'd0;      xya8f54 <= 'd0;      xw47aa2 <= 'd0;      fp3d512 <= 'd0;      qgea896   <= 1'b0;      yx544b1   <= 1'b0;      xya258d   <= 1'b0;      ux12c6a   <= 1'b0;      ri96355  <= 'd0;      qvb1aaa  <= 'd0;      aa8d555  <= 'd0;      gb6aaa8  <= 'd0;      xj55545 <= 'd0;      rvaaa2f <= 'd0;      hb5517f <= 'd0;      ria8bff <= 'd0;      dz45ffa   <= 1'b0;      do2ffd7   <= 1'b0;      yx7febb   <= 1'b0;      meff5dc   <= 1'b0;   end   else begin            bl45932  <= dm5d079[63:48];      oh2c997  <= uved282;      fn64cbc  <= dm69415;      gd265e6  <= zx4a0ab;      ph32f34 <= yx41e5d[7:6];      ou979a6 <= ks82aff;      ukbcd31 <= co157f8;      nre6989 <= epabfc1;      uk34c4f   <= ouf2ed[3];      gqa6279   <= uiff06f;      mg313c8   <= mrf8379;      ri89e40   <= uic1bcc;            rt4f203  <= dm5d079[47:32];      ps7901f  <= mr6f30d;      vvc80fa  <= ne7986c;      th407d6  <= ipcc363;      zz3eb6 <= yx41e5d[5:4];      sw1f5b6 <= ohd8e6;      ayfadb0 <= rg6c735;      end6d80 <= fa639ab;      swb6c05   <= ouf2ed[2];      mgb6028   <= zxe6ade;      xlb0141   <= ng356f7;      cb80a0e   <= anab7ba;            uk5075  <= dm5d079[31:16];      hd283a8  <= kqdeea5;      en41d47  <= uvf7529;      lsea3d  <= jrba94d;      qt751ea <= yx41e5d[3:2];      xya8f54 <= fpa5370;      xw47aa2 <= kf29b87;      fp3d512 <= xw4dc3c;      qgea896   <= ouf2ed[1];      yx544b1   <= wj70f1e;      xya258d   <= wy878f5;      ux12c6a   <= wl3c7a8;            ri96355  <= dm5d079[15:0];      qvb1aaa  <= ng1ea27;      aa8d555  <= qgf513b;      gb6aaa8  <= xya89d8;      xj55545 <= yx41e5d[1:0];      rvaaa2f <= rv27615;      hb5517f <= wy3b0ae;      ria8bff <= dzd8571;      dz45ffa   <= ouf2ed[0];      do2ffd7   <= gq15c7e;      yx7febb   <= gdae3f0;      meff5dc   <= th71f84;   end
end




















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_top_dgrx_data  <= 'd0;      pcie_x1_top_dgrx_kcntl <= 'd0;      pcie_x1_top_dgrx_err   <= 'd0;   end   else if (kqf09e7) begin      case(al75936)                  4'b1000: begin            pcie_x1_top_dgrx_data  <= {dz5055f,  zx4a0ab,  dm69415,  uved282};            pcie_x1_top_dgrx_kcntl <= {hb5fe0d, epabfc1, co157f8, ks82aff};            pcie_x1_top_dgrx_err   <= {kfde61 , uic1bcc , mrf8379 , uiff06f};         end                  4'b1100: begin            pcie_x1_top_dgrx_data  <= {dm69415[15:8],  ne7986c[15:8], dm69415[7:0],  ne7986c[7:0],                           uved282[15:8],  mr6f30d[15:8], uved282[7:0],  mr6f30d[7:0]};            pcie_x1_top_dgrx_kcntl <= {co157f8[1], rg6c735[1], co157f8[0], rg6c735[0],                           ks82aff[1], ohd8e6[1], ks82aff[0], ohd8e6[0]};            pcie_x1_top_dgrx_err   <= {mrf8379 , ng356f7 , uiff06f , zxe6ade};         end


`ifdef ALL_MODES
                  4'b0100: begin            pcie_x1_top_dgrx_data  <= {th61b1c,  ipcc363,  ne7986c,  mr6f30d};            pcie_x1_top_dgrx_kcntl <= {lf1cd5b, fa639ab, rg6c735, ohd8e6};            pcie_x1_top_dgrx_err   <= {wj5bdd4 , anab7ba , ng356f7 , zxe6ade};         end         4'b0010: begin            pcie_x1_top_dgrx_data  <= {wwd4a6e,  jrba94d,  uvf7529,  kqdeea5};            pcie_x1_top_dgrx_kcntl <= {nr6e1e3, xw4dc3c, kf29b87, fpa5370};            pcie_x1_top_dgrx_err   <= {zxe3d44 , wl3c7a8 , wy878f5 , wj70f1e};         end         4'b0001: begin            pcie_x1_top_dgrx_data  <= {yx44ec2,  xya89d8,  qgf513b,  ng1ea27};            pcie_x1_top_dgrx_kcntl <= {rtc2b8f, dzd8571, wy3b0ae, rv27615};            pcie_x1_top_dgrx_err   <= {an8fc27 , th71f84 , gdae3f0 , gq15c7e};         end                  4'b1010: begin            pcie_x1_top_dgrx_data  <= {dm69415[15:8],  uvf7529[15:8], dm69415[7:0],  uvf7529[7:0],                           uved282[15:8],  kqdeea5[15:8], uved282[7:0],  kqdeea5[7:0]};            pcie_x1_top_dgrx_kcntl <= {co157f8[1], kf29b87[1], co157f8[0], kf29b87[0],                           ks82aff[1], fpa5370[1], ks82aff[0], fpa5370[0]};            pcie_x1_top_dgrx_err   <= {mrf8379 , wy878f5 , uiff06f , wj70f1e};         end         4'b1001: begin            pcie_x1_top_dgrx_data  <= {dm69415[15:8],  qgf513b[15:8], dm69415[7:0], qgf513b[7:0],                           uved282[15:8],  ng1ea27[15:8], uved282[7:0], ng1ea27[7:0]};            pcie_x1_top_dgrx_kcntl <= {co157f8[1], wy3b0ae[1], co157f8[0], wy3b0ae[0],                           ks82aff[1], rv27615[1], ks82aff[0], rv27615[0]};            pcie_x1_top_dgrx_err   <= {mrf8379 , gdae3f0 , uiff06f , gq15c7e};         end         4'b0110: begin            pcie_x1_top_dgrx_data  <= {ne7986c[15:8],  uvf7529[15:8],  ne7986c[7:0], uvf7529[7:0],                           mr6f30d[15:8],  kqdeea5[15:8],  mr6f30d[7:0], kqdeea5[7:0]};            pcie_x1_top_dgrx_kcntl <= {rg6c735[1], kf29b87[1], rg6c735[0], kf29b87[0],                           ohd8e6[1], fpa5370[1], ohd8e6[0], fpa5370[0]};            pcie_x1_top_dgrx_err   <= {ng356f7 , wy878f5 , zxe6ade , wj70f1e};         end         4'b0101: begin            pcie_x1_top_dgrx_data  <= {ne7986c[15:8],  qgf513b[15:8],  ne7986c[7:0],  qgf513b[7:0],                           mr6f30d[15:8],  ng1ea27[15:8],  mr6f30d[7:0],  ng1ea27[7:0]};            pcie_x1_top_dgrx_kcntl <= {rg6c735[1], wy3b0ae[1], rg6c735[0], wy3b0ae[0],                           ohd8e6[1], rv27615[1], ohd8e6[0], rv27615[0]};            pcie_x1_top_dgrx_err   <= {ng356f7 , gdae3f0 , zxe6ade , gq15c7e};         end         4'b0011: begin            pcie_x1_top_dgrx_data  <= {uvf7529[15:8],  qgf513b[15:8], uvf7529[7:0], qgf513b[7:0],                           kqdeea5[15:8],  ng1ea27[15:8], kqdeea5[7:0], ng1ea27[7:0]};            pcie_x1_top_dgrx_kcntl <= {kf29b87[1], wy3b0ae[1], kf29b87[0], wy3b0ae[0],                           fpa5370[1], rv27615[1], fpa5370[0], rv27615[0]};            pcie_x1_top_dgrx_err   <= {wy878f5 , gdae3f0 , wj70f1e , gq15c7e};         end


`endif
                           default: begin                pcie_x1_top_dgrx_data  <= {uved282[15:8], mr6f30d[15:8], kqdeea5[15:8], ng1ea27[15:8],                           uved282[7:0],  mr6f30d[7:0],  kqdeea5[7:0],  ng1ea27[7:0]};            pcie_x1_top_dgrx_kcntl <= {ks82aff[1], ohd8e6[1], fpa5370[1], rv27615[1],                           ks82aff[0], ohd8e6[0], fpa5370[0], rv27615[0]};            pcie_x1_top_dgrx_err   <= {uiff06f , zxe6ade , wj70f1e , gq15c7e};         end      endcase   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ykfaee1      <= 'd0;      ou34ae8    <= 1'b0;      pcie_x1_top_dgrx_val      <= 1'b0;      pcie_x1_top_dgrx_width    <= 3'd0;   end   else begin      ykfaee1      <= hb7e13c +1;            case(coac9b5)         3'd1:    begin            ou34ae8 <= (hb7e13c == 'd0) ? 1'b1 : 1'b0;            pcie_x1_top_dgrx_width <= 3'b001;         end         3'd2:    begin            ou34ae8 <= (hb7e13c == 'd0 || hb7e13c == 'd2) ? 1'b1 : 1'b0;            pcie_x1_top_dgrx_width <= 3'b010;         end         3'd4:    begin            ou34ae8 <= 1'b1;            pcie_x1_top_dgrx_width <= 3'b100;         end         default: begin            ou34ae8 <= 1'b0;            pcie_x1_top_dgrx_width <= 3'b000;         end      endcase      pcie_x1_top_dgrx_val      <= kqf09e7;   end
end

always@* begin dm5d079<={asb_data>>1,xjc2975[0]};yx41e5d<={asb_kcntl>>1,xjc2975[1]};ouf2ed<={asb_err>>1,xjc2975[2]};al75936<={ltssm_config_ln>>1,xjc2975[3]};coac9b5<={ltssm_cfgln_sum>>1,xjc2975[4]};uved282<={bl45932>>1,xjc2975[5]};dm69415<={oh2c997>>1,xjc2975[6]};zx4a0ab<={fn64cbc>>1,xjc2975[7]};dz5055f<={gd265e6>>1,xjc2975[8]};ks82aff<={ph32f34>>1,xjc2975[9]};co157f8<={ou979a6>>1,xjc2975[10]};epabfc1<={ukbcd31>>1,xjc2975[11]};hb5fe0d<={nre6989>>1,xjc2975[12]};uiff06f<=xjc2975[13];mrf8379<=xjc2975[14];uic1bcc<=xjc2975[15];kfde61<=xjc2975[16];mr6f30d<={rt4f203>>1,xjc2975[17]};ne7986c<={ps7901f>>1,xjc2975[18]};ipcc363<={vvc80fa>>1,xjc2975[19]};th61b1c<={th407d6>>1,xjc2975[20]};ohd8e6<={zz3eb6>>1,xjc2975[21]};rg6c735<={sw1f5b6>>1,xjc2975[22]};fa639ab<={ayfadb0>>1,xjc2975[23]};lf1cd5b<={end6d80>>1,xjc2975[24]};zxe6ade<=xjc2975[25];ng356f7<=xjc2975[26];anab7ba<=xjc2975[27];wj5bdd4<=xjc2975[28];kqdeea5<={uk5075>>1,xjc2975[29]};uvf7529<={hd283a8>>1,xjc2975[30]};jrba94d<={en41d47>>1,xjc2975[31]};wwd4a6e<={lsea3d>>1,xjc2975[32]};fpa5370<={qt751ea>>1,xjc2975[33]};kf29b87<={xya8f54>>1,xjc2975[34]};xw4dc3c<={xw47aa2>>1,xjc2975[35]};nr6e1e3<={fp3d512>>1,xjc2975[36]};wj70f1e<=xjc2975[37];wy878f5<=xjc2975[38];wl3c7a8<=xjc2975[39];zxe3d44<=xjc2975[40];ng1ea27<={ri96355>>1,xjc2975[41]};qgf513b<={qvb1aaa>>1,xjc2975[42]};xya89d8<={aa8d555>>1,xjc2975[43]};yx44ec2<={gb6aaa8>>1,xjc2975[44]};rv27615<={xj55545>>1,xjc2975[45]};wy3b0ae<={rvaaa2f>>1,xjc2975[46]};dzd8571<={hb5517f>>1,xjc2975[47]};rtc2b8f<={ria8bff>>1,xjc2975[48]};gq15c7e<=xjc2975[49];gdae3f0<=xjc2975[50];th71f84<=xjc2975[51];an8fc27<=xjc2975[52];hb7e13c<={ykfaee1>>1,xjc2975[53]};kqf09e7<=xjc2975[54];end
always@* begin ux1852e[2047]<=asb_kcntl[0];ux1852e[2046]<=asb_err[0];ux1852e[2044]<=ltssm_config_ln[0];ux1852e[2040]<=ltssm_cfgln_sum[0];ux1852e[2033]<=bl45932[0];ux1852e[2019]<=oh2c997[0];ux1852e[1999]<=xw47aa2[0];ux1852e[1991]<=fn64cbc[0];ux1852e[1981]<=yx7febb;ux1852e[1950]<=fp3d512[0];ux1852e[1947]<=qvb1aaa[0];ux1852e[1934]<=gd265e6[0];ux1852e[1914]<=meff5dc;ux1852e[1892]<=th407d6[0];ux1852e[1852]<=qgea896;ux1852e[1851]<=mg313c8;ux1852e[1847]<=aa8d555[0];ux1852e[1820]<=ph32f34[0];ux1852e[1783]<=ria8bff[0];ux1852e[1780]<=ykfaee1[0];ux1852e[1737]<=zz3eb6[0];ux1852e[1657]<=yx544b1;ux1852e[1654]<=ri89e40;ux1852e[1647]<=gb6aaa8[0];ux1852e[1610]<=end6d80[0];ux1852e[1593]<=ou979a6[0];ux1852e[1523]<=qt751ea[0];ux1852e[1519]<=dz45ffa;ux1852e[1513]<=ou34ae8;ux1852e[1426]<=sw1f5b6[0];ux1852e[1404]<=en41d47[0];ux1852e[1267]<=xya258d;ux1852e[1260]<=rt4f203[0];ux1852e[1246]<=xj55545[0];ux1852e[1199]<=cb80a0e;ux1852e[1173]<=swb6c05;ux1852e[1139]<=ukbcd31[0];ux1852e[1023]<=asb_data[0];ux1852e[999]<=xya8f54[0];ux1852e[990]<=do2ffd7;ux1852e[973]<=ri96355[0];ux1852e[946]<=vvc80fa[0];ux1852e[925]<=gqa6279;ux1852e[891]<=hb5517f[0];ux1852e[805]<=ayfadb0[0];ux1852e[761]<=lsea3d[0];ux1852e[702]<=hd283a8[0];ux1852e[599]<=xlb0141;ux1852e[486]<=ux12c6a;ux1852e[473]<=ps7901f[0];ux1852e[462]<=uk34c4f;ux1852e[445]<=rvaaa2f[0];ux1852e[351]<=uk5075[0];ux1852e[299]<=mgb6028;ux1852e[231]<=nre6989[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_top_fn550c2 
   (
    
    sys_clk,           
    rst_n,             
    cb185d9,          
    jpc2ecd,       
    wl1766e,   
    epbb374,           
    ofd9ba5,           
    xjcdd2c,           
    nr6e967,           
    asb_data,          
    asb_kcntl,         
    asb_err,           
    ic67ff4,          
    asb_eidle_rx,      
    asb_beacon_rx,     
    asb_lane_sync,     

    
    vif4282,            
    mta1412,           
    mga095,            
    dz504a9,           
    ks8254f,             
    ir12a79,        
    an953cd,       
    mga9e6d,       
    pf4f368,            
    zk79b47,            
    blcda3b,        
    qg6d1df          
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                       sys_clk;
input                       rst_n;
input                       cb185d9;
input                       jpc2ecd;
input                       wl1766e;
input                       ofd9ba5;
input                       epbb374;
input                       nr6e967;
input                       xjcdd2c;
input [7:0]                 asb_data;
input                       asb_kcntl;
input                       asb_err;
input                       ic67ff4;
input                       asb_eidle_rx;
input                       asb_beacon_rx;
input                       asb_lane_sync;
output                      vif4282;
output                      mta1412;
output [7:0]                mga095;
output                      dz504a9;
output                      ks8254f;
output                      ir12a79;
output                      an953cd;
output                      mga9e6d;
output                      pf4f368;
output [4:0]                zk79b47;
output                      blcda3b;
output                      qg6d1df;
localparam  oh2cfd6 = 5'b00000;
localparam  cm67eb4  = 5'b11011;
localparam  ls3f5a1   = 5'b10000;
localparam  qgfad0b    = 1'b0;
localparam  czd6858      = 1'b1;
reg  [4:0]        epb42c5;
wire              qg6d1df;
reg  [4:0]        rib165;
reg  [4:0]        ps58b2b;
reg  [4:0]        dmc595a;
reg  [4:0]        zk79b47;
reg               blcda3b;
reg               ks2b4e5;
reg               zx5a728;
reg               vif4282;
reg               mta1412;
localparam TLP_MEM_DEPTH   = 32;
localparam tj28d51  = 5 ;

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef DEBUG
wire        qg46a8e   = (asb_data == K28_5 && asb_kcntl == 1'b1);
wire [4:0]  zz8e0b4 = (asb_data == K28_5 && asb_kcntl == 1'b1) ? rib165 :  zz8e0b4;
wire [4:0]  wl3c1eb  = rib165 + ~dmc595a + 'd1 ;
wire        vx3d704  = (dmc595a ==  rib165) ? 1'b1 : 1'b0;
wire        yke0999   = (wl3c1eb == 'd31) ? 1'b1 : 1'b0;

`endif
reg oh26643;
reg an3321c;
reg do990e5;
reg rtc872b;
reg kq4395e;
reg fp1caf0;
reg aye5786;
reg [7 : 0] dm5d079;
reg yx41e5d;
reg ouf2ed;
reg ri86261;
reg ks3130b;
reg ba89858;
reg qg4c2c3;
reg [4 : 0] fn61618;
reg [4 : 0] jeb0c7;
reg [4 : 0] dm5863b;
reg [4 : 0] qtc31db;
reg ep18edd;
reg vvc76ec;
reg [2047:0] ux1852e;
wire [19:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef DEBUG

`endif

localparam do14bae = 20,jra5d72 = 32'hfdffc70b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef DEBUG


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif





















always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      epb42c5 <= 0;   end   else begin      epb42c5 <= jeb0c7 + ~dm5863b + 1;   end
end
always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rib165       <= 'd0;      ps58b2b <= 'd0;      zk79b47         <= 'd0;      blcda3b     <= 1'b0;      ks2b4e5    <= 1'b0;   end   else begin      casex({(do990e5 && oh26643),             (an3321c && oh26643 && ep18edd == 1'b0),             (rtc872b),             (kq4395e)})         4'b1xxx: begin            rib165       <= fn61618;            zk79b47         <= fn61618;            blcda3b     <= 1'b1;            ks2b4e5    <= 1'b0;         end         4'bx1xx: begin            ps58b2b <= jeb0c7;            rib165       <= jeb0c7 + 1'b1;            blcda3b     <= 1'b0;            ks2b4e5    <= 1'b1;         end         4'bxx1x: begin            rib165       <= jeb0c7 + 1'b1 + 1'b1;            blcda3b     <= 1'b0;         end         4'bxxx1: begin            rib165       <= jeb0c7;            blcda3b     <= 1'b0;         end         default: begin            rib165       <= jeb0c7 + 1'b1;            blcda3b     <= 1'b0;         end      endcase   end
end





always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dmc595a        <= ls3f5a1;   end      else if (do990e5 && oh26643) begin      dmc595a        <= 'd0;   end   else if (fp1caf0) begin      dmc595a        <=  qtc31db + 1'b1 + 1'b1;   end   else if (aye5786) begin      dmc595a        <=  qtc31db;   end   else begin      dmc595a        <= qtc31db + 1'b1;   end
end



   
pmi_ram_dp #(   .pmi_wr_addr_depth    (TLP_MEM_DEPTH),   .pmi_wr_addr_width    (tj28d51),   .pmi_wr_data_width    (15),   .pmi_rd_addr_depth    (TLP_MEM_DEPTH),   .pmi_rd_addr_width    (tj28d51),   .pmi_rd_data_width    (15),   .pmi_regmode          ("reg"),   .pmi_gsr              ("enable"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),      .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   jcfbd08 (   .Data         ({asb_data,asb_kcntl,asb_err,ic67ff4,asb_eidle_rx,asb_beacon_rx,asb_lane_sync,epbb374}),   .WrAddress    (rib165),   .RdAddress    (dmc595a),   .WrClock      (sys_clk),   .RdClock      (sys_clk),   .WrClockEn    (1'b1),   .RdClockEn    (1'b1),   .WE           (1'b1),   .Reset        (~rst_n),   .Q            ({mga095,dz504a9,ks8254f,pf4f368, ir12a79,an953cd,mga9e6d,qg6d1df})   );



always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vif4282  <= 0;      mta1412 <= 0;   end   else begin      vif4282  <=  (jeb0c7 + ~qtc31db + 'd1) == 'd31 ? 1'b1 : 1'b0 ;      mta1412 <=  (qtc31db ==  jeb0c7) ? 1'b1 : 1'b0;   end
end





`ifdef DEBUG



`endif



always@* begin oh26643<=xjc2975[0];an3321c<=xjc2975[1];do990e5<=xjc2975[2];rtc872b<=xjc2975[3];kq4395e<=xjc2975[4];fp1caf0<=xjc2975[5];aye5786<=xjc2975[6];dm5d079<={asb_data>>1,xjc2975[7]};yx41e5d<=xjc2975[8];ouf2ed<=xjc2975[9];ri86261<=xjc2975[10];ks3130b<=xjc2975[11];ba89858<=xjc2975[12];qg4c2c3<=xjc2975[13];fn61618<={epb42c5>>1,xjc2975[14]};jeb0c7<={rib165>>1,xjc2975[15]};dm5863b<={ps58b2b>>1,xjc2975[16]};qtc31db<={dmc595a>>1,xjc2975[17]};ep18edd<=xjc2975[18];vvc76ec<=xjc2975[19];end
always@* begin ux1852e[2047]<=jpc2ecd;ux1852e[2046]<=wl1766e;ux1852e[2044]<=epbb374;ux1852e[2040]<=ofd9ba5;ux1852e[2032]<=xjcdd2c;ux1852e[2016]<=nr6e967;ux1852e[1985]<=asb_data[0];ux1852e[1922]<=asb_kcntl;ux1852e[1867]<=zx5a728;ux1852e[1797]<=asb_err;ux1852e[1547]<=ic67ff4;ux1852e[1490]<=dmc595a[0];ux1852e[1047]<=asb_eidle_rx;ux1852e[1023]<=cb185d9;ux1852e[933]<=ks2b4e5;ux1852e[745]<=ps58b2b[0];ux1852e[372]<=rib165[0];ux1852e[186]<=epb42c5[0];ux1852e[93]<=asb_lane_sync;ux1852e[46]<=asb_beacon_rx;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule














































































`timescale 1 ns / 100 ps
module pcie_x1_top_mca 
   (
    
    sys_clk,           
    rst_n,             
    pcie_x1_top_mca_disable,       
    ltssm_config_ln,   
    phy_realign_req,   
    skip_added,        
    skip_removed,      
    asb_skip_found,    
    asb_data,          
    asb_kcntl,         
    asb_err,           
    asb_eidle_rx,      
    asb_beacon_rx,     
    asb_lane_sync,     

    
    pcie_x1_top_mca_aligned,       
    pcie_x1_top_mca_data,          
    pcie_x1_top_mca_kcntl,         
    pcie_x1_top_mca_err,           
    pcie_x1_top_mca_eidle_rx,      
    pcie_x1_top_mca_beacon_rx,     
    pcie_x1_top_mca_lane_sync,     
    pcie_x1_top_mca_align_done     
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                      sys_clk;
input                      rst_n;
input                      pcie_x1_top_mca_disable;
input [LANE_WIDTH-1:0]     ltssm_config_ln;
input                      phy_realign_req;
input [LANE_WIDTH-1:0]     skip_added;
input [LANE_WIDTH-1:0]     skip_removed;
input [LANE_WIDTH-1:0]     asb_skip_found;
input [8*LANE_WIDTH-1:0]   asb_data;
input [1*LANE_WIDTH-1:0]   asb_kcntl;
input [1*LANE_WIDTH-1:0]   asb_err;
input [LANE_WIDTH-1:0]     asb_eidle_rx;
input [LANE_WIDTH-1:0]     asb_beacon_rx;
input [LANE_WIDTH-1:0]     asb_lane_sync;
output                     pcie_x1_top_mca_aligned;
output [8*LANE_WIDTH-1:0]  pcie_x1_top_mca_data;
output [1*LANE_WIDTH-1:0]  pcie_x1_top_mca_kcntl;
output [1*LANE_WIDTH-1:0]  pcie_x1_top_mca_err;
output                     pcie_x1_top_mca_align_done;
output [LANE_WIDTH-1:0]    pcie_x1_top_mca_eidle_rx;
output [LANE_WIDTH-1:0]    pcie_x1_top_mca_beacon_rx;
output [LANE_WIDTH-1:0]    pcie_x1_top_mca_lane_sync;
localparam TLP_MEM_DEPTH   = 15;
localparam jc66599 = 'd0;
localparam nt32cca = 'd1;
localparam zm96656 = 'd2;
localparam aab32b2 = 'd3;
localparam do99591 = 'd4;
localparam pscac8b     = 'd0;
localparam ui5645a = 'd1;
reg [8*LANE_WIDTH-1:0]   mga095               ;
reg [LANE_WIDTH-1:0]     dz504a9              ;
reg [LANE_WIDTH-1:0]     pf4f368               ;
reg [LANE_WIDTH-1:0]     ks8254f                ;
reg [5*LANE_WIDTH-1:0]   zk79b47               ;
reg [LANE_WIDTH-1:0]     blcda3b           ;
reg [LANE_WIDTH-1:0]     ir12a79           ;
reg [LANE_WIDTH-1:0]     an953cd          ;
reg [LANE_WIDTH-1:0]     mga9e6d          ;
reg [LANE_WIDTH-1:0]     qg6d1df            ;
reg [LANE_WIDTH-1:0]     fa7399b         ;
reg [LANE_WIDTH-1:0]     pfe66d2;
wire [8*LANE_WIDTH-1:0]   rv9b4b5;
wire [LANE_WIDTH-1:0]     ldd2d72;
wire [LANE_WIDTH-1:0]     rvb5cbb;
wire [LANE_WIDTH-1:0]     ww72efc;
wire [5*LANE_WIDTH-1:0]   yzbbf00;
wire [LANE_WIDTH-1:0]     thfc023;
wire [LANE_WIDTH-1:0]     ec8f1;
wire [LANE_WIDTH-1:0]     mt23c4a;
wire [LANE_WIDTH-1:0]     nef12aa;
wire [LANE_WIDTH-1:0]     zx4aa92;
wire [LANE_WIDTH-1:0]     hdaa4b7;
reg  [LANE_WIDTH-1:0]     aa92df2;
reg  [LANE_WIDTH-1:0]     ngb7c8b;
reg  [8*LANE_WIDTH-1:0]   pcie_x1_top_mca_data               ;
reg  [1*LANE_WIDTH-1:0]   pcie_x1_top_mca_kcntl              ;
reg  [1*LANE_WIDTH-1:0]   pcie_x1_top_mca_err                ;
reg [LANE_WIDTH-1:0]      pcie_x1_top_mca_eidle_rx           ;
reg [LANE_WIDTH-1:0]      pcie_x1_top_mca_beacon_rx          ;
reg [LANE_WIDTH-1:0]      pcie_x1_top_mca_lane_sync          ;
reg  [LANE_WIDTH-1:0]     qiac27c               ;
reg  [LANE_WIDTH-1:0]     ph9f0f               ;
reg  [LANE_WIDTH-1:0]     jpc2ecd;
reg  [3:0]                dme1ff2;
reg                       ouff92;
reg                       of7fc90;
reg                       pcie_x1_top_mca_align_done;
reg                       shf2423;
reg  [LANE_WIDTH-1:0]     cb185d9;
reg  [5*LANE_WIDTH-1:0]   ep23a26;
reg  [3:0]                cb1d135;
reg                       ipe89ad;
reg                       ip44d6c           ;
reg                       sj26b65           ;
reg                       je35b2d           ;
reg                       xyad96b;
reg                       xw6cb5a;
reg                       yx65ad2;
reg [2:0]                 db2d694;
reg                       wl1766e;
reg                       pf5a53e;
reg  [8*LANE_WIDTH-1:0]   db94fb7             ;
reg  [1*LANE_WIDTH-1:0]   ym3edf3            ;
reg  [1*LANE_WIDTH-1:0]   pub7cc6              ;
reg [LANE_WIDTH-1:0]      hbf3195         ;
reg [LANE_WIDTH-1:0]      kdc6578        ;
reg [LANE_WIDTH-1:0]      ux95e2e        ;
reg  [8*LANE_WIDTH-1:0]   kq78ba6             ;
reg  [1*LANE_WIDTH-1:0]   ym2e98b            ;
reg  [1*LANE_WIDTH-1:0]   mga62cf              ;
reg  [8*LANE_WIDTH-1:0]   nt8b3c0             ;
reg  [1*LANE_WIDTH-1:0]   zkcf038            ;
reg  [1*LANE_WIDTH-1:0]   dmc0e18              ;
reg  [LANE_WIDTH-1:0]     nt3861d           ;
reg  [LANE_WIDTH-1:0]     mt18775           ;
reg  [LANE_WIDTH-1:0]     ep1dd6c           ;
reg  [LANE_WIDTH-1:0]     wj75b23           ;
reg  [LANE_WIDTH-1:0]     xw6c8ea           ;
reg  [LANE_WIDTH-1:0]     oh23a97         ;
reg  [LANE_WIDTH-1:0]     wwea5ed         ;
reg [LANE_WIDTH-1:0]      co97b43         ;
reg [LANE_WIDTH-1:0]      gbed0cb        ;
reg [LANE_WIDTH-1:0]      cm432e9        ;
reg [LANE_WIDTH-1:0]      sucba4f         ;
reg [LANE_WIDTH-1:0]      pfe93c3        ;
reg [LANE_WIDTH-1:0]      th4f0f9        ;
reg  [LANE_WIDTH-1:0]     epbb374;
reg  [LANE_WIDTH-1:0]     ofd9ba5;
reg                       xjcdd2c;
reg                       nr6e967;
reg  [2:0]                kqc41d9;
reg  [2:0]                do20ec8;
reg  [2:0]                qv7642;
reg  [2:0]                co3b215;
reg  [2:0]                yxd90a9;
reg  [2:0]                dzc854d;
reg  [2:0]                dm42a6e;
reg  [2:0]                ym15372;
reg                       pcie_x1_top_mca_aligned;
wire [LANE_WIDTH-1:0]     vif4282;
wire [LANE_WIDTH-1:0]     mta1412;

`ifdef DEBUG
reg ym8878f;
reg os43c78;

`endif
reg je1e3c0;
reg [LANE_WIDTH - 1 : 0] al75936;
reg ui7809d;
reg [LANE_WIDTH - 1 : 0] gd2742;
reg [LANE_WIDTH - 1 : 0] ks9d0af;
reg [LANE_WIDTH - 1 : 0] dm42bcd;
reg [8 * LANE_WIDTH - 1 : 0] dm5d079;
reg [1 * LANE_WIDTH - 1 : 0] yx41e5d;
reg [1 * LANE_WIDTH - 1 : 0] ouf2ed;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] ba89858;
reg [LANE_WIDTH - 1 : 0] qg4c2c3;
reg [8 * LANE_WIDTH - 1 : 0] qte7622;
reg [LANE_WIDTH - 1 : 0] rtd88a1;
reg [LANE_WIDTH - 1 : 0] rv22870;
reg [LANE_WIDTH - 1 : 0] wla1c3b;
reg [5 * LANE_WIDTH - 1 : 0] uv70ee3;
reg [LANE_WIDTH - 1 : 0] aa3b8e9;
reg [LANE_WIDTH - 1 : 0] zxe3a45;
reg [LANE_WIDTH - 1 : 0] ble917d;
reg [LANE_WIDTH - 1 : 0] pf45f7b;
reg [LANE_WIDTH - 1 : 0] kq7defb;
reg [LANE_WIDTH - 1 : 0] jp7bec8;
reg [LANE_WIDTH - 1 : 0] psfb232;
reg [8 * LANE_WIDTH - 1 : 0] dzc8c9d;
reg [LANE_WIDTH - 1 : 0] db32779;
reg [LANE_WIDTH - 1 : 0] uk9de7b;
reg [LANE_WIDTH - 1 : 0] tu79ec0;
reg [5 * LANE_WIDTH - 1 : 0] jp7b01b;
reg [LANE_WIDTH - 1 : 0] psc06ff;
reg [LANE_WIDTH - 1 : 0] ba1bfd7;
reg [LANE_WIDTH - 1 : 0] icff5db;
reg [LANE_WIDTH - 1 : 0] thd76c8;
reg [LANE_WIDTH - 1 : 0] cmdb235;
reg [LANE_WIDTH - 1 : 0] zxc8d45;
reg [LANE_WIDTH - 1 : 0] ba35178;
reg [LANE_WIDTH - 1 : 0] bl45e12;
reg [LANE_WIDTH - 1 : 0] ui784ba;
reg [LANE_WIDTH - 1 : 0] an12e87;
reg [LANE_WIDTH - 1 : 0] an3321c;
reg [3 : 0] fad0f47;
reg wy87a3a;
reg xl3d1d0;
reg gbe8e86;
reg [LANE_WIDTH - 1 : 0] oh26643;
reg [5 * LANE_WIDTH - 1 : 0] pu868da;
reg [3 : 0] qi346d2;
reg wya3690;
reg ls1b480;
reg xwda402;
reg rtd2012;
reg qv90096;
reg mt804b5;
reg ux25ac;
reg [2 : 0] kf12d65;
reg do990e5;
reg fpb596b;
reg [8 * LANE_WIDTH - 1 : 0] uv65af8;
reg [1 * LANE_WIDTH - 1 : 0] dz6be27;
reg [1 * LANE_WIDTH - 1 : 0] gbf89fe;
reg [LANE_WIDTH - 1 : 0] xl27fa9;
reg [LANE_WIDTH - 1 : 0] fafea7a;
reg [LANE_WIDTH - 1 : 0] wya9e90;
reg [8 * LANE_WIDTH - 1 : 0] qt7a407;
reg [1 * LANE_WIDTH - 1 : 0] oh901ee;
reg [1 * LANE_WIDTH - 1 : 0] an7bad;
reg [8 * LANE_WIDTH - 1 : 0] faeeb67;
reg [1 * LANE_WIDTH - 1 : 0] lsad9dd;
reg [1 * LANE_WIDTH - 1 : 0] ic67752;
reg [LANE_WIDTH - 1 : 0] vvdd480;
reg [LANE_WIDTH - 1 : 0] lq52038;
reg [LANE_WIDTH - 1 : 0] sj80e15;
reg [LANE_WIDTH - 1 : 0] lf3856d;
reg [LANE_WIDTH - 1 : 0] qi15b76;
reg [LANE_WIDTH - 1 : 0] yk6dd82;
reg [LANE_WIDTH - 1 : 0] dm76087;
reg [LANE_WIDTH - 1 : 0] wy821de;
reg [LANE_WIDTH - 1 : 0] sw87788;
reg [LANE_WIDTH - 1 : 0] qgde208;
reg [LANE_WIDTH - 1 : 0] ie88202;
reg [LANE_WIDTH - 1 : 0] qv8084;
reg [LANE_WIDTH - 1 : 0] qv2126;
reg [LANE_WIDTH - 1 : 0] rtc872b;
reg [LANE_WIDTH - 1 : 0] kq4395e;
reg fp1caf0;
reg aye5786;
reg [2 : 0] dm47152;
reg [2 : 0] fp38a93;
reg [2 : 0] vic549f;
reg [2 : 0] ng2a4fa;
reg [2 : 0] vi527d2;
reg [2 : 0] vk93e92;
reg [2 : 0] an9f493;
reg [2 : 0] mefa49c;
reg [LANE_WIDTH - 1 : 0] qi9270e;
reg [LANE_WIDTH - 1 : 0] ri9c383;
reg [2047:0] ux1852e;
wire [95:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef DEBUG

`endif

localparam do14bae = 96,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DEBUG


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ip44d6c      <= 'd0;      sj26b65      <= 'd0;      je35b2d      <= 'd0;      xyad96b      <= 'd0;      ngb7c8b <= 'd0;      db94fb7        <= 'd0;      ym3edf3       <= 'd0;      pub7cc6         <= 'd0;      kq78ba6        <= 'd0;      ym2e98b       <= 'd0;      mga62cf         <= 'd0;      nt8b3c0        <= 'd0;      zkcf038       <= 'd0;      dmc0e18         <= 'd0;      ep1dd6c      <= 'd0;      wj75b23      <= 'd0;      xw6c8ea      <= 'd0;      oh23a97    <= 'd0;      wwea5ed    <= 'd0;      hbf3195    <= 'd0;      kdc6578   <= 'd0;      ux95e2e   <= 'd0;      co97b43    <= 'd0;      gbed0cb   <= 'd0;      cm432e9   <= 'd0;      sucba4f    <= 'd0;      pfe93c3   <= 'd0;      th4f0f9   <= 'd0;   end   else begin            ip44d6c      <= ui7809d;      sj26b65      <= ls1b480;      je35b2d      <= xwda402;      xyad96b      <= xwda402 & ~rtd2012;      ngb7c8b <= al75936;      db94fb7        <= dm5d079;      ym3edf3       <= yx41e5d;      pub7cc6         <= ouf2ed;      kq78ba6        <= uv65af8;      ym2e98b       <= dz6be27;      mga62cf         <= gbf89fe;      nt8b3c0        <= qt7a407;      zkcf038       <= oh901ee;      dmc0e18         <= an7bad;      ep1dd6c      <= gd2742;      wj75b23      <= sj80e15;      xw6c8ea      <= lf3856d;      oh23a97    <= ks9d0af;      wwea5ed    <= yk6dd82;
      hbf3195    <= ks3130b;      kdc6578   <= ba89858;      ux95e2e   <= qg4c2c3;
      co97b43    <= xl27fa9;      gbed0cb   <= fafea7a;      cm432e9   <= wya9e90;      sucba4f    <= wy821de;      pfe93c3   <= sw87788;      th4f0f9   <= qgde208;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pfe66d2     <= 'd0;      jpc2ecd <= 'd0;   end      else begin      pfe66d2[0]       <= (yx41e5d[0] & (dm5d079[7:0]    ==K28_5));      pfe66d2[1]       <= (yx41e5d[1] & (dm5d079[15:8]   ==K28_5));      pfe66d2[2]       <= (yx41e5d[2] & (dm5d079[23:16]  ==K28_5));      pfe66d2[3]       <= (yx41e5d[3] & (dm5d079[31:24]  ==K28_5));      if (fpb596b || qv90096) begin         jpc2ecd <= 'd0;      end      else begin         jpc2ecd[0] <= (psfb232[0]) ? 1'b1 : an3321c[0];         jpc2ecd[1] <= (psfb232[1]) ? 1'b1 : an3321c[1];         jpc2ecd[2] <= (psfb232[2]) ? 1'b1 : an3321c[2];         jpc2ecd[3] <= (psfb232[3]) ? 1'b1 : an3321c[3];      end   end
end









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      db2d694 <= 0;      yx65ad2 <= 1'b0;   end   else begin      if (mt804b5) begin         db2d694 <= kf12d65 +1;      end      else begin         db2d694 <= 0;      end      yx65ad2 <= (kf12d65 == 5) ? 1'b1 : 1'b0;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dme1ff2        <= jc66599;      of7fc90      <= 'd0;      shf2423       <= 1'b0;      ep23a26     <= 'd0;      cb185d9        <= 'd0;      pf5a53e <= 1'b0;      wl1766e <= 1'b0;      xw6cb5a         <= 1'b0;   end   else begin      pf5a53e <= 1'b0;      wl1766e <= 1'b0;      case(fad0f47)                  jc66599: begin            shf2423          <= 1'b0;            cb185d9           <= 'd0;            xw6cb5a            <= 1'b0;            if (qv90096) begin               if (bl45e12 == 4'd8) begin                  dme1ff2        <= do99591;               end       else begin                  dme1ff2        <= nt32cca;                  of7fc90      <= 'd0;                  cb185d9        <= bl45e12;               end            end            else begin               dme1ff2        <= jc66599;            end         end                  nt32cca: begin            if (|an3321c == 1'b1 && ~fpb596b) begin               dme1ff2        <= zm96656;               xw6cb5a         <= 1'b1;            end            else begin               dme1ff2        <= nt32cca;            end         end                  zm96656: begin            if (ux25ac) begin               xw6cb5a   <= 1'b0;               if (an3321c == bl45e12) begin                  dme1ff2        <= aab32b2;                  wl1766e <= 1'b1;                  pf5a53e <= 1'b1;               end               else begin                  dme1ff2        <= nt32cca;                  pf5a53e <= 1'b1;               end            end            else begin               dme1ff2  <= zm96656;            end         end          aab32b2:  begin            if (&aa3b8e9) begin               ep23a26  <= uv70ee3;               if (pu868da == uv70ee3) begin                 dme1ff2  <= do99591;                 shf2423 <= 1'b0;               end               else begin                 dme1ff2  <= nt32cca;                 shf2423 <= 1'b1;               end            end            else begin                 dme1ff2  <= aab32b2;            end         end                           do99591:  begin            cb185d9          <= 'd0;            if (wya3690) begin               dme1ff2       <= jc66599;               of7fc90     <= 1'b1;            end            else begin               dme1ff2       <= do99591;            end         end      endcase   end
end




always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cb1d135 <= 'd0;      ipe89ad       <= 'd0;   end   else begin      if (fad0f47 == do99591 && qi346d2 < TLP_MEM_DEPTH) begin         cb1d135 <= qi346d2 + 1;      end      else begin         cb1d135 <= 'd0;      end      ipe89ad <= (qi346d2 == TLP_MEM_DEPTH) ? 1'b1 : 1'b0;   end
end










always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      epbb374       <= 'd0;      ofd9ba5       <= 'd0;      kqc41d9 <= 'd0;      qv7642 <= 'd0;      yxd90a9 <= 'd0;      dm42a6e <= 'd0;
      do20ec8 <= 'd0;      co3b215 <= 'd0;      dzc854d <= 'd0;      ym15372 <= 'd0;      aa92df2    <= 'd0;      nt3861d <= 'd0;      mt18775 <= 'd0;   end   else begin                              aa92df2    <= (bl45e12 == 4'd8) ? 'd0 : (dm42bcd | ks9d0af);      nt3861d <= ba35178;      mt18775 <= vvdd480;      epbb374[0] <= (vvdd480[0] & dm76087[0]) ? 1'b1 : 1'b0;      epbb374[1] <= (vvdd480[1] & dm76087[1]) ? 1'b1 : 1'b0;      epbb374[2] <= (vvdd480[2] & dm76087[2]) ? 1'b1 : 1'b0;      epbb374[3] <= (vvdd480[3] & dm76087[3]) ? 1'b1 : 1'b0;
      ofd9ba5[0] <= (lq52038[0] & qi15b76[0]) ? 1'b1 : 1'b0;      ofd9ba5[1] <= (lq52038[1] & qi15b76[1]) ? 1'b1 : 1'b0;      ofd9ba5[2] <= (lq52038[2] & qi15b76[2]) ? 1'b1 : 1'b0;      ofd9ba5[3] <= (lq52038[3] & qi15b76[3]) ? 1'b1 : 1'b0;
            case ({rtc872b[0],fp1caf0})         2'b01:   kqc41d9 <= dm47152 - 1'b1 ;         2'b10:   kqc41d9 <= dm47152 + 1'b1 ;         default: kqc41d9 <= dm47152;      endcase      case ({rtc872b[1],fp1caf0})         2'b01:   qv7642 <= vic549f - 1'b1 ;         2'b10:   qv7642 <= vic549f + 1'b1 ;         default: qv7642 <= vic549f;      endcase      case ({rtc872b[2],fp1caf0})         2'b01:   yxd90a9 <= vi527d2 - 1'b1 ;         2'b10:   yxd90a9 <= vi527d2 + 1'b1 ;         default: yxd90a9 <= vi527d2;      endcase      case ({rtc872b[3],fp1caf0})         2'b01:   dm42a6e <= an9f493 - 1'b1 ;         2'b10:   dm42a6e <= an9f493 + 1'b1 ;         default: dm42a6e <= an9f493;      endcase            case ({kq4395e[0],aye5786})         2'b01:   do20ec8 <= fp38a93 - 1'b1 ;         2'b10:   do20ec8 <= fp38a93 + 1'b1 ;         default: do20ec8 <= fp38a93;      endcase      case ({kq4395e[1],aye5786})         2'b01:   co3b215 <= ng2a4fa - 1'b1 ;         2'b10:   co3b215 <= ng2a4fa + 1'b1 ;         default: co3b215 <= ng2a4fa;      endcase      case ({kq4395e[2],aye5786})         2'b01:   dzc854d <= vk93e92 - 1'b1 ;         2'b10:   dzc854d <= vk93e92 + 1'b1 ;         default: dzc854d <= vk93e92;      endcase      case ({kq4395e[3],aye5786})         2'b01:   ym15372 <= mefa49c - 1'b1 ;         2'b10:   ym15372 <= mefa49c + 1'b1 ;         default: ym15372 <= mefa49c;      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ouff92  <= pscac8b;      nr6e967  <= 1'b0;      xjcdd2c  <= 1'b0;   end   else begin      nr6e967  <= 1'b0;      xjcdd2c  <= 1'b0;      case(wy87a3a)         pscac8b: begin            if (fp38a93 >= 1 && ng2a4fa >= 1 && vk93e92 >= 1 && mefa49c >= 1 && &rv22870) begin               nr6e967  <= 1'b1;               ouff92  <= ui5645a;            end            else if (dm47152 >= 1 && vic549f >= 1 && vi527d2 >= 1 && an9f493 >= 1 && &rv22870) begin               xjcdd2c  <= 1'b1;               ouff92  <= ui5645a;            end            else begin               ouff92  <= pscac8b;            end         end         ui5645a: begin            ouff92     <= pscac8b;         end      endcase   end
end




pcie_x1_top_fn550c2 ks21d84 [LANE_WIDTH-1:0]   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .cb185d9          (oh26643),    .jpc2ecd       (psfb232),    .wl1766e   (do990e5),
    .epbb374           (rtc872b),    .ofd9ba5           (kq4395e),    .xjcdd2c           (fp1caf0),    .nr6e967           (aye5786),    .asb_data          (faeeb67),    .asb_kcntl         (lsad9dd),    .asb_err           (ic67752),    .ic67ff4          (ba35178),
    .asb_eidle_rx      (ie88202),    .asb_beacon_rx     (qv8084),    .asb_lane_sync     (qv2126),        .vif4282             (vif4282),    .mta1412            (mta1412),    .mga095             (rv9b4b5),    .dz504a9            (ldd2d72),    .ks8254f              (ww72efc),    .ir12a79         (mt23c4a),    .an953cd        (nef12aa),    .mga9e6d        (zx4aa92),    .pf4f368             (rvb5cbb),    .zk79b47             (yzbbf00),    .blcda3b         (thfc023),    .qg6d1df          (ec8f1)    );
always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mga095        <= 'd0;      dz504a9       <= 'd0;      ks8254f         <= 'd0;      pf4f368        <= 'd0;      zk79b47        <= 'd0;      blcda3b    <= 'd0;      qg6d1df     <= 'd0;      fa7399b  <= 'd0;      ir12a79    <= 'd0;      an953cd   <= 'd0;      mga9e6d   <= 'd0;   end   else begin      mga095        <= dzc8c9d ;      dz504a9       <= db32779;      ks8254f         <= tu79ec0;      pf4f368        <= (bl45e12 != 'd0) ? (uk9de7b | ~bl45e12) : 'd0;      zk79b47        <= jp7b01b;      qg6d1df     <= ba1bfd7;      fa7399b  <= kq7defb;      blcda3b    <= (bl45e12 != 'd0) ? (psc06ff | ~bl45e12) : 'd0;      ir12a79    <= icff5db;      an953cd   <= thd76c8;      mga9e6d   <= cmdb235;   end
end



always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_top_mca_data      <= 'd0;      pcie_x1_top_mca_kcntl     <= 'd0;      pcie_x1_top_mca_err       <= 'd0;      pcie_x1_top_mca_eidle_rx  <= 'd0;      pcie_x1_top_mca_beacon_rx <= 'd0;      pcie_x1_top_mca_lane_sync <= 'd0;      pcie_x1_top_mca_align_done<= 'd0;   end   else if (je1e3c0) begin      pcie_x1_top_mca_data      <= dm5d079;      pcie_x1_top_mca_kcntl     <= yx41e5d;      pcie_x1_top_mca_err       <= ouf2ed;      pcie_x1_top_mca_eidle_rx  <= ks3130b;      pcie_x1_top_mca_beacon_rx <= ba89858;      pcie_x1_top_mca_lane_sync <= qg4c2c3;      pcie_x1_top_mca_align_done<= 1'b1;   end   else begin                  pcie_x1_top_mca_data[7:0]    <= (jp7bec8[0]) ? 8'h1C : qte7622[7:0];      pcie_x1_top_mca_kcntl[0]     <= (jp7bec8[0]) ? 1'b1  : rtd88a1[0];      pcie_x1_top_mca_data[15:8]   <= (jp7bec8[1]) ? 8'h1C : qte7622[15:8];      pcie_x1_top_mca_kcntl[1]     <= (jp7bec8[1]) ? 1'b1  : rtd88a1[1];      pcie_x1_top_mca_data[23:16]  <= (jp7bec8[2]) ? 8'h1C : qte7622[23:16];      pcie_x1_top_mca_kcntl[2]     <= (jp7bec8[2]) ? 1'b1  : rtd88a1[2];      pcie_x1_top_mca_data[31:24]  <= (jp7bec8[3]) ? 8'h1C : qte7622[31:24];      pcie_x1_top_mca_kcntl[3]     <= (jp7bec8[3]) ? 1'b1  : rtd88a1[3];
      pcie_x1_top_mca_err       <= wla1c3b;      pcie_x1_top_mca_eidle_rx  <= zxe3a45;      pcie_x1_top_mca_beacon_rx <= ble917d;      pcie_x1_top_mca_lane_sync <= pf45f7b;      pcie_x1_top_mca_align_done<= xl3d1d0;   end
end



assign qia277 = (pcie_x1_top_mca_data[31:24] == 8'hBC) & (pcie_x1_top_mca_kcntl[3] == 1'b1) ;
assign cz4ee6b = (pcie_x1_top_mca_data[23:16] == 8'hBC) & (pcie_x1_top_mca_kcntl[2] == 1'b1) ;
assign fncd709 = (pcie_x1_top_mca_data[15:8]  == 8'hBC) & (pcie_x1_top_mca_kcntl[1] == 1'b1) ;
assign tue13b9 = (pcie_x1_top_mca_data[7:0]   == 8'hBC) & (pcie_x1_top_mca_kcntl[0] == 1'b1) ;

assign ay772fc = (bl45e12 == 4'h8) & qia277 ;
assign vv5f840 = (bl45e12 == 4'hC) & qia277 & cz4ee6b ;
assign xj40f9c = (bl45e12 == 4'hF) & qia277 & cz4ee6b & fncd709 & tue13b9 ;

always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n)      pcie_x1_top_mca_aligned   <= 'd0;   else if (qv90096)      pcie_x1_top_mca_aligned <= 'd0;   else if (ay772fc || vv5f840 || xj40f9c)      pcie_x1_top_mca_aligned <= 1'b1 ;   else      pcie_x1_top_mca_aligned <= pcie_x1_top_mca_aligned;
end





`ifdef DEBUG

always @(posedge sys_clk) begin   ym8878f <= rv22870[0];   os43c78 <= ym8878f;
end
always @(posedge sys_clk) begin   if (pcie_x1_top_mca_data[7:0] == K28_5 && pcie_x1_top_mca_kcntl[0] == 1'b1 && pcie_x1_top_mca_align_done == 1'b1 && !os43c78) begin      if (pcie_x1_top_mca_data[31:8] != {K28_5,K28_5,K28_5} && pcie_x1_top_mca_kcntl[3:1] != 3'b111)      $display("ERROR: From RTL align_fifo.v the fifo data is MIS-ALIGNED after ALignment was completed pcie_x1_top_mca_data = %h %t",pcie_x1_top_mca_data,$time);   end
end

`endif


always@* begin je1e3c0<=xjc2975[0];al75936<={ltssm_config_ln>>1,xjc2975[1]};ui7809d<=xjc2975[2];gd2742<={skip_added>>1,xjc2975[3]};ks9d0af<={skip_removed>>1,xjc2975[4]};dm42bcd<={asb_skip_found>>1,xjc2975[5]};dm5d079<={asb_data>>1,xjc2975[6]};yx41e5d<={asb_kcntl>>1,xjc2975[7]};ouf2ed<={asb_err>>1,xjc2975[8]};ks3130b<={asb_eidle_rx>>1,xjc2975[9]};ba89858<={asb_beacon_rx>>1,xjc2975[10]};qg4c2c3<={asb_lane_sync>>1,xjc2975[11]};qte7622<={mga095>>1,xjc2975[12]};rtd88a1<={dz504a9>>1,xjc2975[13]};rv22870<={pf4f368>>1,xjc2975[14]};wla1c3b<={ks8254f>>1,xjc2975[15]};uv70ee3<={zk79b47>>1,xjc2975[16]};aa3b8e9<={blcda3b>>1,xjc2975[17]};zxe3a45<={ir12a79>>1,xjc2975[18]};ble917d<={an953cd>>1,xjc2975[19]};pf45f7b<={mga9e6d>>1,xjc2975[20]};kq7defb<={qg6d1df>>1,xjc2975[21]};jp7bec8<={fa7399b>>1,xjc2975[22]};psfb232<={pfe66d2>>1,xjc2975[23]};dzc8c9d<={rv9b4b5>>1,xjc2975[24]};db32779<={ldd2d72>>1,xjc2975[25]};uk9de7b<={rvb5cbb>>1,xjc2975[26]};tu79ec0<={ww72efc>>1,xjc2975[27]};jp7b01b<={yzbbf00>>1,xjc2975[28]};psc06ff<={thfc023>>1,xjc2975[29]};ba1bfd7<={ec8f1>>1,xjc2975[30]};icff5db<={mt23c4a>>1,xjc2975[31]};thd76c8<={nef12aa>>1,xjc2975[32]};cmdb235<={zx4aa92>>1,xjc2975[33]};zxc8d45<={hdaa4b7>>1,xjc2975[34]};ba35178<={aa92df2>>1,xjc2975[35]};bl45e12<={ngb7c8b>>1,xjc2975[36]};ui784ba<={qiac27c>>1,xjc2975[37]};an12e87<={ph9f0f>>1,xjc2975[38]};an3321c<={jpc2ecd>>1,xjc2975[39]};fad0f47<={dme1ff2>>1,xjc2975[40]};wy87a3a<=xjc2975[41];xl3d1d0<=xjc2975[42];gbe8e86<=xjc2975[43];oh26643<={cb185d9>>1,xjc2975[44]};pu868da<={ep23a26>>1,xjc2975[45]};qi346d2<={cb1d135>>1,xjc2975[46]};wya3690<=xjc2975[47];ls1b480<=xjc2975[48];xwda402<=xjc2975[49];rtd2012<=xjc2975[50];qv90096<=xjc2975[51];mt804b5<=xjc2975[52];ux25ac<=xjc2975[53];kf12d65<={db2d694>>1,xjc2975[54]};do990e5<=xjc2975[55];fpb596b<=xjc2975[56];uv65af8<={db94fb7>>1,xjc2975[57]};dz6be27<={ym3edf3>>1,xjc2975[58]};gbf89fe<={pub7cc6>>1,xjc2975[59]};xl27fa9<={hbf3195>>1,xjc2975[60]};fafea7a<={kdc6578>>1,xjc2975[61]};wya9e90<={ux95e2e>>1,xjc2975[62]};qt7a407<={kq78ba6>>1,xjc2975[63]};oh901ee<={ym2e98b>>1,xjc2975[64]};an7bad<={mga62cf>>1,xjc2975[65]};faeeb67<={nt8b3c0>>1,xjc2975[66]};lsad9dd<={zkcf038>>1,xjc2975[67]};ic67752<={dmc0e18>>1,xjc2975[68]};vvdd480<={nt3861d>>1,xjc2975[69]};lq52038<={mt18775>>1,xjc2975[70]};sj80e15<={ep1dd6c>>1,xjc2975[71]};lf3856d<={wj75b23>>1,xjc2975[72]};qi15b76<={xw6c8ea>>1,xjc2975[73]};yk6dd82<={oh23a97>>1,xjc2975[74]};dm76087<={wwea5ed>>1,xjc2975[75]};wy821de<={co97b43>>1,xjc2975[76]};sw87788<={gbed0cb>>1,xjc2975[77]};qgde208<={cm432e9>>1,xjc2975[78]};ie88202<={sucba4f>>1,xjc2975[79]};qv8084<={pfe93c3>>1,xjc2975[80]};qv2126<={th4f0f9>>1,xjc2975[81]};rtc872b<={epbb374>>1,xjc2975[82]};kq4395e<={ofd9ba5>>1,xjc2975[83]};fp1caf0<=xjc2975[84];aye5786<=xjc2975[85];dm47152<={kqc41d9>>1,xjc2975[86]};fp38a93<={do20ec8>>1,xjc2975[87]};vic549f<={qv7642>>1,xjc2975[88]};ng2a4fa<={co3b215>>1,xjc2975[89]};vi527d2<={yxd90a9>>1,xjc2975[90]};vk93e92<={dzc854d>>1,xjc2975[91]};an9f493<={dm42a6e>>1,xjc2975[92]};mefa49c<={ym15372>>1,xjc2975[93]};qi9270e<={vif4282>>1,xjc2975[94]};ri9c383<={mta1412>>1,xjc2975[95]};end
always@* begin ux1852e[2047]<=ltssm_config_ln[0];ux1852e[2046]<=phy_realign_req;ux1852e[2044]<=skip_added[0];ux1852e[2041]<=yx65ad2;ux1852e[2040]<=skip_removed[0];ux1852e[2035]<=db2d694[0];ux1852e[2033]<=asb_skip_found[0];ux1852e[2024]<=qg6d1df[0];ux1852e[2022]<=wl1766e;ux1852e[2018]<=asb_data[0];ux1852e[2004]<=gbed0cb[0];ux1852e[2001]<=fa7399b[0];ux1852e[1997]<=pf5a53e;ux1852e[1988]<=asb_kcntl[0];ux1852e[1961]<=cm432e9[0];ux1852e[1954]<=pfe66d2[0];ux1852e[1946]<=db94fb7[0];ux1852e[1929]<=asb_err[0];ux1852e[1917]<=xw6c8ea[0];ux1852e[1875]<=sucba4f[0];ux1852e[1874]<=aa92df2[0];ux1852e[1860]<=rv9b4b5[0];ux1852e[1851]<=dmc0e18[0];ux1852e[1845]<=ym3edf3[0];ux1852e[1811]<=asb_eidle_rx[0];ux1852e[1789]<=ir12a79[0];ux1852e[1786]<=oh23a97[0];ux1852e[1736]<=qv7642[0];ux1852e[1721]<=kq78ba6[0];ux1852e[1702]<=pfe93c3[0];ux1852e[1700]<=ngb7c8b[0];ux1852e[1673]<=ldd2d72[0];ux1852e[1655]<=nt3861d[0];ux1852e[1643]<=pub7cc6[0];ux1852e[1607]<=dzc854d[0];ux1852e[1574]<=asb_beacon_rx[0];ux1852e[1530]<=an953cd[0];ux1852e[1525]<=wwea5ed[0];ux1852e[1486]<=nt8b3c0[0];ux1852e[1425]<=co3b215[0];ux1852e[1395]<=ym2e98b[0];ux1852e[1357]<=th4f0f9[0];ux1852e[1353]<=qiac27c[0];ux1852e[1334]<=ofd9ba5[0];ux1852e[1317]<=jpc2ecd[0];ux1852e[1311]<=ipe89ad;ux1852e[1299]<=rvb5cbb[0];ux1852e[1263]<=mt18775[0];ux1852e[1258]<=nef12aa[0];ux1852e[1247]<=ks8254f[0];ux1852e[1241]<=nr6e967;ux1852e[1239]<=hbf3195[0];ux1852e[1187]<=cb185d9[0];ux1852e[1172]<=ouff92;ux1852e[1167]<=dm42a6e[0];ux1852e[1151]<=sj26b65;ux1852e[1149]<=mta1412[0];ux1852e[1102]<=yzbbf00[0];ux1852e[1101]<=asb_lane_sync[0];ux1852e[1023]<=pcie_x1_top_mca_disable;ux1852e[1020]<=xw6cb5a;ux1852e[1012]<=mga9e6d[0];ux1852e[1002]<=co97b43[0];ux1852e[958]<=wj75b23[0];ux1852e[937]<=hdaa4b7[0];ux1852e[925]<=zkcf038[0];ux1852e[894]<=blcda3b[0];ux1852e[868]<=do20ec8[0];ux1852e[860]<=ux95e2e[0];ux1852e[803]<=yxd90a9[0];ux1852e[743]<=mga62cf[0];ux1852e[667]<=epbb374[0];ux1852e[658]<=ph9f0f[0];ux1852e[655]<=cb1d135[0];ux1852e[629]<=mt23c4a[0];ux1852e[623]<=pf4f368[0];ux1852e[620]<=xjcdd2c;ux1852e[593]<=shf2423;ux1852e[586]<=dme1ff2[0];ux1852e[575]<=ip44d6c;ux1852e[574]<=vif4282[0];ux1852e[551]<=ww72efc[0];ux1852e[510]<=xyad96b;ux1852e[479]<=ep1dd6c[0];ux1852e[468]<=zx4aa92[0];ux1852e[447]<=zk79b47[0];ux1852e[434]<=kqc41d9[0];ux1852e[430]<=kdc6578[0];ux1852e[327]<=ep23a26[0];ux1852e[314]<=ec8f1[0];ux1852e[311]<=dz504a9[0];ux1852e[296]<=of7fc90;ux1852e[287]<=ym15372[0];ux1852e[255]<=je35b2d;ux1852e[157]<=thfc023[0];ux1852e[155]<=mga095[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

























































































`timescale 1 ns / 100 ps
module pcie_x1_top_kqf574b (
   input wire        cbaba58 ,        
   input wire        rst_n ,          

   input wire [7:0]  data_in ,        
   input wire        uv4b15f ,       
   input wire        ne58afd ,  

   output reg [7:0]  nec57ea ,       
   output reg        aa2bf52           );
reg [15:0]   bl5fa91;
reg          alfd48f;
reg [3:0]    cmea47c;
reg          lq523e0 ;
reg          vx91f02;
reg          wl8f816 ;
reg [7:0]    zk7c0b4;
reg          uie05a2;
reg          an2d11;
reg          db1688c;
reg [7 : 0] mtb4467;
reg ria233c;
reg xy119e2;
reg ls8cf12;
reg [3 : 0] su67893;
reg kf3c499;
reg gbe24cc;
reg oh12664;
reg [7 : 0] ri93324;
reg pu99922;
reg encc912;
reg rt64895;
reg [2047:0] ux1852e;
wire [11:0] xjc2975;

localparam do14bae = 12,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;









always @(posedge cbaba58, negedge rst_n) begin      if(!rst_n) begin      lq523e0 <= 1'b0 ;      vx91f02 <= 1'b0 ;      wl8f816 <= 1'b0 ;
      zk7c0b4  <= 8'h0 ;      uie05a2 <= 1'b0 ;   end   else  begin      lq523e0 <= ria233c & (mtb4467[7:0] == 8'hbc);       vx91f02 <= ria233c & (mtb4467[7:0] == 8'h1c);       wl8f816 <= ria233c & (mtb4467[7:0] == 8'hf7);       zk7c0b4  <= mtb4467 ;      uie05a2 <= ria233c ;   end
end

always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n) begin      an2d11 <= 1'b0;      db1688c <= 1'b0;   end   else begin      an2d11 <= xy119e2;      db1688c <= encc912;   end
end
























always @(posedge cbaba58, negedge rst_n) begin   if(!rst_n)      alfd48f <= 1'b0;   else if(kf3c499 || (ls8cf12 && oh12664))      alfd48f <= 1'b1;      else if ((su67893 == 4'b1111) || pu99922)       alfd48f <= 1'b0;   else      alfd48f <= ls8cf12;
end
always @(posedge cbaba58, negedge rst_n) begin   if(!rst_n)      cmea47c <= 4'b0000;   else if(kf3c499)      cmea47c <= 4'b0001;   else if (ls8cf12)      cmea47c <= su67893 + 4'b0001;   else      cmea47c <= 4'b0000;
end








always @(posedge cbaba58, negedge rst_n) begin   if(!rst_n) begin      nec57ea  <= 8'd0;      aa2bf52 <= 1'd0;   end   else begin


      aa2bf52 <= pu99922;      if(ls8cf12 || pu99922 || rt64895)          nec57ea[7:0]  <= ri93324[7:0];      else begin            nec57ea[0] <= ri93324[0] ^ bl5fa91[15];            nec57ea[1] <= ri93324[1] ^ bl5fa91[14];            nec57ea[2] <= ri93324[2] ^ bl5fa91[13];            nec57ea[3] <= ri93324[3] ^ bl5fa91[12];            nec57ea[4] <= ri93324[4] ^ bl5fa91[11];            nec57ea[5] <= ri93324[5] ^ bl5fa91[10];            nec57ea[6] <= ri93324[6] ^ bl5fa91[ 9];            nec57ea[7] <= ri93324[7] ^ bl5fa91[ 8];      end   end
end




always @(posedge cbaba58, negedge rst_n) begin   if(!rst_n)      bl5fa91 <= 16'hffff;   else if(kf3c499)      bl5fa91 <= 16'hffff;   else if(gbe24cc)      bl5fa91 <= bl5fa91;   else begin      bl5fa91[ 0] <= bl5fa91[ 8];      bl5fa91[ 1] <= bl5fa91[ 9];      bl5fa91[ 2] <= bl5fa91[10];      bl5fa91[ 3] <= bl5fa91[11] ^ bl5fa91[ 8];      bl5fa91[ 4] <= bl5fa91[12] ^ bl5fa91[ 9] ^ bl5fa91[ 8];      bl5fa91[ 5] <= bl5fa91[13] ^ bl5fa91[10] ^ bl5fa91[ 9] ^ bl5fa91[ 8];      bl5fa91[ 6] <= bl5fa91[14] ^ bl5fa91[11] ^ bl5fa91[10] ^ bl5fa91[ 9];      bl5fa91[ 7] <= bl5fa91[15] ^ bl5fa91[12] ^ bl5fa91[11] ^ bl5fa91[10];      bl5fa91[ 8] <= bl5fa91[ 0] ^ bl5fa91[13] ^ bl5fa91[12] ^ bl5fa91[11];      bl5fa91[ 9] <= bl5fa91[ 1] ^ bl5fa91[14] ^ bl5fa91[13] ^ bl5fa91[12];      bl5fa91[10] <= bl5fa91[ 2] ^ bl5fa91[15] ^ bl5fa91[14] ^ bl5fa91[13];      bl5fa91[11] <= bl5fa91[ 3]            ^ bl5fa91[15] ^ bl5fa91[14];      bl5fa91[12] <= bl5fa91[ 4]                       ^ bl5fa91[15];      bl5fa91[13] <= bl5fa91[ 5];      bl5fa91[14] <= bl5fa91[ 6];      bl5fa91[15] <= bl5fa91[ 7];   end
end
always@* begin mtb4467<={data_in>>1,xjc2975[0]};ria233c<=xjc2975[1];xy119e2<=xjc2975[2];ls8cf12<=xjc2975[3];su67893<={cmea47c>>1,xjc2975[4]};kf3c499<=xjc2975[5];gbe24cc<=xjc2975[6];oh12664<=xjc2975[7];ri93324<={zk7c0b4>>1,xjc2975[8]};pu99922<=xjc2975[9];encc912<=xjc2975[10];rt64895<=xjc2975[11];end
always@* begin ux1852e[2047]<=uv4b15f;ux1852e[2046]<=ne58afd;ux1852e[2044]<=alfd48f;ux1852e[2040]<=cmea47c[0];ux1852e[2032]<=lq523e0;ux1852e[2017]<=vx91f02;ux1852e[1987]<=wl8f816;ux1852e[1927]<=zk7c0b4[0];ux1852e[1806]<=uie05a2;ux1852e[1565]<=an2d11;ux1852e[1082]<=db1688c;ux1852e[1023]<=data_in[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_phb08ea (
   input wire        vx84757 ,    
   input wire        cbaba58 ,    
   input wire        rst_n ,      
   input wire        wweafad , 

   input wire [21:0] data_in ,    

   output reg [10:0] nec57ea        );
reg [1:0]         eaf5a5c;
reg [1:0]         jead2e1;
reg               tu6970b;
wire [10:0]       wj4b85b;
wire [10:0]       yk5c2dc;
reg               bye16e1  ;
reg               dob70b  ;
reg               ip5b85b  ;
integer           endc2dd ;
integer           xwe16ed ;
reg [10:0] xyb76b[0:3] ;
reg [10:0] mr5bb5b[0:3] ;
reg ldddadd;
reg [21 : 0] mtb4467;
reg [1 : 0] ld6b775;
reg gb5bbae;
reg [10 : 0] pfddd75;
reg [10 : 0] dmeebae;
reg yx75d73;
reg ohaeb9d;
reg ip75ced;
reg [2047:0] ux1852e;
wire [8:0] xjc2975;

localparam do14bae = 9,jra5d72 = 32'hfdffe44b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;








always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n) begin      bye16e1 <= 1'b0;      dob70b <= 1'b0;   end   else begin      bye16e1 <= ldddadd;      dob70b <= yx75d73;   end
end


always @(posedge vx84757, negedge rst_n) begin   if (!rst_n) begin      ip5b85b <= 1'b0;   end   else begin      ip5b85b <= ldddadd;   end
end






always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      eaf5a5c <= 2'b00;   else if (ip75ced)      eaf5a5c <= eaf5a5c + 2'd1;
end

always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      tu6970b <= 1'b0;   else if (!ohaeb9d)      tu6970b <= 1'b0;   else      tu6970b <= ~gb5bbae;
end

always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      jead2e1 <= 2'b10;   else if (gb5bbae && ohaeb9d)      jead2e1 <= ld6b775 + 2'd1;
end

always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n) begin      nec57ea[9:0] <= 10'd0;      nec57ea[10]  <= 1'b1;   end   else begin      nec57ea[9:0] <= gb5bbae ? pfddd75[9:0] : dmeebae[9:0];      nec57ea[10]  <= ohaeb9d ? (gb5bbae ? pfddd75[10] : dmeebae[10]) : 1'b1 ;   end
end


always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      for (endc2dd=0;endc2dd<=3;endc2dd=endc2dd+1)         xyb76b[endc2dd] <= 11'd0;   else      xyb76b[eaf5a5c] <= mtb4467[10:0] ;
end
assign wj4b85b = xyb76b[ld6b775] ;
always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      for (xwe16ed=0;xwe16ed<=3;xwe16ed=xwe16ed+1)         mr5bb5b[xwe16ed] <= 11'd0;   else      mr5bb5b[eaf5a5c] <= mtb4467[21:11] ;
end
assign yk5c2dc = mr5bb5b[ld6b775] ;

always@* begin ldddadd<=xjc2975[0];mtb4467<={data_in>>1,xjc2975[1]};ld6b775<={jead2e1>>1,xjc2975[2]};gb5bbae<=xjc2975[3];pfddd75<={wj4b85b>>1,xjc2975[4]};dmeebae<={yk5c2dc>>1,xjc2975[5]};yx75d73<=xjc2975[6];ohaeb9d<=xjc2975[7];ip75ced<=xjc2975[8];end
always@* begin ux1852e[2047]<=data_in[0];ux1852e[2046]<=jead2e1[0];ux1852e[2044]<=tu6970b;ux1852e[2040]<=wj4b85b[0];ux1852e[2033]<=yk5c2dc[0];ux1852e[2019]<=bye16e1;ux1852e[1991]<=dob70b;ux1852e[1934]<=ip5b85b;ux1852e[1023]<=wweafad;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule




























`timescale 1 ns / 100 ps
module pcie_x1_top_wl17425 (
   input wire         cbaba58 ,    
   input wire         vx84757 ,    
   input wire         rst_n ,      
   input wire         wweafad , 

   input wire [12:0]   data_in ,    

   output wire [25:0] nec57ea        );
reg [1:0]         eaf5a5c  ;
reg [1:0]         jead2e1  ;
reg               ntba816    ;
reg [12:0]        wj4b85b  ;
reg [12:0]        yk5c2dc  ;
reg               bye16e1  ;
reg               dob70b  ;
reg               ip5b85b  ;
integer           endc2dd ;
integer           xwe16ed ;
reg [12:0] xyb76b[0:3] ;
reg [12:0] mr5bb5b[0:3] ;
reg ldddadd;
reg [12 : 0] mtb4467;
reg [1 : 0] ld6b775;
reg vi6397b;
reg [12 : 0] pfddd75;
reg [12 : 0] dmeebae;
reg yx75d73;
reg ohaeb9d;
reg ip75ced;
reg [2047:0] ux1852e;
wire [8:0] xjc2975;

localparam do14bae = 9,jra5d72 = 32'hfdffd14b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;








always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n) begin      bye16e1 <= 1'b0;      dob70b <= 1'b0;   end   else begin      bye16e1 <= ldddadd;      dob70b <= yx75d73;   end
end


always @(posedge vx84757, negedge rst_n) begin   if (!rst_n) begin      ip5b85b <= 1'b0;   end   else begin      ip5b85b <= ldddadd;   end
end






always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      eaf5a5c <= 2'b00;   else if (vi6397b && ohaeb9d)      eaf5a5c <= eaf5a5c + 2'd1;   else      eaf5a5c <= eaf5a5c;
end

always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      ntba816 <= 1'b0;   else if (!ohaeb9d)      ntba816 <= 1'b0;   else      ntba816 <= ~vi6397b;
end

always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      jead2e1 <= 2'b10;   else if (ip75ced)      jead2e1 <= ld6b775 + 2'd1;
end

assign nec57ea = {pfddd75,dmeebae};


always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      for (endc2dd=0;endc2dd<=3;endc2dd=endc2dd+1) begin         xyb76b[endc2dd] <= 13'd0;      end   else if (!vi6397b)      xyb76b[eaf5a5c] <= mtb4467 ;
end

always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      wj4b85b <= 'd0 ;   else      wj4b85b <= xyb76b[ld6b775] ;
end
always @(posedge cbaba58, negedge rst_n) begin   if (!rst_n)      for (xwe16ed=0;xwe16ed<=3;xwe16ed=xwe16ed+1) begin         mr5bb5b[xwe16ed] <= 13'd0;      end   else if (vi6397b)      mr5bb5b[eaf5a5c] <= mtb4467 ;
end

always @(posedge vx84757, negedge rst_n) begin   if (!rst_n)      yk5c2dc <= 'd0 ;   else      yk5c2dc <= mr5bb5b[ld6b775] ;
end

always@* begin ldddadd<=xjc2975[0];mtb4467<={data_in>>1,xjc2975[1]};ld6b775<={jead2e1>>1,xjc2975[2]};vi6397b<=xjc2975[3];pfddd75<={wj4b85b>>1,xjc2975[4]};dmeebae<={yk5c2dc>>1,xjc2975[5]};yx75d73<=xjc2975[6];ohaeb9d<=xjc2975[7];ip75ced<=xjc2975[8];end
always@* begin ux1852e[2047]<=data_in[0];ux1852e[2046]<=jead2e1[0];ux1852e[2044]<=ntba816;ux1852e[2040]<=wj4b85b[0];ux1852e[2033]<=yk5c2dc[0];ux1852e[2019]<=bye16e1;ux1852e[1990]<=dob70b;ux1852e[1933]<=ip5b85b;ux1852e[1023]<=wweafad;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_top_ps6c1e6 (
   input wire         qt60f33 ,      
   input wire         clk_250_tx ,      
   input wire         an3cce4 ,      
   input wire         clk_250_rx ,      
   input wire         rst_n ,           

   input wire         ri9c974, 
   input wire         ne58afd ,   
   input wire         wweafad ,    
   input wire [15:0]  qi2e892 ,   
   input wire [1:0]   zx74491 ,  
   input wire [1:0]   ria248e , 
   input wire         yz12472,
   input wire [7:0]   sw92394 ,      
   input wire         zz91ca0 ,     
   input wire         db8e506 ,       
   input wire         go72837,
   input wire         xl941b8,
   input wire         rva0dc7, 

   output wire [15:0] zz6e3e ,     
   output wire [1:0]  vx371f6 ,    
   output wire [1:0]  pub8fb7 ,      
   output wire [1:0]  zxc7dbb,
   output wire [1:0]  sw3edde,
   output wire [1:0]  thf6ef0, 
   output wire [7:0]  vkb7786 ,    
   output wire        qvbbc33 ,   
   output reg         ayde19c ,  
   output reg         mef0ce0     );
wire [10:0]   vk86701 ;
wire [8:0]    sj3380b ;
wire [1:0]    ng9c05c;
reg [7:0]     qge02e3               ;
reg           tw1719              ;
reg [7:0]     xyb8ca               ;
reg           go5c652              ;
reg           pfe3291                ;
reg           jr1948e                ;
reg           lqca477                ;
reg           tu523bb                ;
reg           hd91dda           ;
reg           ph8eed6           ;
reg           ui776b6           ;
reg           irbb5b1           ;
reg           tudad8d          ;
reg           ofd6c6b          ;
reg           ukb635d          ;
reg           irb1ae9          ;
reg           ou8d74d          ;
reg           pf6ba68          ;
reg           ps5d347          ;
reg           jpe9a3b          ;
reg           bye16e1                    ;
reg           dob70b                    ;
reg           zk47790                    ;
reg           wy3bc83                    ;
reg           wwde418                    ;
reg           ipf20c0                    ;
reg           qv90605                    ;
reg           ls8302d                ;
reg           qv1816b            ;
reg           psc0b5d           ;
reg           uk5aeb           ;
reg           lf2d759           ;
reg           ld6bacf          ;
reg           jc5d67f          ;
reg           lqeb3fb          ;
reg           ea59fda           ;
reg           tucfed0           ;
reg           cz7f682           ;
reg           xwfb415           ;
reg jcda0ab;
reg hod055a;
reg xy119e2;
reg ldddadd;
reg [15 : 0] yzab4c1;
reg [1 : 0] hb5a60c;
reg [1 : 0] shd3066;
reg wy98334;
reg [7 : 0] kqc19a1;
reg jrcd09;
reg dm6684f;
reg sw3427b;
reg oha13d8;
reg fp9ec5;
reg [8 : 0] zx4f62f;
reg [1 : 0] dz7b17f;
reg [7 : 0] hbd8bff;
reg rgc5ffe;
reg [7 : 0] ls2fff3;
reg kd7ff9b;
reg eaffcdc;
reg jcfe6e0;
reg dzf3703;
reg db9b81f;
reg qtdc0ff;
reg ose07fd;
reg fp3fe9;
reg ou1ff4e;
reg ykffa71;
reg offd388;
reg nre9c44;
reg wj4e226;
reg fn71135;
reg mg889ae;
reg cz44d71;
reg wl26b8d;
reg yx75d73;
reg ohaeb9d;
reg bl71b5c;
reg ks8dae7;
reg kq6d739;
reg dz6b9c9;
reg ww5ce4f;
reg ipe7278;
reg ep393c4;
reg kdc9e24;
reg nr4f125;
reg ic7892f;
reg suc4979;
reg sw24bc9;
reg fc25e48;
reg fc2f242;
reg jc79212;
reg yxc9092;
reg ps48494;
reg [2047:0] ux1852e;
wire [54:0] xjc2975;





localparam do14bae = 55,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;





pcie_x1_top_phb08ea psdadda (      .vx84757        ( jcda0ab ),   .cbaba58        ( clk_250_tx ),   .rst_n          ( rst_n ),   .wweafad   ( ldddadd ),      .data_in        ( {wy98334, shd3066[1], hb5a60c[1], yzab4c1[15:8],                      wy98334, shd3066[0], hb5a60c[0], yzab4c1[7:0]} ),      .nec57ea       ( vk86701 )   );

pcie_x1_top_kqf574b ng1bebc (      .cbaba58        ( clk_250_tx ),   .rst_n          ( rst_n ),      .data_in        ( vk86701[7:0]),   .uv4b15f       ( vk86701[8]),   .ne58afd  ( xy119e2 ),      .nec57ea       ( vkb7786 ),   .aa2bf52      ( qvbbc33 )   );


always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n) begin      ls8302d <= 1'b0;      ayde19c <= 1'b0;   end   else begin      ls8302d <= vk86701[9];      ayde19c <= ipe7278;   end
end

always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n) begin      bye16e1 <= 1'b0;      dob70b <= 1'b0;      zk47790 <= 1'b0;      wy3bc83 <= 1'b0;      wwde418 <= 1'b0;      ipf20c0 <= 1'b0;      qv90605 <= 1'b0;      qv1816b <= 1'b1;      psc0b5d <= 1'b1;      uk5aeb <= 1'b1;      lf2d759 <= 1'b1;   end   else begin      bye16e1 <= ldddadd;      dob70b <= yx75d73;      zk47790 <= ohaeb9d;      wy3bc83 <= bl71b5c;      wwde418 <= ks8dae7;      ipf20c0 <= kq6d739;      qv90605 <= dz6b9c9;      qv1816b <= vk86701[10];      psc0b5d <= wy98334;      uk5aeb <= kdc9e24;      lf2d759 <= nr4f125;   end
end




always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n)      mef0ce0 <= 1'b1;   else      mef0ce0 <= (hod055a) ? 1'b0: ww5ce4f ? ep393c4 : ic7892f ;
end




always @(posedge clk_250_rx, negedge rst_n) begin   if (!rst_n) begin      qge02e3  <= 8'd0;      tw1719 <= 1'b0;      xyb8ca  <= 8'd0;      go5c652 <= 1'b0;   end   else begin      qge02e3  <= kqc19a1;      tw1719 <= jrcd09;      xyb8ca  <= hbd8bff;      go5c652 <= rgc5ffe;   end
end

pcie_x1_top_kqf574b yx5e842 (      .cbaba58        ( clk_250_rx ),   .rst_n          ( rst_n ),      .data_in        ( ls2fff3 ),   .uv4b15f       ( kd7ff9b),   .ne58afd  ( xy119e2 ),      .nec57ea       ( sj3380b[7:0]),   .aa2bf52      ( sj3380b[8] )   );


always @(posedge clk_250_rx, negedge rst_n) begin   if (!rst_n) begin      pfe3291         <= 1'b0;      jr1948e         <= 1'b0;      lqca477         <= 1'b0;      tu523bb         <= 1'b0;      hd91dda    <= 1'b1;      ph8eed6    <= 1'b1;      ui776b6    <= 1'b1;      irbb5b1    <= 1'b1;      tudad8d   <= 1'b0;      ofd6c6b   <= 1'b0;      ukb635d   <= 1'b0;      irb1ae9   <= 1'b0;      ou8d74d   <= 1'b0;      pf6ba68   <= 1'b0;      ps5d347   <= 1'b0;      jpe9a3b   <= 1'b0;   end   else begin      pfe3291         <= dm6684f;      jr1948e         <= eaffcdc;      lqca477         <= jcfe6e0;      tu523bb         <= dzf3703;      hd91dda    <= sw3427b;      ph8eed6    <= qtdc0ff;      ui776b6    <= ose07fd;      irbb5b1    <= fp3fe9;      tudad8d   <= oha13d8;      ofd6c6b   <= ykffa71;      ukb635d   <= offd388;      irb1ae9   <= nre9c44;      ou8d74d   <= fp9ec5;      pf6ba68   <= fn71135;      ps5d347   <= mg889ae;      jpe9a3b   <= cz44d71;   end
end
always @(posedge an3cce4, negedge rst_n) begin   if (!rst_n) begin      ld6bacf <= 1'b1;      jc5d67f <= 1'b1;      lqeb3fb <= 1'b1;      ea59fda  <= 1'b0;      tucfed0  <= 1'b0;      cz7f682  <= 1'b0;      xwfb415  <= 1'b0;   end   else begin      ld6bacf <= sw3427b;      jc5d67f <= qtdc0ff;      lqeb3fb <= ose07fd | qtdc0ff;      ea59fda  <= ldddadd;      tucfed0  <= fc2f242;      cz7f682  <= jc79212;      xwfb415  <= yxc9092;   end
end
assign zxc7dbb[1] =  ps48494 ? dz7b17f[1] :  fc25e48 ;
assign zxc7dbb[0] =  ps48494 ? dz7b17f[0] :  fc25e48 ;

pcie_x1_top_wl17425 jcd5771 (      .cbaba58        ( clk_250_rx ),   .vx84757        ( an3cce4 ),   .rst_n          ( rst_n ),   .wweafad   ( ldddadd ),         .data_in        ( {wl26b8d, wj4e226, ou1ff4e, db9b81f, zx4f62f} ),       .nec57ea       ( {thf6ef0[1], sw3edde[1], ng9c05c[1], pub8fb7[1], vx371f6[1], zz6e3e[15:8],                      thf6ef0[0], sw3edde[0], ng9c05c[0], pub8fb7[0], vx371f6[0], zz6e3e[7:0]} )   );

always@* begin jcda0ab<=xjc2975[0];hod055a<=xjc2975[1];xy119e2<=xjc2975[2];ldddadd<=xjc2975[3];yzab4c1<={qi2e892>>1,xjc2975[4]};hb5a60c<={zx74491>>1,xjc2975[5]};shd3066<={ria248e>>1,xjc2975[6]};wy98334<=xjc2975[7];kqc19a1<={sw92394>>1,xjc2975[8]};jrcd09<=xjc2975[9];dm6684f<=xjc2975[10];sw3427b<=xjc2975[11];oha13d8<=xjc2975[12];fp9ec5<=xjc2975[13];zx4f62f<={sj3380b>>1,xjc2975[14]};dz7b17f<={ng9c05c>>1,xjc2975[15]};hbd8bff<={qge02e3>>1,xjc2975[16]};rgc5ffe<=xjc2975[17];ls2fff3<={xyb8ca>>1,xjc2975[18]};kd7ff9b<=xjc2975[19];eaffcdc<=xjc2975[20];jcfe6e0<=xjc2975[21];dzf3703<=xjc2975[22];db9b81f<=xjc2975[23];qtdc0ff<=xjc2975[24];ose07fd<=xjc2975[25];fp3fe9<=xjc2975[26];ou1ff4e<=xjc2975[27];ykffa71<=xjc2975[28];offd388<=xjc2975[29];nre9c44<=xjc2975[30];wj4e226<=xjc2975[31];fn71135<=xjc2975[32];mg889ae<=xjc2975[33];cz44d71<=xjc2975[34];wl26b8d<=xjc2975[35];yx75d73<=xjc2975[36];ohaeb9d<=xjc2975[37];bl71b5c<=xjc2975[38];ks8dae7<=xjc2975[39];kq6d739<=xjc2975[40];dz6b9c9<=xjc2975[41];ww5ce4f<=xjc2975[42];ipe7278<=xjc2975[43];ep393c4<=xjc2975[44];kdc9e24<=xjc2975[45];nr4f125<=xjc2975[46];ic7892f<=xjc2975[47];suc4979<=xjc2975[48];sw24bc9<=xjc2975[49];fc25e48<=xjc2975[50];fc2f242<=xjc2975[51];jc79212<=xjc2975[52];yxc9092<=xjc2975[53];ps48494<=xjc2975[54];end
always@* begin ux1852e[2047]<=ri9c974;ux1852e[2046]<=ne58afd;ux1852e[2044]<=wweafad;ux1852e[2040]<=qi2e892[0];ux1852e[2032]<=zx74491[0];ux1852e[2018]<=qv90605;ux1852e[2017]<=ria248e[0];ux1852e[1989]<=ls8302d;ux1852e[1987]<=yz12472;ux1852e[1931]<=qv1816b;ux1852e[1927]<=sw92394[0];ux1852e[1865]<=qge02e3[0];ux1852e[1859]<=pf6ba68;ux1852e[1844]<=cz7f682;ux1852e[1815]<=psc0b5d;ux1852e[1806]<=zz91ca0;ux1852e[1682]<=tw1719;ux1852e[1671]<=ps5d347;ux1852e[1640]<=xwfb415;ux1852e[1582]<=uk5aeb;ux1852e[1565]<=db8e506;ux1852e[1488]<=irb1ae9;ux1852e[1485]<=ea59fda;ux1852e[1326]<=ui776b6;ux1852e[1317]<=xyb8ca[0];ux1852e[1295]<=jpe9a3b;ux1852e[1210]<=tudad8d;ux1852e[1189]<=tu523bb;ux1852e[1172]<=pfe3291;ux1852e[1116]<=lf2d759;ux1852e[1087]<=dob70b;ux1852e[1082]<=go72837;ux1852e[1023]<=qt60f33;ux1852e[1009]<=ipf20c0;ux1852e[932]<=ng9c05c[0];ux1852e[929]<=ou8d74d;ux1852e[922]<=tucfed0;ux1852e[744]<=ukb635d;ux1852e[742]<=lqeb3fb;ux1852e[663]<=ph8eed6;ux1852e[605]<=irbb5b1;ux1852e[594]<=lqca477;ux1852e[586]<=go5c652;ux1852e[543]<=bye16e1;ux1852e[504]<=wwde418;ux1852e[466]<=sj3380b[0];ux1852e[372]<=ofd6c6b;ux1852e[371]<=jc5d67f;ux1852e[331]<=hd91dda;ux1852e[297]<=jr1948e;ux1852e[252]<=wy3bc83;ux1852e[233]<=rva0dc7;ux1852e[185]<=ld6bacf;ux1852e[126]<=zk47790;ux1852e[116]<=xl941b8;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_top_tw990c2 
   (
    
    sys_clk,            
    rst_n,            

    kf184f1,         
    vvc278d,          
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_lbk,         
    ec8dff3,      
    qt6ff99,       
    yx7fccd,     
    nefe66c,        
    jpf3363,           
    xy99b1f,     
    rtcd8fa,      
    ps6c7d7,      
    ps63ebb,    
    ks1f5db,     
    osfaed8,     
    nrd76c0,            
    kfbb606,        
    icdb035,       
    bld81a8,          
    zkc0d47,        
    zz6a3b,    
    asb_dskew_rx,       
    
    
    vka8ef2,        
    ho47792,     
    ie3bc93,       
    osde498,        
    wjf24c0,       
    wy92605,          
    do93028,      
    gq98142,        
    nec0a11,        
    ec508b,         
    jr28458,         
    tu422c7,         
    ba1163b,          
    xl8b1db,           
    lq58edf            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam dz7117c           = 3'd0 ;
localparam wy88be6  = 3'd1 ;
localparam fn45f31 = 3'd2 ;
localparam tw2f98f  = 3'd3 ;
localparam vi7cc7b   = 3'd4 ;
localparam vve63db       = 3'd5 ;
localparam co31ede           = 3'd6 ;
localparam ux8f6f1           = 3'd7 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  vvc278d;
input                     hl_disable_scr;
input                     hl_gto_dis;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input                     ec8dff3;
input                     qt6ff99;
input                     yx7fccd;
input   [LANE_WIDTH-1:0]  nefe66c;
input   [LANE_WIDTH-1:0]  kfbb606;
input   [LANE_WIDTH-1:0]  icdb035;
input   [LANE_WIDTH-1:0]  jpf3363;
input   [LANE_WIDTH-1:0]  xy99b1f;
input   [LANE_WIDTH-1:0]  rtcd8fa;
input   [LANE_WIDTH-1:0]  ps6c7d7;
input   [LANE_WIDTH-1:0]  ps63ebb;
input   [LANE_WIDTH-1:0]  ks1f5db;
input   [LANE_WIDTH-1:0]  osfaed8;
input   [LANE_WIDTH-1:0]  nrd76c0;
input   [LANE_WIDTH-1:0]  bld81a8;
input   [LANE_WIDTH-1:0]  zkc0d47;
input   [LANE_WIDTH-1:0]  zz6a3b;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    vka8ef2;
output                    ho47792;
output                    ie3bc93;
output  [LANE_WIDTH-1:0]  osde498;
output                    wjf24c0;
output  [LANE_WIDTH-1:0]  wy92605;
output  [OS_WIDTH -1:0]   do93028;
output  [LANE_WIDTH-1:0]  gq98142;
output  [LANE_WIDTH-1:0]  nec0a11;
output                    ec508b;
output                    jr28458;
output                    tu422c7;
output                    ba1163b;
output  [LANE_WIDTH-1:0]  xl8b1db;
output  [CFGSM_WIDTH:0]   lq58edf;
wire [LANE_WIDTH-1:0]  wwfa13e;
wire [LANE_WIDTH-1:0]  tj84f8a;
wire [LANE_WIDTH-1:0]  sw3e2bf;
wire [LANE_WIDTH-1:0]  mt8afca;
wire [LANE_WIDTH-1:0]  rvbf2a3;
wire [LANE_WIDTH-1:0]  tuca8fe;
wire [LANE_WIDTH-1:0]  coa3f95;
wire [LANE_WIDTH-1:0]  tufe549;
wire [LANE_WIDTH-1:0]  gd9525c;
wire [LANE_WIDTH-1:0]  kq49729;
wire [LANE_WIDTH-1:0]  qg5ca44;
wire [LANE_WIDTH-1:0]  yz29101;
reg                     ie3bc93;
reg                     wjf24c0;
reg  [CFGSM_WIDTH:0]    lq58edf;
reg  [LANE_WIDTH-1:0]   wy92605;
reg  [OS_WIDTH-1:0]     do93028;
reg  [LANE_WIDTH-1:0]   gq98142;
reg  [LANE_WIDTH-1:0]   nec0a11;
reg  [LANE_WIDTH-1:0]   rg73929;
reg                     ec508b;
reg                     jr28458;
reg                     tu422c7;
reg                     ba1163b;
reg  [LANE_WIDTH-1:0]   xl8b1db;
reg                     gq9277a;

`ifdef LW4
reg  [3:0]              fc93bd0;
reg  [3:0]              aa9de83;

`endif

`ifdef LW2
reg  [1:0]              fc93bd0;
reg  [1:0]              aa9de83;

`endif

`ifdef LW1
reg                     fc93bd0;
reg                     aa9de83;

`endif
reg  [LANE_WIDTH-1:0]   xwc0add;
reg  [LANE_WIDTH-1:0]   osde498;
reg                     vka8ef2;
reg                     ho47792;
reg                     xweb02f;
reg                     xw5817a;
reg                     tuc0bd3;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
parameter aa5e9b = {(LANE_WIDTH){1'b1}};
parameter kd7a6ca    = {(LANE_WIDTH){1'b0}};

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] zx559aa;
reg aaacd56;
reg vi66ab0;
reg [LANE_WIDTH - 1 : 0] fpaac1a;
reg me560d7;
reg dbb06b8;
reg xy835c6;
reg [LANE_WIDTH - 1 : 0] pfd7199;
reg [LANE_WIDTH - 1 : 0] alc6673;
reg [LANE_WIDTH - 1 : 0] zm99ced;
reg [LANE_WIDTH - 1 : 0] ps73b51;
reg [LANE_WIDTH - 1 : 0] wjed450;
reg [LANE_WIDTH - 1 : 0] al5142c;
reg [LANE_WIDTH - 1 : 0] th50b2d;
reg [LANE_WIDTH - 1 : 0] cb2cb75;
reg [LANE_WIDTH - 1 : 0] lf2dd64;
reg [LANE_WIDTH - 1 : 0] en75937;
reg [LANE_WIDTH - 1 : 0] jp64de8;
reg [LANE_WIDTH - 1 : 0] ph37a35;
reg [LANE_WIDTH - 1 : 0] uve8d72;
reg [LANE_WIDTH - 1 : 0] ls35ca0;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] vxa0707;
reg [LANE_WIDTH - 1 : 0] xl1c1fe;
reg [LANE_WIDTH - 1 : 0] gd7fb8;
reg [LANE_WIDTH - 1 : 0] fafee22;
reg [LANE_WIDTH - 1 : 0] rib8895;
reg [LANE_WIDTH - 1 : 0] vx22558;
reg [LANE_WIDTH - 1 : 0] ux95635;
reg [LANE_WIDTH - 1 : 0] jc58d6c;
reg [LANE_WIDTH - 1 : 0] ng35b14;
reg [LANE_WIDTH - 1 : 0] tu6c51a;
reg [LANE_WIDTH - 1 : 0] zm14699;
reg [LANE_WIDTH - 1 : 0] wy1a658;
reg [LANE_WIDTH - 1 : 0] vk99604;
reg cmcb023;
reg [LANE_WIDTH - 1 : 0] jcc08cb;
reg zm465b;
reg ux232da;
reg xl196d4;
reg [2047:0] ux1852e;
wire [40:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

localparam do14bae = 41,jra5d72 = 32'hfdffd30b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`else


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif














`ifdef LW4



`endif



`ifdef LW2



`endif



`ifdef LW1



`endif







assign wwfa13e     = en75937 & zx559aa;


assign tj84f8a  = ps73b51 & zx559aa;


assign sw3e2bf  = al5142c & zx559aa;


assign mt8afca   = wjed450 & xl8b1db;


assign tufe549  = cb2cb75 & xl8b1db;

assign tuca8fe        = lf2dd64 & zx559aa;


assign coa3f95  = th50b2d & xl8b1db;

assign gd9525c= cm7281c & xl8b1db;

assign kq49729       = ph37a35 & xl8b1db;

assign rvbf2a3    = jp64de8 & xl8b1db;

assign qg5ca44  = ls35ca0 & xl8b1db;

assign yz29101      = uve8d72 & xl8b1db;











always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      aa9de83 <= 0;      fc93bd0  <= 0;   end   else if (lq58edf == fn45f31 || lq58edf == vi7cc7b) begin      


`ifdef LW4
       aa9de83 <= jcc08cb[3] + jcc08cb[2] + jcc08cb[1] + jcc08cb[0];


`endif




`ifdef LW2
       aa9de83 <= jcc08cb[1] + jcc08cb[0];


`endif




`ifdef LW1
       aa9de83 <= jcc08cb[0];


`endif




`ifdef LW4
            case(jcc08cb)         4'b0111, 4'b1011 : begin            fc93bd0 <= 4'b0011;         end         4'b1101, 4'b1110 : begin            fc93bd0 <= 4'b1100;         end         default: begin            fc93bd0 <= 4'b0000;         end      endcase


`endif




`ifdef LW2
                  fc93bd0 <= jcc08cb;


`endif




`ifdef LW1
                  fc93bd0 <= jcc08cb;


`endif
   end   else begin      aa9de83 <= 0;      fc93bd0  <= 0;   end
end

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lq58edf      <= dz7117c;      wy92605     <= {(LANE_WIDTH){1'b0}};      do93028 <= OS_IDLE;      gq98142   <= kd7a6ca;      nec0a11   <= kd7a6ca;      rg73929     <= kd7a6ca;      xl8b1db      <= {(LANE_WIDTH){1'b0}};      wjf24c0  <= 1'b0;      gq9277a   <= 1'b0;      tu422c7    <= 1'b0;      ec508b    <= 1'b0;      jr28458    <= 1'b0;      ba1163b     <= 1'b0;      osde498   <= {(LANE_WIDTH){1'b0}};      xwc0add   <= {(LANE_WIDTH){1'b0}};      ie3bc93  <= 1'b0;      vka8ef2   <= 0;      ho47792<= 0;      xweb02f          <= 1'b0;      xw5817a       <= 1'b0;      tuc0bd3      <= 1'b0;   end   else begin      tu422c7    <= 1'b0;      ec508b    <= 1'b0;      jr28458    <= 1'b0;      ba1163b     <= 1'b0;      wjf24c0  <= 1'b0;      ie3bc93  <= 1'b0;      ho47792<= 0;      xweb02f          <= 1'b0;      xw5817a       <= 1'b0;      tuc0bd3      <= 1'b0;      case(lq58edf)                                    dz7117c: begin            vka8ef2   <= 0;            if (ofd9566 == CONFIG) begin               lq58edf     <= wy88be6;               wy92605    <= zx559aa;               do93028<= OS_T1;               gq98142  <= kd7a6ca;               nec0a11  <= kd7a6ca;               wjf24c0 <= 1'b1;               osde498  <= ~zx559aa;            end            else begin               lq58edf     <= dz7117c;               osde498  <= 0;            end         end                  wy88be6: begin                        xwc0add      <= 0;            gq9277a      <= 1'b0;            if (vi66ab0 == 1'b0 && |pfd7199== 1'b1 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               tu422c7    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if ((|fpaac1a == 1'b1 || vxa0707 == zx559aa) && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               ec508b    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end                                    else if ((|ps73b51 || xy835c6)  && ~wjf24c0) begin                  lq58edf     <= fn45f31;                  wy92605    <= xl1c1fe;                  do93028<= OS_T1;                  gq98142  <= aa5e9b;                  nec0a11  <= kd7a6ca;                  wjf24c0 <= 1'b1;                        end            else if (me560d7 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= wy88be6;            end         end                  fn45f31: begin                                                       if ((|ps73b51 || xy835c6)  && ~wjf24c0) begin


`ifdef LW4
                     if(xl1c1fe == 4'b1111)                              xwc0add  <= 4'b1111;                     else if(xl1c1fe == 4'b1100)                         xwc0add  <= 4'b1100;                                          else                                                         xwc0add  <= 4'b1000;


`else
                     xwc0add  <= xl1c1fe;


`endif
                  xweb02f         <= 1'b1;                        end            xw5817a  <= zm465b;            tuc0bd3 <= ux232da;            


`ifdef LW4
             case(aa9de83)               4'd4: begin                  rg73929    <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               4'd1,4'd2: begin                  rg73929    <= jcc08cb;                  xl8b1db     <= jcc08cb;                  gq9277a  <= 1'b1;               end               4'd3: begin                  rg73929    <= fc93bd0;                  xl8b1db     <= fc93bd0;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

             


`ifdef LW2
            case(aa9de83)               2'd2: begin                  rg73929    <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               2'd1: begin                  rg73929    <= jcc08cb;                  xl8b1db     <= jcc08cb;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(aa9de83)               1'b1: begin                  rg73929    <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            if ((cmcb023 && xl196d4) && (wjed450 & vk99604) == vk99604 && ~wjf24c0) begin               lq58edf      <= tw2f98f;               gq98142   <= vk99604;               nec0a11   <= vk99604;               wjf24c0  <= 1'b1;            end                        else if ((dbb06b8 || zm99ced == zx559aa) && ~wjf24c0 || (!cmcb023 && xl196d4)) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= fn45f31;            end         end                           tw2f98f: begin                        xwc0add      <= 0;            gq9277a      <= 1'b0;                        if ((zm99ced == zx559aa || dbb06b8) && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end                        else if (|wjed450 == 1'b1 && ~wjf24c0) begin               lq58edf      <= vi7cc7b;               wjf24c0  <= 1'b1;            end            else if (|vx22558 == 1'b1 && ~wjf24c0) begin               lq58edf      <= vi7cc7b;               wjf24c0  <= 1'b1;            end            else begin               lq58edf      <= tw2f98f;            end         end                  vi7cc7b: begin                         if (|wjed450  && ~wjf24c0) begin               if (wjed450 == xl8b1db | xy835c6) begin                  xwc0add  <= fafee22;                  xweb02f         <= 1'b1;               end            end            xw5817a  <= zm465b;            tuc0bd3 <= ux232da;            


`ifdef LW4
            case(aa9de83)               4'd4: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               4'd1,4'd2: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  gq9277a  <= 1'b1;               end               4'd3: begin                  gq98142  <= fc93bd0;                  nec0a11  <= fc93bd0;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(aa9de83)               2'd2: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               2'd1: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(aa9de83)               1'b1: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

                        if (ux95635 == xl8b1db && (cmcb023 && xl196d4) && ~wjf24c0) begin               lq58edf      <= vve63db;               wy92605     <= xl8b1db;               do93028 <= OS_T2;               wjf24c0  <= 1'b1;               osde498   <= ~xl8b1db;               vka8ef2   <= 1'b1;            end                        else if (|gd7fb8 && (cmcb023 && xl196d4) && ~wjf24c0) begin               lq58edf      <= tw2f98f;               wy92605     <= zx559aa;               do93028 <= OS_T1;               wjf24c0  <= 1'b1;               xl8b1db      <= nec0a11;            end                        else if (zm99ced == zx559aa && ~wjf24c0 || (!cmcb023 && xl196d4)) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if (dbb06b8 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= vi7cc7b;            end         end                  vve63db: begin            ho47792 <= ((rib8895 == xl8b1db) || aaacd56) ? 1'b1: 1'b0;            if (jc58d6c == xl8b1db  && wy1a658 == xl8b1db && ng35b14 == xl8b1db && ~wjf24c0) begin               lq58edf      <= co31ede;               wy92605     <= xl8b1db;               do93028 <= OS_IDLE;               wjf24c0  <= 1'b1;               ie3bc93  <= 1'b1;            end            else if (dbb06b8 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};               ie3bc93  <= 1'b1;            end            else begin               lq58edf      <= vve63db;            end         end                  co31ede: begin            if (tu6c51a == xl8b1db  && zm14699 == xl8b1db && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               ba1163b     <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if (dbb06b8 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= co31ede;            end         end                  ux8f6f1: begin            vka8ef2   <= 1'b0;            if (ofd9566 != CONFIG) begin               lq58edf   <= dz7117c;            end            else begin               lq58edf   <= ux8f6f1;            end         end         default: begin            lq58edf   <= dz7117c;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};zx559aa<={vvc278d>>1,xjc2975[1]};aaacd56<=xjc2975[2];vi66ab0<=xjc2975[3];fpaac1a<={hl_gto_lbk>>1,xjc2975[4]};me560d7<=xjc2975[5];dbb06b8<=xjc2975[6];xy835c6<=xjc2975[7];pfd7199<={nefe66c>>1,xjc2975[8]};alc6673<={jpf3363>>1,xjc2975[9]};zm99ced<={xy99b1f>>1,xjc2975[10]};ps73b51<={rtcd8fa>>1,xjc2975[11]};wjed450<={ps6c7d7>>1,xjc2975[12]};al5142c<={ps63ebb>>1,xjc2975[13]};th50b2d<={ks1f5db>>1,xjc2975[14]};cb2cb75<={osfaed8>>1,xjc2975[15]};lf2dd64<={nrd76c0>>1,xjc2975[16]};en75937<={kfbb606>>1,xjc2975[17]};jp64de8<={icdb035>>1,xjc2975[18]};ph37a35<={bld81a8>>1,xjc2975[19]};uve8d72<={zkc0d47>>1,xjc2975[20]};ls35ca0<={zz6a3b>>1,xjc2975[21]};cm7281c<={asb_dskew_rx>>1,xjc2975[22]};vxa0707<={wwfa13e>>1,xjc2975[23]};xl1c1fe<={tj84f8a>>1,xjc2975[24]};gd7fb8<={sw3e2bf>>1,xjc2975[25]};fafee22<={mt8afca>>1,xjc2975[26]};rib8895<={rvbf2a3>>1,xjc2975[27]};vx22558<={tuca8fe>>1,xjc2975[28]};ux95635<={coa3f95>>1,xjc2975[29]};jc58d6c<={tufe549>>1,xjc2975[30]};ng35b14<={gd9525c>>1,xjc2975[31]};tu6c51a<={kq49729>>1,xjc2975[32]};zm14699<={qg5ca44>>1,xjc2975[33]};wy1a658<={yz29101>>1,xjc2975[34]};vk99604<={rg73929>>1,xjc2975[35]};cmcb023<=xjc2975[36];jcc08cb<={xwc0add>>1,xjc2975[37]};zm465b<=xjc2975[38];ux232da<=xjc2975[39];xl196d4<=xjc2975[40];end
always@* begin ux1852e[2047]<=vvc278d[0];ux1852e[2046]<=hl_disable_scr;ux1852e[2044]<=hl_gto_dis;ux1852e[2040]<=hl_gto_lbk[0];ux1852e[2032]<=ec8dff3;ux1852e[2016]<=qt6ff99;ux1852e[1985]<=yx7fccd;ux1852e[1922]<=nefe66c[0];ux1852e[1796]<=jpf3363[0];ux1852e[1732]<=coa3f95[0];ux1852e[1572]<=kq49729[0];ux1852e[1544]<=xy99b1f[0];ux1852e[1457]<=rvbf2a3[0];ux1852e[1417]<=tufe549[0];ux1852e[1302]<=zz6a3b[0];ux1852e[1164]<=xwc0add[0];ux1852e[1124]<=tuc0bd3;ux1852e[1115]<=wwfa13e[0];ux1852e[1105]<=kfbb606[0];ux1852e[1096]<=qg5ca44[0];ux1852e[1041]<=rtcd8fa[0];ux1852e[1023]<=kf184f1[0];ux1852e[866]<=tuca8fe[0];ux1852e[786]<=gd9525c[0];ux1852e[728]<=mt8afca[0];ux1852e[651]<=zkc0d47[0];ux1852e[582]<=gq9277a;ux1852e[562]<=xw5817a;ux1852e[557]<=asb_dskew_rx[0];ux1852e[552]<=nrd76c0[0];ux1852e[364]<=sw3e2bf[0];ux1852e[325]<=bld81a8[0];ux1852e[291]<=rg73929[0];ux1852e[281]<=xweb02f;ux1852e[276]<=osfaed8[0];ux1852e[182]<=tj84f8a[0];ux1852e[162]<=icdb035[0];ux1852e[145]<=yz29101[0];ux1852e[138]<=ks1f5db[0];ux1852e[69]<=ps63ebb[0];ux1852e[34]<=ps6c7d7[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






















































































































`timescale 1 ns / 100 ps
module pcie_x1_top_mg15237 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    vvc278d,          
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_lbk,         
    ec8dff3,      
    qt6ff99,       
    yx7fccd,     
    jpf3363,           
    xy99b1f,     
    ng2afcb,     
    ps6c7d7,      
    ps63ebb,    
    nrf96df,     
    osfaed8,     
    kfbb606,        
    icdb035,       
    bld81a8,          
    zkc0d47,        
    zz6a3b,    
    asb_dskew_rx,       
    
    
    vka8ef2,        
    ho47792,     
    ie3bc93,       
    osde498,        
    wjf24c0,       
    wy92605,          
    do93028,      
    gq98142,        
    nec0a11,        
    ec508b,         
    jr28458,         
    tu422c7,         
    ba1163b,          
    xl8b1db,           
    lq58edf            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam dz7117c           = 3'd0 ;
localparam wy88be6  = 3'd1 ;
localparam fn45f31 = 3'd2 ;
localparam tw2f98f  = 3'd3 ;
localparam vi7cc7b   = 3'd4 ;
localparam vve63db       = 3'd5 ;
localparam co31ede           = 3'd6 ;
localparam ux8f6f1           = 3'd7 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  vvc278d;
input                     hl_disable_scr;
input                     hl_gto_dis;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input                     ec8dff3;
input                     qt6ff99;
input                     yx7fccd;
input   [LANE_WIDTH-1:0]  kfbb606;
input   [LANE_WIDTH-1:0]  icdb035;
input   [LANE_WIDTH-1:0]  jpf3363;
input   [LANE_WIDTH-1:0]  xy99b1f;
input   [LANE_WIDTH-1:0]  ng2afcb;
input   [LANE_WIDTH-1:0]  ps6c7d7;
input   [LANE_WIDTH-1:0]  ps63ebb;
input   [LANE_WIDTH-1:0]  nrf96df;
input   [LANE_WIDTH-1:0]  osfaed8;
input   [LANE_WIDTH-1:0]  bld81a8;
input   [LANE_WIDTH-1:0]  zkc0d47;
input   [LANE_WIDTH-1:0]  zz6a3b;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    vka8ef2;
output                    ho47792;
output                    ie3bc93;
output  [LANE_WIDTH-1:0]  osde498;
output                    wjf24c0;
output  [LANE_WIDTH-1:0]  wy92605;
output  [OS_WIDTH -1:0]   do93028;
output  [LANE_WIDTH-1:0]  gq98142;
output  [LANE_WIDTH-1:0]  nec0a11;
output                    ec508b;
output                    jr28458;
output                    tu422c7;
output                    ba1163b;
output  [LANE_WIDTH-1:0]  xl8b1db;
output  [CFGSM_WIDTH:0]   lq58edf;
wire [LANE_WIDTH-1:0]   wwfa13e;
wire [LANE_WIDTH-1:0]   lf2879f;
wire [LANE_WIDTH-1:0]   sw3e2bf;
wire [LANE_WIDTH-1:0]   qv9fe16;
wire [LANE_WIDTH-1:0]   mt8afca;
wire [LANE_WIDTH-1:0]   bn16a66;
wire [LANE_WIDTH-1:0]   tufe549;
wire [LANE_WIDTH-1:0]   rvbf2a3;
wire [LANE_WIDTH-1:0]   gd9525c;
wire [LANE_WIDTH-1:0]   kq49729;
wire [LANE_WIDTH-1:0]   qg5ca44;
wire [LANE_WIDTH-1:0]   yz29101;
reg                     ie3bc93;
reg                     wjf24c0;
reg  [CFGSM_WIDTH:0]    lq58edf;
reg  [LANE_WIDTH-1:0]   wy92605;
reg  [OS_WIDTH -1:0]    do93028;
reg  [LANE_WIDTH-1:0]   gq98142;
reg  [LANE_WIDTH-1:0]   nec0a11;
reg                     ec508b;
reg                     jr28458;
reg                     tu422c7;
reg                     ba1163b;
reg  [LANE_WIDTH-1:0]   xl8b1db;
reg                     gq9277a;

`ifdef LW4
reg  [3:0]              fc93bd0;
reg  [3:0]              aa9de83;

`endif

`ifdef LW2
reg  [1:0]              fc93bd0;
reg  [1:0]              aa9de83;

`endif

`ifdef LW1
reg                     fc93bd0;
reg                     aa9de83;

`endif
reg  [LANE_WIDTH-1:0]   xwc0add;
reg  [LANE_WIDTH-1:0]   osde498;
reg                     vka8ef2;
reg                     ho47792;
reg                     xweb02f;
reg                     xw5817a;
reg                     tuc0bd3;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
parameter aa5e9b= {(LANE_WIDTH){1'b1}};
parameter kd7a6ca   = {(LANE_WIDTH){1'b0}};

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] zx559aa;
reg aaacd56;
reg vi66ab0;
reg [LANE_WIDTH - 1 : 0] fpaac1a;
reg me560d7;
reg dbb06b8;
reg xy835c6;
reg [LANE_WIDTH - 1 : 0] alc6673;
reg [LANE_WIDTH - 1 : 0] zm99ced;
reg [LANE_WIDTH - 1 : 0] ou92393;
reg [LANE_WIDTH - 1 : 0] wjed450;
reg [LANE_WIDTH - 1 : 0] al5142c;
reg [LANE_WIDTH - 1 : 0] shc6e50;
reg [LANE_WIDTH - 1 : 0] cb2cb75;
reg [LANE_WIDTH - 1 : 0] en75937;
reg [LANE_WIDTH - 1 : 0] jp64de8;
reg [LANE_WIDTH - 1 : 0] ph37a35;
reg [LANE_WIDTH - 1 : 0] uve8d72;
reg [LANE_WIDTH - 1 : 0] ls35ca0;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] vxa0707;
reg [LANE_WIDTH - 1 : 0] co34395;
reg [LANE_WIDTH - 1 : 0] gd7fb8;
reg [LANE_WIDTH - 1 : 0] kf95118;
reg [LANE_WIDTH - 1 : 0] fafee22;
reg [LANE_WIDTH - 1 : 0] wl18aa4;
reg [LANE_WIDTH - 1 : 0] jc58d6c;
reg [LANE_WIDTH - 1 : 0] rib8895;
reg [LANE_WIDTH - 1 : 0] ng35b14;
reg [LANE_WIDTH - 1 : 0] tu6c51a;
reg [LANE_WIDTH - 1 : 0] zm14699;
reg [LANE_WIDTH - 1 : 0] wy1a658;
reg cmcb023;
reg [LANE_WIDTH - 1 : 0] jcc08cb;
reg zm465b;
reg ux232da;
reg xl196d4;
reg [2047:0] ux1852e;
wire [37:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

localparam do14bae = 38,jra5d72 = 32'hfdffca8b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`else


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif














`ifdef LW4



`endif



`ifdef LW2



`endif



`ifdef LW1



`endif







assign wwfa13e     = en75937 & zx559aa;


assign lf2879f  = ou92393 & zx559aa;


assign sw3e2bf = al5142c & zx559aa;


assign qv9fe16  = shc6e50 & zx559aa;
assign mt8afca   = wjed450 & zx559aa;


assign tufe549  = cb2cb75 & xl8b1db;

assign gd9525c= cm7281c & xl8b1db;

assign kq49729       = ph37a35 & xl8b1db;

assign rvbf2a3    = jp64de8 & xl8b1db;

assign qg5ca44  = ls35ca0 & xl8b1db;

assign yz29101      = uve8d72 & xl8b1db;











always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      aa9de83 <= 0;      fc93bd0  <= 0;   end   else if (lq58edf == fn45f31 || lq58edf == vi7cc7b) begin      


`ifdef LW4
      aa9de83 <= jcc08cb[3] + jcc08cb[2] + jcc08cb[1] + jcc08cb[0];


`endif




`ifdef LW2
      aa9de83 <= jcc08cb[1] + jcc08cb[0];


`endif




`ifdef LW1
      aa9de83 <= jcc08cb[0];


`endif




`ifdef LW4
            case(jcc08cb)         4'b0111, 4'b1011 : begin            fc93bd0 <= 4'b0011;         end         4'b1101, 4'b1110 : begin            fc93bd0 <= 4'b1100;         end         default: begin            fc93bd0 <= 4'b0000;         end      endcase


`endif




`ifdef LW2
                  fc93bd0 <= jcc08cb;


`endif




`ifdef LW1
                  fc93bd0 <= jcc08cb;


`endif
   end   else begin      aa9de83 <= 0;      fc93bd0  <= 0;   end
end

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lq58edf      <= dz7117c;      wy92605     <= {(LANE_WIDTH){1'b0}};      do93028 <= OS_IDLE;      gq98142   <= kd7a6ca;      nec0a11   <= kd7a6ca;      xl8b1db      <= {(LANE_WIDTH){1'b0}};      wjf24c0  <= 1'b0;      gq9277a   <= 1'b0;      tu422c7    <= 1'b0;      ec508b    <= 1'b0;      jr28458    <= 1'b0;      ba1163b     <= 1'b0;      osde498   <= {(LANE_WIDTH){1'b0}};      xwc0add   <= {(LANE_WIDTH){1'b0}};      ie3bc93  <= 1'b0;      vka8ef2   <= 0;      ho47792<= 0;      xweb02f          <= 1'b0;      xw5817a       <= 1'b0;      tuc0bd3      <= 1'b0;   end   else begin      tu422c7    <= 1'b0;      ec508b    <= 1'b0;      jr28458    <= 1'b0;      ba1163b     <= 1'b0;      wjf24c0  <= 1'b0;      ie3bc93  <= 1'b0;      ho47792<= 0;      xweb02f          <= 1'b0;      xw5817a       <= 1'b0;      tuc0bd3      <= 1'b0;      case(lq58edf)                                    dz7117c: begin            vka8ef2     <= 0;            if (ofd9566 == CONFIG) begin               lq58edf     <= wy88be6;               wy92605    <= zx559aa;               do93028<= OS_T1;               gq98142  <= aa5e9b;               nec0a11  <= kd7a6ca;               wjf24c0 <= 1'b1;               osde498  <= ~zx559aa;            end            else begin               lq58edf     <= dz7117c;               osde498  <= 0;            end         end                  wy88be6: begin                        xwc0add      <= 0;            gq9277a      <= 1'b0;            if (vi66ab0 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               tu422c7    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if ((|fpaac1a == 1'b1 || vxa0707 == zx559aa) && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               ec508b    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if (|co34395 == 1'b1 && ~wjf24c0) begin               lq58edf      <= fn45f31;               wy92605     <= zx559aa;               do93028 <= OS_T1;               gq98142   <= aa5e9b;               nec0a11   <= aa5e9b;               wjf24c0  <= 1'b1;            end            else if (me560d7 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= wy88be6;            end         end                  fn45f31: begin                    if (|ou92393 && ~wjf24c0) begin       if (ou92393 == zx559aa | xy835c6) begin


`ifdef LW4
                     if(co34395 == 4'b1111)                              xwc0add  <= 4'b1111;             else if(co34395 == 4'b1100)                         xwc0add  <= 4'b1100;                     else if(co34395[3] == 1'b1)                         xwc0add  <= 4'b1000;


`else
                     xwc0add  <= co34395;


`endif
                  xweb02f         <= 1'b1;               end            end            xw5817a  <= zm465b;            tuc0bd3 <= ux232da;            


`ifdef LW4
            case(aa9de83)               4'd4: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               4'd1,4'd2: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  xl8b1db     <= jcc08cb;                  gq9277a  <= 1'b1;               end               4'd3: begin                  gq98142  <= fc93bd0;                  nec0a11  <= fc93bd0;                  xl8b1db     <= fc93bd0;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(aa9de83)               2'd2: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               2'd1: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  xl8b1db     <= jcc08cb;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(aa9de83)               1'b1: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  xl8b1db     <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            if ((cmcb023 && xl196d4) && ~wjf24c0) begin               lq58edf      <= tw2f98f;               wjf24c0  <= 1'b1;            end                        else if ((dbb06b8 || zm99ced == zx559aa) && ~wjf24c0 || (!cmcb023 && xl196d4)) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= fn45f31;            end         end                           tw2f98f: begin                        xwc0add      <= 0;            gq9277a      <= 1'b0;                        if ((zm99ced == zx559aa || dbb06b8) && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if (|fafee22 == 1'b1 && ~wjf24c0) begin               lq58edf      <= vi7cc7b;               wjf24c0  <= 1'b1;            end            else begin               lq58edf      <= tw2f98f;            end         end                           vi7cc7b: begin                    if (|shc6e50 && ~wjf24c0) begin       if (shc6e50 == zx559aa | xy835c6) begin                  xwc0add  <= kf95118;                  xweb02f         <= 1'b1;               end            end            xw5817a  <= zm465b;            tuc0bd3 <= ux232da;            


`ifdef LW4
            case(aa9de83)               4'd4: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               4'd1,4'd2: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  gq9277a  <= 1'b1;               end               4'd3: begin                  gq98142  <= fc93bd0;                  nec0a11  <= fc93bd0;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(aa9de83)               2'd2: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               2'd1: begin                  gq98142  <= jcc08cb;                  nec0a11  <= jcc08cb;                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(aa9de83)               1'b1: begin                  gq98142  <= {(LANE_WIDTH){1'b1}};                  nec0a11  <= {(LANE_WIDTH){1'b1}};                  gq9277a  <= 1'b1;               end               default: begin                  gq9277a  <= 1'b0;               end            endcase


`endif

                        if (kf95118 == xl8b1db && (cmcb023 && xl196d4) && ~wjf24c0) begin               lq58edf      <= vve63db;               wy92605     <= xl8b1db;               do93028 <= OS_T2;               wjf24c0  <= 1'b1;               osde498   <= ~xl8b1db;               vka8ef2   <= 1'b1;            end                        else if (|gd7fb8 && (cmcb023 && xl196d4) && ~wjf24c0) begin               lq58edf      <= tw2f98f;               wy92605     <= zx559aa;               do93028 <= OS_T1;               wjf24c0  <= 1'b1;               xl8b1db      <= nec0a11;            end                        else if (zm99ced == zx559aa && ~wjf24c0 || (!cmcb023 && xl196d4)) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= vi7cc7b;            end         end                  vve63db: begin            ho47792 <= ((rib8895 == xl8b1db) || aaacd56) ? 1'b1: 1'b0;            if (jc58d6c == xl8b1db  && wy1a658 == xl8b1db && ng35b14 == xl8b1db && ~wjf24c0) begin               lq58edf      <= co31ede;               wy92605     <= xl8b1db;               do93028 <= OS_IDLE;               wjf24c0  <= 1'b1;               ie3bc93  <= 1'b1;            end            else if (dbb06b8 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};               ie3bc93  <= 1'b1;            end            else begin               lq58edf      <= vve63db;            end         end                  co31ede: begin            if (tu6c51a == xl8b1db  && zm14699 == xl8b1db && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               ba1163b     <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else if (dbb06b8 && ~wjf24c0) begin               lq58edf      <= ux8f6f1;               jr28458    <= 1'b1;               wy92605     <= {(LANE_WIDTH){1'b0}};            end            else begin               lq58edf      <= co31ede;            end         end                  ux8f6f1: begin            vka8ef2   <= 1'b0;            if (ofd9566 != CONFIG) begin               lq58edf   <= dz7117c;            end            else begin               lq58edf   <= ux8f6f1;            end         end         default: begin            lq58edf   <= dz7117c;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};zx559aa<={vvc278d>>1,xjc2975[1]};aaacd56<=xjc2975[2];vi66ab0<=xjc2975[3];fpaac1a<={hl_gto_lbk>>1,xjc2975[4]};me560d7<=xjc2975[5];dbb06b8<=xjc2975[6];xy835c6<=xjc2975[7];alc6673<={jpf3363>>1,xjc2975[8]};zm99ced<={xy99b1f>>1,xjc2975[9]};ou92393<={ng2afcb>>1,xjc2975[10]};wjed450<={ps6c7d7>>1,xjc2975[11]};al5142c<={ps63ebb>>1,xjc2975[12]};shc6e50<={nrf96df>>1,xjc2975[13]};cb2cb75<={osfaed8>>1,xjc2975[14]};en75937<={kfbb606>>1,xjc2975[15]};jp64de8<={icdb035>>1,xjc2975[16]};ph37a35<={bld81a8>>1,xjc2975[17]};uve8d72<={zkc0d47>>1,xjc2975[18]};ls35ca0<={zz6a3b>>1,xjc2975[19]};cm7281c<={asb_dskew_rx>>1,xjc2975[20]};vxa0707<={wwfa13e>>1,xjc2975[21]};co34395<={lf2879f>>1,xjc2975[22]};gd7fb8<={sw3e2bf>>1,xjc2975[23]};kf95118<={qv9fe16>>1,xjc2975[24]};fafee22<={mt8afca>>1,xjc2975[25]};wl18aa4<={bn16a66>>1,xjc2975[26]};jc58d6c<={tufe549>>1,xjc2975[27]};rib8895<={rvbf2a3>>1,xjc2975[28]};ng35b14<={gd9525c>>1,xjc2975[29]};tu6c51a<={kq49729>>1,xjc2975[30]};zm14699<={qg5ca44>>1,xjc2975[31]};wy1a658<={yz29101>>1,xjc2975[32]};cmcb023<=xjc2975[33];jcc08cb<={xwc0add>>1,xjc2975[34]};zm465b<=xjc2975[35];ux232da<=xjc2975[36];xl196d4<=xjc2975[37];end
always@* begin ux1852e[2047]<=vvc278d[0];ux1852e[2046]<=hl_disable_scr;ux1852e[2044]<=hl_gto_dis;ux1852e[2040]<=hl_gto_lbk[0];ux1852e[2032]<=ec8dff3;ux1852e[2017]<=qt6ff99;ux1852e[1987]<=yx7fccd;ux1852e[1926]<=jpf3363[0];ux1852e[1805]<=xweb02f;ux1852e[1804]<=xy99b1f[0];ux1852e[1803]<=sw3e2bf[0];ux1852e[1761]<=yz29101[0];ux1852e[1562]<=xw5817a;ux1852e[1560]<=ng2afcb[0];ux1852e[1558]<=qv9fe16[0];ux1852e[1550]<=icdb035[0];ux1852e[1475]<=gq9277a;ux1852e[1464]<=kq49729[0];ux1852e[1076]<=tuc0bd3;ux1852e[1072]<=ps6c7d7[0];ux1852e[1069]<=mt8afca[0];ux1852e[1052]<=bld81a8[0];ux1852e[1023]<=kf184f1[0];ux1852e[902]<=xwc0add[0];ux1852e[901]<=lf2879f[0];ux1852e[880]<=qg5ca44[0];ux1852e[775]<=kfbb606[0];ux1852e[732]<=gd9525c[0];ux1852e[450]<=wwfa13e[0];ux1852e[387]<=osfaed8[0];ux1852e[366]<=rvbf2a3[0];ux1852e[225]<=asb_dskew_rx[0];ux1852e[193]<=nrf96df[0];ux1852e[183]<=tufe549[0];ux1852e[112]<=zz6a3b[0];ux1852e[96]<=ps63ebb[0];ux1852e[91]<=bn16a66[0];ux1852e[56]<=zkc0d47[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule












































































































`timescale 1 ns / 100 ps
module pcie_x1_top_eca6f8c 
   (
    
    sys_clk,                    
    rst_n,                      
    normal_time,                

    kf184f1,                 
    bl61d5a,              
    asb_detdone_rx,             
    asb_detres_rx,              
    asb_eidle_rx,               


    
    zx5aca4,               
    kdd6527,               
    lsb293c,              
    lf949e2,                
    vvc278d,                  
    xl278b4                   
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam db97fd     = 3'd0 ;
localparam en4bfee    = 3'd1 ;
localparam nr5ff74   = 3'd2 ;
localparam qgffba7  = 3'd3 ;
localparam czfdd38 = 3'd4 ;
localparam xwee9c5   = 3'd5 ;
localparam dz74e2b  = 3'd6 ;
localparam baa715f     = 3'd7 ;
input                    sys_clk;
input                    rst_n;
input                    normal_time;
input   [MSM_WIDTH:0]    kf184f1;
input                    bl61d5a;
input   [LANE_WIDTH-1:0] asb_detdone_rx;
input   [LANE_WIDTH-1:0] asb_detres_rx;
input   [LANE_WIDTH-1:0] asb_eidle_rx;
output  [LANE_WIDTH-1:0] zx5aca4;
output  [LANE_WIDTH-1:0] kdd6527;
output                   lsb293c;
output                   lf949e2;
output  [LANE_WIDTH-1:0] vvc278d;
output  [DSM_WIDTH:0]    xl278b4;
reg [DSM_WIDTH:0]      xl278b4;
reg [4:0]              ouf92c;
reg [LANE_WIDTH-1:0]   zx5aca4;
reg [LANE_WIDTH-1:0]   kdd6527;
reg                    lsb293c;
reg                    lf949e2;
reg [LANE_WIDTH-1:0]   vvc278d;
reg  [15*8:0] ep95bc7;
reg puade3c;
reg [MSM_WIDTH : 0] ofd9566;
reg blc78a1;
reg [LANE_WIDTH - 1 : 0] gbe2874;
reg [LANE_WIDTH - 1 : 0] uxa1d2b;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [4 : 0] bna5717;
reg [15 * 8 : 0] co2b8bf;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 8,jra5d72 = 32'hfdffe30b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xl278b4     <= db97fd;      zx5aca4  <= {(LANE_WIDTH){1'b1}};      lsb293c <= 1'b0;      kdd6527  <= {(LANE_WIDTH){1'b0}};      vvc278d     <= {(LANE_WIDTH){1'b0}};      lf949e2   <= 1'b0;   end   else begin      lsb293c <= 1'b0;      kdd6527  <= {(LANE_WIDTH){1'b0}};      lf949e2   <= 1'b0;      case(xl278b4)                  db97fd: begin            if (ofd9566 == DETECT) begin               xl278b4    <= en4bfee;               zx5aca4 <= {(LANE_WIDTH){1'b1}};               lsb293c<= 1'b1;               vvc278d    <= {(LANE_WIDTH){1'b0}};            end            else begin               xl278b4    <= db97fd;                           end         end                  en4bfee: begin    if ((blc78a1 == 1'b1 || ((&ks3130b == 1'b0) & ~puade3c)) && ~lsb293c) begin                           xl278b4    <= nr5ff74;               kdd6527 <= {(LANE_WIDTH){1'b1}};            end            else begin               xl278b4    <= en4bfee;            end         end                  nr5ff74: begin            if (bna5717 == 5'd15) begin               xl278b4    <= qgffba7;               kdd6527 <= {(LANE_WIDTH){1'b0}};            end            else begin               xl278b4    <= nr5ff74;               kdd6527 <= {(LANE_WIDTH){1'b1}};            end         end                  qgffba7: begin            if (gbe2874 =={(LANE_WIDTH){1'b1}}) begin               vvc278d  <= uxa1d2b;               case(uxa1d2b)                  {(LANE_WIDTH){1'b1}} :  begin                       xl278b4    <= baa715f;                     lf949e2  <= 1'b1;                     zx5aca4 <= {(LANE_WIDTH){1'b0}};                  end                  {(LANE_WIDTH){1'b0}} :  begin                       xl278b4    <= en4bfee;                     lsb293c<= 1'b1;                  end                  default: begin                                       xl278b4    <= czfdd38;                     lsb293c<= 1'b1;                  end               endcase            end            else begin               xl278b4   <= qgffba7;            end         end                  czfdd38: begin            if (blc78a1 == 1'b1 && ~lsb293c) begin               xl278b4    <= xwee9c5;               kdd6527 <= {(LANE_WIDTH){1'b1}};            end            else begin               xl278b4    <= czfdd38;            end         end                  xwee9c5: begin            if (bna5717 == 5'd15) begin               xl278b4    <= dz74e2b;               kdd6527 <= {(LANE_WIDTH){1'b0}};            end            else begin               xl278b4    <= xwee9c5;               kdd6527 <= {(LANE_WIDTH){1'b1}};            end         end                  dz74e2b: begin            if (gbe2874 =={(LANE_WIDTH){1'b1}}) begin               if (uxa1d2b == vvc278d) begin                  xl278b4    <= baa715f;                  lf949e2  <= 1'b1;                  zx5aca4 <= ~vvc278d;               end               else begin                  xl278b4    <= en4bfee;                  lsb293c<= 1'b1;               end            end            else begin               xl278b4       <= dz74e2b;            end         end         baa715f: begin            if (ofd9566 != DETECT) begin               xl278b4    <= db97fd;            end            else begin               xl278b4    <= baa715f;            end         end         default: begin            xl278b4   <= db97fd;         end      endcase   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ouf92c <= 5'd0;   else if ((xl278b4 ==nr5ff74) || (xl278b4 ==xwee9c5))      ouf92c <= bna5717 + 5'd1;   else      ouf92c <= 5'd0;
end



always @ (xl278b4)
begin   case(xl278b4)      db97fd     : ep95bc7 = "DET_WAIT";      en4bfee    : ep95bc7 = "DET_Q";      nr5ff74   : ep95bc7 = "DET_GODET1";      qgffba7  : ep95bc7 = "DET_ACTIVE1";      czfdd38 : ep95bc7 = "DET_WAIT12MS";      xwee9c5   : ep95bc7 = "DET_GODET2";      dz74e2b  : ep95bc7 = "DET_ACTIVE2";      baa715f     : ep95bc7 = "DET_EXIT";      default      : ep95bc7 = "ERROR";   endcase
end

always@* begin puade3c<=xjc2975[0];ofd9566<={kf184f1>>1,xjc2975[1]};blc78a1<=xjc2975[2];gbe2874<={asb_detdone_rx>>1,xjc2975[3]};uxa1d2b<={asb_detres_rx>>1,xjc2975[4]};ks3130b<={asb_eidle_rx>>1,xjc2975[5]};bna5717<={ouf92c>>1,xjc2975[6]};co2b8bf<={ep95bc7>>1,xjc2975[7]};end
always@* begin ux1852e[2047]<=kf184f1[0];ux1852e[2046]<=bl61d5a;ux1852e[2044]<=asb_detdone_rx[0];ux1852e[2040]<=asb_detres_rx[0];ux1852e[2032]<=asb_eidle_rx[0];ux1852e[2016]<=ouf92c[0];ux1852e[1985]<=ep95bc7[0];ux1852e[1023]<=normal_time;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module pcie_x1_top_xjdd16e 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    asb_eidle_rx,       
    yk779f7,      
    iebcfb8,      
    qt6ff99,       
    hl_gto_det,         
    off7068,          
    
    
    lsb8345,        
    mec1a2a,          
    yzd151,      
    os68a8c,       
    fn45460,         
    pu2a306,      
    mr51832            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam eca9efa    = 3'd0 ;
localparam dz4f7d0     = 3'd1 ;
localparam jp7be87 = 3'd2 ;
localparam xwdf43e = 3'd3 ;
localparam osfa1f2    = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     yk779f7;
input                     iebcfb8;
input                     qt6ff99;
input                     hl_gto_det;
input   [LANE_WIDTH-1:0]  off7068;
output  [LANE_WIDTH-1:0]  lsb8345;
output  [LANE_WIDTH-1:0]  mec1a2a;
output  [OS_WIDTH -1:0]   yzd151;
output                    os68a8c;
output                    fn45460;
output                    pu2a306;
output  [DISM_WIDTH:0]    mr51832;
reg  [DISM_WIDTH:0]     mr51832;
reg  [LANE_WIDTH-1:0]   lsb8345;
reg                     os68a8c;
reg                     fn45460;
reg  [LANE_WIDTH-1:0]   mec1a2a;
reg  [OS_WIDTH -1:0]    yzd151;
reg                     pu2a306;
reg                     mt1815d;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg wjed60a;
reg vv6b055;
reg dbb06b8;
reg uic1573;
reg [LANE_WIDTH - 1 : 0] nr55cc0;
reg kfae606;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 8,jra5d72 = 32'hfdffd28b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mr51832      <= eca9efa;      mec1a2a     <= {(LANE_WIDTH){1'b0}};      lsb8345   <= {(LANE_WIDTH){1'b0}};      yzd151 <= OS_T1;      os68a8c  <= 1'b0;      fn45460    <= 1'b0;      pu2a306 <= 1'b0;      mt1815d     <= 1'b0;   end   else begin      os68a8c  <= 1'b0;      fn45460    <= 1'b0;      pu2a306 <= 1'b0;      lsb8345   <= {(LANE_WIDTH){1'b0}};      case(mr51832)                  eca9efa: begin            mt1815d     <= 1'b0;            if (ofd9566 == DISABLED) begin               mr51832     <= dz4f7d0;               os68a8c <= 1'b1;               mec1a2a    <= {(LANE_WIDTH){1'b1}};               yzd151<= OS_T1;            end            else begin               mr51832     <= eca9efa;            end         end                  dz4f7d0: begin            mt1815d       <= (|nr55cc0== 1'b1) ? 1'b1 : kfae606;            if (vv6b055 && ~os68a8c) begin               mr51832     <= jp7be87;               mec1a2a    <= {(LANE_WIDTH){1'b1}};               yzd151<= OS_EIDLE;            end            else begin               mr51832     <= dz4f7d0;            end         end         jp7be87: begin                        mt1815d    <= (|nr55cc0== 1'b1) ? 1'b1 : kfae606;            mr51832     <= xwdf43e;         end                  xwdf43e: begin            mt1815d    <= (|nr55cc0== 1'b1) ? 1'b1 : kfae606;            mec1a2a    <= {(LANE_WIDTH){1'b0}};            lsb8345  <= {(LANE_WIDTH){1'b1}};            if (kfae606 == 1'b1) begin               pu2a306   <= 1'b1;                              if (&ks3130b == 1'b0 || uic1573) begin                  mr51832     <= osfa1f2;                  fn45460   <= 1'b1;               end               else begin                  mr51832     <= xwdf43e;               end            end            else if (dbb06b8) begin               mr51832     <= osfa1f2;               fn45460   <= 1'b1;            end            else begin               mr51832     <= xwdf43e;            end         end                  osfa1f2: begin            mt1815d     <= 1'b0;            if (ofd9566 != DISABLED) begin               mr51832   <= eca9efa;            end            else begin               mr51832   <= osfa1f2;            end         end         default: begin            mr51832   <= eca9efa;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};ks3130b<={asb_eidle_rx>>1,xjc2975[1]};wjed60a<=xjc2975[2];vv6b055<=xjc2975[3];dbb06b8<=xjc2975[4];uic1573<=xjc2975[5];nr55cc0<={off7068>>1,xjc2975[6]};kfae606<=xjc2975[7];end
always@* begin ux1852e[2047]<=asb_eidle_rx[0];ux1852e[2046]<=yk779f7;ux1852e[2044]<=iebcfb8;ux1852e[2040]<=qt6ff99;ux1852e[2032]<=hl_gto_det;ux1852e[2017]<=off7068[0];ux1852e[1987]<=mt1815d;ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_top_ukb9381 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    xl8b1db,          
    qt6ff99,       
    hl_gto_hrst,        
    lf2d9af,       
    
    
    fa6cd7e,        
    jc66bf2,    
    pu35f93,     
    vxafc9b,       
    nr7e4df          
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam th7b0b3  = 2'd0 ;
localparam fnd859f  = 2'd1 ;
localparam hbc2cff  = 2'd2 ;
localparam hd167fe  = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input                     qt6ff99;
input                     hl_gto_hrst;
input   [LANE_WIDTH-1:0]  lf2d9af;
output  [LANE_WIDTH-1:0]  fa6cd7e;
output  [OS_WIDTH -1:0]   jc66bf2;
output                    pu35f93;
output                    vxafc9b;
output  [HRSM_WIDTH:0]    nr7e4df;
reg  [HRSM_WIDTH:0]     nr7e4df;
reg                     pu35f93;
reg                     vxafc9b;
reg  [LANE_WIDTH-1:0]   fa6cd7e;
reg  [OS_WIDTH -1:0]    jc66bf2;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef DWN_STRM_LANE

`endif
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg dbb06b8;
reg tjbfcdf;
reg [LANE_WIDTH - 1 : 0] blf37f3;
reg [2047:0] ux1852e;
wire [4:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef DWN_STRM_LANE

`endif

localparam do14bae = 5,jra5d72 = 32'hfdffc70b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DWN_STRM_LANE


`else


`endif


`ifdef DWN_STRM_LANE


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      nr7e4df      <= th7b0b3;      fa6cd7e     <= {(LANE_WIDTH){1'b0}};      jc66bf2 <= OS_T1;      pu35f93  <= 1'b0;      vxafc9b    <= 1'b0;   end   else begin      pu35f93  <= 1'b0;      vxafc9b    <= 1'b0;      case(nr7e4df)                  th7b0b3: begin            if (ofd9566 == HOTRST) begin


`ifdef DWN_STRM_LANE
               nr7e4df     <= (tjbfcdf) ? fnd859f : hbc2cff;


`else
               nr7e4df     <= hbc2cff;


`endif
               fa6cd7e    <= fadaff3;               jc66bf2<= OS_T1;               pu35f93 <= 1'b1;            end            else begin               nr7e4df     <= th7b0b3;            end         end


`ifdef DWN_STRM_LANE
                  fnd859f: begin            if ((blf37f3 & fadaff3) == fadaff3 && tjbfcdf == 1'b0 && ~pu35f93) begin               nr7e4df     <= hd167fe;               vxafc9b   <= 1'b1;               fa6cd7e    <= {(LANE_WIDTH){1'b0}};            end            else if (dbb06b8 && ~pu35f93) begin               nr7e4df     <= hd167fe;               vxafc9b   <= 1'b1;               fa6cd7e    <= {(LANE_WIDTH){1'b0}};            end            else begin               nr7e4df     <= fnd859f;            end         end


`endif
                  hbc2cff: begin            if ((blf37f3 & fadaff3) == fadaff3 && ~pu35f93) begin               nr7e4df     <= th7b0b3;            end            else if (dbb06b8 && ~pu35f93) begin               nr7e4df     <= hd167fe;               vxafc9b   <= 1'b1;               fa6cd7e    <= {(LANE_WIDTH){1'b0}};            end            else begin               nr7e4df     <= hbc2cff;            end         end                  hd167fe: begin            if (ofd9566 != HOTRST) begin               nr7e4df   <= th7b0b3;            end            else begin               nr7e4df   <= hd167fe;            end         end         default: begin            nr7e4df   <= th7b0b3;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};fadaff3<={xl8b1db>>1,xjc2975[1]};dbb06b8<=xjc2975[2];tjbfcdf<=xjc2975[3];blf37f3<={lf2d9af>>1,xjc2975[4]};end
always@* begin ux1852e[2047]<=xl8b1db[0];ux1852e[2046]<=qt6ff99;ux1852e[2044]<=hl_gto_hrst;ux1852e[2040]<=lf2d9af[0];ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_top_qg4c7fe 
   (
    
    sys_clk,            
    rst_n,            

    no_pcie_train,      
    kf184f1,         
    xl8b1db,          
    zm83218,             
    zz190c3,             
    off7068,          
    os430fe,    
    oh187f1,   
    alc3f8d,      
    aa1fc6c,      
    hl_gto_l0stx,       
    hl_gto_l1,          
    hl_gto_l2,          
    hl_gto_rcvry,       
    dll_rtrn_lnk,       
    cfg_rtrn_lnk,       
    
    
    qt5b2fb,              
    mrd97dc,          
    iccbee5,      
    th5f728,       
    jcfb946,       
    yxdca32,       
    wwe5194,          
    rv28ca1,          
    ay4650e,        
    hd32871            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam ip6a55a    = 3'd0 ;
localparam ho52ad4      = 3'd1 ;
localparam sj956a3    = 3'd2 ;
localparam cbab51d    = 3'd3 ;
localparam nr5a8ec = 3'd4 ;
localparam qgd4767 = 3'd5 ;
localparam ksa3b39    = 3'd6 ;
input                     sys_clk;
input                     rst_n;
input                     no_pcie_train;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input   [LANE_WIDTH-1:0]  zm83218;
input   [LANE_WIDTH-1:0]  zz190c3;
input   [LANE_WIDTH-1:0]  off7068;
input   [LANE_WIDTH-1:0]  os430fe;
input                     oh187f1;
input                     alc3f8d;
input                     aa1fc6c;
input                     hl_gto_l0stx;
input                     hl_gto_l1;
input                     hl_gto_l2;
input                     hl_gto_rcvry;
input                     cfg_rtrn_lnk;
input                     dll_rtrn_lnk;
output                    qt5b2fb;
output  [LANE_WIDTH-1:0]  mrd97dc;
output  [OS_WIDTH -1:0]   iccbee5;
output                    th5f728;
output                    jcfb946;
output                    yxdca32;
output                    wwe5194;
output                    rv28ca1;
output  [LANE_WIDTH-1:0]  ay4650e;
output  [L0SM_WIDTH:0]    hd32871;
wire [LANE_WIDTH-1:0]   ou1033a;
wire                    mt1815d;
wire                    jrce8f;
wire                    cm6747f;
reg                     qt5b2fb;
reg                     kqd1fc3;
reg  [L0SM_WIDTH:0]     hd32871;
reg  [LANE_WIDTH-1:0]   mrd97dc;
reg  [OS_WIDTH -1:0]    iccbee5;
reg                     th5f728;
reg                     jcfb946;
reg                     yxdca32;
reg                     wwe5194;
reg                     rv28ca1;
reg  [LANE_WIDTH-1:0]   ay4650e;
reg ana4bc4;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] db22449;
reg [LANE_WIDTH - 1 : 0] jr91274;
reg [LANE_WIDTH - 1 : 0] nr55cc0;
reg [LANE_WIDTH - 1 : 0] bl74e8c;
reg lsa7467;
reg ba3a33a;
reg osd19d3;
reg ri8ce98;
reg os674c3;
reg zm3a618;
reg ald30c3;
reg ie9861c;
reg enc30e1;
reg [LANE_WIDTH - 1 : 0] kdc386d;
reg kfae606;
reg fae1b67;
reg gddb3a;
reg ea6d9d5;
reg [2047:0] ux1852e;
wire [20:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 21,jra5d72 = 32'hfdffd14b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif



















assign ou1033a        = (db22449 | jr91274) & fadaff3;

assign mt1815d      = |(nr55cc0 & fadaff3);




assign cm6747f = ri8ce98;

assign jrce8f = 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hd32871      <= ip6a55a;      mrd97dc     <= {(LANE_WIDTH){1'b0}};      iccbee5 <= OS_IDLE;      th5f728  <= 1'b0;      jcfb946  <= 1'b0;      yxdca32  <= 1'b0;      wwe5194     <= 1'b0;      rv28ca1     <= 1'b0;      ay4650e   <= {(LANE_WIDTH){1'b0}};      qt5b2fb         <= 1'b0;      kqd1fc3  <= 1'b0;   end   else begin      th5f728  <= 1'b0;      jcfb946  <= 1'b0;      yxdca32  <= 1'b0;      wwe5194     <= 1'b0;      rv28ca1     <= 1'b0;      qt5b2fb         <= 1'b0;      case(hd32871)                  ip6a55a: begin            mrd97dc       <= {(LANE_WIDTH){1'b0}};            if (ofd9566 == L0) begin               hd32871     <= ho52ad4;               ay4650e  <= ~fadaff3;               qt5b2fb        <= 1'b1;            end            else begin               hd32871     <= ip6a55a;               ay4650e  <= {(LANE_WIDTH){1'b0}};            end         end                  ho52ad4: begin                if (((|kdc386d == 1'b1) || ald30c3== 1'b1 || enc30e1 || ie9861c|| (&bl74e8c == 1'b1)) && !ana4bc4) begin               hd32871      <= ksa3b39;               th5f728  <= 1'b1;            end                        else if (gddb3a || fae1b67) begin               case({gddb3a,fae1b67})                  2'b10: begin                     hd32871      <= sj956a3;	                     jcfb946  <= 1'b1;                                       end                  2'b01: begin                     hd32871      <= cbab51d;                                       yxdca32  <= 1'b1;                                          qt5b2fb         <= 1'b1;                  end                  2'b11: begin                     hd32871      <= ksa3b39;                     jcfb946  <= 1'b1;                     yxdca32  <= 1'b1;                  end               endcase            end                        else if (kfae606) begin               hd32871      <= ksa3b39;               wwe5194     <= (os674c3) ? 1'b1 : 1'b0;               rv28ca1     <= (zm3a618) ? 1'b1 : 1'b0;               mrd97dc     <= {(LANE_WIDTH){1'b1}};               iccbee5 <= OS_EIDLE;            end                        else if (os674c3 || zm3a618) begin               hd32871      <= nr5a8ec;               mrd97dc     <= {(LANE_WIDTH){1'b1}};               iccbee5 <= OS_EIDLE;            end            else begin               hd32871      <= ho52ad4;               qt5b2fb         <= 1'b1;            end         end                           sj956a3: begin            if ((|kdc386d == 1'b1) || ald30c3== 1'b1 || enc30e1 || ie9861c|| (&bl74e8c == 1'b1)) begin               hd32871      <= ksa3b39;               th5f728  <= 1'b1;            end                        else if (osd19d3 || fae1b67) begin               hd32871      <= ksa3b39;               yxdca32  <= (fae1b67) ? 1'b1 : 1'b0;            end                        else begin               hd32871      <= sj956a3;            end         end                           cbab51d: begin            if ((|kdc386d == 1'b1) || ald30c3== 1'b1 || enc30e1 || ie9861c|| (&bl74e8c == 1'b1)) begin               hd32871      <= ksa3b39;               th5f728  <= 1'b1;            end                        else if (ba3a33a || lsa7467 || gddb3a) begin               hd32871      <= ksa3b39;                              jcfb946  <= (gddb3a && !lsa7467) ? 1'b1 : 1'b0;              end                        else begin               hd32871      <= cbab51d;               qt5b2fb         <= 1'b1;            end         end                  nr5a8ec: begin            hd32871      <= qgd4767;            kqd1fc3  <= kfae606;         end                  qgd4767: begin            mrd97dc        <= {(LANE_WIDTH){1'b0}};            ay4650e      <= {(LANE_WIDTH){1'b1}};            if (kfae606 || ea6d9d5) begin               hd32871      <= ksa3b39;               wwe5194     <= (os674c3) ? 1'b1 : 1'b0;               rv28ca1     <= (zm3a618) ? 1'b1 : 1'b0;            end            else begin               hd32871      <= qgd4767;            end         end                  ksa3b39: begin            if (ofd9566 != L0) begin               hd32871   <= ip6a55a;               mrd97dc  <= {(LANE_WIDTH){1'b0}};            end            else begin               hd32871   <= ksa3b39;            end         end         default: begin            hd32871   <= ip6a55a;         end      endcase   end
end
always@* begin ana4bc4<=xjc2975[0];ofd9566<={kf184f1>>1,xjc2975[1]};fadaff3<={xl8b1db>>1,xjc2975[2]};db22449<={zm83218>>1,xjc2975[3]};jr91274<={zz190c3>>1,xjc2975[4]};nr55cc0<={off7068>>1,xjc2975[5]};bl74e8c<={os430fe>>1,xjc2975[6]};lsa7467<=xjc2975[7];ba3a33a<=xjc2975[8];osd19d3<=xjc2975[9];ri8ce98<=xjc2975[10];os674c3<=xjc2975[11];zm3a618<=xjc2975[12];ald30c3<=xjc2975[13];ie9861c<=xjc2975[14];enc30e1<=xjc2975[15];kdc386d<={ou1033a>>1,xjc2975[16]};kfae606<=xjc2975[17];fae1b67<=xjc2975[18];gddb3a<=xjc2975[19];ea6d9d5<=xjc2975[20];end
always@* begin ux1852e[2047]<=kf184f1[0];ux1852e[2046]<=xl8b1db[0];ux1852e[2044]<=zm83218[0];ux1852e[2040]<=zz190c3[0];ux1852e[2033]<=off7068[0];ux1852e[2019]<=os430fe[0];ux1852e[1990]<=oh187f1;ux1852e[1939]<=jrce8f;ux1852e[1933]<=alc3f8d;ux1852e[1831]<=cm6747f;ux1852e[1819]<=aa1fc6c;ux1852e[1778]<=cfg_rtrn_lnk;ux1852e[1615]<=kqd1fc3;ux1852e[1591]<=hl_gto_l0stx;ux1852e[1508]<=ou1033a[0];ux1852e[1135]<=hl_gto_l1;ux1852e[1023]<=no_pcie_train;ux1852e[969]<=mt1815d;ux1852e[889]<=dll_rtrn_lnk;ux1852e[444]<=hl_gto_rcvry;ux1852e[222]<=hl_gto_l2;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule







































































































`timescale 1 ns / 100 ps
module pcie_x1_top_wwcb153 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    xl8b1db,          
    asb_eidle_rx,       
    yxdca32,       
    ne5241b,   
    ie920da,            
    asb_dskew_rx,       
    
    
    hq83685,         
    je1b42b,   
    alc3f8d,      
    oh187f1,   
    qv85692,   
    ym2b494        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam dbb5fbd  = 3'd0 ;
localparam dbafdef = 3'd1 ;
localparam zx7ef7f  = 3'd2 ;
localparam wjf7bfe   = 3'd3 ;
localparam twbdff4  = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     yxdca32;
input                     ne5241b;
input   [LANE_WIDTH-1:0]  ie920da;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    hq83685;
output                    je1b42b;
output                    alc3f8d;
output                    oh187f1;
output                    qv85692;
output  [L0sRSM_WIDTH:0]  ym2b494;
wire [LANE_WIDTH-1:0]   xy83a8c;
wire                    ep1d462;
wire [LANE_WIDTH-1:0]   gd9525c;
reg  [L0sRSM_WIDTH:0]   ym2b494;
reg                     je1b42b;
reg                     alc3f8d;
reg                     oh187f1;
reg                     qv85692;
reg                     hq83685;
reg  [2:0]              fc89533;
reg                     vv4a99a;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg xla0b6c;
reg sw5b66;
reg [LANE_WIDTH - 1 : 0] go6d98e;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] ph8e091;
reg al7048f;
reg [LANE_WIDTH - 1 : 0] ng35b14;
reg [2 : 0] jr91f0c;
reg ep8f866;
reg [2047:0] ux1852e;
wire [11:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 12,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign xy83a8c         = go6d98e & fadaff3;

assign gd9525c= cm7281c & fadaff3;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ym2b494      <= dbb5fbd;      vv4a99a    <= 1'b0;      je1b42b  <= 1'b0;      alc3f8d     <= 1'b0;      oh187f1  <= 1'b0;      qv85692  <= 1'b0;      hq83685        <= 1'b0;   end   else begin      je1b42b  <= 1'b0;      alc3f8d     <= 1'b0;      oh187f1  <= 1'b0;      qv85692  <= 1'b0;      hq83685        <= 1'b0;      case(ym2b494)                  dbb5fbd: begin            if (xla0b6c) begin               ym2b494     <= dbafdef;               vv4a99a   <= 1'b1;            end            else begin               ym2b494     <= dbb5fbd;            end         end                  dbafdef: begin            if (al7048f) begin               ym2b494     <= zx7ef7f;               vv4a99a   <= 1'b0;            end            else begin               ym2b494     <= dbafdef;            end         end                  zx7ef7f: begin            if (&ks3130b == 1'b0) begin               ym2b494     <= wjf7bfe;               je1b42b <= 1'b1;               hq83685       <= 1'b1;            end            else begin               ym2b494     <= zx7ef7f;            end         end                  wjf7bfe: begin            if (ph8e091 == fadaff3 && ~je1b42b && ng35b14 == fadaff3) begin               ym2b494     <= twbdff4;               alc3f8d    <= 1'b1;            end            else if (sw5b66 && ~je1b42b) begin               ym2b494     <= twbdff4;               oh187f1 <= 1'b1;               qv85692 <= 1'b1;            end            else begin               ym2b494     <= wjf7bfe;            end         end                  twbdff4: begin            if (ofd9566 != L0s) begin               ym2b494   <= dbb5fbd;            end            else begin               ym2b494   <= twbdff4;            end         end         default: begin            ym2b494   <= dbb5fbd;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fc89533 <= 0;   end   else if (ep8f866) begin      fc89533 <= jr91f0c + 1'b1;   end   else begin      fc89533 <= 0;   end
end
assign ep1d462 =(jr91f0c >= 3'b100) ? 1'b1 : 1'b0;

always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};fadaff3<={xl8b1db>>1,xjc2975[1]};ks3130b<={asb_eidle_rx>>1,xjc2975[2]};xla0b6c<=xjc2975[3];sw5b66<=xjc2975[4];go6d98e<={ie920da>>1,xjc2975[5]};cm7281c<={asb_dskew_rx>>1,xjc2975[6]};ph8e091<={xy83a8c>>1,xjc2975[7]};al7048f<=xjc2975[8];ng35b14<={gd9525c>>1,xjc2975[9]};jr91f0c<={fc89533>>1,xjc2975[10]};ep8f866<=xjc2975[11];end
always@* begin ux1852e[2047]<=xl8b1db[0];ux1852e[2046]<=asb_eidle_rx[0];ux1852e[2044]<=yxdca32;ux1852e[2040]<=ne5241b;ux1852e[2033]<=ie920da[0];ux1852e[2018]<=asb_dskew_rx[0];ux1852e[1988]<=xy83a8c[0];ux1852e[1929]<=ep1d462;ux1852e[1811]<=gd9525c[0];ux1852e[1574]<=fc89533[0];ux1852e[1101]<=vv4a99a;ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

































































`timescale 1 ns / 100 ps
module pcie_x1_top_mg55ef 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    jcfb946,       
    ea786d8,   
    hl_gto_l0stxfts,    
    
    
    hq1b605,   
    qgdb02a,      
    nrd8150,  
    aa1fc6c,      
    ks543b,    
    l0s_tx_state,       
    vv50ec2        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam cm4967e  = 3'd0 ;
localparam wj4b3f0 = 3'd1 ;
localparam cm59f85 = 3'd2 ;
localparam dmcfc28  = 3'd3 ;
localparam fn7e142   = 3'd4 ;
localparam uif0a17  = 3'd5 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input                     jcfb946;
input                     ea786d8;
input                     hl_gto_l0stxfts;
output                    hq1b605;
output  [LANE_WIDTH-1:0]  qgdb02a;
output  [OS_WIDTH -1:0]   nrd8150;
output                    aa1fc6c;
output  [LANE_WIDTH-1:0]  ks543b;
output  [L0sTSM_WIDTH:0]  l0s_tx_state;
output  [L0sTSM_WIDTH:0]  vv50ec2;
wire                    ep1d462;
reg  [L0sTSM_WIDTH:0]   vv50ec2;
reg  [LANE_WIDTH-1:0]   qgdb02a;
reg  [OS_WIDTH -1:0]    nrd8150;
reg                     hq1b605;
reg                     aa1fc6c;
reg  [LANE_WIDTH-1:0]   ks543b;
reg  [2:0]              fc89533;
reg                     vv4a99a;
reg [MSM_WIDTH : 0] ofd9566;
reg sue54fa;
reg je2a7d1;
reg os53e8a;
reg al7048f;
reg [2 : 0] jr91f0c;
reg ep8f866;
reg [2047:0] ux1852e;
wire [6:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 7,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l0s_tx_state = vv50ec2;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vv50ec2      <= cm4967e;      vv4a99a    <= 1'b0;      qgdb02a     <= {(LANE_WIDTH){1'b0}};      nrd8150 <= OS_IDLE;      hq1b605  <= 1'b0;      aa1fc6c     <= 1'b0;      ks543b   <= {(LANE_WIDTH){1'b0}};   end   else begin      hq1b605  <= 1'b0;      aa1fc6c     <= 1'b0;      case(vv50ec2)                  cm4967e: begin            if (sue54fa) begin               vv50ec2     <= wj4b3f0;               qgdb02a    <= {(LANE_WIDTH){1'b1}};               nrd8150<= OS_EIDLE;               vv4a99a   <= 1'b1;            end            else begin               vv50ec2     <= cm4967e;            end         end         wj4b3f0: begin            vv50ec2     <= cm59f85;         end                  cm59f85: begin            qgdb02a       <= {(LANE_WIDTH){1'b0}};            ks543b     <= {(LANE_WIDTH){1'b1}};            if (al7048f) begin               vv50ec2     <= dmcfc28;               vv4a99a   <= 1'b0;            end            else begin               vv50ec2     <= cm59f85;            end         end                  dmcfc28: begin            if (os53e8a) begin               vv50ec2     <= fn7e142;               qgdb02a    <= {(LANE_WIDTH){1'b1}};               nrd8150<= OS_NFTS;               hq1b605 <= 1'b1;               ks543b  <= {(LANE_WIDTH){1'b0}};            end            else begin               vv50ec2     <= dmcfc28;            end         end                  fn7e142: begin            if (je2a7d1 && ~hq1b605) begin               vv50ec2     <= uif0a17;               aa1fc6c    <= 1'b1;               qgdb02a    <= {(LANE_WIDTH){1'b0}};            end            else begin               vv50ec2     <= fn7e142;            end         end                  uif0a17: begin            if (ofd9566 != L0s) begin               vv50ec2   <= cm4967e;            end            else begin               vv50ec2   <= uif0a17;            end         end         default: begin            vv50ec2   <= cm4967e;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fc89533 <= 0;   end   else if (ep8f866) begin      fc89533 <= jr91f0c + 1'b1;   end   else begin      fc89533 <= 0;   end
end
assign ep1d462 =(jr91f0c >= 3'b100) ? 1'b1 : 1'b0;
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};sue54fa<=xjc2975[1];je2a7d1<=xjc2975[2];os53e8a<=xjc2975[3];al7048f<=xjc2975[4];jr91f0c<={fc89533>>1,xjc2975[5]};ep8f866<=xjc2975[6];end
always@* begin ux1852e[2047]<=jcfb946;ux1852e[2046]<=ea786d8;ux1852e[2044]<=hl_gto_l0stxfts;ux1852e[2040]<=ep1d462;ux1852e[2032]<=fc89533[0];ux1852e[2016]<=vv4a99a;ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule








































































`timescale 1 ns / 100 ps
module pcie_x1_top_xje397b 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    xl8b1db,          
    asb_eidle_rx,       
    ep1d462,      
    hl_gto_rcvry,       
    
    
    ec82cd8,        
    jr166c0,       
    cob3606,       
    l1_state,           
    bld818e            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam qi15beb    = 2'd0 ;
localparam hqadf58   = 2'd1 ;
localparam al6fac2    = 2'd2 ;
localparam yk7d615    = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     ep1d462;
input                     hl_gto_rcvry;
output  [LANE_WIDTH-1:0]  ec82cd8;
output                    jr166c0;
output                    cob3606;
output  [L1SM_WIDTH:0]    l1_state;
output  [L1SM_WIDTH:0]    bld818e;
reg  [L1SM_WIDTH:0]     bld818e;
reg  [LANE_WIDTH-1:0]   ec82cd8;
reg                     jr166c0;
reg                     cob3606;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg al7048f;
reg ald30c3;
reg [2047:0] ux1852e;
wire [4:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 5,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l1_state = bld818e;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      bld818e      <= qi15beb;      ec82cd8   <= {(LANE_WIDTH){1'b0}};      jr166c0  <= 1'b0;      cob3606  <= 1'b0;   end   else begin      cob3606  <= 1'b0;      jr166c0  <= 1'b0;      case(bld818e)                  qi15beb: begin            if (ofd9566 == L1) begin               bld818e     <= hqadf58;               ec82cd8  <= fadaff3;               jr166c0 <= 1'b1;            end            else begin               bld818e     <= qi15beb;            end         end                  hqadf58: begin            if (al7048f && ~jr166c0) begin               bld818e     <= al6fac2;            end            else begin               bld818e     <= hqadf58;            end         end                  al6fac2: begin            if (&ks3130b == 1'b0 || ald30c3) begin               bld818e     <= yk7d615;               cob3606 <= 1'b1;            end            else begin               bld818e     <= al6fac2;            end         end                  yk7d615: begin            if (ofd9566 != L1) begin               bld818e   <= qi15beb;            end            else begin               bld818e   <= yk7d615;            end         end         default: begin            bld818e   <= qi15beb;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};fadaff3<={xl8b1db>>1,xjc2975[1]};ks3130b<={asb_eidle_rx>>1,xjc2975[2]};al7048f<=xjc2975[3];ald30c3<=xjc2975[4];end
always@* begin ux1852e[2047]<=xl8b1db[0];ux1852e[2046]<=asb_eidle_rx[0];ux1852e[2044]<=ep1d462;ux1852e[2040]<=hl_gto_rcvry;ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_top_co3ea4c 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    xl8b1db,          
    asb_eidle_rx,       
    asb_beacon_rx,      
    hl_gto_det,         
    hl_snd_beacon,      
    
    ne48a16,
    ld450b3,
    nt2859e,

    
    zk42cf7,          
    vx167ba,      
    ukb3dd6,        
    fp9eeb0,       
    gbf7587,         
    bnbac3d,      
    l2_state,           
    dbb0f74            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam an7bee     = 2'd0 ;
localparam db3df74     = 2'd1 ;
localparam eaefba7 = 2'd2 ;
localparam ea7dd39     = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input   [LANE_WIDTH-1:0]  asb_beacon_rx;
input                     hl_gto_det;
input                     hl_snd_beacon;
input                     ne48a16;
input                     ld450b3;
input                     nt2859e;
output  [LANE_WIDTH-1:0]  zk42cf7;
output  [OS_WIDTH -1:0]   vx167ba;
output  [LANE_WIDTH-1:0]  ukb3dd6;
output                    fp9eeb0;
output                    gbf7587;
output                    bnbac3d;
output  [L2SM_WIDTH:0]    l2_state;
output  [L2SM_WIDTH:0]    dbb0f74;
reg  [LANE_WIDTH-1:0]   zk42cf7;
reg  [OS_WIDTH -1:0]    vx167ba;
reg  [L2SM_WIDTH:0]     dbb0f74;
reg  [LANE_WIDTH-1:0]   ukb3dd6;
reg                     fp9eeb0;
reg                     gbf7587;
reg                     bnbac3d;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] ba89858;
reg uic1573;
reg zm2f40e;
reg of7a072;
reg psd0395;
reg fp81cab;
reg [2047:0] ux1852e;
wire [8:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 9,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l2_state = dbb0f74;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dbb0f74      <= an7bee;      fp9eeb0  <= 1'b0;      gbf7587    <= 1'b0;      bnbac3d <= 1'b0;      ukb3dd6   <= {(LANE_WIDTH){1'b0}};      zk42cf7     <= {(LANE_WIDTH){1'b0}};      vx167ba <= OS_IDLE;   end   else begin      fp9eeb0  <= 1'b0;      gbf7587    <= 1'b0;      bnbac3d <= 1'b0;      zk42cf7     <= {(LANE_WIDTH){1'b0}};      case(dbb0f74)                  an7bee: begin            vx167ba <= OS_IDLE;            if (ofd9566 == L2) begin               dbb0f74     <= db3df74;               ukb3dd6  <= fadaff3;            end            else begin               dbb0f74     <= an7bee;               ukb3dd6  <= {(LANE_WIDTH){1'b0}};            end         end                  db3df74: begin                                     if (of7a072) begin                               if (fp81cab &&  (ba89858[0] || uic1573)) begin                     dbb0f74     <= ea7dd39;                     gbf7587   <= 1'b1;                end                                else if (!fp81cab && uic1573) begin                        dbb0f74     <= ea7dd39;                     gbf7587   <= 1'b1;                end                               else begin                   dbb0f74     <= db3df74;                end             end                         else begin                if (&ks3130b == 1'b0) begin                  dbb0f74     <= ea7dd39;                  gbf7587   <= 1'b1;               end                                             else if (zm2f40e & psd0395 == 1'b0) begin                  dbb0f74     <= eaefba7;                  bnbac3d<= 1'b1;                  zk42cf7    <= {(LANE_WIDTH){1'b1}};                  vx167ba<= OS_BEACON;                  fp9eeb0 <= 1'b1;               end                              else begin                  dbb0f74     <= db3df74;               end                        end          end                                    eaefba7: begin            if (&ks3130b == 1'b0) begin               dbb0f74      <= ea7dd39;               gbf7587    <= 1'b1;            end            else begin               dbb0f74      <= eaefba7;               bnbac3d <= 1'b1;               zk42cf7     <= {(LANE_WIDTH){1'b1}};               vx167ba <= OS_BEACON;               fp9eeb0  <= 1'b1;            end         end                           ea7dd39: begin            if (ofd9566 != L2) begin               dbb0f74   <= an7bee;            end            else begin               dbb0f74   <= ea7dd39;            end         end         default: begin            dbb0f74   <= an7bee;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};fadaff3<={xl8b1db>>1,xjc2975[1]};ks3130b<={asb_eidle_rx>>1,xjc2975[2]};ba89858<={asb_beacon_rx>>1,xjc2975[3]};uic1573<=xjc2975[4];zm2f40e<=xjc2975[5];of7a072<=xjc2975[6];psd0395<=xjc2975[7];fp81cab<=xjc2975[8];end
always@* begin ux1852e[2047]<=xl8b1db[0];ux1852e[2046]<=asb_eidle_rx[0];ux1852e[2044]<=asb_beacon_rx[0];ux1852e[2041]<=hl_gto_det;ux1852e[2035]<=hl_snd_beacon;ux1852e[2022]<=ne48a16;ux1852e[1996]<=ld450b3;ux1852e[1945]<=nt2859e;ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule











































































`timescale 1 ns / 100 ps
module pcie_x1_top_vk83b96 
   (
    
    sys_clk,            
    rst_n,              

    kf184f1,         
    qt6ff99,       
    vkb2882,     
    hl_gto_lbk,         
    asb_eidle_rx,       
    off7068,          
    ks825d1,        
    
    
    ir12e89,      
    ym9744d,      
    vxba268,       
    sud1347,         
    ba89a39,     
    rg4d1cb,      
    kq68e5a,        
    xw472d0           
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam wya6410   = 3'd0 ;
localparam nt32080  = 3'd1 ;
localparam ep90407 = 3'd2 ;
localparam sw8203d  = 3'd4 ;
localparam sw101e9  = 3'd5 ;
localparam cb80f49   = 3'd6 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     kf184f1;
input                     qt6ff99;
input                     vkb2882;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input   [LANE_WIDTH-1:0]  off7068;
input   [LANE_WIDTH-1:0]  ks825d1;
output                    ir12e89;
output                    ym9744d;
output  [LANE_WIDTH-1:0]  vxba268;
output  [LANE_WIDTH-1:0]  sud1347;
output  [OS_WIDTH -1:0]   ba89a39;
output                    rg4d1cb;
output                    kq68e5a;
output  [LBSM_WIDTH:0]    xw472d0;
reg  [LBSM_WIDTH:0]     xw472d0;
reg  [LANE_WIDTH-1:0]   vxba268;
reg                     rg4d1cb;
reg                     kq68e5a;
reg  [LANE_WIDTH-1:0]   sud1347;
reg  [OS_WIDTH -1:0]    ba89a39;
reg  [LANE_WIDTH-1:0]   rv9e6d;
reg                     ir12e89;
reg                     ym9744d;
reg [MSM_WIDTH : 0] ofd9566;
reg dbb06b8;
reg uv7f7c5;
reg [LANE_WIDTH - 1 : 0] fpaac1a;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] nr55cc0;
reg [LANE_WIDTH - 1 : 0] yz957e3;
reg [LANE_WIDTH - 1 : 0] ld5f8ed;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 8,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xw472d0      <= wya6410;      sud1347     <= {(LANE_WIDTH){1'b0}};      ba89a39 <= OS_T1;      rg4d1cb  <= 1'b0;      kq68e5a    <= 1'b0;      vxba268   <= {(LANE_WIDTH){1'b0}};      rv9e6d     <= {(LANE_WIDTH){1'b0}};      ir12e89  <= 1'b0;      ym9744d  <= 1'b0;   end   else begin      rg4d1cb  <= 1'b0;      kq68e5a    <= 1'b0;      case(xw472d0)                  wya6410: begin            ir12e89 <= 1'b0;            if (ofd9566 == LOOPBACK) begin               ba89a39   <= OS_T1;               rg4d1cb    <= 1'b1;                              if (|fpaac1a) begin                  xw472d0     <= nt32080;                  sud1347    <= fpaac1a;                  ym9744d <= 1'b0;                  rv9e6d    <= fpaac1a;               end                              else begin                  xw472d0     <= ep90407;                  sud1347    <= {(LANE_WIDTH){1'b0}};                  ym9744d <= 1'b1;                  rv9e6d    <= 0;               end            end            else begin               rv9e6d    <= 0;               ym9744d <= 1'b0;               xw472d0     <= wya6410;            end         end                  nt32080: begin            if ((yz957e3 & ld5f8ed) == ld5f8ed && ~rg4d1cb) begin               xw472d0     <= ep90407;               sud1347    <= {(LANE_WIDTH){1'b0}};            end            else if (uv7f7c5 && ~rg4d1cb) begin               xw472d0     <= sw8203d;               sud1347    <= {(LANE_WIDTH){1'b1}};               ba89a39<= OS_EIDLE;               rg4d1cb <= 1'b1;            end            else begin               xw472d0     <= nt32080;            end         end                  ep90407: begin            if (|ld5f8ed == 1'b1 && |fpaac1a == 1'b0 && ~rg4d1cb) begin               xw472d0     <= sw8203d;               sud1347    <= {(LANE_WIDTH){1'b1}};               ba89a39<= OS_EIDLE;               rg4d1cb <= 1'b1;               ir12e89 <= 1'b0;            end            else if (|ld5f8ed == 1'b0 && (|nr55cc0 == 1'b1 || |ks3130b == 1'b1) && ~rg4d1cb) begin               xw472d0     <= sw101e9;               sud1347    <= {(LANE_WIDTH){1'b0}};               rg4d1cb <= 1'b1;               ym9744d <= 1'b0;            end            else begin               xw472d0     <= ep90407;               ir12e89 <= (ld5f8ed) ? 1'b1 : 1'b0;            end         end                  sw8203d: begin            xw472d0     <= sw101e9;         end                  sw101e9: begin            sud1347    <= {(LANE_WIDTH){1'b0}};            if (dbb06b8 && ~rg4d1cb) begin               xw472d0     <= cb80f49;               kq68e5a   <= 1'b1;               vxba268  <= {(LANE_WIDTH){1'b0}};            end            else begin               xw472d0     <= sw101e9;               vxba268  <= {(LANE_WIDTH){1'b1}};            end         end                  cb80f49: begin            if (ofd9566 != LOOPBACK) begin               xw472d0   <= wya6410;            end            else begin               xw472d0   <= cb80f49;            end         end         default: begin            xw472d0   <= wya6410;         end      endcase   end
end
always@* begin ofd9566<={kf184f1>>1,xjc2975[0]};dbb06b8<=xjc2975[1];uv7f7c5<=xjc2975[2];fpaac1a<={hl_gto_lbk>>1,xjc2975[3]};ks3130b<={asb_eidle_rx>>1,xjc2975[4]};nr55cc0<={off7068>>1,xjc2975[5]};yz957e3<={ks825d1>>1,xjc2975[6]};ld5f8ed<={rv9e6d>>1,xjc2975[7]};end
always@* begin ux1852e[2047]<=qt6ff99;ux1852e[2046]<=vkb2882;ux1852e[2044]<=hl_gto_lbk[0];ux1852e[2040]<=asb_eidle_rx[0];ux1852e[2033]<=off7068[0];ux1852e[2018]<=ks825d1[0];ux1852e[1988]<=rv9e6d[0];ux1852e[1023]<=kf184f1[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























































































`timescale 1 ns / 100 ps
module pcie_x1_top_jr60ab 
   (
    
    sys_clk,           
    rst_n,             

    
    no_pcie_train,     

    
    lf949e2,       
    ld5f40d,       
    wwfa06e,       
    ba1163b,        
    ec508b,       
    tu422c7,       
    jr28458,       
    wwe5194,         
    rv28ca1,         
    dz5fbb6,        
    th5f728,      
    faeedbd,        
    ne76deb,     
    cob3606,      
    gbf7587,        
    twbd682,      
    zkeb412,     
    pf5a092,    
    dmd0496,     
    ks824b3,     
    ir12599,     
    kq68e5a,       
    vxafc9b,      
    fn45460,       

    
    ls99851,      
    yxcc28a,      
    rt61454,       
    kf184f1,        
    kd51539,          
    qv8a9cd,          
    en54e6c        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                   sys_clk;
input                   rst_n;
input                   no_pcie_train;
input                   lf949e2;
input                   ld5f40d;
input                   wwfa06e;
input                   ba1163b;
input                   ec508b;
input                   tu422c7;
input                   jr28458;
input                   wwe5194;
input                   rv28ca1;
input                   dz5fbb6;
input                   th5f728;
input                   faeedbd;
input                   ne76deb;
input                   cob3606;
input                   gbf7587;
input                   twbd682;
input                   zkeb412;
input                   pf5a092;
input                   dmd0496;
input                   ks824b3;
input                   ir12599;
input                   kq68e5a;
input                   vxafc9b;
input                   fn45460;
output                  ls99851;
output                  yxcc28a;
output                  rt61454;
output  [MSM_WIDTH:0]   kf184f1;
output                  kd51539;
output                  qv8a9cd;
output                  en54e6c;
reg [MSM_WIDTH:0]       co101ff;
reg                     rt61454;
reg [MSM_WIDTH:0]       kf184f1;
reg                     kd51539;
reg                     qv8a9cd;
reg                     en54e6c;
reg                     ls99851;
reg                     yxcc28a;
reg                     ri11fd8;
reg  [5*8:0] qv8fec2;
reg ana4bc4;
reg nefb0a5;
reg jpd852b;
reg nrc295f;
reg ba14afe;
reg tja57f2;
reg qi2bf97;
reg zx5fcb9;
reg jcfe5cf;
reg czf2e7b;
reg ou973dc;
reg qib9ee0;
reg facf701;
reg zx7b80b;
reg wjdc05e;
reg kqe02f5;
reg xy17a9;
reg dobd4a;
reg en5ea52;
reg wwf5295;
reg swa94a8;
reg pf4a541;
reg zk52a0f;
reg gd9507b;
reg jea83dd;
reg [MSM_WIDTH : 0] ief75d;
reg xj7bae9;
reg [5 * 8 : 0] hbdd74e;
reg [2047:0] ux1852e;
wire [27:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 28,jra5d72 = 32'hfdfff40b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      co101ff  <= DETECT;      rt61454 <= 1'b0;      ls99851<= 1'b0;      yxcc28a<= 1'b0;   end   else if (xj7bae9) begin      co101ff  <= L0;      rt61454 <= 1'b1;      ls99851<= 1'b0;      yxcc28a<= 1'b1;   end   else begin      case(ief75d)          DETECT: begin            rt61454   <= 1'b0;            yxcc28a  <= 1'b0;            if (nefb0a5)               co101ff <= POLLING;            else               co101ff <= DETECT;         end         POLLING: begin            rt61454 <= 1'b0;            yxcc28a<= 1'b0;            casex({jpd852b, nrc295f})               2'b1x:   co101ff <= CONFIG;               2'bx1:   co101ff <= DETECT;               default: co101ff <= POLLING;            endcase         end         CONFIG: begin            rt61454 <= rt61454;            ls99851<= |{tja57f2, qi2bf97, zx5fcb9};            yxcc28a<= 1'b1;            casex({ba14afe, tja57f2, qi2bf97, zx5fcb9})               4'b1xxx: co101ff <= L0;               4'bx1xx: co101ff <= LOOPBACK;               4'bxx1x: co101ff <= DISABLED;               4'bxxx1: co101ff <= DETECT;               default: co101ff <= CONFIG;    endcase         end         L0: begin            rt61454   <= 1'b1;            yxcc28a  <= 1'b1;            ls99851  <= 1'b0;            casex({jcfe5cf, czf2e7b, ou973dc, qib9ee0})               4'b1xxx: co101ff <= L1;               4'bx1xx: co101ff <= L2;               4'bxx1x: co101ff <= L0s;               4'bxxx1: co101ff <= RECOVERY;               default: co101ff <= L0;    endcase         end         L0s : begin            rt61454   <= 1'b1;            yxcc28a  <= 1'b0;            casex({facf701, zx7b80b})               2'b1x:   co101ff <= L0;               2'bx1:   co101ff <= RECOVERY;               default: co101ff <= L0s;            endcase         end         L1 : begin            rt61454   <= 1'b1;            yxcc28a  <= 1'b0;            if (wjdc05e)               co101ff <= RECOVERY;            else               co101ff <= L1;         end         L2 : begin            rt61454   <= 1'b1;            yxcc28a  <= 1'b0;            if (kqe02f5)               co101ff <= DETECT;            else               co101ff <= L2;         end         RECOVERY: begin            rt61454 <= 1'b1;            yxcc28a<= 1'b1;            casex({xy17a9, dobd4a, en5ea52, wwf5295, swa94a8, pf4a541})               6'b1xxxxx: co101ff <= L0;               6'bx1xxxx: co101ff <= LOOPBACK;               6'bxx1xxx: co101ff <= HOTRST;               6'bxxx1xx: co101ff <= DISABLED;               6'bxxxx1x: co101ff <= DETECT;               6'bxxxxx1: co101ff <= CONFIG;               default:   co101ff <= RECOVERY;            endcase         end         LOOPBACK: begin            rt61454   <= 1'b0;            yxcc28a  <= 1'b0;    if (zk52a0f)               co101ff <= DETECT;            else               co101ff <= LOOPBACK;         end         HOTRST :  begin            rt61454   <= 1'b0;            yxcc28a  <= 1'b0;    if (gd9507b)               co101ff <= DETECT;            else               co101ff <= HOTRST;         end         DISABLED :  begin            rt61454   <= 1'b0;            yxcc28a  <= 1'b0;    if (jea83dd)               co101ff <= DETECT;            else               co101ff <= DISABLED;         end         default : begin            yxcc28a<= 1'b0;            rt61454 <= 1'b0;            co101ff  <= {(MSM_WIDTH){1'bx}};         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ri11fd8 <= 1'b0;      kf184f1      <= DETECT;      kd51539        <= 1'b0;      qv8a9cd        <= 1'b1;      en54e6c     <= 1'b0;   end   else begin      ri11fd8 <= ana4bc4;      kf184f1      <= ief75d;            kd51539        <= (kf184f1 == POLLING) ? 1'b1 : 1'b0;      qv8a9cd        <= (kf184f1 == DETECT) ? 1'b1 : 1'b0;      en54e6c     <= (kf184f1 == L0 || kf184f1 == L0s) ? 1'b1 : 1'b0;   end
end




always @ (ief75d)
begin   case(ief75d)         DETECT:   qv8fec2 = "DET";         POLLING:  qv8fec2 = "POL";         CONFIG:   qv8fec2 = "CFG";         L0:       qv8fec2 = "L0";         L0s:      qv8fec2 = "L0S";         L1 :      qv8fec2 = "L1";         L2 :      qv8fec2 = "L2";         RECOVERY: qv8fec2 = "RCVRY";         LOOPBACK: qv8fec2 = "LBK";         HOTRST :  qv8fec2 = "HRST";         DISABLED: qv8fec2 = "DIS";      default:      qv8fec2 = "ERROR";   endcase
end

always@* begin ana4bc4<=xjc2975[0];nefb0a5<=xjc2975[1];jpd852b<=xjc2975[2];nrc295f<=xjc2975[3];ba14afe<=xjc2975[4];tja57f2<=xjc2975[5];qi2bf97<=xjc2975[6];zx5fcb9<=xjc2975[7];jcfe5cf<=xjc2975[8];czf2e7b<=xjc2975[9];ou973dc<=xjc2975[10];qib9ee0<=xjc2975[11];facf701<=xjc2975[12];zx7b80b<=xjc2975[13];wjdc05e<=xjc2975[14];kqe02f5<=xjc2975[15];xy17a9<=xjc2975[16];dobd4a<=xjc2975[17];en5ea52<=xjc2975[18];wwf5295<=xjc2975[19];swa94a8<=xjc2975[20];pf4a541<=xjc2975[21];zk52a0f<=xjc2975[22];gd9507b<=xjc2975[23];jea83dd<=xjc2975[24];ief75d<={co101ff>>1,xjc2975[25]};xj7bae9<=xjc2975[26];hbdd74e<={qv8fec2>>1,xjc2975[27]};end
always@* begin ux1852e[2047]<=lf949e2;ux1852e[2046]<=ld5f40d;ux1852e[2044]<=wwfa06e;ux1852e[2040]<=ba1163b;ux1852e[2032]<=ec508b;ux1852e[2016]<=tu422c7;ux1852e[1984]<=jr28458;ux1852e[1941]<=ri11fd8;ux1852e[1920]<=wwe5194;ux1852e[1835]<=qv8fec2[0];ux1852e[1793]<=rv28ca1;ux1852e[1679]<=dmd0496;ux1852e[1539]<=dz5fbb6;ux1852e[1310]<=ks824b3;ux1852e[1145]<=kq68e5a;ux1852e[1030]<=th5f728;ux1852e[1023]<=no_pcie_train;ux1852e[970]<=co101ff[0];ux1852e[839]<=pf5a092;ux1852e[572]<=ir12599;ux1852e[485]<=fn45460;ux1852e[419]<=zkeb412;ux1852e[242]<=vxafc9b;ux1852e[209]<=twbd682;ux1852e[104]<=gbf7587;ux1852e[52]<=cob3606;ux1852e[26]<=ne76deb;ux1852e[13]<=faeedbd;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule












































































`timescale 1 ns / 100 ps
module pcie_x1_top_al5eebc 
   (
    
    sys_clk,            
    rst_n,              
    reduce_idlecnt,     

    asb_eidle_rx,       
    asb_lane_sync,      
    asb_data,           
    asb_kcntl,          

    hl_gto_hrst,        
    hl_gto_dis,         
    hl_gto_lbk,         
    
    go46e47,    
    zz37238,     
    ukb91c7,      
    jpc8e38,          
    dm471c7,          
    fp38e3b,     
    xjc71df,           
    jr38eff,           
    
    
    dzc77ff,      
    co3bfff,           
    zm83218,             
    zz190c3,             
    uiffe18,      
    goff0c0,      
    jpf3363,           
    xy99b1f,     
    ng2afcb,     
    ps6c7d7,      
    ps63ebb,    
    nrf96df,     
    rtcd8fa,      
    jr2d4fc,        
    uv6a7e7,   
    yk53f3c,    
    yz9f9e1,    
    dzfcf0d,    
    gbe786f,    
    nrd76c0,            
    ks1f5db,     
    yzdf62,     
    osfaed8,     
    cm7d8ad,           
    bld81a8,          
    off7068,          
    os430fe,    
    ie920da,            
    ks825d1,        
    lf2d9af,       
    icdb035,       
    kfbb606,        
    nefe66c,        
    qi1aeb1,       
    rtd7589            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input                     reduce_idlecnt;
input                     asb_eidle_rx;
input                     asb_lane_sync;
input   [15:0]            asb_data;
input   [1:0]             asb_kcntl;
input                     hl_gto_hrst;
input                     hl_gto_dis;
input                     hl_gto_lbk;
input                     zz37238;
input                     go46e47;
input   [7:0]             ukb91c7;
input                     jpc8e38;
input                     dm471c7;
input                     fp38e3b;
input   [7:0]             xjc71df;
input   [7:0]             jr38eff;
output                    dzc77ff;
output  [7:0]             co3bfff;
output                    zm83218;
output                    zz190c3;
output                    uiffe18;
output                    goff0c0;
output                    jpf3363;
output                    xy99b1f;
output                    ng2afcb;
output                    ps6c7d7;
output                    ps63ebb;
output                    nrf96df;
output                    rtcd8fa;
output                    jr2d4fc;
output                    nrd76c0;
output                    ks1f5db;
output                    dzfcf0d;
output                    gbe786f;
output                    uv6a7e7;
output                    yk53f3c;
output                    yz9f9e1;
output                    yzdf62;
output                    osfaed8;
output                    cm7d8ad;
output                    bld81a8;
output                    off7068;
output                    os430fe;
output                    ie920da;
output                    ks825d1;
output                    lf2d9af;
output                    icdb035;
output                    kfbb606;
output                    nefe66c;
output                    qi1aeb1;
output  [7:0]             rtd7589;
reg                      zm83218;
reg                      zz190c3;
reg                      uiffe18;
reg                      goff0c0;
reg                      jpe3f07;
reg                      ou1f83f;
reg                      blfc1f9;
reg                      kqe0fce;
reg                      ux7e70;
reg                      fc3f384;
reg                      xjf9c23;
reg                      icce11f;
reg                      wj708f9;
reg                      zz847cd;
reg                      ux23e6e;
reg                      ym1f375;
reg                      zxf9ba8;
reg                      blcdd47;
reg                      th6ea3f;
reg                      wj751ff;
reg                      twa8ffc;
reg                      cm7d8ad;
reg                      hq3ff12;
reg                      off7068;
reg                      os430fe;
reg                      ie920da;
reg                      kf12434;
reg                      ks921a4;
reg                      mt90d20;
reg                      ba86904;
reg                      ie34822;
reg                      qva4111;
reg  [7:0]               rtd7589;
reg  [15:0]              yxd6d6b;
reg  [15:0]              db22352;
reg  [15:0]              pu11a96;
reg  [1:0]               ym8d4b2;
reg  [1:0]               qt6a590;
reg  [1:0]               tu52c84;
reg                      je96423;
reg                      dob211a;
reg                      cb908d3;
reg                      bn8469c;
reg                      kf234e6;
reg                      sw1a734;
reg   [2:0]              czd39a0;
reg   [1:0]              do9cd05;
reg   [3:0]              nre682a;
reg   [1:0]              uk34157;
reg   [1:0]              fpa0ab8;
reg   [1:0]              ec55c6;
reg   [1:0]              hq2ae30;
reg   [3:0]              dm57183;
reg   [3:0]              hqb8c1a;
reg   [1:0]              mrc60d3;
reg   [3:0]              xy3069d;
reg   [3:0]              ba834ea;
reg   [1:0]              mg1a753;
reg   [3:0]              gbd3a98;
reg   [3:0]              ie9d4c5;
reg   [1:0]              cmea629;
reg   [1:0]              kq53148;
reg   [1:0]              ks98a40;
reg   [1:0]              psc5200;
reg   [1:0]              sj29002;
reg   [3:0]              ne48015;
reg                      hb400aa;
reg                      dzc77ff;
reg                      ir2ab0;
wire                     mg15584;
wire                     hdaac21;
wire                     cm5610f;
wire  [7:0]              bnb0878;
wire  [7:0]              nt843c7;
wire  [7:0]              aa21e3e;
wire  [7:0]              qif1f0;
wire                     go78f81;
wire                     fnc7c09;
wire                     ou3e04e ;
wire                     osf0271 ;
wire                     jr81388 ;
wire                     xl9c46;
wire                     mr4e237;

`ifdef GEN2

`else

`endif

`ifdef GEN2
reg dz711bd ;

`else

`endif
reg wy88dee;
reg ks3130b;
reg qg4c2c3;
reg [15 : 0] dm5d079;
reg [1 : 0] yx41e5d;
reg tjbfcdf;
reg vi66ab0;
reg fpaac1a;
reg yz33589;
reg oh9ac4d;
reg [7 : 0] ald626d;
reg kfb136c;
reg ba89b64;
reg rg4db23;
reg [7 : 0] os6d91b;
reg [7 : 0] dm6c8d8;
reg vv646c2;
reg ir23617;
reg do1b0bc;
reg nrd85e2;
reg thc2f17;
reg yz178be;
reg wybc5f5;
reg yxe2fa8;
reg gd17d45;
reg kfbea2d;
reg eaf516c;
reg fca8b60;
reg ld45b02;
reg rv2d817;
reg by6c0be;
reg ip605f3;
reg ir2f9d;
reg oh17cec;
reg wlbe765;
reg dzf3b2d;
reg wy9d96e;
reg jpecb70;
reg qt65b86;
reg rv2dc34;
reg [15 : 0] dz6e1a6;
reg [15 : 0] uv70d36;
reg [15 : 0] hq869b5;
reg [1 : 0] ec34daa;
reg [1 : 0] iea6d51;
reg [1 : 0] ir36a89;
reg ntb544c;
reg bnaa266;
reg en51336;
reg tw899b5;
reg ea4cdab;
reg ps66d59;
reg [2 : 0] mt36acb;
reg [1 : 0] tjb565c;
reg [3 : 0] wlab2e6;
reg [1 : 0] os59734;
reg [1 : 0] ykcb9a1;
reg [1 : 0] os5cd08;
reg [1 : 0] xje6840;
reg [3 : 0] wy34207;
reg [3 : 0] uxa1038;
reg [1 : 0] an81c5;
reg [3 : 0] hb40e2c;
reg [3 : 0] kf7167;
reg [1 : 0] jr38b3d;
reg [3 : 0] byc59ef;
reg [3 : 0] oh2cf7b;
reg [1 : 0] cm67bdc;
reg [1 : 0] nt3dee1;
reg [1 : 0] goef70f;
reg [1 : 0] th7b878;
reg [1 : 0] aldc3c6;
reg [3 : 0] rge1e35;
reg wyf1aa;
reg cm78d51;
reg yxc6a89;
reg ls3544c;
reg lfaa262;
reg [7 : 0] gb51316;
reg [7 : 0] je898b5;
reg [7 : 0] cm4c5ab;
reg [7 : 0] ui62d58;
reg bn16ac1;
reg xlb560f;
reg cbab07e;
reg lq583f4;
reg ayc1fa3;
reg ecfd19;
reg nr7e8c8;
reg [2047:0] ux1852e;
wire [88:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef GEN2

`else

`endif

`ifdef GEN2

`else

`endif

localparam do14bae = 89,jra5d72 = 32'hfdffea0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef GEN2


`else


`endif


`ifdef GEN2


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif









































always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yxd6d6b <= 0;      db22352 <= 0;      pu11a96 <= 0;
      ym8d4b2  <= 0;      qt6a590  <= 0;      tu52c84  <= 0;      je96423 <= 0;      dob211a <= 0;      cb908d3 <= 0;   end   else begin                  yxd6d6b <= (qg4c2c3) ? dm5d079 : 15'hFF;      db22352 <= dz6e1a6;      pu11a96 <= uv70d36;      ym8d4b2  <= (qg4c2c3) ? yx41e5d : 0;      qt6a590  <= ec34daa;      tu52c84  <= iea6d51;            je96423 <= ks3130b;      dob211a <= ntb544c;      cb908d3 <= bnaa266;   end
end

pcie_x1_top_wjf7c3f uxbe1fc (        .sys_clk          ( sys_clk ),    .rst_n            ( rst_n ),
    .aye5217           ( dz6e1a6 ),    .tu485cd            ( ec34daa ),
        .kf17352        ( mg15584 ),    .ldcd4a1        ( hdaac21 ),    .tu52874      ( cm5610f ),    .yza1d1f        ( bnb0878 ),    .pf747e2  ( go78f81 ),    .co1f8b1        ( nt843c7 ),    .yxe2c4e  ( fnc7c09 ),    .ohb13ae        ( aa21e3e ),    .of4eba3        ( qif1f0 )   ) ;
assign co3bfff = gb51316;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      bn8469c <= 1'b0;   end   else begin      bn8469c <= (((hq869b5[7:0] == K28_5) & (ir36a89[0] == 1'b1) &               (uv70d36 == {IDL, IDL}) & (iea6d51[1:0] == 2'b11)) |                      ((hq869b5[15:8] == K28_5) & (ir36a89[1] == 1'b1) &       ({hq869b5[7:0], uv70d36[15:8]} == {IDL, IDL}) & ir36a89[0] & iea6d51[1])             );   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kf234e6  <= 1'b0;   end   else  begin      kf234e6 <= (((uv70d36 == {K28_5, SKP}) & (iea6d51[1:0] == 2'b11)) |                    (({hq869b5[7:0],uv70d36[15:8]}  == {K28_5, SKP}) & ir36a89[0] & iea6d51[1]));   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      sw1a734  <= 1'b0;   end   else begin      sw1a734 <= ((({hq869b5, uv70d36}  == {K28_5, FTS, FTS, FTS}) &                     ({ir36a89, iea6d51} == 4'b1111)) |                    (({hq869b5[7:0], uv70d36, dz6e1a6[15:8] }  == {K28_5, FTS, FTS, FTS}) &                     ({ir36a89[0], iea6d51, ec34daa[1]} == 4'b1111)));   end
end








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hb400aa <= 1'b0;   end   else begin      hb400aa <= tw899b5 || ps66d59;   end
end





assign ou3e04e      = ((uv70d36[7:0]  ==  8'h00) && (iea6d51[0] == 1'b0)) ;
assign osf0271      = ((uv70d36[15:8] ==  8'h00) && (iea6d51[1] == 1'b0)) ;
assign jr81388 = ((hq869b5[7:0]  ==  8'h00) && (ir36a89[0] == 1'b0)) ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ne48015 <= 0;   end   else begin      if (oh9ac4d) begin         ne48015 <= 0;      end                  else if (((rge1e35 < 'd8) && ~wy88dee) ||               ((rge1e35 < 'd3) &&  wy88dee)) begin         case({lq583f4,cbab07e})            2'b00: ne48015 <= 0;            2'b01: ne48015 <= 4'd1;            2'b11: ne48015 <= (ayc1fa3) ? (rge1e35 +4'd2) : 4'd2;            2'b10: ne48015 <= (ayc1fa3) ? (rge1e35 +4'd1) : 0;         endcase      end   end
end



assign  xl9c46  = (bn16ac1 == 1'b0) & (gb51316 == os6d91b);
assign  mr4e237  = (xlb560f == 1'b0) & (je898b5 == dm6c8d8);
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      do9cd05   <= 0;      nre682a  <= 0;      uk34157   <= 0;      fpa0ab8    <= 0;      ec55c6      <= 0;      hq2ae30    <= 0;      dm57183  <= 0;      hqb8c1a  <= 0;      mrc60d3   <= 0;      xy3069d  <= 0;      ba834ea <= 0;      mg1a753          <= 0;      gbd3a98   <= 0;      ie9d4c5   <= 0;      cmea629     <= 0;      kq53148      <= 0;      ks98a40      <= 0;      psc5200     <= 0;      sj29002     <= 0;      czd39a0         <= 0;   end   else begin            if (wyf1aa | oh9ac4d) begin         do9cd05 <= 0;      end            else if (!tjb565c[1]) begin         if (yxc6a89 && {gb51316,je898b5}== {PAD,PAD} && {bn16ac1,xlb560f} == 2'b11) begin            do9cd05 <= tjb565c + 1;         end         else if (yxc6a89 || ls3544c) begin            do9cd05 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         nre682a <= 0;      end      else if (!wlab2e6[3]) begin


`ifdef GEN2
            if (({gb51316,je898b5}== {PAD,PAD}) &&        ({bn16ac1,xlb560f} == 2'b11) &&        ((ui62d58[4] == 1'b0 && yxc6a89) ||                 (ui62d58[2] == 1'b1 && yxc6a89) ||                 (ls3544c)        )       ) begin               nre682a <= wlab2e6 + 1;            end


`else
            if ((yxc6a89 || ls3544c) && {gb51316,je898b5}== {PAD,PAD} && {bn16ac1,xlb560f} == 2'b11) begin               nre682a <= wlab2e6 + 1;            end


`endif
         else if (yxc6a89 || ls3544c) begin            nre682a <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         uk34157 <= 0;      end            else if (!os59734[1]) begin         if (yxc6a89 && {gb51316,je898b5}== {os6d91b,PAD} && {bn16ac1,xlb560f} == 2'b01) begin            uk34157 <= os59734 + 1;         end         else if (yxc6a89 || ls3544c) begin            uk34157 <= 0;         end      end
             if (wyf1aa | oh9ac4d) begin         fpa0ab8 <= 0;      end            else if (!ykcb9a1[1]) begin         if (yxc6a89 && {je898b5}== {PAD} && {bn16ac1,xlb560f} == 2'b01) begin            fpa0ab8 <= ykcb9a1 + 1;         end         else if (yxc6a89 || ls3544c) begin            fpa0ab8 <= 0;         end      end             if (wyf1aa | oh9ac4d) begin         ec55c6 <= 0;      end            else if (!os5cd08[1]) begin         if (yxc6a89 && {je898b5}== {PAD} && xlb560f == 1'b1) begin            ec55c6 <= os5cd08 + 1;         end         else if (yxc6a89 || ls3544c) begin            ec55c6 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         hq2ae30 <= 0;      end            else if (!xje6840[1]) begin         if (yxc6a89 && {gb51316}== {os6d91b} && {bn16ac1,xlb560f} == 2'b00) begin            hq2ae30 <= xje6840 + 1;         end         else if (yxc6a89 || ls3544c) begin            hq2ae30 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         dm57183 <= 0;      end            else if (!wy34207[3]) begin                  if (yxc6a89 && ecfd19 && !nr7e8c8) begin            dm57183 <= wy34207 + 1;         end         else if (yxc6a89 || ls3544c) begin            dm57183 <= 0;         end      end             if (wyf1aa | oh9ac4d) begin         hqb8c1a <= 0;      end            else if (!uxa1038[3]) begin                  if (yxc6a89 && !ecfd19 && nr7e8c8) begin            hqb8c1a <= uxa1038 + 1;         end         else if (yxc6a89 || ls3544c) begin            hqb8c1a <= 0;         end      end
            if (wyf1aa | oh9ac4d) begin         mrc60d3 <= 0;      end            else if (!an81c5[1]) begin         if (yxc6a89 && {gb51316,je898b5}== {os6d91b,dm6c8d8} && {bn16ac1,xlb560f} == 2'b00) begin            mrc60d3 <= an81c5 + 1;         end         else if (yxc6a89 || ls3544c) begin            mrc60d3 <= 0;         end      end
            if (wyf1aa | oh9ac4d) begin         xy3069d <= 0;      end            else if (!hb40e2c[3]) begin         if ((yxc6a89 || ls3544c) && {gb51316,je898b5}== {os6d91b,dm6c8d8} && {bn16ac1,xlb560f} == 2'b00) begin            xy3069d <= hb40e2c + 1;         end         else if (yxc6a89 || ls3544c) begin            xy3069d <= 0;         end      end             if (wyf1aa | oh9ac4d) begin         ba834ea <= 0;      end            else if (!kf7167[3]) begin                  if (yxc6a89 && !ecfd19 && !nr7e8c8) begin            ba834ea <= kf7167 + 1;         end         else if (yxc6a89 || ls3544c) begin            ba834ea <= 0;         end      end             if (wyf1aa | oh9ac4d) begin         czd39a0 <= 0;      end            else if (!mt36acb[2]) begin         if (yxc6a89 || ls3544c) begin            czd39a0 <= mt36acb + 1;         end      end
            if (wyf1aa | oh9ac4d) begin         mg1a753 <= 0;      end            else if (!jr38b3d[1]) begin         if (ls3544c) begin            mg1a753 <= jr38b3d + 1;         end         else if (yxc6a89) begin            mg1a753 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         gbd3a98 <= 0;      end            else if (!byc59ef[3]) begin         if (ls3544c && {gb51316,je898b5}== {PAD,PAD} && {bn16ac1,xlb560f} == 2'b11) begin            gbd3a98 <= byc59ef + 1;         end         else if (yxc6a89 || ls3544c) begin            gbd3a98 <= 0;         end      end
            if (wyf1aa | oh9ac4d) begin         ie9d4c5 <= 0;      end            else if (!oh2cf7b[3]) begin         if (ls3544c && {gb51316,je898b5}== {os6d91b,dm6c8d8} && {bn16ac1,xlb560f} == 2'b00) begin            ie9d4c5 <= oh2cf7b + 1;         end         else if (yxc6a89 || ls3544c) begin            ie9d4c5 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         cmea629 <= 0;      end            else if (!cm67bdc[1]) begin         if (yxc6a89 && ui62d58[0] == 1'b1 && ecfd19 && nr7e8c8) begin            cmea629 <= cm67bdc + 1;         end         else if (yxc6a89 || ls3544c) begin            cmea629 <= 0;         end      end            if (wyf1aa | oh9ac4d) begin         kq53148 <= 0;      end            else if (!nt3dee1[1]) begin         if (yxc6a89 && ui62d58[1] == 1'b1) begin            kq53148 <= nt3dee1 + 1;         end         else if (yxc6a89 || ls3544c) begin            kq53148 <= 0;         end      end
             if (wyf1aa | oh9ac4d) begin         ks98a40 <= 0;      end            else if (!goef70f[1]) begin         if (yxc6a89 && ui62d58[2] == 1'b1) begin            ks98a40 <= goef70f + 1;         end         else if (yxc6a89 || ls3544c) begin            ks98a40 <= 0;         end      end             if (wyf1aa | oh9ac4d) begin         psc5200 <= 0;      end            else if (!th7b878[1]) begin         if (yxc6a89 && ui62d58[2] == 1'b1 && {gb51316,je898b5} == {os6d91b,dm6c8d8} &&            {bn16ac1,xlb560f} == 2'b00 && cm4c5ab == ald626d ) begin            psc5200 <= th7b878 + 1;         end         else if (yxc6a89 || ls3544c) begin            psc5200 <= 0;         end      end
             if (wyf1aa | oh9ac4d) begin         sj29002 <= 0;      end            else if (!aldc3c6[1]) begin         if (ls3544c && ui62d58[3] == 1'b1) begin            sj29002 <= aldc3c6 + 1;         end         else if (yxc6a89 || ls3544c) begin            sj29002 <= 0;         end      end   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      uiffe18    <= 1'b0;      goff0c0    <= 1'b0;      zm83218           <= 1'b0;      zz190c3           <= 1'b0;      cm7d8ad         <= 1'b0;      off7068        <= 1'b0;      ie920da          <= 1'b0;      rtd7589         <= 0;   end   else begin
      if (yxc6a89 && {gb51316,je898b5}== {os6d91b,dm6c8d8} && {bn16ac1,xlb560f}== 2'b00)         uiffe18 <= 1'b1;      else         uiffe18 <= 1'b0;      if (ls3544c && {gb51316,je898b5}== {os6d91b,dm6c8d8} && {bn16ac1,xlb560f}== 2'b00)         goff0c0 <= 1'b1;      else         goff0c0 <= 1'b0;      zm83218           <= yxc6a89;      zz190c3           <= ls3544c;      if (wy88dee)      cm7d8ad         <= (rge1e35 >= 4'd3) ? 1'b1 : 1'b0;      else      cm7d8ad         <= (rge1e35 >= 4'd4) ? 1'b1 : 1'b0;
      off7068        <= tw899b5;      ie920da          <= ea4cdab;      rtd7589         <= cm4c5ab;   end
end





`ifdef GEN2
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         dz711bd <= 1'b0;      else if (ea4cdab)         dz711bd <= 1'b1;      else if (rg4db23)         dz711bd  <= 1'b0;   end   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         os430fe <= 1'b0;      else         os430fe <= ((~en51336 & bnaa266 & ~tw899b5) |                             (rg4db23 && ~dz711bd)) ? 1'b1 : 1'b0;   end

`else
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         os430fe <= 1'b0;      end      else begin         os430fe <= (~en51336 & bnaa266 & ~tw899b5) ? 1'b1 : 1'b0;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jpe3f07         <= 1'b0;      ou1f83f   <= 1'b0;      blfc1f9   <= 1'b0;      kqe0fce    <= 1'b0;      ux7e70  <= 1'b0;      fc3f384   <= 1'b0;      xjf9c23    <= 1'b0;      icce11f      <= 1'b0;      zxf9ba8 <= 1'b0;      blcdd47  <= 1'b0;      th6ea3f  <= 1'b0;      ux23e6e  <= 1'b0;      ym1f375  <= 1'b0;      wj708f9          <= 1'b0;      zz847cd   <= 1'b0;      wj751ff   <= 1'b0;      twa8ffc   <= 1'b0;      hq3ff12        <= 1'b0;      kf12434      <= 1'b0;      ks921a4     <= 1'b0;      mt90d20     <= 1'b0;      ba86904      <= 1'b0;      ie34822      <= 1'b0;      qva4111     <= 1'b0;   end   else if (oh9ac4d) begin      jpe3f07         <= 1'b0;      ou1f83f   <= 1'b0;      blfc1f9   <= 1'b0;      kqe0fce    <= 1'b0;      ux7e70  <= 1'b0;      fc3f384   <= 1'b0;      xjf9c23    <= 1'b0;      icce11f      <= 1'b0;      zxf9ba8 <= 1'b0;      blcdd47  <= 1'b0;      th6ea3f  <= 1'b0;      ux23e6e  <= 1'b0;      ym1f375  <= 1'b0;      wj708f9          <= 1'b0;      zz847cd   <= 1'b0;      wj751ff   <= 1'b0;      twa8ffc   <= 1'b0;      hq3ff12        <= 1'b0;      kf12434      <= 1'b0;      ks921a4     <= 1'b0;      mt90d20     <= 1'b0;      ba86904      <= 1'b0;      ie34822      <= 1'b0;      qva4111     <= 1'b0;   end   else begin      jpe3f07         <= mt36acb[2];                           ou1f83f   <= tjb565c[1];                     ux23e6e  <= wlab2e6[3];                    blfc1f9   <= os59734[1];                     kqe0fce    <= xje6840[1];                      ux7e70  <= (|wy34207[3:1]);               fc3f384   <= an81c5[1];                     ym1f375  <= hb40e2c[3];                    xjf9c23    <= ykcb9a1[1];                      icce11f      <= os5cd08[1];                        zxf9ba8 <= kf7167[3];                   blcdd47  <= uxa1038[3];                    th6ea3f  <= wy34207[3];                    wj708f9          <= jr38b3d[1];                            zz847cd   <= (|oh2cf7b[3:1]);                wj751ff   <= byc59ef[3];                     twa8ffc   <= oh2cf7b[3];                     if (wy88dee)      hq3ff12        <= rge1e35 >= 'd3;                      else      hq3ff12        <= rge1e35[3];                          kf12434      <= th7b878[1];                       ks921a4     <= cm67bdc[1];                       mt90d20     <= aldc3c6[1];                       ba86904      <= (goef70f[1] || fpaac1a);        ie34822      <= (nt3dee1[1] || vi66ab0);        qva4111     <= (cm67bdc[1]|| tjbfcdf);    end
end
assign  jpf3363         = vv646c2;
assign  xy99b1f   = ir23617;
assign  ng2afcb   = do1b0bc;
assign  ps6c7d7    = nrd85e2;
assign  ps63ebb  = thc2f17;
assign  nrf96df   = yz178be;
assign  rtcd8fa    = wybc5f5;
assign  jr2d4fc      = yxe2fa8;
assign  uv6a7e7 = ld45b02;
assign  yk53f3c  = rv2d817;
assign  yz9f9e1  = by6c0be;
assign  dzfcf0d  = eaf516c;
assign  gbe786f  = fca8b60;
assign  nrd76c0          = gd17d45;
assign  ks1f5db   = kfbea2d;
assign  yzdf62   = ip605f3;
assign  osfaed8   = ir2f9d;
assign  bld81a8        = oh17cec;
assign  ks825d1      = wlbe765;
assign  lf2d9af     = dzf3b2d;
assign  icdb035     = wy9d96e;
assign  kfbb606      = jpecb70;
assign  nefe66c      = qt65b86;
assign  qi1aeb1     = rv2dc34;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ir2ab0     <= 1'b0;      dzc77ff      <= 1'b0;   end   else begin                  if (kfb136c == 1'b0) begin         ir2ab0 <= 1'b0;      end      else if (lfaa262) begin         ir2ab0 <= 1'b1;      end                  if (ba89b64 == 1'b1) begin         dzc77ff <= 1'b0 ;      end      else if (yz33589) begin         dzc77ff <= cm78d51;      end   end
end

always@* begin wy88dee<=xjc2975[0];ks3130b<=xjc2975[1];qg4c2c3<=xjc2975[2];dm5d079<={asb_data>>1,xjc2975[3]};yx41e5d<={asb_kcntl>>1,xjc2975[4]};tjbfcdf<=xjc2975[5];vi66ab0<=xjc2975[6];fpaac1a<=xjc2975[7];yz33589<=xjc2975[8];oh9ac4d<=xjc2975[9];ald626d<={ukb91c7>>1,xjc2975[10]};kfb136c<=xjc2975[11];ba89b64<=xjc2975[12];rg4db23<=xjc2975[13];os6d91b<={xjc71df>>1,xjc2975[14]};dm6c8d8<={jr38eff>>1,xjc2975[15]};vv646c2<=xjc2975[16];ir23617<=xjc2975[17];do1b0bc<=xjc2975[18];nrd85e2<=xjc2975[19];thc2f17<=xjc2975[20];yz178be<=xjc2975[21];wybc5f5<=xjc2975[22];yxe2fa8<=xjc2975[23];gd17d45<=xjc2975[24];kfbea2d<=xjc2975[25];eaf516c<=xjc2975[26];fca8b60<=xjc2975[27];ld45b02<=xjc2975[28];rv2d817<=xjc2975[29];by6c0be<=xjc2975[30];ip605f3<=xjc2975[31];ir2f9d<=xjc2975[32];oh17cec<=xjc2975[33];wlbe765<=xjc2975[34];dzf3b2d<=xjc2975[35];wy9d96e<=xjc2975[36];jpecb70<=xjc2975[37];qt65b86<=xjc2975[38];rv2dc34<=xjc2975[39];dz6e1a6<={yxd6d6b>>1,xjc2975[40]};uv70d36<={db22352>>1,xjc2975[41]};hq869b5<={pu11a96>>1,xjc2975[42]};ec34daa<={ym8d4b2>>1,xjc2975[43]};iea6d51<={qt6a590>>1,xjc2975[44]};ir36a89<={tu52c84>>1,xjc2975[45]};ntb544c<=xjc2975[46];bnaa266<=xjc2975[47];en51336<=xjc2975[48];tw899b5<=xjc2975[49];ea4cdab<=xjc2975[50];ps66d59<=xjc2975[51];mt36acb<={czd39a0>>1,xjc2975[52]};tjb565c<={do9cd05>>1,xjc2975[53]};wlab2e6<={nre682a>>1,xjc2975[54]};os59734<={uk34157>>1,xjc2975[55]};ykcb9a1<={fpa0ab8>>1,xjc2975[56]};os5cd08<={ec55c6>>1,xjc2975[57]};xje6840<={hq2ae30>>1,xjc2975[58]};wy34207<={dm57183>>1,xjc2975[59]};uxa1038<={hqb8c1a>>1,xjc2975[60]};an81c5<={mrc60d3>>1,xjc2975[61]};hb40e2c<={xy3069d>>1,xjc2975[62]};kf7167<={ba834ea>>1,xjc2975[63]};jr38b3d<={mg1a753>>1,xjc2975[64]};byc59ef<={gbd3a98>>1,xjc2975[65]};oh2cf7b<={ie9d4c5>>1,xjc2975[66]};cm67bdc<={cmea629>>1,xjc2975[67]};nt3dee1<={kq53148>>1,xjc2975[68]};goef70f<={ks98a40>>1,xjc2975[69]};th7b878<={psc5200>>1,xjc2975[70]};aldc3c6<={sj29002>>1,xjc2975[71]};rge1e35<={ne48015>>1,xjc2975[72]};wyf1aa<=xjc2975[73];cm78d51<=xjc2975[74];yxc6a89<=xjc2975[75];ls3544c<=xjc2975[76];lfaa262<=xjc2975[77];gb51316<={bnb0878>>1,xjc2975[78]};je898b5<={nt843c7>>1,xjc2975[79]};cm4c5ab<={aa21e3e>>1,xjc2975[80]};ui62d58<={qif1f0>>1,xjc2975[81]};bn16ac1<=xjc2975[82];xlb560f<=xjc2975[83];cbab07e<=xjc2975[84];lq583f4<=xjc2975[85];ayc1fa3<=xjc2975[86];ecfd19<=xjc2975[87];nr7e8c8<=xjc2975[88];end
always@* begin ux1852e[2047]<=asb_eidle_rx;ux1852e[2046]<=asb_lane_sync;ux1852e[2044]<=asb_data[0];ux1852e[2040]<=asb_kcntl[0];ux1852e[2032]<=hl_gto_hrst;ux1852e[2016]<=hl_gto_dis;ux1852e[1984]<=hl_gto_lbk;ux1852e[1980]<=th6ea3f;ux1852e[1950]<=wj708f9;ux1852e[1930]<=ks921a4;ux1852e[1921]<=go46e47;ux1852e[1912]<=wj751ff;ux1852e[1853]<=zz847cd;ux1852e[1818]<=cm5610f;ux1852e[1813]<=mt90d20;ux1852e[1806]<=czd39a0[0];ux1852e[1802]<=dm57183[0];ux1852e[1795]<=zz37238;ux1852e[1777]<=twa8ffc;ux1852e[1685]<=fnc7c09;ux1852e[1659]<=ux23e6e;ux1852e[1648]<=cb908d3;ux1852e[1630]<=blfc1f9;ux1852e[1588]<=bnb0878[0];ux1852e[1578]<=ba86904;ux1852e[1564]<=do9cd05[0];ux1852e[1556]<=hqb8c1a[0];ux1852e[1542]<=ukb91c7[0];ux1852e[1511]<=xjf9c23;ux1852e[1506]<=hq3ff12;ux1852e[1436]<=je96423;ux1852e[1383]<=qt6a590[0];ux1852e[1369]<=pu11a96[0];ux1852e[1323]<=ou3e04e;ux1852e[1280]<=ie9d4c5[0];ux1852e[1271]<=ym1f375;ux1852e[1249]<=bn8469c;ux1852e[1212]<=kqe0fce;ux1852e[1197]<=jr81388;ux1852e[1129]<=nt843c7[0];ux1852e[1109]<=ie34822;ux1852e[1080]<=nre682a[0];ux1852e[1064]<=mrc60d3[0];ux1852e[1036]<=jpc8e38;ux1852e[1027]<=kq53148[0];ux1852e[1023]<=reduce_idlecnt;ux1852e[990]<=blcdd47;ux1852e[975]<=icce11f;ux1852e[965]<=kf12434;ux1852e[909]<=hdaac21;ux1852e[903]<=sw1a734;ux1852e[901]<=hq2ae30[0];ux1852e[842]<=go78f81;ux1852e[824]<=dob211a;ux1852e[815]<=ou1f83f;ux1852e[755]<=fc3f384;ux1852e[718]<=tu52c84[0];ux1852e[694]<=mr4e237;ux1852e[691]<=ym8d4b2[0];ux1852e[684]<=db22352[0];ux1852e[640]<=gbd3a98[0];ux1852e[598]<=osf0271;ux1852e[513]<=cmea629[0];ux1852e[495]<=zxf9ba8;ux1852e[454]<=mg15584;ux1852e[451]<=kf234e6;ux1852e[450]<=ec55c6[0];ux1852e[421]<=qif1f0[0];ux1852e[407]<=jpe3f07;ux1852e[377]<=ux7e70;ux1852e[347]<=xl9c46;ux1852e[342]<=yxd6d6b[0];ux1852e[320]<=mg1a753[0];ux1852e[227]<=ir2ab0;ux1852e[225]<=fpa0ab8[0];ux1852e[210]<=aa21e3e[0];ux1852e[203]<=jr38eff[0];ux1852e[171]<=qva4111;ux1852e[160]<=ba834ea[0];ux1852e[113]<=hb400aa;ux1852e[112]<=uk34157[0];ux1852e[101]<=xjc71df[0];ux1852e[80]<=xy3069d[0];ux1852e[56]<=ne48015[0];ux1852e[50]<=fp38e3b;ux1852e[28]<=sj29002[0];ux1852e[25]<=dm471c7;ux1852e[14]<=psc5200[0];ux1852e[7]<=ks98a40[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule



















































































`timescale 1 ns / 100 ps
module pcie_x1_top_kqc4c35 
   (
    
    sys_clk,            
    rst_n,              
    
    
    LINK_NUM,           
    TX_EIDL_CNT,        

    
    swa98d2,     
    zz37238,     
    ukb91c7,      
    wy1a402,  
    jpd2010,  
    ep90086,       
    ux80435,   
    gd21ac,          
    aa10d65,     
    je86b28,     
    vk35942,  
    ouaca13,     
    en65098,      
    db284c5,      
    ltssm_l0,           

    
    zm83218,             
    zz190c3,             
    cm7d8ad,           
    co3bfff,           
    
    
    and3a1,       

    ne48a16,

    
    yz9f8f7,       
    yxdc89f,         
    an1dcdc,           
    vi73722,          
    zz227e3,            
    cb80666,        
    en657c1,        
    db199a7,     
    mrccd3e,       
    zz6a3b,    
    zkc0d47,        
    twa7d59,        
    xjc71df,           
    jr38eff            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif

`ifdef SIMULATE
parameter wjcc3bb   = 10'd6 ;

`else
parameter wjcc3bb   = 10'd1023 ;

`endif
localparam zmeee6 = 2 ;
localparam ww77732 = 3'd0 ;
localparam yzbb991  = 3'd1 ;
localparam ofdcc8c  = 3'd2 ;
localparam xje6464= 3'd3 ;
localparam vx32326  = 3'd4 ;
localparam rv91937 = 1 ;
localparam pu8c9be = 2'd0 ;
localparam bl64df3  = 2'd1 ;
localparam an26f9e  = 2'd2 ;
localparam xl37cf5 = 0 ;
localparam cbbe7ae = 1'd0 ;
localparam zxf3d75  = 1'd1 ;
localparam tj9ebae = 1 ;
localparam mef5d77 = 2'd0 ;
localparam wlaebb9  = 2'd1 ;
localparam uv75dcd  = 2'd2 ;
localparam iraee6d = 1 ;
localparam kq7736d = 2'd0 ;
localparam ecb9b69  = 2'd1 ;
localparam pfcdb49  = 2'd2 ;
localparam yk6da4f      = 8'hFC ;
localparam ea6d278        = yk6da4f ;
localparam me49e0b   = {ea6d278,ea6d278} ;
localparam ykc1678  = 2'b11;

`ifdef LTSSM_MACO

`else
localparam lsb3c0 = 16 ;
localparam su59e03 = 4 ;
localparam bycf018 = LANE_WIDTH ;

`endif
input                       sys_clk;
input                       rst_n;
input   [7:0]               LINK_NUM;
input   [3:0]               TX_EIDL_CNT ;
input   [LANE_WIDTH-1:0]    swa98d2;
input                       zz37238;
input   [7:0]               ukb91c7;
input                       wy1a402;
input                       jpd2010;
input   [LANE_WIDTH-1:0]    ep90086;
input   [OS_WIDTH-1:0]      ux80435;
input                       gd21ac;
input   [3:0]               aa10d65;
input   [3:0]               je86b28;
input                       vk35942;
input                       ouaca13;
input                       en65098;
input   [3:0]               db284c5;
input                       ltssm_l0;
input                       zm83218;
input                       zz190c3;
input                       cm7d8ad;
input   [31:0]              co3bfff;
input                       and3a1;
input                       ne48a16;
output [LANE_WIDTH-1:0]     yz9f8f7;
output [2*LANE_WIDTH-1:0]   yxdc89f;
output [16*LANE_WIDTH-1:0]  an1dcdc;
output [2*LANE_WIDTH-1:0]   vi73722;
output [LANE_WIDTH-1:0]     zz227e3;
output                      cb80666;
output                      en657c1;
output                      db199a7;
output                      mrccd3e;
output                      zkc0d47;
output                      twa7d59;
output                      zz6a3b;
output [8*LANE_WIDTH-1:0]   xjc71df;
output [8*LANE_WIDTH-1:0]   jr38eff;
wire [7:0]                 hb61313;
wire [7:0]                 bn989f;
wire [7:0]                 qg4c4ff;
wire [7:0]                 cm627f8;
wire [7:0]                 jr13fc0;
wire [16*LANE_WIDTH-1:0]  cmff03d;
wire [2*LANE_WIDTH-1:0]   nec0f4c;
wire [16*LANE_WIDTH-1:0]  zz3d31c;
wire [2*LANE_WIDTH-1:0]   ww4c736;
wire [2*LANE_WIDTH-1:0]   ph1cd83;
wire [16*LANE_WIDTH-1:0]  kf360f7;
wire [2*LANE_WIDTH-1:0]   do83dee;
reg [7:0]                  zm1ef72;
reg [7:0]                  kdf7b93;
reg [7:0]                  babdc9c;
reg [7:0]                  psee4e3;
reg                        kq7271a;
reg                        fc938d1;
reg                        ba9c68b;
reg                        ble345b;
reg [7:0]                  ym1a2de;
reg [7:0]                  wwd16f0;
reg [7:0]                  jr8b781;
reg [7:0]                  en5bc0f;
reg                        wwde07d;
reg                        gof03e8;
reg                        xl81f40;
reg                        gqfa07;
reg [zmeee6:0]         ene81c0;
reg [63:0]                 hb40e05;
reg [7:0]                  kf702f;
reg                        jr3817d;
reg [2:0]                  xwc0bee;
reg                        gq5f73;
reg                        ba2fb99;
reg                        go7dccb;
reg                        dmee659;
reg                        tu732ca;
reg                        zm99653;
reg                        iccb29b;
reg                        ui594d9;
reg [rv91937:0]         ui5364b;
reg [15:0]                 ph9b258;
reg [1:0]                  end92c6;
reg [xl37cf5:0]         qt4b1ac;
reg [15:0]                 ho58d65;
reg [1:0]                  shc6b2a;
reg [tj9ebae:0]         swacaa3;
reg [15:0]                 kd65518;
reg [1:0]                  xy2a8c5;
reg                        cz5462b;
reg [iraee6d:0]         ir18ae8;
reg [iraee6d:0]         sw2ba22;
reg [iraee6d:0]         she888b;
reg [iraee6d:0]         fp222e4;
reg [15:0]                 fc11726;
reg [15:0]                 db8b933;
reg [15:0]                 cm5c99e;
reg [15:0]                 dme4cf0;
reg [1:0]                  qv26782;
reg [1:0]                  qv33c14;
reg [1:0]                  zz9e0a4;
reg [1:0]                  eaf0526;
reg [1:0]                  ec82930;
reg [1:0]                  hq14980;
reg [1:0]                  oha4c02;
reg [1:0]                  an26014;
reg [4:0]                  ri300a4;
reg [16*LANE_WIDTH-1:0]    an1dcdc;
reg [2*LANE_WIDTH-1:0]     vi73722;
reg [2*LANE_WIDTH-1:0]     yxdc89f;
reg [LANE_WIDTH-1:0]       zz227e3;
reg                        ou15eaf;
reg                        tjaf578;
reg                        sh7abc6;
reg                        rgd5e34;
reg                        rvaf1a2;
reg                        ou1033a;
reg                        ipc68b1;
reg                        mg3458c;
reg                        ria2c60;
reg [9:0]                  db16303;
reg [4:0]                  irb181e;
reg [4:0]                  pu8c0f5;
reg [4:0]                  wj607aa;
reg [4:0]                  rv3d55;
reg                        hq1eaae;
reg                        uif5573;
reg                        fpaab98;
reg                        pf55cc7;
reg                        anae63e;
reg                        vi731f4;
reg                        ou98fa3;
reg [LANE_WIDTH -1:0]      co3e8c6;
reg [7:0]                  tuf4630 ;
reg [7:0]                  uka3182 ;
reg [7:0]                  wl18c10 ;
reg [7:0]                  ipc6084 ;

`ifdef LTSSM_MACO
reg [1:0]                  ri30425 ;
reg [1:0]                  ec8212a ;

`else
reg [su59e03 -1:0]      ri30425 ;
reg [su59e03 -1:0]      ec8212a ;

`endif
reg                        tu6970b ;
wire [LANE_WIDTH -1:0]     yz9f8f7 ;
parameter ou3b54b = 2'd0;
parameter psdaa59 = 2'd1;
parameter hod52cb = 2'd2;
parameter qia965b = 2'd3;

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LTSSM_MACO

`else

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`endif
reg [7 : 0] yx4b2d9;
reg [3 : 0] su596cd;
reg [LANE_WIDTH - 1 : 0] qt5b349;
reg oh9ac4d;
reg [7 : 0] ald626d;
reg jc69326;
reg su49933;
reg [LANE_WIDTH - 1 : 0] fn64cc9;
reg [OS_WIDTH - 1 : 0] oh33274;
reg ls993a5;
reg [3 : 0] czc9d2b;
reg [3 : 0] al4e95d;
reg hb74aec;
reg jra5767;
reg ou2bb3f;
reg [3 : 0] ho5d9f9;
reg nr64da8;
reg db22449;
reg jr91274;
reg fnf958b;
reg [31 : 0] rgcac5e;
reg kq562f2;
reg of7a072;
reg [7 : 0] tj8bc84;
reg [7 : 0] cz5e426;
reg [7 : 0] enf2134;
reg [7 : 0] kf909a5;
reg [7 : 0] nt84d2c;
reg [16 * LANE_WIDTH - 1 : 0] qi34b3d;
reg [2 * LANE_WIDTH - 1 : 0] qv2cf4e;
reg [16 * LANE_WIDTH - 1 : 0] lf3d3a1;
reg [2 * LANE_WIDTH - 1 : 0] mr4e876;
reg [2 * LANE_WIDTH - 1 : 0] sja1da6;
reg [16 * LANE_WIDTH - 1 : 0] tu769a2;
reg [2 * LANE_WIDTH - 1 : 0] wya6895;
reg [7 : 0] ou344a9;
reg [7 : 0] hqa2548;
reg [7 : 0] wl12a42;
reg [7 : 0] ir95215;
reg yma90ad;
reg jc48569;
reg zk42b4a;
reg sw15a52;
reg [7 : 0] xyad290;
reg [7 : 0] by69483;
reg [7 : 0] jp4a41b;
reg [7 : 0] dm520df;
reg ir906fa;
reg zm837d5;
reg xy1beab;
reg tudf55b;
reg [zmeee6 : 0] psd56d0;
reg [63 : 0] epab683;
reg [7 : 0] cz5b41c;
reg dmda0e4;
reg [2 : 0] lqd0722;
reg xy83913;
reg fp1c89a;
reg bye44d6;
reg fp226b3;
reg hd1359e;
reg oh9acf6;
reg ald67b5;
reg ieb3dac;
reg [rv91937 : 0] thf6b07;
reg [15 : 0] xlb583e;
reg [1 : 0] ecac1f7;
reg [xl37cf5 : 0] oh7dcc;
reg [15 : 0] ie3ee64;
reg [1 : 0] qtf7320;
reg [tj9ebae : 0] ipcc829;
reg [15 : 0] xj6414d;
reg [1 : 0] xy20a6f;
reg sw537a;
reg [iraee6d : 0] tu4de84;
reg [iraee6d : 0] sh7a11c;
reg [iraee6d : 0] xl8472a;
reg [iraee6d : 0] db1cab5;
reg [15 : 0] kqe55ae;
reg [15 : 0] xy2ad71;
reg [15 : 0] ay56b8b;
reg [15 : 0] phb5c59;
reg [1 : 0] uxae2cf;
reg [1 : 0] bl7167c;
reg [1 : 0] jr8b3e6;
reg [1 : 0] cm59f37;
reg [1 : 0] dmcf9b8;
reg [1 : 0] dm7cdc2;
reg [1 : 0] hbe6e13;
reg [1 : 0] bn3709f;
reg [4 : 0] lsb84ff;
reg pfc27fa;
reg xl13fd7;
reg qv9febf;
reg osff5fd;
reg osfafe9;
reg kdc386d;
reg phbfa47;
reg uvfd23e;
reg jpe91f4;
reg [9 : 0] tu48fa7;
reg [4 : 0] fa47d3b;
reg [4 : 0] ou3e9da;
reg [4 : 0] lqf4ed0;
reg [4 : 0] nga7683;
reg qi3b41a;
reg fada0d1;
reg byd068a;
reg vk83453;
reg qi1a29b;
reg kqd14d8;
reg qv8a6c1;
reg [LANE_WIDTH - 1 : 0] hd9b068;
reg [7 : 0] thd8346;
reg [7 : 0] mec1a37;
reg [7 : 0] yzd1b9;
reg [7 : 0] os68dcc;
reg gb5bbae;
reg [2047:0] ux1852e;
wire [117:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef SIMULATE

`else

`endif

`ifdef LTSSM_MACO

`else

`endif

`ifdef LTSSM_MACO

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LTSSM_MACO


`else


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`endif

localparam do14bae = 118,jra5d72 = 32'hfdffe44b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef SIMULATE


`else


`endif


`ifdef LTSSM_MACO


`else


`endif


`ifdef LTSSM_MACO


`else


`endif


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes


`else


`endif


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LTSSM_MACO


`else


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif





`ifdef SIMULATE



`else



`endif




`ifdef LTSSM_MACO



`else



`endif













`ifdef LTSSM_MACO



`else



`endif





always @(al4e95d) begin   case (al4e95d[3:0])      4'b1000 : {tuf4630, uka3182, wl18c10, ipc6084 } = {8'd0,PAD,PAD,PAD} ;      4'b0100 : {tuf4630, uka3182, wl18c10, ipc6084 } = {PAD,8'd0,PAD,PAD} ;      4'b0010 : {tuf4630, uka3182, wl18c10, ipc6084 } = {PAD,PAD,8'd0,PAD} ;      4'b0001 : {tuf4630, uka3182, wl18c10, ipc6084 } = {PAD,PAD,PAD,8'd0} ;      4'b1100 : {tuf4630, uka3182, wl18c10, ipc6084 } = {8'd0,8'd1,PAD,PAD} ;      4'b0110 : {tuf4630, uka3182, wl18c10, ipc6084 } = {PAD,8'd0,8'd1,PAD} ;      4'b0011 : {tuf4630, uka3182, wl18c10, ipc6084 } = {PAD,PAD,8'd0,8'd1} ;      4'b1001 : {tuf4630, uka3182, wl18c10, ipc6084 } = {8'd0,PAD,PAD,8'd1} ;      4'b1111 : {tuf4630, uka3182, wl18c10, ipc6084 } = {8'd0,8'd1,8'd2,8'd3} ;      default : {tuf4630, uka3182, wl18c10, ipc6084 } = {8'd0,PAD,PAD,PAD} ;   endcase
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ym1a2de       <= PAD;      wwd16f0       <= PAD;      jr8b781       <= PAD;      en5bc0f       <= PAD;      wwde07d <= 1'b1;      gof03e8 <= 1'b1;      xl81f40 <= 1'b1;      gqfa07 <= 1'b1;   end   else if (bye44d6) begin      ym1a2de       <= PAD;      wwd16f0       <= PAD;      jr8b781       <= PAD;      en5bc0f       <= PAD;      wwde07d <= 1'b1;      gof03e8 <= 1'b1;      xl81f40 <= 1'b1;      gqfa07 <= 1'b1;   end   else if (ls993a5) begin      ym1a2de       <= al4e95d[3] ? thd8346 : PAD;      wwd16f0       <= al4e95d[2] ? mec1a37 : PAD;      jr8b781       <= al4e95d[1] ? yzd1b9 : PAD;      en5bc0f       <= al4e95d[0] ? os68dcc : PAD;      wwde07d <= al4e95d[3] ? 1'b0 : 1'b1;      gof03e8 <= al4e95d[2] ? 1'b0 : 1'b1;      xl81f40 <= al4e95d[1] ? 1'b0 : 1'b1;      gqfa07 <= al4e95d[0] ? 1'b0 : 1'b1;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zm1ef72      <= PAD;      kdf7b93      <= PAD;      babdc9c      <= PAD;      psee4e3      <= PAD;      kq7271a <= 1'b1;      fc938d1 <= 1'b1;      ba9c68b <= 1'b1;      ble345b <= 1'b1;   end   else if (bye44d6) begin      zm1ef72      <= PAD;      kdf7b93      <= PAD;      babdc9c      <= PAD;      psee4e3      <= PAD;      kq7271a <= 1'b1;      fc938d1 <= 1'b1;      ba9c68b <= 1'b1;      ble345b <= 1'b1;   end   else if (ls993a5) begin      if (of7a072) begin      zm1ef72 <= (czc9d2b[3]) ? yx4b2d9 : PAD;      kdf7b93 <= (czc9d2b[2]) ? yx4b2d9 : PAD;      babdc9c <= (czc9d2b[1]) ? yx4b2d9 : PAD;      psee4e3 <= (czc9d2b[0]) ? yx4b2d9 : PAD;      end   else begin      zm1ef72 <= (czc9d2b[3]) ? rgcac5e[31:24] : PAD;      kdf7b93 <= (czc9d2b[2]) ? rgcac5e[23:16] : PAD;      babdc9c <= (czc9d2b[1]) ? rgcac5e[15:8] : PAD;      psee4e3 <= (czc9d2b[0]) ? rgcac5e[7:0] : PAD;   end         kq7271a <= (czc9d2b[3]) ? 1'b0 : 1'b1;      fc938d1 <= (czc9d2b[2]) ? 1'b0 : 1'b1;      ba9c68b <= (czc9d2b[1]) ? 1'b0 : 1'b1;      ble345b <= (czc9d2b[0]) ? 1'b0 : 1'b1;   end
end




assign hb61313 = {4'b0000, hb74aec, ho5d9f9[3], ou2bb3f, jra5767};
assign bn989f = {4'b0000, hb74aec, ho5d9f9[2], ou2bb3f, jra5767};
assign qg4c4ff = {4'b0000, hb74aec, ho5d9f9[1], ou2bb3f, jra5767};
assign cm627f8 = {4'b0000, hb74aec, ho5d9f9[0], ou2bb3f, jra5767};

assign jr13fc0 = ald626d;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ene81c0   <= ww77732;      hb40e05    <= 64'd0;      kf702f   <= 8'd0;      jr3817d     <= 1'b0;      fpaab98 <= 1'b0;      xwc0bee   <= 3'd0;   end   else begin      jr3817d     <= 1'b0;      fpaab98 <= 1'b0;      case(psd56d0)         ww77732: begin            if (xy83913) begin               ene81c0  <= yzbb991;            end            else begin               ene81c0  <= ww77732;            end            hb40e05   <= {K28_5,ou344a9, K28_5,hqa2548, K28_5,wl12a42, K28_5,ir95215};            kf702f  <= {1'b1,yma90ad, 1'b1,jc48569, 1'b1,zk42b4a, 1'b1,sw15a52};            xwc0bee  <= 3'd0;         end         yzbb991: begin            ene81c0  <= ofdcc8c;            hb40e05   <= {xyad290,nt84d2c, by69483,nt84d2c, jp4a41b,nt84d2c, dm520df,nt84d2c};            kf702f  <= {ir906fa,1'b0, zm837d5,1'b0, xy1beab,1'b0, tudf55b,1'b0};         end         ofdcc8c: begin            ene81c0  <= xje6464;            hb40e05   <= {8'h02,tj8bc84, 8'h02,cz5e426, 8'h02,enf2134, 8'h02,kf909a5};            kf702f  <= {2'b00, 2'b00, 2'b00, 2'b00};         end         xje6464: begin            jr3817d    <= (lqd0722 >= 4) ? 1'b1 : 1'b0;            hb40e05   <= (fp1c89a) ? {D10_2,D10_2,D10_2,D10_2,D10_2,D10_2,D10_2,D10_2} :                                    {D5_2,D5_2,D5_2,D5_2,D5_2,D5_2,D5_2,D5_2};            kf702f  <= {2'b00, 2'b00, 2'b00, 2'b00};            xwc0bee  <= lqd0722 + 1;            if (lqd0722 >= 4) begin               ene81c0  <= (fada0d1) ? vx32326 : ww77732;               fpaab98<= (fada0d1) ? 1'b1 : 1'b0;            end            else begin               ene81c0  <= xje6464;            end         end         vx32326: begin            ene81c0  <= (qi3b41a) ? ww77732 : vx32326;         end         default: begin            ene81c0  <= ww77732;            xwc0bee  <= 3'd0;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ui5364b   <= pu8c9be;      ph9b258    <= 16'd0;      end92c6   <= 2'd0;      pf55cc7 <= 1'b0;   end   else begin      pf55cc7 <= 1'b0;      case(thf6b07)         pu8c9be: begin            if (oh33274 == OS_EIDLE) begin               ui5364b <= bl64df3;            end            else begin               ui5364b <= pu8c9be;            end            ph9b258  <= {K28_5, IDL};            end92c6 <= {1'b1  , 1'b1};         end         bl64df3: begin            ui5364b   <= (fada0d1) ? an26f9e : pu8c9be;            pf55cc7 <= (fada0d1) ? 1'b1: 1'b0;            ph9b258    <= {IDL, IDL};            end92c6   <= {1'b1  , 1'b1};         end         an26f9e: begin            ui5364b   <= (qi3b41a == 1'b1) ? pu8c9be : an26f9e;         end         default: begin            ui5364b <= pu8c9be;         end      endcase   end
end





assign en657c1 = (oh9acf6) ? sw537a : qi3b41a;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      uif5573    <= 1'b0;   end   else if (en657c1) begin      uif5573    <= 1'b0;   end   else if (kq562f2 && (|fn64cc9 == 1'b1) &&                            (oh33274 != OS_COMPLI) && (nr64da8 == 1'b0)) begin      uif5573    <= 1'b1;   end
end




assign cb80666 = qi3b41a;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qt4b1ac     <= cbbe7ae;      ho58d65      <= 16'd0;      shc6b2a     <= 2'd0;      hq1eaae       <= 1'b0;      ou98fa3   <= 1'b0;      vi731f4  <= 1'b0;   end   else begin                  ou98fa3  <= fp226b3;      vi731f4 <= fp226b3 & !qv8a6c1;      case(oh7dcc)         cbbe7ae: begin                        if ((byd068a) || (vk83453) || (qi1a29b) || kqd14d8) begin               qt4b1ac <= zxf3d75;               ho58d65  <= {K28_5, SKP};               shc6b2a <= {1'b1  , 1'b1};               hq1eaae   <= 1'b1;            end            else begin               qt4b1ac <= cbbe7ae;               hq1eaae   <= 1'b0;            end         end         zxf3d75: begin            qt4b1ac <= cbbe7ae;            ho58d65  <= {SKP, SKP};            shc6b2a <= {1'b1  , 1'b1};            hq1eaae   <= 1'b1;         end         default: begin            qt4b1ac <= cbbe7ae;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      swacaa3   <= mef5d77;      kd65518    <= 16'd0;      xy2a8c5   <= 2'd0;      anae63e <= 1'b0;      cz5462b <= 1'b0;   end   else begin      anae63e <= 1'b0;      cz5462b <= 1'b0;      case(ipcc829)         mef5d77: begin            if (oh9acf6) begin               swacaa3 <= wlaebb9;            end            else begin               swacaa3 <= mef5d77;            end            kd65518  <= {K28_5, FTS};            xy2a8c5 <= {1'b1  , 1'b1};         end         wlaebb9: begin                        if (jc69326 == 1'b1) begin               swacaa3   <= mef5d77;               anae63e <= 1'b0;            end                        else if (su49933) begin               swacaa3   <= wlaebb9;               anae63e <= 1'b1;            end                        else if (fada0d1) begin               swacaa3   <= uv75dcd;               anae63e <= 1'b1;            end            else begin              swacaa3   <= mef5d77;              anae63e <= 1'b0;            end            kd65518    <= {FTS, FTS};            xy2a8c5   <= {1'b1  , 1'b1};         end         uv75dcd: begin            swacaa3   <= (qi3b41a == 1'b1) ? mef5d77 : uv75dcd;            cz5462b <= 1'b1;         end         default: begin            swacaa3 <= mef5d77;         end      endcase   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ir18ae8     <= kq7736d;      sw2ba22     <= kq7736d;      she888b     <= kq7736d;      fp222e4     <= kq7736d;      fc11726      <= 15'd0;      db8b933      <= 15'd0;      cm5c99e      <= 15'd0;      dme4cf0      <= 15'd0;      qv26782     <= 2'd0;      qv33c14     <= 2'd0;      zz9e0a4     <= 2'd0;      eaf0526     <= 2'd0;      ec82930    <= 2'd0;      hq14980    <= 2'd0;      oha4c02    <= 2'd0;      an26014    <= 2'd0;


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes
         ri300a4  <= 5'd0;


`else
         ri300a4  <= 5'b11111;


`endif
   end   else begin      


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes
         ri300a4 <=  lsb84ff + 1;


`endif
      case (tu4de84)         kq7736d: begin            ir18ae8  <= ecb9b69;            fc11726   <= {K28_5, D21_5};            qv26782  <= {1'b1  , 1'b0};            ec82930 <= {1'b1  , 1'b0};         end         ecb9b69: begin            fc11726    <= {K28_5, D10_2};            qv26782   <= {1'b1  , 1'b0};            ec82930  <= {1'b0  , 1'b0};            if (lsb84ff == (ou3b54b*4) || lsb84ff == (ou3b54b*4+3))               ir18ae8 <= pfcdb49;            else               ir18ae8 <= kq7736d;         end         pfcdb49: begin            ir18ae8   <= kq7736d;            fc11726    <= {K28_5, K28_5};            qv26782   <= {1'b1  , 1'b1};            ec82930  <= {1'b0  , 1'b0};         end         default: begin            ir18ae8 <= kq7736d;         end      endcase      case (sh7a11c)         kq7736d: begin            sw2ba22  <= ecb9b69;            db8b933   <= {K28_5, D21_5};            qv33c14  <= {1'b1  , 1'b0};            hq14980 <= {1'b1  , 1'b0};         end         ecb9b69: begin            db8b933    <= {K28_5, D10_2};            qv33c14   <= {1'b1  , 1'b0};            hq14980  <= {1'b0  , 1'b0};            if (lsb84ff == (psdaa59*4) || lsb84ff == (psdaa59*4+3))               sw2ba22 <= pfcdb49;            else               sw2ba22 <= kq7736d;         end         pfcdb49: begin            sw2ba22   <= kq7736d;            db8b933    <= {K28_5, K28_5};            qv33c14   <= {1'b1  , 1'b1};            hq14980  <= {1'b0  , 1'b0};         end         default: begin            sw2ba22 <= kq7736d;         end      endcase      case (xl8472a)         kq7736d: begin            she888b  <= ecb9b69;            cm5c99e   <= {K28_5, D21_5};            zz9e0a4  <= {1'b1  , 1'b0};            oha4c02 <= {1'b1  , 1'b0};         end         ecb9b69: begin            cm5c99e    <= {K28_5, D10_2};            zz9e0a4   <= {1'b1  , 1'b0};            oha4c02  <= {1'b0  , 1'b0};            if (lsb84ff == (hod52cb*4) || lsb84ff == (hod52cb*4+3))               she888b <= pfcdb49;            else               she888b <= kq7736d;         end         pfcdb49: begin            she888b   <= kq7736d;            cm5c99e    <= {K28_5, K28_5};            zz9e0a4   <= {1'b1  , 1'b1};            oha4c02  <= {1'b0  , 1'b0};         end         default: begin            she888b <= kq7736d;         end      endcase      case (db1cab5)         kq7736d: begin            fp222e4  <= ecb9b69;            dme4cf0   <= {K28_5, D21_5};            eaf0526  <= {1'b1  , 1'b0};            an26014 <= {1'b1  , 1'b0};         end         ecb9b69: begin            dme4cf0    <= {K28_5, D10_2};            eaf0526   <= {1'b1  , 1'b0};            an26014  <= {1'b0  , 1'b0};            if (lsb84ff == (qia965b*4) || lsb84ff == (qia965b*4+3))               fp222e4 <= pfcdb49;            else               fp222e4 <= kq7736d;         end         pfcdb49: begin            fp222e4   <= kq7736d;            dme4cf0    <= {K28_5, K28_5};            eaf0526   <= {1'b1  , 1'b1};            an26014  <= {1'b0  , 1'b0};         end         default: begin            fp222e4 <= kq7736d;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      gq5f73    <= 1'b0;      ba2fb99    <= 1'b0;      go7dccb   <= 1'b0;      dmee659  <= 1'b0;      tu732ca <= 1'b0;      zm99653   <= 1'b0;      ui594d9    <= 1'b0;   end   else if (|fn64cc9) begin      gq5f73    <= 1'b0;      go7dccb   <= 1'b0;      dmee659  <= 1'b0;      tu732ca <= 1'b0;      zm99653   <= 1'b0;      ui594d9    <= 1'b0;      case(oh33274)         OS_T1_LIP_LAP: begin            gq5f73    <= 1'b1;            ba2fb99    <= (psd56d0 == ww77732) ? 1'b1 : fp1c89a;            go7dccb   <= 1'b1;         end         OS_T2_LIP_LAP: begin            gq5f73    <= 1'b1;            ba2fb99    <= (psd56d0 == ww77732) ? 1'b0 : fp1c89a;            go7dccb   <= 1'b1;         end         OS_COMPLI: begin            ui594d9    <= 1'b1;         end         OS_T1: begin            gq5f73    <= 1'b1;            ba2fb99    <= (psd56d0 == ww77732) ? 1'b1 : fp1c89a;         end         OS_T2: begin            gq5f73    <= 1'b1;            ba2fb99    <= (psd56d0 == ww77732) ? 1'b0 : fp1c89a;         end         OS_IDLE: begin            dmee659  <= (psd56d0 == ww77732) ? 1'b1 : fp226b3;         end         OS_EIDLE: begin            tu732ca <= 1'b1;         end         OS_NFTS: begin            zm99653   <= 1'b1;         end         OS_BEACON: begin            iccb29b   <= 1'b1;         end         default : begin            gq5f73    <= 1'b0;            go7dccb   <= 1'b0;            dmee659  <= 1'b0;            tu732ca <= 1'b0;            zm99653   <= 1'b0;            ui594d9    <= 1'b0;         end      endcase   end   else begin      gq5f73    <= 1'b0;      ba2fb99    <= 1'b0;      go7dccb   <= 1'b0;      dmee659  <= 1'b0;      tu732ca <= 1'b0;      zm99653   <= 1'b0;      iccb29b   <= 1'b0;      ui594d9    <= 1'b0;   end
end


`ifdef LW4
   assign cmff03d   = epab683;   assign nec0f4c  = cz5b41c;   assign zz3d31c   = {kqe55ae,xy2ad71, ay56b8b, phb5c59};   assign ww4c736  = {uxae2cf, bl7167c, jr8b3e6, cm59f37};   assign ph1cd83 = {dmcf9b8, dm7cdc2, hbe6e13, bn3709f} ;   assign kf360f7  = {me49e0b,me49e0b,me49e0b,me49e0b};   assign do83dee = {ykc1678,ykc1678,ykc1678,ykc1678};   assign xjc71df    = {ou344a9, hqa2548, wl12a42, ir95215};   assign jr38eff    = {xyad290, by69483, jp4a41b, dm520df};

`endif



`ifdef LW2
   assign cmff03d   = epab683[63:32];   assign nec0f4c  = cz5b41c[7:4];   assign zz3d31c   = {kqe55ae,xy2ad71};   assign ww4c736  = {uxae2cf, bl7167c};   assign ph1cd83 = {dmcf9b8, dm7cdc2};   assign kf360f7  = {me49e0b,me49e0b};   assign do83dee = {ykc1678,ykc1678};   assign xjc71df    = {ou344a9, hqa2548};   assign jr38eff    = {xyad290, by69483};

`endif



`ifdef LW1
   assign cmff03d   = epab683[63:48];   assign nec0f4c  = cz5b41c[7:6];   assign zz3d31c   = kqe55ae;   assign ww4c736  = uxae2cf;   assign ph1cd83 = dmcf9b8;   assign kf360f7  = me49e0b;   assign do83dee = ykc1678;   assign xjc71df    = ou344a9;   assign jr38eff    = xyad290;

`endif






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      co3e8c6 <= {LANE_WIDTH{1'b0}};   else      co3e8c6 <= fn64cc9;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      an1dcdc  <= {16*LANE_WIDTH{1'b0}};      vi73722 <= {2*LANE_WIDTH{1'b0}};      yxdc89f<= {2*LANE_WIDTH{1'b0}};      zz227e3   <= {LANE_WIDTH{1'b0}};   end      else if (qi3b41a) begin      an1dcdc   <= {LANE_WIDTH{ie3ee64}};      vi73722  <= {LANE_WIDTH{qtf7320}};      yxdc89f <= {2*LANE_WIDTH{1'b0}};      zz227e3    <= 4'b1111;   end   else begin      zz227e3    <= hd9b068;      casex({xy83913, hd1359e, oh9acf6, ieb3dac, fp226b3,ald67b5})         6'b1xxxxx: begin            an1dcdc   <= qi34b3d;            vi73722  <= qv2cf4e;            yxdc89f <= {2*LANE_WIDTH{1'b0}};         end         6'bx1xxxx: begin            an1dcdc   <= {LANE_WIDTH{xlb583e}} ;            vi73722  <= {LANE_WIDTH{ecac1f7}} ;            yxdc89f <= {2*LANE_WIDTH{1'b0}};         end         6'bxx1xxx: begin            an1dcdc   <= {LANE_WIDTH{xj6414d}};            vi73722  <= {LANE_WIDTH{xy20a6f}};            yxdc89f <= {2*LANE_WIDTH{1'b0}};         end           6'bxxx1xx: begin            an1dcdc   <= lf3d3a1;            vi73722  <= mr4e876;            yxdc89f <= sja1da6;         end          6'bxxxx1x: begin            an1dcdc  <= {16*LANE_WIDTH{1'b0}};            vi73722 <= {2*LANE_WIDTH{1'b0}};            yxdc89f<= {2*LANE_WIDTH{1'b0}};         end         6'bxxxxx1: begin            an1dcdc   <= tu769a2;            vi73722  <= wya6895;            yxdc89f<= {2*LANE_WIDTH{1'b0}};         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ou1033a      <= 1'b0;      ipc68b1       <= 1'b0;      mg3458c       <= 1'b0;      ria2c60     <= 1'b0;      db16303    <= 10'd0;      irb181e    <= 5'd0;      pu8c0f5     <= 5'd0;      wj607aa     <= 5'd0;      rv3d55 <= 5'd0;   end   else begin            if (oh9ac4d) begin         ou1033a  <= 1'b0;         ipc68b1   <= 1'b0;         mg3458c   <= 1'b0;         ria2c60 <= 1'b0;      end      else begin         ou1033a  <= (db22449|jr91274)   ? 1'b1 : kdc386d;         ipc68b1   <= (db22449)   ? 1'b1 : phbfa47;         mg3458c   <= (jr91274)   ? 1'b1 : uvfd23e;         ria2c60 <= (fnf958b) ? 1'b1 : jpe91f4;      end            if (kdc386d == 1'b0) begin         db16303 <= 10'd0;      end            else if (xy83913 && fp1c89a && bye44d6 && dmda0e4 && tu48fa7 < wjcc3bb) begin         db16303 <= tu48fa7 + 1;      end      else begin         db16303 <= tu48fa7;      end            if (uvfd23e == 1'b0) begin         irb181e <= 5'd0;      end            else if (xy83913 && !fp1c89a && bye44d6 && dmda0e4 && (fa47d3b[4] == 1'b0)) begin         irb181e <= fa47d3b + 1;      end      else begin         irb181e <= fa47d3b;      end            if (uvfd23e == 1'b0) begin         pu8c0f5 <= 5'd0;      end            else if (xy83913 && !fp1c89a && dmda0e4 && (ou3e9da[4] == 1'b0)) begin         pu8c0f5 <= ou3e9da + 1;      end      else begin         pu8c0f5 <= ou3e9da;      end            if (phbfa47 == 1'b0) begin         wj607aa <= 5'd0;      end            else if (xy83913 && !fp1c89a && dmda0e4 && (lqf4ed0[4] == 1'b0)) begin         wj607aa <= lqf4ed0 + 1;      end      else begin         wj607aa <= lqf4ed0;      end            if (jpe91f4 == 1'b0) begin         rv3d55 <= 5'd0;      end      else if (fp226b3 && nga7683 < 15) begin         rv3d55 <= nga7683 + 2;      end      else begin         rv3d55 <= nga7683;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ou15eaf  <= 1'b0;      tjaf578    <= 1'b0;      sh7abc6     <= 1'b0;      rgd5e34     <= 1'b0;      rvaf1a2 <= 1'b0;   end   else if (oh9ac4d) begin      ou15eaf  <= 1'b0;      tjaf578    <= 1'b0;      sh7abc6     <= 1'b0;      rgd5e34     <= 1'b0;      rvaf1a2 <= 1'b0;   end   else begin            ou15eaf  <= (tu48fa7    == wjcc3bb);      tjaf578    <= (fa47d3b    == 5'd16);      sh7abc6     <= (ou3e9da     == 5'd16);      rgd5e34     <= (lqf4ed0     == 5'd16);      rvaf1a2 <= (nga7683 == 5'd16);   end
end
assign db199a7   = (pfc27fa);
assign mrccd3e     = (xl13fd7);
assign zkc0d47      = (qv9febf);
assign twa7d59      = (osff5fd);
assign zz6a3b  = (osfafe9);






`ifdef LTSSM_MACO



fb_rf_phy #(2, 4) oua3c7f (                              .rst_n (rst_n),                              .clk_a (sys_clk),                              .a_a   (ri30425),                              .d_a   (swa98d2),                                                            .we_a  (rst_n),                              .clk_b (sys_clk),                              .a_b   (ec8212a),                              .d_b   (yz9f8f7)                              );


`else

pmi_distributed_dpram #(   .pmi_addr_depth       ( lsb3c0 ),   .pmi_addr_width       ( su59e03 ),   .pmi_data_width       ( bycf018 ),   .pmi_regmode          ("noreg" ),   .pmi_init_file        ("none" ),   .pmi_init_file_format ("binary" ),


`ifdef ECP5UM
   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_family        ("ECP3"),


`else
      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_distributed_dpram"))
   xy99403 (   .WrAddress            ( ri30425 ),   .Data                 ( swa98d2 ),   .WrClock              ( sys_clk ),   .WE                   ( 1'b1 ),   .WrClockEn            ( 1'b1 ),   .RdAddress            ( ec8212a ),   .RdClock              ( sys_clk ),   .RdClockEn            ( tu6970b ),   .Reset                ( ~rst_n ),   .Q                    ( yz9f8f7 )   );

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ri30425 <= 4'd0 ;   else      ri30425 <=  ri30425 + 4'd1;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tu6970b <= 1'b0 ;   else if (ri30425 == su596cd - 1)      tu6970b <=  1'b1;   else      tu6970b <=  gb5bbae;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ec8212a <= 4'd0 ;   else if (gb5bbae)      ec8212a <= ec8212a + 4'd1 ;
end

always@* begin yx4b2d9<={LINK_NUM>>1,xjc2975[0]};su596cd<={TX_EIDL_CNT>>1,xjc2975[1]};qt5b349<={swa98d2>>1,xjc2975[2]};oh9ac4d<=xjc2975[3];ald626d<={ukb91c7>>1,xjc2975[4]};jc69326<=xjc2975[5];su49933<=xjc2975[6];fn64cc9<={ep90086>>1,xjc2975[7]};oh33274<={ux80435>>1,xjc2975[8]};ls993a5<=xjc2975[9];czc9d2b<={aa10d65>>1,xjc2975[10]};al4e95d<={je86b28>>1,xjc2975[11]};hb74aec<=xjc2975[12];jra5767<=xjc2975[13];ou2bb3f<=xjc2975[14];ho5d9f9<={db284c5>>1,xjc2975[15]};nr64da8<=xjc2975[16];db22449<=xjc2975[17];jr91274<=xjc2975[18];fnf958b<=xjc2975[19];rgcac5e<={co3bfff>>1,xjc2975[20]};kq562f2<=xjc2975[21];of7a072<=xjc2975[22];tj8bc84<={hb61313>>1,xjc2975[23]};cz5e426<={bn989f>>1,xjc2975[24]};enf2134<={qg4c4ff>>1,xjc2975[25]};kf909a5<={cm627f8>>1,xjc2975[26]};nt84d2c<={jr13fc0>>1,xjc2975[27]};qi34b3d<={cmff03d>>1,xjc2975[28]};qv2cf4e<={nec0f4c>>1,xjc2975[29]};lf3d3a1<={zz3d31c>>1,xjc2975[30]};mr4e876<={ww4c736>>1,xjc2975[31]};sja1da6<={ph1cd83>>1,xjc2975[32]};tu769a2<={kf360f7>>1,xjc2975[33]};wya6895<={do83dee>>1,xjc2975[34]};ou344a9<={zm1ef72>>1,xjc2975[35]};hqa2548<={kdf7b93>>1,xjc2975[36]};wl12a42<={babdc9c>>1,xjc2975[37]};ir95215<={psee4e3>>1,xjc2975[38]};yma90ad<=xjc2975[39];jc48569<=xjc2975[40];zk42b4a<=xjc2975[41];sw15a52<=xjc2975[42];xyad290<={ym1a2de>>1,xjc2975[43]};by69483<={wwd16f0>>1,xjc2975[44]};jp4a41b<={jr8b781>>1,xjc2975[45]};dm520df<={en5bc0f>>1,xjc2975[46]};ir906fa<=xjc2975[47];zm837d5<=xjc2975[48];xy1beab<=xjc2975[49];tudf55b<=xjc2975[50];psd56d0<={ene81c0>>1,xjc2975[51]};epab683<={hb40e05>>1,xjc2975[52]};cz5b41c<={kf702f>>1,xjc2975[53]};dmda0e4<=xjc2975[54];lqd0722<={xwc0bee>>1,xjc2975[55]};xy83913<=xjc2975[56];fp1c89a<=xjc2975[57];bye44d6<=xjc2975[58];fp226b3<=xjc2975[59];hd1359e<=xjc2975[60];oh9acf6<=xjc2975[61];ald67b5<=xjc2975[62];ieb3dac<=xjc2975[63];thf6b07<={ui5364b>>1,xjc2975[64]};xlb583e<={ph9b258>>1,xjc2975[65]};ecac1f7<={end92c6>>1,xjc2975[66]};oh7dcc<={qt4b1ac>>1,xjc2975[67]};ie3ee64<={ho58d65>>1,xjc2975[68]};qtf7320<={shc6b2a>>1,xjc2975[69]};ipcc829<={swacaa3>>1,xjc2975[70]};xj6414d<={kd65518>>1,xjc2975[71]};xy20a6f<={xy2a8c5>>1,xjc2975[72]};sw537a<=xjc2975[73];tu4de84<={ir18ae8>>1,xjc2975[74]};sh7a11c<={sw2ba22>>1,xjc2975[75]};xl8472a<={she888b>>1,xjc2975[76]};db1cab5<={fp222e4>>1,xjc2975[77]};kqe55ae<={fc11726>>1,xjc2975[78]};xy2ad71<={db8b933>>1,xjc2975[79]};ay56b8b<={cm5c99e>>1,xjc2975[80]};phb5c59<={dme4cf0>>1,xjc2975[81]};uxae2cf<={qv26782>>1,xjc2975[82]};bl7167c<={qv33c14>>1,xjc2975[83]};jr8b3e6<={zz9e0a4>>1,xjc2975[84]};cm59f37<={eaf0526>>1,xjc2975[85]};dmcf9b8<={ec82930>>1,xjc2975[86]};dm7cdc2<={hq14980>>1,xjc2975[87]};hbe6e13<={oha4c02>>1,xjc2975[88]};bn3709f<={an26014>>1,xjc2975[89]};lsb84ff<={ri300a4>>1,xjc2975[90]};pfc27fa<=xjc2975[91];xl13fd7<=xjc2975[92];qv9febf<=xjc2975[93];osff5fd<=xjc2975[94];osfafe9<=xjc2975[95];kdc386d<=xjc2975[96];phbfa47<=xjc2975[97];uvfd23e<=xjc2975[98];jpe91f4<=xjc2975[99];tu48fa7<={db16303>>1,xjc2975[100]};fa47d3b<={irb181e>>1,xjc2975[101]};ou3e9da<={pu8c0f5>>1,xjc2975[102]};lqf4ed0<={wj607aa>>1,xjc2975[103]};nga7683<={rv3d55>>1,xjc2975[104]};qi3b41a<=xjc2975[105];fada0d1<=xjc2975[106];byd068a<=xjc2975[107];vk83453<=xjc2975[108];qi1a29b<=xjc2975[109];kqd14d8<=xjc2975[110];qv8a6c1<=xjc2975[111];hd9b068<={co3e8c6>>1,xjc2975[112]};thd8346<={tuf4630>>1,xjc2975[113]};mec1a37<={uka3182>>1,xjc2975[114]};yzd1b9<={wl18c10>>1,xjc2975[115]};os68dcc<={ipc6084>>1,xjc2975[116]};gb5bbae<=xjc2975[117];end
always@* begin ux1852e[2047]<=TX_EIDL_CNT[0];ux1852e[2046]<=swa98d2[0];ux1852e[2044]<=zz37238;ux1852e[2040]<=ukb91c7[0];ux1852e[2033]<=wy1a402;ux1852e[2019]<=jpd2010;ux1852e[1991]<=ep90086[0];ux1852e[1963]<=ipc6084[0];ux1852e[1961]<=tjaf578;ux1852e[1934]<=ux80435[0];ux1852e[1929]<=wwde07d;ux1852e[1914]<=oha4c02[0];ux1852e[1898]<=db284c5[0];ux1852e[1878]<=tu6970b;ux1852e[1874]<=sh7abc6;ux1852e[1821]<=gd21ac;ux1852e[1813]<=sw2ba22[0];ux1852e[1810]<=gof03e8;ux1852e[1781]<=an26014[0];ux1852e[1775]<=eaf0526[0];ux1852e[1749]<=ltssm_l0;ux1852e[1707]<=cm7d8ad;ux1852e[1701]<=rgd5e34;ux1852e[1666]<=cmff03d[0];ux1852e[1630]<=ba9c68b;ux1852e[1617]<=ph9b258[0];ux1852e[1595]<=aa10d65[0];ux1852e[1579]<=she888b[0];ux1852e[1572]<=xl81f40;ux1852e[1566]<=vi731f4;ux1852e[1560]<=rv3d55[0];ux1852e[1514]<=ri300a4[0];ux1852e[1506]<=jr8b781[0];ux1852e[1502]<=ec82930[0];ux1852e[1467]<=qv33c14[0];ux1852e[1450]<=zm83218;ux1852e[1440]<=cm627f8[0];ux1852e[1428]<=ui594d9;ux1852e[1414]<=pu8c0f5[0];ux1852e[1390]<=dme4cf0[0];ux1852e[1384]<=bn989f[0];ux1852e[1370]<=ne48a16;ux1852e[1366]<=co3bfff[0];ux1852e[1355]<=rvaf1a2;ux1852e[1324]<=ipc68b1;ux1852e[1308]<=shc6b2a[0];ux1852e[1284]<=nec0f4c[0];ux1852e[1212]<=ble345b;ux1852e[1202]<=tu732ca;ux1852e[1200]<=ria2c60;ux1852e[1187]<=end92c6[0];ux1852e[1174]<=ba2fb99;ux1852e[1170]<=jr3817d;ux1852e[1142]<=je86b28[0];ux1852e[1137]<=kd65518[0];ux1852e[1125]<=babdc9c[0];ux1852e[1110]<=fp222e4[0];ux1852e[1097]<=gqfa07;ux1852e[1085]<=ou98fa3;ux1852e[1072]<=hq1eaae;ux1852e[1041]<=ww4c736[0];ux1852e[1023]<=LINK_NUM[0];ux1852e[981]<=wl18c10[0];ux1852e[980]<=ou15eaf;ux1852e[964]<=en5bc0f[0];ux1852e[957]<=hq14980[0];ux1852e[949]<=en65098;ux1852e[906]<=ir18ae8[0];ux1852e[887]<=zz9e0a4[0];ux1852e[853]<=zz190c3;ux1852e[833]<=jr13fc0[0];ux1852e[815]<=fc938d1;ux1852e[808]<=ui5364b[0];ux1852e[783]<=anae63e;ux1852e[780]<=wj607aa[0];ux1852e[753]<=wwd16f0[0];ux1852e[733]<=qv26782[0];ux1852e[720]<=qg4c4ff[0];ux1852e[714]<=iccb29b;ux1852e[707]<=irb181e[0];ux1852e[695]<=cm5c99e[0];ux1852e[692]<=hb61313[0];ux1852e[685]<=and3a1;ux1852e[662]<=ou1033a;ux1852e[654]<=ho58d65[0];ux1852e[601]<=dmee659;ux1852e[600]<=mg3458c;ux1852e[587]<=gq5f73;ux1852e[585]<=kf702f[0];ux1852e[568]<=swacaa3[0];ux1852e[562]<=kdf7b93[0];ux1852e[520]<=zz3d31c[0];ux1852e[490]<=uka3182[0];ux1852e[474]<=ouaca13;ux1852e[453]<=cz5462b;ux1852e[407]<=kq7271a;ux1852e[391]<=pf55cc7;ux1852e[376]<=ym1a2de[0];ux1852e[357]<=zm99653;ux1852e[353]<=db16303[0];ux1852e[347]<=db8b933[0];ux1852e[327]<=qt4b1ac[0];ux1852e[300]<=go7dccb;ux1852e[293]<=xwc0bee[0];ux1852e[292]<=hb40e05[0];ux1852e[281]<=zm1ef72[0];ux1852e[245]<=tuf4630[0];ux1852e[237]<=vk35942;ux1852e[226]<=xy2a8c5[0];ux1852e[203]<=psee4e3[0];ux1852e[195]<=fpaab98;ux1852e[173]<=fc11726[0];ux1852e[146]<=ene81c0[0];ux1852e[140]<=do83dee[0];ux1852e[122]<=co3e8c6[0];ux1852e[97]<=uif5573;ux1852e[70]<=kf360f7[0];ux1852e[35]<=ph1cd83[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

























































































`timescale 1 ns / 100 ps
module pcie_x1_top_ana18ae
   (
    
    sys_clk,                    
    rst_n,                    

    ec8dff3,              
    ohae988,              
    jp74c45,            
    kf184f1,                 
    vvc278d,                  
    asb_eidle_rx,               
    db199a7,             
    mrccd3e,               
    dzfcf0d,            
    yzdf62,             

    
    pu1e82,              
    ukf413,              
    of7a099,                 
    psd04cd,             
    wwfa06e,                
    ld5f40d,                
    pol_compliance,             
    zxcd672                   
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam osdba17       = 3'd0 ;
localparam bldd0b9     = 3'd1 ;
localparam ale85cf = 3'd2 ;
localparam zk42e7d     = 3'd3 ;
localparam ux173ea       = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input                     ec8dff3;
input                     ohae988;
input                     jp74c45;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0] vvc278d;
input   [LANE_WIDTH-1:0] asb_eidle_rx;
input   [LANE_WIDTH-1:0] db199a7;
input   [LANE_WIDTH-1:0] mrccd3e;
input   [LANE_WIDTH-1:0] dzfcf0d;
input   [LANE_WIDTH-1:0] yzdf62;
output                    pu1e82;
output                    ukf413;
output  [LANE_WIDTH-1:0] of7a099;
output  [OS_WIDTH -1:0]   psd04cd;
output                    wwfa06e;
output                    ld5f40d;
output                    pol_compliance;
output  [PSM_WIDTH:0]     zxcd672;
wire [LANE_WIDTH-1:0]  zz8425e;
wire [LANE_WIDTH-1:0]  lf97b1;
wire [LANE_WIDTH-1:0]  en5ec74;
wire [LANE_WIDTH-1:0]  wlb1d2f;
wire [LANE_WIDTH-1:0]  zx74bee;
reg  [PSM_WIDTH:0]      zxcd672;
reg                     pu1e82;
reg                     ukf413;
reg  [LANE_WIDTH-1:0]   of7a099;
reg  [OS_WIDTH -1:0]    psd04cd;
reg                     wwfa06e;
reg                     ld5f40d;
reg  [LANE_WIDTH-1:0]   je2f653;
integer                 endc2dd;

`ifdef LW4

`else

`endif
reg  [15*8:0] ofd94d7;
reg me560d7;
reg ay535eb;
reg kf9af58;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] zx559aa;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] fnd24d5;
reg [LANE_WIDTH - 1 : 0] do93570;
reg [LANE_WIDTH - 1 : 0] dmd5c15;
reg [LANE_WIDTH - 1 : 0] ip70554;
reg [LANE_WIDTH - 1 : 0] co15520;
reg [LANE_WIDTH - 1 : 0] of5480f;
reg [LANE_WIDTH - 1 : 0] je203e5;
reg [LANE_WIDTH - 1 : 0] ukf95b;
reg [LANE_WIDTH - 1 : 0] aye56c3;
reg [LANE_WIDTH - 1 : 0] al5b0c8;
reg [15 * 8 : 0] pfd8644;
reg [2047:0] ux1852e;
wire [16:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`else

`endif

localparam do14bae = 17,jra5d72 = 32'hfdffe42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign pol_compliance = (zxcd672 == ale85cf) ? 1'b1 : 1'b0;





assign zz8425e  = fnd24d5 & zx559aa;

assign lf97b1    = do93570 & zx559aa;

assign en5ec74= dmd5c15 & zx559aa;

assign wlb1d2f = ip70554  & zx559aa;

assign zx74bee           = ks3130b  & zx559aa;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zxcd672        <= osdba17;      ukf413    <= 1'b0;      of7a099       <= {(LANE_WIDTH){1'b0}};      psd04cd   <= OS_T1_LIP_LAP;      pu1e82    <= 1'b0;      wwfa06e      <= 1'b0;      ld5f40d      <= 1'b0;      je2f653  <= {(LANE_WIDTH){1'b0}};   end   else begin      ukf413    <= 1'b0;      wwfa06e      <= 1'b0;      ld5f40d      <= 1'b0;      pu1e82    <= 1'b0;      case(zxcd672)                  osdba17: begin            je2f653  <= {(LANE_WIDTH){1'b0}};            if (ofd9566 == POLLING) begin               zxcd672        <= bldd0b9;               ukf413    <= 1'b1;               of7a099       <= zx559aa;               psd04cd   <= OS_T1_LIP_LAP;            end            else begin               zxcd672        <= osdba17;               of7a099       <= {(LANE_WIDTH){1'b0}};            end         end                  bldd0b9: begin        for (endc2dd=0; endc2dd<LANE_WIDTH; endc2dd=endc2dd+1) begin               if (al5b0c8[endc2dd] == 1'b0)          je2f653[endc2dd] <= (ks3130b[endc2dd] == 0) ? 1'b1 : 1'b0;            end            if (je203e5 == zx559aa  && kf9af58 && ~ukf413) begin               zxcd672       <= zk42e7d;               of7a099      <= zx559aa;               psd04cd  <= OS_T2_LIP_LAP;               ukf413   <= 1'b1;               pu1e82   <= 1'b1;            end            else if (me560d7 && ~ukf413) begin                      if (|al5b0c8 == 1'b0) begin                  zxcd672       <= ale85cf;                  of7a099      <= zx559aa;                  psd04cd  <= OS_COMPLI;               end                     


`ifdef LW4
                  else if (|je203e5 == 1'b1 && |co15520 == 1'b1 && al5b0c8[3] == 1'b1) begin                     zxcd672       <= zk42e7d;                     of7a099      <= zx559aa;                     psd04cd  <= OS_T2_LIP_LAP;                     ukf413   <= 1'b1;                     pu1e82   <= 1'b1;                  end


`else
                  else if (|je203e5 == 1'b1 && |co15520 == 1'b1 && al5b0c8 == 1'b1) begin                     zxcd672       <= zk42e7d;                     of7a099      <= zx559aa;                     psd04cd  <= OS_T2_LIP_LAP;                     ukf413   <= 1'b1;                     pu1e82   <= 1'b1;                  end


`endif
               else begin                  zxcd672       <= ux173ea;                  wwfa06e     <= 1'b1;               end            end            else begin               zxcd672    <= bldd0b9;            end         end                  ale85cf: begin            je2f653   <= {(LANE_WIDTH){1'b0}};            if (&ks3130b == 1'b0) begin               zxcd672      <= bldd0b9;               of7a099     <= zx559aa;               psd04cd <= OS_T1_LIP_LAP;               ukf413  <= 1'b1;            end            else begin               zxcd672      <= ale85cf;            end         end                  zk42e7d: begin            je2f653   <= {(LANE_WIDTH){1'b0}};            if (|ukf95b == 1'b1 && |of5480f == 1'b1 && ~ukf413) begin               zxcd672      <= ux173ea;               ld5f40d    <= 1'b1;                              of7a099     <= {(LANE_WIDTH){1'b1}};            end            else if (ay535eb && ~ukf413) begin               zxcd672      <= ux173ea;               wwfa06e    <= 1'b1;               of7a099     <= {(LANE_WIDTH){1'b0}};            end            else begin               zxcd672      <= zk42e7d;            end         end         ux173ea: begin            if (ofd9566 != POLLING) begin               zxcd672   <= osdba17;            end            else begin               zxcd672   <= ux173ea;            end         end         default: begin            zxcd672   <= osdba17;         end      endcase   end
end



always @ (zxcd672)
begin   case(zxcd672)      osdba17       : ofd94d7 = "POL_WAIT";      bldd0b9     : ofd94d7 = "POL_ACTIVE";      ale85cf : ofd94d7 = "POL_COMP";      zk42e7d     : ofd94d7 = "POL_CFG";      ux173ea       : ofd94d7 = "POL_EXIT";      default         : ofd94d7 = "ERROR";   endcase
end

always@* begin me560d7<=xjc2975[0];ay535eb<=xjc2975[1];kf9af58<=xjc2975[2];ofd9566<={kf184f1>>1,xjc2975[3]};zx559aa<={vvc278d>>1,xjc2975[4]};ks3130b<={asb_eidle_rx>>1,xjc2975[5]};fnd24d5<={db199a7>>1,xjc2975[6]};do93570<={mrccd3e>>1,xjc2975[7]};dmd5c15<={dzfcf0d>>1,xjc2975[8]};ip70554<={yzdf62>>1,xjc2975[9]};co15520<={zz8425e>>1,xjc2975[10]};of5480f<={lf97b1>>1,xjc2975[11]};je203e5<={en5ec74>>1,xjc2975[12]};ukf95b<={wlb1d2f>>1,xjc2975[13]};aye56c3<={zx74bee>>1,xjc2975[14]};al5b0c8<={je2f653>>1,xjc2975[15]};pfd8644<={ofd94d7>>1,xjc2975[16]};end
always@* begin ux1852e[2047]<=ohae988;ux1852e[2046]<=jp74c45;ux1852e[2044]<=kf184f1[0];ux1852e[2041]<=vvc278d[0];ux1852e[2035]<=asb_eidle_rx[0];ux1852e[2022]<=db199a7[0];ux1852e[1996]<=mrccd3e[0];ux1852e[1945]<=dzfcf0d[0];ux1852e[1842]<=yzdf62[0];ux1852e[1637]<=zz8425e[0];ux1852e[1630]<=zx74bee[0];ux1852e[1227]<=lf97b1[0];ux1852e[1212]<=je2f653[0];ux1852e[1023]<=ec8dff3;ux1852e[815]<=wlb1d2f[0];ux1852e[407]<=en5ec74[0];ux1852e[377]<=ofd94d7[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























































































`timescale 1 ns / 100 ps
module pcie_x1_top_and7b1 
   (
    
    sys_clk,            
    rst_n,              

    ext_sync,           
    qt6ff99,       
    ec8dff3,      
    ohae988,      
    jp74c45,    
    kf184f1,         
    xl8b1db,          
    zkc0d47,        
    twa7d59,        
    zz6a3b,    
    rtcd8fa,      
    jr2d4fc,        
    gbe786f,    
    osfaed8,     
    bld81a8,          
    uv6a7e7,   
    yk53f3c,    
    yz9f9e1,    
    uiffe18,      
    goff0c0,      
    nefe66c,        
    qi1aeb1,       
    kfbb606,        
    hl_gto_cfg,         
    asb_dskew_rx,       
    
    
    fnc89d9,      
    yx44ecf,    
    rv2767d,       
    wy3b3ee,   
    dmd0496,      
    pf5a092,     
    ir12599,      
    zkeb412,      
    twbd682,       
    ks824b3,      
    qg622ba,    
    pu115d0         
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam mre8d56    = 3'd0 ;
localparam me46ab4  = 3'd1 ;
localparam tw355a0 = 3'd2 ;
localparam xlaad02    = 3'd3 ;
localparam ay56817    = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input                     ext_sync;
input                     qt6ff99;
input                     ec8dff3;
input                     ohae988;
input                     jp74c45;
input   [MSM_WIDTH:0]     kf184f1;
input   [LANE_WIDTH-1:0]  xl8b1db;
input   [LANE_WIDTH-1:0]  zkc0d47;
input   [LANE_WIDTH-1:0]  twa7d59;
input   [LANE_WIDTH-1:0]  zz6a3b;
input   [LANE_WIDTH-1:0]  rtcd8fa;
input   [LANE_WIDTH-1:0]  jr2d4fc;
input   [LANE_WIDTH-1:0]  gbe786f;
input   [LANE_WIDTH-1:0]  osfaed8;
input   [LANE_WIDTH-1:0]  bld81a8;
input   [LANE_WIDTH-1:0]  uv6a7e7;
input   [LANE_WIDTH-1:0]  yk53f3c;
input   [LANE_WIDTH-1:0]  yz9f9e1;
input   [LANE_WIDTH-1:0]  uiffe18;
input   [LANE_WIDTH-1:0]  goff0c0;
input   [LANE_WIDTH-1:0]  nefe66c;
input   [LANE_WIDTH-1:0]  qi1aeb1;
input   [LANE_WIDTH-1:0]  kfbb606;
input                     hl_gto_cfg;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    fnc89d9;
output                    yx44ecf;
output  [LANE_WIDTH-1:0]  rv2767d;
output  [OS_WIDTH -1:0]   wy3b3ee;
output                    dmd0496;
output                    pf5a092;
output                    ir12599;
output                    zkeb412;
output                    twbd682;
output                    ks824b3;
output                    qg622ba;
output  [RSM_WIDTH:0]     pu115d0;
wire [LANE_WIDTH-1:0]   yz29101;
wire [LANE_WIDTH-1:0]   zk66c51;
wire [LANE_WIDTH-1:0]   qg5ca44;
wire [LANE_WIDTH-1:0]   yx51765;
wire [LANE_WIDTH-1:0]   xw5d96e;
wire [LANE_WIDTH-1:0]   ou1033a;
wire [LANE_WIDTH-1:0]   kq49729;
wire [LANE_WIDTH-1:0]   zm969b0;
wire                    gdb4d83;
wire                    yma6c1d;
wire                    gd360e9;
wire                    wwfa13e;
wire [LANE_WIDTH-1:0]   gd9525c;
reg  [RSM_WIDTH:0]      pu115d0;
reg                     yx44ecf;
reg  [LANE_WIDTH-1:0]   rv2767d;
reg  [OS_WIDTH -1:0]    wy3b3ee;
reg                     dmd0496;
reg                     pf5a092;
reg                     ir12599;
reg                     zkeb412;
reg                     twbd682;
reg                     ks824b3;
reg                     qg622ba;
reg                     fnc89d9;
reg                     fa79fad;
reg vicfd6b;
reg dbb06b8;
reg me560d7;
reg ay535eb;
reg kf9af58;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] uve8d72;
reg [LANE_WIDTH - 1 : 0] nee4d61;
reg [LANE_WIDTH - 1 : 0] ls35ca0;
reg [LANE_WIDTH - 1 : 0] ps73b51;
reg [LANE_WIDTH - 1 : 0] dz55678;
reg [LANE_WIDTH - 1 : 0] me59e3c;
reg [LANE_WIDTH - 1 : 0] cb2cb75;
reg [LANE_WIDTH - 1 : 0] ph37a35;
reg [LANE_WIDTH - 1 : 0] nt33a1;
reg [LANE_WIDTH - 1 : 0] qgce87e;
reg [LANE_WIDTH - 1 : 0] oha1f86;
reg [LANE_WIDTH - 1 : 0] rt7e1a0;
reg [LANE_WIDTH - 1 : 0] vk86839;
reg [LANE_WIDTH - 1 : 0] pfd7199;
reg [LANE_WIDTH - 1 : 0] oh39435;
reg [LANE_WIDTH - 1 : 0] en75937;
reg vk86b1e;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] wy1a658;
reg [LANE_WIDTH - 1 : 0] ng932d5;
reg [LANE_WIDTH - 1 : 0] zm14699;
reg [LANE_WIDTH - 1 : 0] rgd54cf;
reg [LANE_WIDTH - 1 : 0] go533de;
reg [LANE_WIDTH - 1 : 0] kdc386d;
reg [LANE_WIDTH - 1 : 0] tu6c51a;
reg [LANE_WIDTH - 1 : 0] sw82780;
reg vx13c01;
reg bn9e00f;
reg uif007e;
reg vxa0707;
reg [LANE_WIDTH - 1 : 0] ng35b14;
reg th7e118;
reg [2047:0] ux1852e;
wire [38:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 39,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign yz29101     = uve8d72 & fadaff3;

assign zk66c51     = nee4d61 & fadaff3;

assign qg5ca44  = ls35ca0 & fadaff3;


assign yx51765       = me59e3c & fadaff3;


assign xw5d96e        = cb2cb75 & fadaff3;


assign zm969b0     = (nt33a1 | qgce87e | oha1f86)  & fadaff3;


assign ou1033a        = (rt7e1a0 | vk86839) & fadaff3;

assign kq49729      = ph37a35 & fadaff3;


assign gdb4d83    = |(pfd7199 & fadaff3);


assign yma6c1d   = |(oh39435 & fadaff3);



assign gd360e9    = (|(dz55678 & fadaff3) | vk86b1e);


assign wwfa13e    = |(en75937 & fadaff3);

assign gd9525c= cm7281c & fadaff3;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pu115d0      <= mre8d56;      yx44ecf  <= 1'b0;      rv2767d     <= {(LANE_WIDTH){1'b0}};      wy3b3ee <= OS_IDLE;      dmd0496    <= 1'b0;      pf5a092   <= 1'b0;      ir12599    <= 1'b0;      zkeb412    <= 1'b0;      twbd682     <= 1'b0;      ks824b3    <= 1'b0;      qg622ba  <= 1'b0;      fa79fad  <= 1'b0;      fnc89d9    <= 1'b0;   end   else begin      yx44ecf  <= 1'b0;      dmd0496    <= 1'b0;      pf5a092   <= 1'b0;      ir12599    <= 1'b0;      zkeb412    <= 1'b0;      twbd682     <= 1'b0;      ks824b3    <= 1'b0;      qg622ba  <= 1'b0;      fnc89d9    <= 1'b0;      case(pu115d0)                  mre8d56: begin            if (ofd9566 == RECOVERY) begin               pu115d0      <= me46ab4;               yx44ecf  <= 1'b1;               rv2767d     <= fadaff3;               wy3b3ee <= OS_T1;            end            else begin               pu115d0      <= mre8d56;            end         end                  me46ab4: begin            if (((vicfd6b == 1'b0 && rgd54cf == fadaff3) ||                 (vicfd6b == 1'b1 && rgd54cf == fadaff3 && kf9af58)) && ~yx44ecf)  begin               pu115d0      <= tw355a0;               yx44ecf  <= 1'b1;               rv2767d     <= fadaff3;               wy3b3ee <= OS_T2;               fnc89d9    <= 1'b1;            end            else if (me560d7 && ~yx44ecf) begin               if (|kdc386d == 1'b1 || th7e118 == 1'b1) begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  ir12599 <= 1'b1;               end               else begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  ks824b3 <= 1'b1;               end            end            else begin               pu115d0      <= me46ab4;               fa79fad  <= (|kdc386d) ? 1'b1 : th7e118;            end         end                  tw355a0: begin            if (go533de == fadaff3 && wy1a658 == fadaff3 && ~yx44ecf && ng35b14 == fadaff3) begin               pu115d0      <= xlaad02;               yx44ecf  <= 1'b1;               qg622ba  <= 1'b1;               rv2767d     <= fadaff3;               wy3b3ee <= OS_IDLE;            end            else if (|sw82780 == 1'b1  && |ng932d5 == 1'b1 && ~yx44ecf) begin               pu115d0      <= ay56817;               rv2767d     <= {(LANE_WIDTH){1'b0}};               ir12599    <= 1'b1;               qg622ba  <= 1'b1;            end            else if (ay535eb && ~yx44ecf) begin               pu115d0   <= ay56817;               rv2767d  <= {(LANE_WIDTH){1'b0}};               ks824b3 <= 1'b1;            end            else begin               pu115d0   <= tw355a0;            end         end                   xlaad02: begin            casex({vx13c01, bn9e00f, uif007e, vxa0707})               4'b1xxx: begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  dmd0496 <= 1'b1;               end               4'bx1xx: begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  pf5a092 <= 1'b1;               end               4'bxx1x: begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  ir12599 <= 1'b1;               end               4'bxxx1: begin                  pu115d0   <= ay56817;                  rv2767d  <= {(LANE_WIDTH){1'b0}};                  zkeb412 <= 1'b1;               end               default: begin                  if (tu6c51a == fadaff3 && zm14699 == fadaff3 && ~yx44ecf) begin                     pu115d0   <= ay56817;                     rv2767d  <= {(LANE_WIDTH){1'b0}};                     twbd682  <= 1'b1;                  end                  else if (dbb06b8 && ~yx44ecf) begin                     pu115d0   <= ay56817;                     rv2767d  <= {(LANE_WIDTH){1'b0}};                     ks824b3 <= 1'b1;                  end                  else begin                     pu115d0   <= xlaad02;                  end               end            endcase         end                  ay56817: begin            fa79fad  <= 1'b0;            if (ofd9566 != RECOVERY) begin               pu115d0   <= mre8d56;            end            else begin               pu115d0   <= ay56817;            end         end         default: begin            pu115d0   <= mre8d56;         end      endcase   end
end
always@* begin vicfd6b<=xjc2975[0];dbb06b8<=xjc2975[1];me560d7<=xjc2975[2];ay535eb<=xjc2975[3];kf9af58<=xjc2975[4];ofd9566<={kf184f1>>1,xjc2975[5]};fadaff3<={xl8b1db>>1,xjc2975[6]};uve8d72<={zkc0d47>>1,xjc2975[7]};nee4d61<={twa7d59>>1,xjc2975[8]};ls35ca0<={zz6a3b>>1,xjc2975[9]};ps73b51<={rtcd8fa>>1,xjc2975[10]};dz55678<={jr2d4fc>>1,xjc2975[11]};me59e3c<={gbe786f>>1,xjc2975[12]};cb2cb75<={osfaed8>>1,xjc2975[13]};ph37a35<={bld81a8>>1,xjc2975[14]};nt33a1<={uv6a7e7>>1,xjc2975[15]};qgce87e<={yk53f3c>>1,xjc2975[16]};oha1f86<={yz9f9e1>>1,xjc2975[17]};rt7e1a0<={uiffe18>>1,xjc2975[18]};vk86839<={goff0c0>>1,xjc2975[19]};pfd7199<={nefe66c>>1,xjc2975[20]};oh39435<={qi1aeb1>>1,xjc2975[21]};en75937<={kfbb606>>1,xjc2975[22]};vk86b1e<=xjc2975[23];cm7281c<={asb_dskew_rx>>1,xjc2975[24]};wy1a658<={yz29101>>1,xjc2975[25]};ng932d5<={zk66c51>>1,xjc2975[26]};zm14699<={qg5ca44>>1,xjc2975[27]};rgd54cf<={yx51765>>1,xjc2975[28]};go533de<={xw5d96e>>1,xjc2975[29]};kdc386d<={ou1033a>>1,xjc2975[30]};tu6c51a<={kq49729>>1,xjc2975[31]};sw82780<={zm969b0>>1,xjc2975[32]};vx13c01<=xjc2975[33];bn9e00f<=xjc2975[34];uif007e<=xjc2975[35];vxa0707<=xjc2975[36];ng35b14<={gd9525c>>1,xjc2975[37]};th7e118<=xjc2975[38];end
always@* begin ux1852e[2047]<=qt6ff99;ux1852e[2046]<=ec8dff3;ux1852e[2044]<=ohae988;ux1852e[2040]<=jp74c45;ux1852e[2033]<=kf184f1[0];ux1852e[2024]<=qi1aeb1[0];ux1852e[2018]<=xl8b1db[0];ux1852e[2001]<=kfbb606[0];ux1852e[1988]<=zkc0d47[0];ux1852e[1954]<=hl_gto_cfg;ux1852e[1929]<=twa7d59[0];ux1852e[1874]<=gd360e9;ux1852e[1860]<=asb_dskew_rx[0];ux1852e[1811]<=zz6a3b[0];ux1852e[1789]<=uiffe18[0];ux1852e[1700]<=wwfa13e;ux1852e[1673]<=yz29101[0];ux1852e[1574]<=rtcd8fa[0];ux1852e[1530]<=goff0c0[0];ux1852e[1353]<=gd9525c[0];ux1852e[1299]<=zk66c51[0];ux1852e[1258]<=zm969b0[0];ux1852e[1247]<=uv6a7e7[0];ux1852e[1102]<=yx51765[0];ux1852e[1101]<=jr2d4fc[0];ux1852e[1023]<=ext_sync;ux1852e[1012]<=nefe66c[0];ux1852e[937]<=yma6c1d;ux1852e[894]<=yz9f9e1[0];ux1852e[658]<=fa79fad;ux1852e[629]<=kq49729[0];ux1852e[623]<=bld81a8[0];ux1852e[551]<=qg5ca44[0];ux1852e[468]<=gdb4d83;ux1852e[447]<=yk53f3c[0];ux1852e[314]<=ou1033a[0];ux1852e[311]<=osfaed8[0];ux1852e[157]<=xw5d96e[0];ux1852e[155]<=gbe786f[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module pcie_x1_top_wjf7c3f (
    
    sys_clk,
    rst_n, 

    aye5217,      
    tu485cd,    

    
    kf17352,      
    ldcd4a1,    
    tu52874,    
    yza1d1f,    
    pf747e2,    
    co1f8b1,    
    yxe2c4e,    
    ohb13ae,    
    of4eba3    
   ) ;

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam me6846d = 4'd0 ;
localparam rg42369  = 4'd1 ;
localparam ls11b4b  = 4'd2 ;
localparam sw8da5a  = 4'd3 ;
localparam ww6d2d1 = 4'd4 ;
localparam tu69689  = 4'd5 ;
localparam wj4b44b   = 4'd6 ;
localparam fn5a25d   = 4'd7 ;
localparam ayd12ee   = 4'd8 ;
localparam ng89771   = 4'd9 ;
localparam gb4bb8a   = 4'd10 ;
localparam by5dc54   = 4'd11 ;
input                     sys_clk;
input                     rst_n;
input   [15:0]            aye5217;
input   [1:0]             tu485cd;
output                    kf17352 ;
output                    ldcd4a1 ;
output                    tu52874 ;
output  [7:0]             yza1d1f;
output                    pf747e2;
output  [7:0]             co1f8b1;
output                    yxe2c4e;
output  [7:0]             ohb13ae;
output  [7:0]             of4eba3;
wire                  ykef7ea ;
wire                  hb7bf50 ;
wire                  hodfa86 ;
wire                  wjfd433 ;
wire                  wwea19c ;
wire                  rt50ce0 ;
wire                  pu86706 ;
wire                  wl33833 ;
wire                  tw9c19c ;
wire                  mee0ce3 ;
wire                  lf6718 ;
wire                  qv338c7 ;
wire                  xy9c63c ;
wire                  vve31e3 ;
wire                  ep18f1e ;
wire                  vvc78f4 ;
wire                  oh3c7a6 ;
reg                   kf17352 ;
reg                   ldcd4a1 ;
reg                   tu52874 ;
reg  [7:0]            yza1d1f;
reg  [7:0]            co1f8b1;
reg                   pf747e2;
reg                   yxe2c4e;
reg  [7:0]            ohb13ae;
reg  [7:0]            of4eba3;
reg                   qtc9445 ;
reg [3:0]             fn4a22c ;
reg                   yx51167 ;
reg                   wy88b3d ;
reg                   fn459e9 ;
reg [7:0]             ux2cf4f;
reg [7:0]             yk67a7c;
reg                   hd3d3e1;
reg                   jpe9f0e;
reg [7:0]             rt4f876;
reg [7:0]             lq7c3b6;
reg [15 : 0] nee1db2;
reg [1 : 0] ried92;
reg lq76c92;
reg ieb6492;
reg pub2491;
reg sw9248b;
reg wy92458;
reg co922c0;
reg bn91600;
reg xl8b007;
reg lq5803f;
reg byc01fb;
reg iefda;
reg sj7ed1;
reg pu3f68c;
reg xwfb463;
reg jcda31b;
reg god18da;
reg fc8c6d0;
reg tu63682;
reg [3 : 0] ng1b412;
reg neda092;
reg ned0492;
reg mg82493;
reg [7 : 0] yz12499;
reg [7 : 0] sw924cc;
reg wy92660;
reg do93300;
reg [7 : 0] hq99802;
reg [7 : 0] shcc012;
reg [2047:0] ux1852e;
wire [29:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam do14bae = 30,jra5d72 = 32'hfdffe44b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















assign ykef7ea = (ried92[0] & (nee1db2[7:0]  ==K28_5)) ;
assign hb7bf50 = (ried92[1] & (nee1db2[15:8] ==K28_5)) ;
assign hodfa86 = (~ried92[0] & (nee1db2[7:0]  == D10_2)) ;
assign wjfd433 = (~ried92[1] & (nee1db2[15:8] == D10_2)) ;
assign wwea19c  = pub2491 & sw9248b ;
assign rt50ce0 = (~ried92[0] & (nee1db2[7:0]  == D5_2)) ;
assign pu86706 = (~ried92[1] & (nee1db2[15:8] == D5_2)) ;
assign wl33833  = co922c0 & bn91600 ;
assign tw9c19c = (~ried92[0] & (nee1db2[7:0]  == D21_5)) ;
assign mee0ce3 = (~ried92[1] & (nee1db2[15:8] == D21_5)) ;
assign lf6718  = lq5803f & byc01fb ;
assign qv338c7 = (~ried92[0] & (nee1db2[7:0]  == D26_5)) ;
assign xy9c63c = (~ried92[1] & (nee1db2[15:8] == D26_5)) ;
assign vve31e3  = sj7ed1 & pu3f68c ;
assign ep18f1e  = pub2491 | lq5803f  | co922c0 | sj7ed1 ;
assign vvc78f4  = sw9248b | byc01fb  | bn91600 | pu3f68c ;
assign oh3c7a6   = wy92458  | iefda   | xl8b007  | xwfb463 ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fn4a22c    <= me6846d;   end   else begin      case(ng1b412)                              me6846d:                                if (ieb6492)                           fn4a22c <= rg42369;            else if (lq76c92)                      fn4a22c <= ls11b4b;            else               fn4a22c <= me6846d;         rg42369:                                  if (!ried92[0])               fn4a22c <= ww6d2d1;            else if (ieb6492)                       fn4a22c <= rg42369;            else if (lq76c92)                       fn4a22c <= ls11b4b;            else               fn4a22c <= me6846d;         ls11b4b:                                  if (ieb6492)                            fn4a22c <= rg42369;            else if (lq76c92)                       fn4a22c <= ls11b4b;            else               fn4a22c <= sw8da5a;         sw8da5a:                                  if (!ried92[1])               fn4a22c <= tu69689;            else if (ieb6492)                       fn4a22c <= rg42369;            else if (lq76c92)                       fn4a22c <= ls11b4b;            else               fn4a22c <= me6846d;         ww6d2d1:                                  if (ieb6492)                             fn4a22c <= rg42369;            else if (lq76c92)                        fn4a22c <= ls11b4b;            else if (ried92 == 2'b00 && !tu63682)                    fn4a22c <= wj4b44b;    else if (ried92 == 2'b00 && tu63682)                     fn4a22c <= tu69689;            else               fn4a22c <= me6846d;         tu69689:                                  if (ieb6492)                            fn4a22c <= rg42369;            else if (lq76c92)                      fn4a22c <= ls11b4b;    else               fn4a22c <= wj4b44b;         wj4b44b:            if (fc8c6d0 && !tu63682)               fn4a22c    <= fn5a25d;            else if (jcda31b && tu63682)               fn4a22c <= fn5a25d;            else               fn4a22c <= me6846d;         fn5a25d:            if (fc8c6d0)               fn4a22c <= ayd12ee;            else               fn4a22c <= me6846d;         ayd12ee:            if (fc8c6d0)               fn4a22c <= ng89771;            else               fn4a22c <= me6846d;         ng89771:            if (fc8c6d0)               fn4a22c <= gb4bb8a;            else               fn4a22c <= me6846d;         gb4bb8a:            if (lq76c92)                              fn4a22c <= ls11b4b;            else               fn4a22c <= me6846d;         default:            fn4a22c    <= me6846d;      endcase   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      qtc9445  <= 1'b0;      else begin      if (lq76c92)         qtc9445  <= 1'b1;      else if(ieb6492)         qtc9445  <= 1'b0;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      yx51167  <= 1'b0;   else if ((ng1b412 == gb4bb8a) && (wy92458 || iefda))      yx51167  <= 1'b1;   else if ((ng1b412 == gb4bb8a) && (sw9248b || byc01fb) && tu63682)      yx51167 <= 1'b1;   else      yx51167  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      wy88b3d  <= 1'b0;   else if ((ng1b412 == gb4bb8a) && (xl8b007 ||xwfb463))      wy88b3d  <= 1'b1;   else if ((ng1b412 == gb4bb8a) && (bn91600 || pu3f68c) && tu63682)      wy88b3d <= 1'b1;   else      wy88b3d  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      fn459e9  <= 1'b0;   else if ((ng1b412 == gb4bb8a) && (iefda || xwfb463))      fn459e9  <= 1'b1;   else if ((ng1b412 == gb4bb8a) && (byc01fb || pu3f68c) && tu63682)      fn459e9 <= 1'b1;   else      fn459e9  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kf17352   <= 1'b0;      ldcd4a1   <= 1'b0;      tu52874 <= 1'b0;   end   else begin      kf17352   <= neda092;      ldcd4a1   <= ned0492;      tu52874 <= mg82493;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ux2cf4f       <= 8'h00;      hd3d3e1 <= 1'b0;   end                           else if (ieb6492) begin      ux2cf4f       <= nee1db2[7:0];      hd3d3e1 <= ried92[0];   end   else if (tu63682 && (ng1b412 == ls11b4b)) begin      ux2cf4f       <= nee1db2[15:8];      hd3d3e1 <= ried92[1];   end   else begin      ux2cf4f       <= yz12499;      hd3d3e1 <= wy92660;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yk67a7c       <= 8'h00;      jpe9f0e <= 1'b0;   end   else if (tu63682 && (ng1b412 == ls11b4b)) begin      yk67a7c       <= nee1db2[7:0];      jpe9f0e <= ried92[0];   end   else if (!tu63682 && (ng1b412 == rg42369)) begin      yk67a7c       <= nee1db2[15:8];      jpe9f0e <= ried92[1];   end   else begin      yk67a7c       <= sw924cc;      jpe9f0e <= do93300;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      rt4f876 <= 8'h00;   else if (!tu63682 && (ng1b412 == rg42369))      rt4f876 <= nee1db2[7:0];   else if (tu63682 && (ng1b412 == sw8da5a))      rt4f876 <= nee1db2[15:8];   else      rt4f876 <= hq99802;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      lq7c3b6 <= 8'h00;   else if (!tu63682 && (ng1b412 == ww6d2d1))      lq7c3b6 <= nee1db2[7:0];   else if (tu63682 && (ng1b412 == tu69689))      lq7c3b6 <= nee1db2[15:8];   else      lq7c3b6 <= shcc012;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yza1d1f       <= 8'h00;      pf747e2 <= 1'b0;      co1f8b1       <= 8'h00;      yxe2c4e <= 1'b0;      ohb13ae       <= 8'h00;      of4eba3       <= 8'h00;   end   else if (neda092 || ned0492 || tu52874)  begin      yza1d1f       <= yz12499;      pf747e2 <= wy92660;      co1f8b1       <= sw924cc;      yxe2c4e <= do93300;      ohb13ae       <= hq99802;      of4eba3       <= shcc012;   end
end
always@* begin nee1db2<={aye5217>>1,xjc2975[0]};ried92<={tu485cd>>1,xjc2975[1]};lq76c92<=xjc2975[2];ieb6492<=xjc2975[3];pub2491<=xjc2975[4];sw9248b<=xjc2975[5];wy92458<=xjc2975[6];co922c0<=xjc2975[7];bn91600<=xjc2975[8];xl8b007<=xjc2975[9];lq5803f<=xjc2975[10];byc01fb<=xjc2975[11];iefda<=xjc2975[12];sj7ed1<=xjc2975[13];pu3f68c<=xjc2975[14];xwfb463<=xjc2975[15];jcda31b<=xjc2975[16];god18da<=xjc2975[17];fc8c6d0<=xjc2975[18];tu63682<=xjc2975[19];ng1b412<={fn4a22c>>1,xjc2975[20]};neda092<=xjc2975[21];ned0492<=xjc2975[22];mg82493<=xjc2975[23];yz12499<={ux2cf4f>>1,xjc2975[24]};sw924cc<={yk67a7c>>1,xjc2975[25]};wy92660<=xjc2975[26];do93300<=xjc2975[27];hq99802<={rt4f876>>1,xjc2975[28]};shcc012<={lq7c3b6>>1,xjc2975[29]};end
always@* begin ux1852e[2047]<=tu485cd[0];ux1852e[2046]<=ykef7ea;ux1852e[2044]<=hb7bf50;ux1852e[2040]<=hodfa86;ux1852e[2033]<=wjfd433;ux1852e[2019]<=wwea19c;ux1852e[1991]<=rt50ce0;ux1852e[1934]<=pu86706;ux1852e[1898]<=vve31e3;ux1852e[1821]<=wl33833;ux1852e[1749]<=ep18f1e;ux1852e[1707]<=qtc9445;ux1852e[1666]<=rt4f876[0];ux1852e[1595]<=tw9c19c;ux1852e[1450]<=vvc78f4;ux1852e[1440]<=hd3d3e1;ux1852e[1384]<=ux2cf4f[0];ux1852e[1370]<=wy88b3d;ux1852e[1366]<=fn4a22c[0];ux1852e[1284]<=lq7c3b6[0];ux1852e[1142]<=mee0ce3;ux1852e[1023]<=aye5217[0];ux1852e[949]<=xy9c63c;ux1852e[853]<=oh3c7a6;ux1852e[833]<=jpe9f0e;ux1852e[720]<=yk67a7c[0];ux1852e[692]<=fn459e9;ux1852e[685]<=yx51167;ux1852e[474]<=qv338c7;ux1852e[237]<=lf6718;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
























































`timescale 1 ns / 100 ps
module pcie_x1_top_mtabe09 
   (
    
    sys_clk,            
    rst_n,              
    normal_time,        
    reduce_idlecnt,     

    
    LINK_NUM,           
    N_FTS_INC,          
    TX_EIDL_CNT,        

    
    asb_data,           
    asb_kcntl,          
    asb_eidle_rx,       
    asb_detdone_rx,     
    asb_detres_rx,      
    asb_dskew_rx,       
    asb_beacon_rx,      
    asb_lane_sync,      

    
    cfgcs_losel,        
    ext_sync,           
    no_pcie_train,      
    
    
    wjf834e,        
    and3a1,       

    
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_det,         
    hl_gto_hrst,        
    hl_gto_l0stx,       
    hl_gto_l1,          
    hl_gto_l2,          
    hl_gto_l0stxfts,    
    hl_gto_lbk,         
    hl_gto_rcvry,       
    hl_gto_cfg,         
    hl_snd_beacon,      
    dll_rtrn_lnk,       
    cfg_rtrn_lnk,       

    ne48a16,       
    ld450b3,       
    nt2859e,       

    
    zm2540b,  
    ng2a05b,         
    xj502da,        
    rv816d7,          
    hqb6be,       
    of5b5f3,      
    ltssm_cfgln_sum,    
    vk35942,  
    ltssm_config_ln,    
    go46e47,    
    swa98d2,     
    zxe3f73,     
    mg1fb9f,    
    kdfdcf9,    
    ri9c974,   
    ps73e6a,       
    qv9f352,      
    nrf9a94,      
    dz71572,        
    al6a53e,     
    ltssm_l0,           
    l0s_tx_state,       
    l1_state,           
    l2_state,           
    pol_compliance,     
    wya3cc2        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                       sys_clk;
input                       rst_n;
input                       normal_time;
input                       reduce_idlecnt;
input [7:0]                 LINK_NUM;
input [4:0]                 N_FTS_INC;
input [3:0]                 TX_EIDL_CNT ;
input [16*LANE_WIDTH-1:0]   asb_data;
input [2*LANE_WIDTH-1:0]    asb_kcntl;
input [LANE_WIDTH-1:0]      asb_eidle_rx;
input [LANE_WIDTH-1:0]      asb_detdone_rx;
input [LANE_WIDTH-1:0]      asb_detres_rx;
input [LANE_WIDTH-1:0]      asb_dskew_rx;
input [LANE_WIDTH-1:0]      asb_beacon_rx;
input [LANE_WIDTH-1:0]      asb_lane_sync;
input                       ext_sync;
input   [2:0]               cfgcs_losel;
input                       no_pcie_train;
input   [3:0]               wjf834e;
input                       and3a1;
input                       hl_disable_scr;
input                       hl_gto_dis;
input                       hl_gto_det;
input                       hl_gto_hrst;
input                       hl_gto_l0stx;
input                       hl_gto_l1;
input                       hl_gto_l2;
input                       hl_gto_l0stxfts;
input [LANE_WIDTH-1:0]      hl_gto_lbk;
input                       hl_gto_rcvry;
input                       hl_gto_cfg;
input                       hl_snd_beacon;
input                       cfg_rtrn_lnk;
input                       dll_rtrn_lnk;
input                       ne48a16;
input                       ld450b3;
input                       nt2859e;
output                      zm2540b;
output [16*LANE_WIDTH-1:0]  ng2a05b;
output [2*LANE_WIDTH-1:0]   xj502da;
output [LANE_WIDTH-1:0]     rv816d7;
output [2*LANE_WIDTH-1:0]   hqb6be;
output                      of5b5f3;
output  [2:0]               ltssm_cfgln_sum;
output                      vk35942;
output  [LANE_WIDTH-1:0]    ltssm_config_ln;
output  [LANE_WIDTH-1:0]    go46e47;
output  [LANE_WIDTH-1:0]    swa98d2;
output  [LANE_WIDTH-1:0]    zxe3f73;
output                      mg1fb9f;
output                      kdfdcf9;
output                      ri9c974;
output                      ps73e6a;
output                      qv9f352;
output                      nrf9a94;
output  [MSM_WIDTH:0]       dz71572;
output  [2:0]               al6a53e;
output                      ltssm_l0;
output [L0sTSM_WIDTH:0]     l0s_tx_state;
output [L1SM_WIDTH:0]       l1_state;
output [L2SM_WIDTH:0]       l2_state;
output                      pol_compliance;
output                      wya3cc2;
parameter kd4b5e8    = 32'd8;
parameter nr5af45   = 32'd2;
parameter thd7a2f   = 32'd4;
parameter jebd17f  = 32'd64;
parameter yxe8bfa    = 32'd256;
parameter hb45fd4   = 18  * kd4b5e8;
parameter uv7f53b   = 34  * kd4b5e8;

`ifdef DENALI_SIMULATE // For DENALI simulation only
parameter ead4ee8 = 40 * kd4b5e8;
parameter gq3ba02    = 32'd200;
parameter bldd010    = 2   * gq3ba02;
parameter bl4043d    = 6   * gq3ba02;
parameter gq10f75   = 12  * gq3ba02;
parameter jr3dd40   = 24  * gq3ba02;
parameter ip7503b   = 48  * gq3ba02;
parameter ld40ee3   = 50  * gq3ba02;
parameter co3b8fd  = 100 * gq3ba02;

`else

`ifdef SIMULATE // For simulation only
parameter xje3f45  = 32'd1000;
parameter gq3ba02    = 32'd100;
parameter bl4043d    = 6  * 50;
parameter ld40ee3   = 50 * 50;

`ifdef LTSSM_MACO
parameter ead4ee8 = 60  * kd4b5e8;
parameter bldd010    = 2   * 100;
parameter gq10f75   = 12  * 50;
parameter jr3dd40   = 24  * 50;
parameter ip7503b   = 48  * 50;
parameter co3b8fd  = 100 * 50;

`else
parameter ead4ee8 = 6 * kd4b5e8;
parameter bldd010    = 3  * 80;

`ifndef MULTI_4
parameter gq10f75   = 2  * 50 * 2;
parameter jr3dd40   = 4  * 50 * 2;
parameter ip7503b   = 8  * 50 * 2;
parameter co3b8fd  = 10 * 50 * 2;

`else
parameter gq10f75   = 2  * 50;
parameter jr3dd40   = 4  * 50;
parameter ip7503b   = 8  * 50;
parameter co3b8fd  = 10 * 50;

`endif

`endif

`else           // Actual values
parameter xje3f45  = 32'd16000;
parameter gq3ba02    = 32'd125000;
parameter ead4ee8 = 32'd1030* kd4b5e8;
parameter bldd010    = 32'd2   * gq3ba02;
parameter gq10f75   = 32'd12  * gq3ba02;
parameter jr3dd40   = 32'd24  * gq3ba02;
parameter ip7503b   = 32'd48  * gq3ba02;
parameter co3b8fd  = 32'd100 * gq3ba02;
parameter bl4043d    = 32'd6   * gq3ba02;
parameter ld40ee3   = 32'd50  * gq3ba02;

`endif

`endif
wire   [MSM_WIDTH:0]       kf184f1;
wire   [LANE_WIDTH-1:0]    vvc278d;
wire   [LANE_WIDTH-1:0]    xl8b1db;
wire   [LANE_WIDTH-1:0]    tj2daa8;
wire                       dz5fbb6;
wire                       jcfb946;
wire                       yxdca32;
wire                       faeedbd;
wire                       aa1fc6c;
wire                       alc3f8d;
wire  [LANE_WIDTH-1:0]     aa10d65;
wire  [LANE_WIDTH-1:0]     je86b28;
wire  [LANE_WIDTH-1:0]     of7a099;
wire  [LANE_WIDTH-1:0]     wy92605;
wire  [LANE_WIDTH-1:0]     rv2767d;
wire  [LANE_WIDTH-1:0]     mrd97dc;
wire  [LANE_WIDTH-1:0]     qgdb02a;
wire  [LANE_WIDTH-1:0]     zk42cf7;
wire  [LANE_WIDTH-1:0]     mec1a2a;
wire  [LANE_WIDTH-1:0]     sud1347;
wire  [LANE_WIDTH-1:0]     fa6cd7e;
wire  [LANE_WIDTH-1:0]     zx5aca4;
wire  [LANE_WIDTH-1:0]     osde498;
wire  [LANE_WIDTH-1:0]     ec82cd8;
wire  [LANE_WIDTH-1:0]     ukb3dd6;
wire  [LANE_WIDTH-1:0]     lsb8345;
wire  [LANE_WIDTH-1:0]     vxba268;
wire  [LANE_WIDTH-1:0]     ay4650e;
wire  [LANE_WIDTH-1:0]     ks543b;
wire  [OS_WIDTH -1:0]      psd04cd;
wire  [OS_WIDTH -1:0]      do93028;
wire  [OS_WIDTH -1:0]      wy3b3ee;
wire  [OS_WIDTH -1:0]      iccbee5;
wire  [OS_WIDTH -1:0]      nrd8150;
wire  [OS_WIDTH -1:0]      vx167ba;
wire  [OS_WIDTH -1:0]      yzd151;
wire  [OS_WIDTH -1:0]      ba89a39;
wire  [OS_WIDTH -1:0]      jc66bf2;
wire                       thc2d43;
wire  [8:0]                zz16a1e;
reg   [31:0]               hdb50f7;
wire                       doa87be;
wire                       jpc8e38;
wire                       dm471c7;
wire                       enf7cc3;
wire  [LANE_WIDTH-1:0]    zm83218;
wire  [LANE_WIDTH-1:0]    zz190c3;
wire  [LANE_WIDTH-1:0]    uiffe18;
wire  [LANE_WIDTH-1:0]    goff0c0;
wire  [LANE_WIDTH-1:0]    jpf3363;
wire  [LANE_WIDTH-1:0]    xy99b1f;
wire  [LANE_WIDTH-1:0]    ng2afcb;
wire  [LANE_WIDTH-1:0]    ps6c7d7;
wire  [LANE_WIDTH-1:0]    ps63ebb;
wire  [LANE_WIDTH-1:0]    nrf96df;
wire  [LANE_WIDTH-1:0]    rtcd8fa;
wire  [LANE_WIDTH-1:0]    jr2d4fc;
wire  [LANE_WIDTH-1:0]    nrd76c0;
wire  [LANE_WIDTH-1:0]    ks1f5db;
wire  [LANE_WIDTH-1:0]    dzfcf0d;
wire  [LANE_WIDTH-1:0]    gbe786f;
wire  [LANE_WIDTH-1:0]    uv6a7e7;
wire  [LANE_WIDTH-1:0]    yk53f3c;
wire  [LANE_WIDTH-1:0]    yz9f9e1;
wire  [LANE_WIDTH-1:0]    yzdf62;
wire  [LANE_WIDTH-1:0]    osfaed8;
wire  [LANE_WIDTH-1:0]    cm7d8ad;
wire  [LANE_WIDTH-1:0]    bld81a8;
wire  [LANE_WIDTH-1:0]    off7068;
wire  [LANE_WIDTH-1:0]    os430fe;
wire  [LANE_WIDTH-1:0]    ie920da;
wire  [LANE_WIDTH-1:0]    ks825d1;
wire  [LANE_WIDTH-1:0]    lf2d9af;
wire  [LANE_WIDTH-1:0]    icdb035;
wire  [LANE_WIDTH-1:0]    kfbb606;
wire  [LANE_WIDTH-1:0]    nefe66c;
wire  [LANE_WIDTH-1:0]    qi1aeb1;
wire  [8*LANE_WIDTH-1:0]  rtd7589;
wire  [8*LANE_WIDTH-1:0]  co3bfff;
wire  [LANE_WIDTH-1:0]    mrd3092;
wire  [LANE_WIDTH-1:0]    thc24a1;
wire  [LANE_WIDTH-1:0]    ym9287c;
wire  [LANE_WIDTH-1:0]    gda1f0f;
wire  [LANE_WIDTH-1:0]    xw7c3e0;
wire  [LANE_WIDTH-1:0]    ecf812;
wire  [LANE_WIDTH-1:0]    mee0482;
wire  [LANE_WIDTH-1:0]    oh1208d;
wire  [LANE_WIDTH-1:0]    aa82365;
wire  [LANE_WIDTH-1:0]    wy8d94a;
wire  [LANE_WIDTH-1:0]    uv6528a;
wire  [LANE_WIDTH-1:0]    bl4a2ad;
wire  [LANE_WIDTH-1:0]    cb8ab7d;
wire  [LANE_WIDTH-1:0]    lsadf66;
wire  [LANE_WIDTH-1:0]    ui7d995;
wire  [LANE_WIDTH-1:0]    vi6654e;
wire  [LANE_WIDTH-1:0]    oh95396;
wire  [LANE_WIDTH-1:0]    al4e5a8;
wire  [LANE_WIDTH-1:0]    ls96a28;
wire  [LANE_WIDTH-1:0]    ria8a1e;
wire  [16*LANE_WIDTH-1:0]  ng2a05b;
wire  [2*LANE_WIDTH-1:0]   xj502da;
wire  [2*LANE_WIDTH-1:0]   hqb6be;
wire  [LANE_WIDTH-1:0]     rv816d7;
wire                       zz37238;
wire                       cb80666;
wire                       db199a7;
wire                       mrccd3e;
wire                       zkc0d47;
wire                       twa7d59;
wire                       zz6a3b;
wire  [8*LANE_WIDTH-1:0]   xjc71df;
wire  [8*LANE_WIDTH-1:0]   jr38eff;
wire  [LANE_WIDTH-1:0]     yz9f8f7 ;
wire                       dz4fedf ;
wire                       en7f6fe ;
wire                       nefb7f5 ;
wire                       godbfab ;
wire                       vka8ef2;
wire                       hq83685;
wire                       fnc89d9;
reg                        mtab2d0;
reg                        me59684;
reg                        iccb421;
reg                        xj5a109;
reg                        psd084e;
reg  [LANE_WIDTH-1:0]      ie21396;
reg  [7:0]                 ukb91c7;
reg  [7:0]                 en4e58f;
reg  [LANE_WIDTH-1:0]      ep90086;
reg  [OS_WIDTH -1:0]       ux80435;
reg                        ouaca13;
reg                        en65098;
reg  [LANE_WIDTH-1:0]      db284c5;
reg  [31:0]                mgac150;
reg  [31:0]                sh60a81;
reg                        gd21ac;
reg                        yx7fccd;
reg                        qt6ff99;
reg                        bl61d5a  ;
reg                        ec8dff3;
reg                        ohae988;
reg                        vkb2882;
reg                        ep1d462;
reg                        fp38e3b;
reg                        yk779f7;
reg                        iebcfb8;
reg                        jp74c45;
reg                        ne5241b;
reg                        ea786d8;
reg                        wy1a402;
reg                        jpd2010;
reg  [7:0]                 qi8880f;
reg  [MSM_WIDTH:0]         dz71572;
reg  [2:0]                 al6a53e;
reg  [LANE_WIDTH-1:0]      ltssm_config_ln;
reg  [2:0]                 ltssm_cfgln_sum;
reg                        vk35942;
wire  [LANE_WIDTH-1:0]     kdd9712;
wire  [LANE_WIDTH-1:0]     su5c4a8;
wire  [LANE_WIDTH-1:0]     oh12a0c;
wire  [LANE_WIDTH-1:0]     hqa832d;
wire  [LANE_WIDTH-1:0]     ntcb5d;
wire  [LANE_WIDTH-1:0]     vx2d77c;
wire  [LANE_WIDTH-1:0]     zk5df3f;
wire  [LANE_WIDTH-1:0]     fa7cfd1;
wire  [OS_WIDTH -1:0]      pu3f45d;
wire  [OS_WIDTH -1:0]      ayd1759;
wire   [LANE_WIDTH-1:0]    vi5d64e;
wire   [LANE_WIDTH-1:0]    su5939a;
wire  [CFGSM_WIDTH:0]      gb4e68d;
wire  [CFGSM_WIDTH:0]      sj9a36b;
wire                       ho47792;
wire                       ie3bc93;
wire                       wjf24c0;
reg                        fn6b809;
reg                        me5c04f  ;
reg                        ice0279  ;
reg                        hq13c9  ;
reg                        hd9e4a;
reg                        pf4f257  ;
reg                        zk792bf  ;
reg                        wjc95fa  ;
reg   [LANE_WIDTH-1:0]     ne57ea6;
reg   [LANE_WIDTH-1:0]     wwfa99f;
reg   [LANE_WIDTH-1:0]     coa67c0;
reg   [LANE_WIDTH-1:0]     mt9f004;
reg   [LANE_WIDTH-1:0]     zkc0124;
reg   [LANE_WIDTH-1:0]     tw4911;
reg   [LANE_WIDTH-1:0]     qi24458;
reg   [LANE_WIDTH-1:0]     do1160e;
reg   [LANE_WIDTH-1:0]     jc5839f;
reg   [LANE_WIDTH-1:0]     hqe7d9;
reg   [LANE_WIDTH-1:0]     an9f65a;
reg   [LANE_WIDTH-1:0]     ipd96a3;
reg   [LANE_WIDTH-1:0]     bl5a8e9;
reg   [LANE_WIDTH-1:0]     wya3a79;
reg   [LANE_WIDTH-1:0]     rte9e4d;
reg   [LANE_WIDTH-1:0]     ho79377;
reg   [LANE_WIDTH-1:0]     vi4ddd5;
reg   [LANE_WIDTH-1:0]     ay7755f;
reg   [LANE_WIDTH-1:0]     rgd57ce;
reg   [LANE_WIDTH-1:0]     fn5f39d;

`ifdef GEN2
reg                     dzf9cee ;
reg                     eace777 ;

`endif
wire  [DSM_WIDTH:0]        xl278b4;
wire  [PSM_WIDTH:0]        zxcd672;
wire  [CFGSM_WIDTH:0]      lq58edf;
wire  [L0SM_WIDTH:0]       hd32871;
wire  [L0sTSM_WIDTH:0]     vv50ec2;
wire  [L0sRSM_WIDTH:0]     ym2b494;
wire  [L1SM_WIDTH:0]       bld818e;
wire  [L2SM_WIDTH:0]       dbb0f74;
wire  [RSM_WIDTH:0]        pu115d0;
wire  [LBSM_WIDTH:0]       xw472d0;
wire  [HRSM_WIDTH:0]       nr7e4df;
wire  [DISM_WIDTH:0]       mr51832;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef GEN2

`else 

`endif
localparam lq76c51    = (32'd4096 + 1'd1);

`ifdef LW1

`endif

`ifdef LW2

`endif

`ifdef LW4

`endif
reg [3:0]     ieb628a;
reg [3:0]     qvb1451;

`ifdef GEN2

`endif

`ifdef DOWN_X1

`else

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`endif
reg puade3c;
reg wy88dee;
reg [7 : 0] yx4b2d9;
reg [4 : 0] yx5196d;
reg [3 : 0] su596cd;
reg [16 * LANE_WIDTH - 1 : 0] dm5d079;
reg [2 * LANE_WIDTH - 1 : 0] yx41e5d;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] gbe2874;
reg [LANE_WIDTH - 1 : 0] uxa1d2b;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] ba89858;
reg [LANE_WIDTH - 1 : 0] qg4c2c3;
reg [2 : 0] jccf6b4;
reg vicfd6b;
reg ana4bc4;
reg [3 : 0] end68fb;
reg kq562f2;
reg aaacd56;
reg vi66ab0;
reg uic1573;
reg tjbfcdf;
reg ri8ce98;
reg os674c3;
reg zm3a618;
reg os53e8a;
reg [LANE_WIDTH - 1 : 0] fpaac1a;
reg ald30c3;
reg vk86b1e;
reg zm2f40e;
reg ie9861c;
reg enc30e1;
reg of7a072;
reg psd0395;
reg fp81cab;
reg [MSM_WIDTH : 0] ofd9566;
reg [LANE_WIDTH - 1 : 0] zx559aa;
reg [LANE_WIDTH - 1 : 0] fadaff3;
reg [LANE_WIDTH - 1 : 0] gq1a4f5;
reg ou973dc;
reg sue54fa;
reg xla0b6c;
reg facf701;
reg osd19d3;
reg ba3a33a;
reg [LANE_WIDTH - 1 : 0] czc9d2b;
reg [LANE_WIDTH - 1 : 0] al4e95d;
reg [LANE_WIDTH - 1 : 0] hq8c93a;
reg [LANE_WIDTH - 1 : 0] gq24e9e;
reg [LANE_WIDTH - 1 : 0] hq3a786;
reg [LANE_WIDTH - 1 : 0] hd9e19d;
reg [LANE_WIDTH - 1 : 0] ba86771;
reg [LANE_WIDTH - 1 : 0] gq9dc5c;
reg [LANE_WIDTH - 1 : 0] rt71702;
reg [LANE_WIDTH - 1 : 0] ic5c0b6;
reg [LANE_WIDTH - 1 : 0] mt2d89;
reg [LANE_WIDTH - 1 : 0] ymb6267;
reg [LANE_WIDTH - 1 : 0] hq899cc;
reg [LANE_WIDTH - 1 : 0] ay67319;
reg [LANE_WIDTH - 1 : 0] wjcc645;
reg [LANE_WIDTH - 1 : 0] lf19162;
reg [LANE_WIDTH - 1 : 0] jp458bf;
reg [LANE_WIDTH - 1 : 0] yk62ffd;
reg [LANE_WIDTH - 1 : 0] lfbff4d;
reg [OS_WIDTH - 1 : 0] wjfd370;
reg [OS_WIDTH - 1 : 0] ne4dc26;
reg [OS_WIDTH - 1 : 0] gb7099e;
reg [OS_WIDTH - 1 : 0] oh267af;
reg [OS_WIDTH - 1 : 0] bn9ebe4;
reg [OS_WIDTH - 1 : 0] phaf939;
reg [OS_WIDTH - 1 : 0] xwe4e7b;
reg [OS_WIDTH - 1 : 0] ep39ed6;
reg [OS_WIDTH - 1 : 0] ld7b5ab;
reg rgdad5f;
reg [8 : 0] yxd6afb;
reg [31 : 0] zzb57dd;
reg sjabeee;
reg kfb136c;
reg ba89b64;
reg dzddd72;
reg [LANE_WIDTH - 1 : 0] db22449;
reg [LANE_WIDTH - 1 : 0] jr91274;
reg [LANE_WIDTH - 1 : 0] rt7e1a0;
reg [LANE_WIDTH - 1 : 0] vk86839;
reg [LANE_WIDTH - 1 : 0] alc6673;
reg [LANE_WIDTH - 1 : 0] zm99ced;
reg [LANE_WIDTH - 1 : 0] ou92393;
reg [LANE_WIDTH - 1 : 0] wjed450;
reg [LANE_WIDTH - 1 : 0] al5142c;
reg [LANE_WIDTH - 1 : 0] shc6e50;
reg [LANE_WIDTH - 1 : 0] ps73b51;
reg [LANE_WIDTH - 1 : 0] dz55678;
reg [LANE_WIDTH - 1 : 0] lf2dd64;
reg [LANE_WIDTH - 1 : 0] th50b2d;
reg [LANE_WIDTH - 1 : 0] dmd5c15;
reg [LANE_WIDTH - 1 : 0] me59e3c;
reg [LANE_WIDTH - 1 : 0] nt33a1;
reg [LANE_WIDTH - 1 : 0] qgce87e;
reg [LANE_WIDTH - 1 : 0] oha1f86;
reg [LANE_WIDTH - 1 : 0] ip70554;
reg [LANE_WIDTH - 1 : 0] cb2cb75;
reg [LANE_WIDTH - 1 : 0] fnf958b;
reg [LANE_WIDTH - 1 : 0] ph37a35;
reg [LANE_WIDTH - 1 : 0] nr55cc0;
reg [LANE_WIDTH - 1 : 0] bl74e8c;
reg [LANE_WIDTH - 1 : 0] go6d98e;
reg [LANE_WIDTH - 1 : 0] yz957e3;
reg [LANE_WIDTH - 1 : 0] blf37f3;
reg [LANE_WIDTH - 1 : 0] jp64de8;
reg [LANE_WIDTH - 1 : 0] en75937;
reg [LANE_WIDTH - 1 : 0] pfd7199;
reg [LANE_WIDTH - 1 : 0] oh39435;
reg [8 * LANE_WIDTH - 1 : 0] qtfdbfd;
reg [8 * LANE_WIDTH - 1 : 0] rgcac5e;
reg [LANE_WIDTH - 1 : 0] mrfdb2c;
reg [LANE_WIDTH - 1 : 0] vi6cb2c;
reg [LANE_WIDTH - 1 : 0] ep2cb14;
reg [LANE_WIDTH - 1 : 0] ir2c524;
reg [LANE_WIDTH - 1 : 0] xy14929;
reg [LANE_WIDTH - 1 : 0] ie24a54;
reg [LANE_WIDTH - 1 : 0] ux29503;
reg [LANE_WIDTH - 1 : 0] uv540ee;
reg [LANE_WIDTH - 1 : 0] tj3baf;
reg [LANE_WIDTH - 1 : 0] xweebf4;
reg [LANE_WIDTH - 1 : 0] vxafd1d;
reg [LANE_WIDTH - 1 : 0] dmf477e;
reg [LANE_WIDTH - 1 : 0] qv1df91;
reg [LANE_WIDTH - 1 : 0] dz7e461;
reg [LANE_WIDTH - 1 : 0] bn9187d;
reg [LANE_WIDTH - 1 : 0] nr61f72;
reg [LANE_WIDTH - 1 : 0] cm7dcb0;
reg [LANE_WIDTH - 1 : 0] ww72c0a;
reg [LANE_WIDTH - 1 : 0] hdb0282;
reg [LANE_WIDTH - 1 : 0] oua0b6;
reg oh9ac4d;
reg ie82d8f;
reg fnd24d5;
reg do93570;
reg uve8d72;
reg nee4d61;
reg ls35ca0;
reg [8 * LANE_WIDTH - 1 : 0] os6d91b;
reg [8 * LANE_WIDTH - 1 : 0] dm6c8d8;
reg [LANE_WIDTH - 1 : 0] pu3a2c2;
reg ay7de56;
reg goef2b1;
reg rg79588;
reg jccac42;
reg yk56212;
reg uxb1090;
reg co88484;
reg vi42420;
reg sj12103;
reg yz9081c;
reg vx840e4;
reg ng20726;
reg [LANE_WIDTH - 1 : 0] fp1c99e;
reg [7 : 0] ald626d;
reg [7 : 0] an267b2;
reg [LANE_WIDTH - 1 : 0] fn64cc9;
reg [OS_WIDTH - 1 : 0] oh33274;
reg jra5767;
reg ou2bb3f;
reg [LANE_WIDTH - 1 : 0] ho5d9f9;
reg [31 : 0] ayfad3b;
reg [31 : 0] end69d8;
reg ls993a5;
reg xy835c6;
reg dbb06b8;
reg blc78a1;
reg me560d7;
reg ay535eb;
reg uv7f7c5;
reg al7048f;
reg rg4db23;
reg wjed60a;
reg vv6b055;
reg kf9af58;
reg sw5b66;
reg je2a7d1;
reg jc69326;
reg su49933;
reg [7 : 0] tjaf592;
reg [LANE_WIDTH - 1 : 0] shd64b4;
reg [LANE_WIDTH - 1 : 0] ec92d23;
reg [LANE_WIDTH - 1 : 0] kfb48cb;
reg [LANE_WIDTH - 1 : 0] sj232ed;
reg [LANE_WIDTH - 1 : 0] uicbb67;
reg [LANE_WIDTH - 1 : 0] iped9c2;
reg [LANE_WIDTH - 1 : 0] yk670a2;
reg [LANE_WIDTH - 1 : 0] dzc2886;
reg [OS_WIDTH - 1 : 0] fca21b3;
reg [OS_WIDTH - 1 : 0] pu86cd0;
reg [LANE_WIDTH - 1 : 0] qib3415;
reg [LANE_WIDTH - 1 : 0] dmd054c;
reg [CFGSM_WIDTH : 0] co15318;
reg [CFGSM_WIDTH : 0] kq4c608;
reg ho63040;
reg wl18202;
reg kqc1015;
reg ep80a8;
reg nr40544;
reg cb2a26;
reg qi15134;
reg lsa89a1;
reg gb44d0a;
reg cb26855;
reg ks342ad;
reg [LANE_WIDTH - 1 : 0] ksab45;
reg [LANE_WIDTH - 1 : 0] doad146;
reg [LANE_WIDTH - 1 : 0] rt45198;
reg [LANE_WIDTH - 1 : 0] os46636;
reg [LANE_WIDTH - 1 : 0] ks98d8d;
reg [LANE_WIDTH - 1 : 0] an36344;
reg [LANE_WIDTH - 1 : 0] ie8d12d;
reg [LANE_WIDTH - 1 : 0] uv44b40;
reg [LANE_WIDTH - 1 : 0] nt2d02a;
reg [LANE_WIDTH - 1 : 0] ld40ab9;
reg [LANE_WIDTH - 1 : 0] je2ae78;
reg [LANE_WIDTH - 1 : 0] ecb9e1a;
reg [LANE_WIDTH - 1 : 0] ic7868b;
reg [LANE_WIDTH - 1 : 0] co1a2c5;
reg [LANE_WIDTH - 1 : 0] fp8b141;
reg [LANE_WIDTH - 1 : 0] psc507a;
reg [LANE_WIDTH - 1 : 0] wj41e97;
reg [LANE_WIDTH - 1 : 0] uv7a5e9;
reg [LANE_WIDTH - 1 : 0] mg97a6f;
reg [LANE_WIDTH - 1 : 0] the9bca;
reg [DSM_WIDTH : 0] qt6f2b3;
reg [PSM_WIDTH : 0] zkcace2;
reg [CFGSM_WIDTH : 0] cob3890;
reg [L0SM_WIDTH : 0] ipe2403;
reg [L0sTSM_WIDTH : 0] qv900e4;
reg [L0sRSM_WIDTH : 0] vx392c;
reg [L1SM_WIDTH : 0] dme4b36;
reg [L2SM_WIDTH : 0] ir2cd92;
reg [RSM_WIDTH : 0] an364a3;
reg [LBSM_WIDTH : 0] aa928eb;
reg [HRSM_WIDTH : 0] coa3acf;
reg [DISM_WIDTH : 0] jceb3cd;
reg [3 : 0] os59e6a;
reg [3 : 0] vicf350;
reg [2047:0] ux1852e;
wire [241:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef DENALI_SIMULATE // For DENALI simulation only

`else

`ifdef SIMULATE // For simulation only

`ifdef LTSSM_MACO

`else

`ifndef MULTI_4

`else

`endif

`endif

`else           // Actual values

`endif

`endif

`ifdef GEN2

`endif


`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif


`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif















`ifdef GEN2

`else 

`endif

`ifdef LW1

`endif

`ifdef LW2

`endif

`ifdef LW4

`endif

`ifdef GEN2

`endif

`ifdef DOWN_X1

`else

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`endif

localparam do14bae = 242,jra5d72 = 32'hfdffd88b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DENALI_SIMULATE // For DENALI simulation only


`else


`ifdef SIMULATE // For simulation only


`ifdef LTSSM_MACO


`else


`ifndef MULTI_4


`else


`endif


`endif


`else           // Actual values


`endif


`endif


`ifdef GEN2


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef GEN2


`else 


`endif


`ifdef LW1


`endif


`ifdef LW2


`endif


`ifdef LW4


`endif


`ifdef GEN2


`endif


`ifdef DOWN_X1


`else


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















`ifdef DENALI_SIMULATE // For DENALI simulation only



`else



`ifdef SIMULATE // For simulation only



`ifdef LTSSM_MACO
      


`else
      


`ifndef MULTI_4



`else



`endif



`endif



`else           // Actual values

   


`endif



`endif













`ifdef GEN2



`endif





assign zm2540b = (yk56212 | co88484 | uxb1090);







assign nefb7f5 = (|db22449) ;
assign godbfab = (|jr91274) ;
assign dz4fedf = ~ep80a8 & rg79588 ;
assign en7f6fe = ~lsa89a1 & jccac42;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fn6b809      <= 1'b0;      me5c04f <= 1'b0 ;      ice0279 <= 1'b0 ;      hq13c9 <= 1'b0 ;      hd9e4a      <= 1'b0;      pf4f257 <= 1'b0 ;      zk792bf <= 1'b0 ;      wjc95fa <= 1'b0 ;   end   else begin      fn6b809      <= rg79588 ;      me5c04f <= ay7de56 ;      ice0279 <= nr40544 ;      hq13c9 <= cb2a26 ;      hd9e4a      <= jccac42 ;      pf4f257 <= goef2b1 ;      zk792bf <= gb44d0a ;      wjc95fa <= cb26855 ;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ne57ea6  <= 0;      wwfa99f  <= 0;      coa67c0   <= 0;      mt9f004 <= 0;      zkc0124  <= 0;      tw4911   <= 0;      qi24458     <= 0;      ipd96a3<= 0;      bl5a8e9 <= 0;      wya3a79 <= 0;      ay7755f     <= 0;      rgd57ce    <= 0;   end   else if (oh9ac4d) begin      ne57ea6  <= 0;      wwfa99f  <= 0;      coa67c0   <= 0;      mt9f004 <= 0;      zkc0124  <= 0;      tw4911   <= 0;      qi24458     <= 0;      ipd96a3<= 0;      bl5a8e9 <= 0;      wya3a79 <= 0;      ay7755f     <= 0;      rgd57ce    <= 0;   end   else if (qi15134)  begin      ne57ea6  <= mrfdb2c;      wwfa99f  <= vi6cb2c;      coa67c0   <= ep2cb14;      mt9f004 <= ir2c524;      zkc0124  <= xy14929;      tw4911   <= ie24a54;      qi24458     <= ux29503;      ipd96a3<= dmf477e;      bl5a8e9 <= qv1df91;      wya3a79 <= dz7e461;      ay7755f     <= ww72c0a;      rgd57ce    <= hdb0282;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      do1160e         <= 0;      jc5839f  <= 0;      rte9e4d  <= 0;      ho79377  <= 0;      fn5f39d    <= 0;   end   else if (oh9ac4d) begin      do1160e         <= 0;      jc5839f  <= 0;      rte9e4d  <= 0;      ho79377  <= 0;      fn5f39d    <= 0;   end   else if (ks342ad)  begin      do1160e         <= uv540ee;      jc5839f  <= tj3baf;      rte9e4d  <= bn9187d;      ho79377  <= nr61f72;      fn5f39d    <= oua0b6;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hqe7d9 <= 0;      an9f65a <= 0;   end   else if (oh9ac4d) begin      hqe7d9 <= 0;      an9f65a <= 0;   end   else if (qi15134 || ks342ad)  begin      hqe7d9 <= xweebf4;      an9f65a <= vxafd1d;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vi4ddd5 <= 0;   end   else begin      vi4ddd5 <= cm7dcb0;   end
end

assign xy99b1f  = ksab45;
assign ng2afcb  = doad146;
assign ps6c7d7   = rt45198;
assign ps63ebb = os46636;
assign nrf96df  = ks98d8d;
assign rtcd8fa   = an36344;
assign jr2d4fc     = ie8d12d;
assign nrd76c0         = uv44b40;
assign ks1f5db  = nt2d02a;
assign dzfcf0d = ld40ab9;
assign gbe786f = je2ae78;
assign uv6a7e7= ecb9e1a;
assign yk53f3c = ic7868b;
assign yz9f9e1 = co1a2c5;
assign yzdf62  = fp8b141;
assign osfaed8  = psc507a;
assign bld81a8       = wj41e97;
assign ks825d1     = uv7a5e9;
assign lf2d9af    = mg97a6f;
assign icdb035    = the9bca;









pcie_x1_top_al5eebc off84d2 [LANE_WIDTH-1:0]
   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .reduce_idlecnt      (wy88dee),
    .asb_eidle_rx        (ks3130b),    .asb_lane_sync       (qg4c2c3),    .asb_data            (dm5d079),    .asb_kcntl           (yx41e5d),
    .hl_gto_hrst         (tjbfcdf),    .hl_gto_dis          (vi66ab0),    .hl_gto_lbk          (fpaac1a),
    .go46e47     (dzddd72),    .zz37238      (oh9ac4d),    .ukb91c7       (ald626d),    .jpc8e38           (kfb136c),    .dm471c7           (ba89b64),    .fp38e3b      (rg4db23),


`ifdef LW4
       .xjc71df         (os6d91b),                  .jr38eff         (dm6c8d8),


`endif



`ifdef LW2
       .xjc71df         (os6d91b[15:0]),       .jr38eff         (dm6c8d8[15:0]),


`endif



`ifdef LW1
       .xjc71df         (os6d91b[7:0]),       .jr38eff         (dm6c8d8[7:0]),


`endif

        


`ifdef LW4
       .dzc77ff    ({go46e47[0],go46e47[1],                           go46e47[2],go46e47[3]}),


`endif



`ifdef LW2
       .dzc77ff    ({go46e47[0],go46e47[1]}),


`endif



`ifdef LW1
       .dzc77ff    (go46e47[0]),


`endif

    .co3bfff            (co3bfff),    .zm83218              (zm83218),    .zz190c3              (zz190c3),    .uiffe18       (uiffe18),    .goff0c0       (goff0c0),    .jpf3363            (jpf3363),    .xy99b1f      (mrd3092),    .ng2afcb      (thc24a1),    .ps6c7d7       (ym9287c),    .ps63ebb     (gda1f0f),    .nrf96df      (xw7c3e0),    .rtcd8fa       (ecf812),    .jr2d4fc         (mee0482),    .uv6a7e7    (bl4a2ad),    .yk53f3c     (cb8ab7d),    .yz9f9e1     (lsadf66),    .dzfcf0d     (wy8d94a),    .gbe786f     (uv6528a),    .nrd76c0             (oh1208d),    .ks1f5db      (aa82365),    .yzdf62      (ui7d995),    .osfaed8      (vi6654e),    .cm7d8ad            (cm7d8ad),    .bld81a8           (oh95396),    .off7068           (off7068),    .os430fe     (os430fe),    .ie920da             (ie920da),    .ks825d1         (al4e5a8),    .lf2d9af        (ls96a28),    .icdb035        (ria8a1e),    .kfbb606         (kfbb606),    .nefe66c         (nefe66c),    .qi1aeb1        (qi1aeb1),    .rtd7589            (rtd7589)    );



pcie_x1_top_kqc4c35 ic56f5c   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .LINK_NUM            (yx4b2d9),    .TX_EIDL_CNT         (su596cd),        .zz37238      (oh9ac4d),    .ukb91c7       (ald626d),    .wy1a402   (jc69326),    .jpd2010   (su49933),    .ep90086        (fn64cc9),    .ux80435    (oh33274),    .gd21ac           (ls993a5),    .swa98d2      (fp1c99e),


`ifdef LW4
       .aa10d65   (czc9d2b),       .je86b28   (al4e95d),       .db284c5    (ho5d9f9),


`endif



`ifdef LW2
       .aa10d65   ({czc9d2b, 2'd0}),       .je86b28   ({al4e95d, 2'd0}),       .db284c5    ({ho5d9f9, 2'd0}),


`endif



`ifdef LW1
       .aa10d65   ({czc9d2b, 3'd0}),       .je86b28   ({al4e95d, 3'd0}),       .db284c5    ({ho5d9f9, 3'd0}),


`endif
    .vk35942   (vk35942),    .ouaca13      (jra5767),    .en65098       (ou2bb3f),    .ltssm_l0            (ltssm_l0),
        .zm83218              (|db22449),    .zz190c3              (|jr91274),    .cm7d8ad            (|fnf958b),


`ifdef LW4
       .co3bfff         (rgcac5e),


`endif



`ifdef LW2
       .co3bfff         ({rgcac5e, 16'd0}),


`endif



`ifdef LW1
       .co3bfff         ({rgcac5e, 24'd0}),


`endif

       .and3a1         (kq562f2),   .ne48a16         (of7a072),        .an1dcdc            (ng2a05b),    .vi73722           (xj502da),    .zz227e3             (rv816d7),    .yxdc89f          (hqb6be),    .yz9f8f7        (yz9f8f7),    .xjc71df            (xjc71df),    .jr38eff            (jr38eff),    .en657c1         (of5b5f3),    .cb80666         (cb80666),    .db199a7      (db199a7),    .mrccd3e        (mrccd3e),    .zz6a3b     (zz6a3b),    .zkc0d47         (zkc0d47),    .twa7d59         (twa7d59)    );
assign swa98d2 = pu3a2c2;



assign dz5fbb6 = sue54fa | xla0b6c;
assign faeedbd = osd19d3 | ba3a33a;
pcie_x1_top_jr60ab jr8eced   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .no_pcie_train     (ana4bc4),    .lf949e2       (lf949e2),    .ld5f40d       (ld5f40d),    .wwfa06e       (wwfa06e),    .ba1163b        (ba1163b),    .ec508b       (ec508b),    .tu422c7       (tu422c7),    .jr28458       (jr28458),    .wwe5194         (wwe5194),    .rv28ca1         (rv28ca1),    .dz5fbb6        (ou973dc),    .th5f728      (th5f728),    .faeedbd        (facf701),    .ne76deb     (oh187f1),    .cob3606      (cob3606),    .gbf7587        (gbf7587),    .twbd682      (twbd682),    .zkeb412     (zkeb412),    .pf5a092    (pf5a092),    .dmd0496     (dmd0496),    .ks824b3     (ks824b3),    .ir12599     (ir12599),    .kq68e5a       (kq68e5a),    .vxafc9b      (vxafc9b),    .fn45460       (fn45460),
        .rt61454       (ps73e6a),    .ls99851      (qv9f352),    .yxcc28a      (nrf9a94),    .kf184f1        (kf184f1),    .kd51539          (jpc8e38),    .qv8a9cd          (dm471c7),    .en54e6c       (wya3cc2)    );



pcie_x1_top_eca6f8c hq89916   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .normal_time       (puade3c),    .kf184f1        (ofd9566),    .bl61d5a     (blc78a1),    .asb_detdone_rx    (gbe2874),    .asb_detres_rx     (uxa1d2b),    .asb_eidle_rx      (ks3130b),        .zx5aca4      (zx5aca4),    .kdd6527      (zxe3f73),    .lsb293c     (lsb293c),    .lf949e2       (lf949e2),    .vvc278d         (vvc278d),    .xl278b4         (xl278b4)    );



pcie_x1_top_ana18ae off7b1f   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ec8dff3     (me560d7),    .ohae988     (ay535eb),    .jp74c45   (kf9af58),    .kf184f1        (ofd9566),    .vvc278d         (zx559aa),    .asb_eidle_rx      (ks3130b),    .db199a7    ({(LANE_WIDTH){fnd24d5}}),    .mrccd3e      ({(LANE_WIDTH){do93570}}),    .dzfcf0d   (dmd5c15),    .yzdf62    (ip70554),
        .pu1e82     (enf7cc3),    .ukf413     (ukf413),    .of7a099        (of7a099),    .psd04cd    (psd04cd),    .wwfa06e       (wwfa06e),    .ld5f40d       (ld5f40d),    .pol_compliance    (pol_compliance),    .zxcd672         (zxcd672)    );




pcie_x1_top_mg15237 an2c737   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .vvc278d         (zx559aa),    .hl_disable_scr    (aaacd56),    .hl_gto_dis        (vi66ab0),    .hl_gto_lbk        (fpaac1a),    .ec8dff3     (me560d7),    .qt6ff99      (dbb06b8),    .yx7fccd      (xy835c6),    .jpf3363          (alc6673),    .xy99b1f    (zm99ced),    .ng2afcb    (ou92393),    .ps63ebb   (al5142c),    .nrf96df    (shc6e50),    .ps6c7d7     (wjed450),    .osfaed8    (cb2cb75),    .kfbb606       (en75937),    .icdb035      (jp64de8),    .bld81a8         (ph37a35),    .zkc0d47       ({(LANE_WIDTH){uve8d72}}),    .zz6a3b   ({(LANE_WIDTH){ls35ca0}}),    .asb_dskew_rx      (cm7281c),
        .vka8ef2      (mg823f7),    .ho47792   (mt8fdca),    .ie3bc93     (wjf72a6),    .osde498      (vx2d77c),    .wjf24c0     (uka6a14),    .wy92605        (fa7cfd1),    .do93028    (ayd1759),    .gq98142      (oh12a0c),    .nec0a11      (hqa832d),    .ec508b       (ym9d225),    .jr28458       (xw4894f),    .tu422c7       (xy253dd),    .ba1163b        (hb4f75c),    .xl8b1db         (su5939a),    .lq58edf         (sj9a36b)    );

pcie_x1_top_tw990c2 gq3eec5   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .vvc278d         (zx559aa),    .hl_disable_scr    (aaacd56),    .hl_gto_dis        (vi66ab0),    .hl_gto_lbk        (fpaac1a),    .ec8dff3     (me560d7),    .qt6ff99      (dbb06b8),    .yx7fccd      (xy835c6),    .nefe66c       (pfd7199),    .jpf3363          (alc6673),    .xy99b1f    (zm99ced),    .rtcd8fa     (ps73b51),    .ps6c7d7     (wjed450),    .ps63ebb   (al5142c),    .ks1f5db    (th50b2d),    .osfaed8    (cb2cb75),    .nrd76c0           (lf2dd64),    .kfbb606       (en75937),    .icdb035      (jp64de8),    .bld81a8         (ph37a35),    .zkc0d47       ({(LANE_WIDTH){uve8d72}}),    .zz6a3b   ({(LANE_WIDTH){ls35ca0}}),    .asb_dskew_rx      (cm7281c),
        .vka8ef2      (bl4f385),    .ho47792   (mece17b),    .ie3bc93     (ux85ecd),    .osde498      (ntcb5d),    .wjf24c0     (xjcdabc),    .wy92605        (zk5df3f),    .do93028    (pu3f45d),    .gq98142      (kdd9712),    .nec0a11      (su5c4a8),    .ec508b       (gbccbb0),    .jr28458       (mg2ec2c),    .tu422c7       (lfb0b0b),    .ba1163b        (oh2c2fd),    .xl8b1db         (vi5d64e),    .lq58edf         (gb4e68d)    );

assign vka8ef2    = (of7a072) ? mg823f7    : bl4f385;
assign ho47792 = (of7a072) ? mt8fdca : mece17b;
assign ie3bc93   = (of7a072) ? wjf72a6   : ux85ecd;
assign osde498    = (of7a072) ? iped9c2    : uicbb67;
assign wjf24c0   = (of7a072) ? uka6a14   : xjcdabc;
assign wy92605      = (of7a072) ? dzc2886      : yk670a2;
assign do93028  = (of7a072) ? pu86cd0  : fca21b3;
assign aa10d65  = (of7a072) ? kfb48cb  : shd64b4;
assign je86b28  = (of7a072) ? sj232ed  : ec92d23;
assign ec508b     = (of7a072) ? ym9d225     : gbccbb0;
assign jr28458     = (of7a072) ? xw4894f     : mg2ec2c;
assign tu422c7     = (of7a072) ? xy253dd     : lfb0b0b;
assign ba1163b      = (of7a072) ? hb4f75c      : oh2c2fd;
assign tj2daa8    = (of7a072) ? dmd054c       : qib3415;
assign lq58edf       = (of7a072) ? kq4c608       : co15318;



pcie_x1_top_and7b1 kd7565a   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ext_sync          (vicfd6b),    .qt6ff99      (dbb06b8),    .ec8dff3     (me560d7),    .ohae988     (ay535eb),    .jp74c45   (kf9af58),    .kf184f1        (ofd9566),    .xl8b1db         (fadaff3),    .zkc0d47       ({(LANE_WIDTH){uve8d72}}),    .twa7d59       ({(LANE_WIDTH){nee4d61}}),    .zz6a3b   ({(LANE_WIDTH){ls35ca0}}),    .rtcd8fa     (ps73b51),    .jr2d4fc       (dz55678),    .gbe786f   (me59e3c),    .osfaed8    (cb2cb75),    .bld81a8         (ph37a35),    .uv6a7e7  (nt33a1),    .yk53f3c   (qgce87e),    .yz9f9e1   (oha1f86),    .uiffe18     (rt7e1a0),    .goff0c0     (vk86839),    .nefe66c       (pfd7199),    .qi1aeb1      (oh39435),    .kfbb606       (en75937),    .hl_gto_cfg        (vk86b1e),    .asb_dskew_rx      (cm7281c),
        .fnc89d9     (fnc89d9),    .yx44ecf   (yx44ecf),    .rv2767d      (rv2767d),    .wy3b3ee  (wy3b3ee),    .dmd0496     (dmd0496),    .pf5a092    (pf5a092),    .ir12599     (ir12599),    .zkeb412     (zkeb412),    .twbd682      (twbd682),    .ks824b3     (ks824b3),    .qg622ba   (qg622ba),    .pu115d0       (pu115d0)    );



pcie_x1_top_qg4c7fe vv61d38   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .no_pcie_train     (ana4bc4),    .xl8b1db         (fadaff3),    .zm83218            (db22449),    .zz190c3            (jr91274),    .off7068         (nr55cc0),    .os430fe   (bl74e8c),    .oh187f1  (oh187f1),    .alc3f8d     (ba3a33a),    .aa1fc6c     (osd19d3),    .hl_gto_l0stx      (ri8ce98),    .hl_gto_l1         (os674c3),    .hl_gto_l2         (zm3a618),    .hl_gto_rcvry      (ald30c3),    .cfg_rtrn_lnk      (enc30e1),    .dll_rtrn_lnk      (ie9861c),
        .qt5b2fb             (ltssm_l0),    .mrd97dc         (mrd97dc),    .iccbee5     (iccbee5),    .th5f728      (th5f728),    .jcfb946      (jcfb946),    .yxdca32      (yxdca32),    .wwe5194         (wwe5194),    .rv28ca1         (rv28ca1),    .ay4650e       (ay4650e),    .hd32871          (hd32871)    );



pcie_x1_top_wwcb153 ip4e875   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .xl8b1db         (fadaff3),    .asb_eidle_rx      (ks3130b),    .yxdca32      (xla0b6c),    .ne5241b  (sw5b66),    .ie920da           (go6d98e),    .asb_dskew_rx      (cm7281c),
        .hq83685        (hq83685),    .je1b42b  (je1b42b),    .alc3f8d     (alc3f8d),    .oh187f1  (oh187f1),    .qv85692  (qv85692),    .ym2b494      (ym2b494)    );
pcie_x1_top_mg55ef nee4575   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .jcfb946      (sue54fa),    .ea786d8  (je2a7d1),    .hl_gto_l0stxfts   (os53e8a),
        .hq1b605  (hq1b605),    .qgdb02a     (qgdb02a),    .nrd8150 (nrd8150),    .aa1fc6c     (aa1fc6c),    .ks543b   (ks543b),    .l0s_tx_state      (l0s_tx_state),    .vv50ec2      (vv50ec2)    );



pcie_x1_top_xje397b tj370eb   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .xl8b1db         (fadaff3),    .asb_eidle_rx      (ks3130b),    .ep1d462     (al7048f),    .hl_gto_rcvry      (ald30c3),
        .ec82cd8       (ec82cd8),    .jr166c0      (jr166c0),    .cob3606      (cob3606),    .l1_state          (l1_state),    .bld818e          (bld818e)    );



pcie_x1_top_co3ea4c cb170e0   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .xl8b1db         (fadaff3),    .asb_eidle_rx      (ks3130b),    .asb_beacon_rx     (ba89858),    .hl_gto_det        (uic1573),    .hl_snd_beacon     (zm2f40e),
    .ne48a16      (of7a072),    .ld450b3      (psd0395),    .nt2859e      (fp81cab),
        .zk42cf7         (zk42cf7),    .vx167ba     (vx167ba),    .ukb3dd6       (ukb3dd6),    .fp9eeb0      (fp9eeb0),    .gbf7587        (gbf7587),    .bnbac3d     (ri9c974),    .l2_state          (l2_state),    .dbb0f74          (dbb0f74)    );



pcie_x1_top_xjdd16e je89aa3   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .kf184f1        (ofd9566),    .asb_eidle_rx      (~db22449),    .yk779f7     (wjed60a),    .iebcfb8     (vv6b055),    .qt6ff99      (dbb06b8),    .hl_gto_det        (uic1573),    .off7068         (nr55cc0),
        .lsb8345      (lsb8345),    .mec1a2a        (mec1a2a),    .yzd151    (yzd151),    .os68a8c     (os68a8c),    .fn45460       (fn45460),    .pu2a306    (),    .mr51832         (mr51832)    );



pcie_x1_top_vk83b96 xy9c2ae   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .kf184f1      (ofd9566),    .qt6ff99    (dbb06b8),    .vkb2882  (uv7f7c5),    .hl_gto_lbk      (fpaac1a),    .asb_eidle_rx    (ks3130b),    .off7068       (nr55cc0),    .ks825d1     (yz957e3),
        .ir12e89   (mg1fb9f),    .ym9744d   (kdfdcf9),    .vxba268    (vxba268),    .sud1347      (sud1347),    .ba89a39  (ba89a39),    .rg4d1cb   (rg4d1cb),    .kq68e5a     (kq68e5a),    .xw472d0       (xw472d0)    );



pcie_x1_top_ukb9381 tuda19e   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .kf184f1      (ofd9566),    .xl8b1db       (fadaff3),    .qt6ff99    (dbb06b8),    .hl_gto_hrst     (tjbfcdf),    .lf2d9af    (blf37f3),
        .fa6cd7e     (fa6cd7e),    .jc66bf2 (jc66bf2),    .pu35f93  (pu35f93),    .vxafc9b    (vxafc9b),    .nr7e4df      (nr7e4df)    );



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dz71572 <= 0;   end   else begin      dz71572 <= ofd9566;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      al6a53e <= 0;   end   else begin      al6a53e <= 0;      case(ofd9566)         DETECT   : al6a53e  <= qt6f2b3;         POLLING  : al6a53e  <= zkcace2;         CONFIG   : al6a53e  <= cob3890;         L0       : al6a53e  <= ipe2403;                             L0s      : al6a53e  <= vx392c;           L1       : al6a53e  <= dme4b36;         L2       : al6a53e  <= ir2cd92;         RECOVERY : al6a53e  <= an364a3;         LOOPBACK : al6a53e  <= aa928eb;         HOTRST   : al6a53e  <= coa3acf;         DISABLED : al6a53e  <= jceb3cd;         default  : al6a53e  <= 0;      endcase   end
end
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qi8880f <= 0;   end   else begin      case(jccf6b4)         3'd0: qi8880f <= 8'd4;         3'd1: qi8880f <= 8'd8;         3'd2: qi8880f <= 8'd16;         3'd3: qi8880f <= 8'd32;         3'd4: qi8880f <= 8'd62;         3'd5: qi8880f <= 8'd125;         3'd6: qi8880f <= 8'd250;         3'd7: qi8880f <= 8'd255;      endcase   end
end




`ifdef GEN2
   assign thc2d43 = (lsb293c | ukf413 | kqc1015 | yx44ecf |                         je1b42b | jr166c0 | fp9eeb0 |                         os68a8c | rg4d1cb | pu35f93 | eace777);

`else 
   assign thc2d43 = (lsb293c | ukf413 | kqc1015 | yx44ecf |                         je1b42b | jr166c0 | fp9eeb0 |                         os68a8c | rg4d1cb | pu35f93);

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mtab2d0  <= 0;      me59684  <= 0;      iccb421  <= 0;      xj5a109  <= 0;      psd084e <= 0;   end   else begin      mtab2d0  <= rgdad5f;      me59684  <= vi42420;      iccb421  <= sj12103;      xj5a109  <= rgdad5f | vi42420 | sj12103 | yz9081c;      psd084e <= hq1b605;   end
end
assign zz37238    = rgdad5f;
assign doa87be = hq1b605;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mgac150 <= 0;   end   else if (rgdad5f | vx840e4) begin      mgac150 <= 0;   end   else begin      mgac150 <= ayfad3b + 1'b1;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      sh60a81 <= 0;   end   else if (hq1b605 | ng20726) begin      sh60a81 <= 0;   end   else if (oh33274 == OS_NFTS && ie82d8f == 1'b1) begin      sh60a81 <= end69d8;   end   else begin      sh60a81 <= end69d8 + 1'b1;   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hdb50f7 <= 0;   end   else begin      hdb50f7 <= (an267b2 + end68fb + 1'd1) * nr5af45;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qt6ff99       <= 1'b0;      bl61d5a      <= 1'b0;      ec8dff3      <= 1'b0;      ohae988      <= 1'b0;      vkb2882     <= 1'b0;      ep1d462      <= 1'b0;      yx7fccd       <= 1'b0;      fp38e3b     <= 1'b0;      yk779f7      <= 1'b0;      iebcfb8      <= 1'b0;      jp74c45    <= 1'b0;      ne5241b   <= 1'b0;   end   else if (oh9ac4d) begin      qt6ff99       <= 1'b0;      bl61d5a      <= 1'b0;      ec8dff3      <= 1'b0;      ohae988      <= 1'b0;      vkb2882     <= 1'b0;      ep1d462      <= 1'b0;      yx7fccd       <= 1'b0;      fp38e3b     <= 1'b0;      yk779f7      <= 1'b0;      iebcfb8      <= 1'b0;      jp74c45    <= 1'b0;      ne5241b   <= 1'b0;   end   else begin      if (puade3c) begin      qt6ff99       <= (ayfad3b == bldd010)    ? 1'b1 : 1'b0;      bl61d5a      <= (ayfad3b == gq10f75)   ? 1'b1 : 1'b0;      ec8dff3      <= (ayfad3b == jr3dd40)   ? 1'b1 : 1'b0;      ohae988      <= (ayfad3b == ip7503b)   ? 1'b1 : 1'b0;
      vkb2882     <= (ayfad3b == co3b8fd)  ? 1'b1 : 1'b0;      end      else begin      qt6ff99       <= (ayfad3b == bldd010/4)   ? 1'b1 : 1'b0;      bl61d5a      <= (ayfad3b == gq10f75/4)  ? 1'b1 : 1'b0;      ec8dff3      <= (ayfad3b == jr3dd40/4)  ? 1'b1 : 1'b0;      ohae988      <= (ayfad3b == ip7503b/4)  ? 1'b1 : 1'b0;      vkb2882     <= (ayfad3b == co3b8fd/4) ? 1'b1 : 1'b0;      end      ep1d462      <= (ayfad3b == thd7a2f)   ? 1'b1 : 1'b0;      yx7fccd       <= (ayfad3b == yxe8bfa)    ? 1'b1 : 1'b0;      fp38e3b     <= (ayfad3b == xje3f45)  ? 1'b1 : 1'b0;      yk779f7      <= (ayfad3b >= hb45fd4)   ? 1'b1 : 1'b0;      iebcfb8      <= (ayfad3b >= uv7f53b)   ? 1'b1 : 1'b0;      jp74c45    <= (ayfad3b >= ead4ee8) ? 1'b1 : 1'b0;      if (vicfd6b) begin                  ne5241b  <= (ayfad3b    >= (32'd4096 * nr5af45)) ? 1'b1 : 1'b0;      end      else begin                  ne5241b  <= (ayfad3b    >= (ald626d * nr5af45))  ? 1'b1 : 1'b0;      end   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ea786d8   <= 1'b0;      jpd2010  <= 1'b0;      wy1a402  <= 1'b0;   end   else if (sjabeee) begin      ea786d8   <= 1'b0;      jpd2010  <= 1'b0;      wy1a402  <= 1'b0;   end   else begin      if (vicfd6b) begin                  ea786d8    <= (end69d8 <  ((lq76c51 * nr5af45     )-3)) ? 1'b0 : 1'b1;                  jpd2010   <= (end69d8 >= (((lq76c51-1) * nr5af45 )-2) &&                                 end69d8 <  ((lq76c51 * nr5af45     )-2)) ? 1'b1 : 1'b0;      end      else begin                  ea786d8    <= (end69d8 <  ((zzb57dd)-3)) ? 1'b0 : 1'b1;                  jpd2010   <= (end69d8 >= ((an267b2 * nr5af45   )-2) &&                                 end69d8 <  ((zzb57dd)-2)) ? 1'b1 : 1'b0;      end            wy1a402      <= (end69d8 < (an267b2 * nr5af45     )-2)  ? 1'b1 : 1'b0;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ukb91c7 <= 0;   end   else if (qv85692) begin      ukb91c7 <= tjaf592 + yx5196d;   end   else begin      ukb91c7 <= tjaf592;   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      en4e58f <= 0;   end   else if (wl18202 || qg622ba) begin


`ifdef LW1
         if (fadaff3[0] == 1'b1)            en4e58f <= qtfdbfd[7:0];


`endif



`ifdef LW2
         if (fadaff3[0] == 1'b1)            en4e58f <= qtfdbfd[7:0];         else if (fadaff3[1] == 1'b1)            en4e58f <= qtfdbfd[15:8];


`endif



`ifdef LW4
         if (fadaff3[0] == 1'b1)            en4e58f <= qtfdbfd[7:0];         else if (fadaff3[1] == 1'b1)            en4e58f <= qtfdbfd[15:8];         else if (fadaff3[2] == 1'b1)            en4e58f <= qtfdbfd[23:16];         else if (fadaff3[3] == 1'b1)            en4e58f <= qtfdbfd[31:24];


`endif
   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ieb628a <= 4'hF;      qvb1451 <= 4'hF;   end   else begin      ieb628a <= lf19162;      qvb1451 <= os59e6a;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ie21396 <= 4'b1111;      gd21ac          <= 0;   end   else begin      ie21396 <= (ymb6267 | hq899cc | ay67319 | wjcc645 |                                                          lf19162 | jp458bf | yk62ffd | lfbff4d);      gd21ac          <= (|gq24e9e == 1'b1) ? 1'b1 : 1'b0;   end
end





`ifdef GEN2
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         dzf9cee <= 1'b0;      else         dzf9cee <= ltssm_l0;   end   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         eace777 <= 1'b0;      else if (!ltssm_l0 && dzf9cee)         eace777 <= 1'b1;      else if (rg4db23 && ltssm_l0)         eace777 <= 1'b1;      else         eace777 <= 1'b0;   end

`endif




assign zz16a1e      = {(|hq8c93a),   (|gq24e9e), (|hq3a786), (|hd9e19d),                           (|ba86771),(|gq9dc5c),  (|rt71702),   (|ic5c0b6),   (|mt2d89)};
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ep90086     <= 0;      ux80435 <= 0;      ouaca13   <= 1'd0;      en65098    <= 1'd0;      db284c5    <= 4'd0;   end   else if (ana4bc4 == 1'b1) begin      ep90086     <= 0;      ux80435 <= 0;      ouaca13   <= 1'd0;      en65098    <= 1'd0;      db284c5    <= 4'd0;   end   else begin      ouaca13   <=  mt2d89;      en65098    <=  rt71702;      db284c5    <=  ic5c0b6;
      if (dz71572 == 'd1 || dz71572 == 'd2)         ep90086     <= zx559aa ;      else         ep90086     <= (hq8c93a    | gq24e9e | hq3a786 | hd9e19d  |              ba86771 | gq9dc5c  | rt71702   | ic5c0b6 |              mt2d89);
      casex(yxd6afb)         9'b1xxxxxxxx : ux80435 <= wjfd370;         9'bx1xxxxxxx : ux80435 <= ne4dc26;         9'bxx1xxxxxx : ux80435 <= gb7099e;         9'bxxx1xxxxx : ux80435 <= oh267af;         9'bxxxx1xxxx : ux80435 <= bn9ebe4;         9'bxxxxx1xxx : ux80435 <= phaf939;         9'bxxxxxx1xx : ux80435 <= xwe4e7b;         9'bxxxxxxx1x : ux80435 <= ep39ed6;         9'bxxxxxxxx1 : ux80435 <= ld7b5ab;         default      : ux80435 <= (ofd9566 == 'd1 || ofd9566 == 'd2) ? oh33274 : OS_IDLE;      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ltssm_config_ln <= 0;      ltssm_cfgln_sum <= 0;   end   else begin


`ifdef DOWN_X1
      ltssm_config_ln <= 4'b1000;      ltssm_cfgln_sum <= 3'd1;


`else
      if (ana4bc4 == 1'b1) begin         ltssm_config_ln <= 4'b1111;         ltssm_cfgln_sum <= 3'd4;      end      else begin         ltssm_config_ln <= fadaff3;


`ifdef LW4
            ltssm_cfgln_sum <= fadaff3[0] + fadaff3[1] + fadaff3[2] + fadaff3[3];


`endif



`ifdef LW2
            ltssm_cfgln_sum <= fadaff3[0] + fadaff3[1];


`endif



`ifdef LW1
            ltssm_cfgln_sum <= fadaff3[0];


`endif
      end


`endif
   end
end


assign xl8b1db = (ana4bc4) ? 4'b1111 : gq1a4f5;








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vk35942 <= 0;   end   else if (ofd9566 == DETECT) begin      vk35942 <= 0;   end   else if (ho63040) begin      vk35942 <= 1'b1;   end
end
always@* begin puade3c<=xjc2975[0];wy88dee<=xjc2975[1];yx4b2d9<={LINK_NUM>>1,xjc2975[2]};yx5196d<={N_FTS_INC>>1,xjc2975[3]};su596cd<={TX_EIDL_CNT>>1,xjc2975[4]};dm5d079<={asb_data>>1,xjc2975[5]};yx41e5d<={asb_kcntl>>1,xjc2975[6]};ks3130b<={asb_eidle_rx>>1,xjc2975[7]};gbe2874<={asb_detdone_rx>>1,xjc2975[8]};uxa1d2b<={asb_detres_rx>>1,xjc2975[9]};cm7281c<={asb_dskew_rx>>1,xjc2975[10]};ba89858<={asb_beacon_rx>>1,xjc2975[11]};qg4c2c3<={asb_lane_sync>>1,xjc2975[12]};jccf6b4<={cfgcs_losel>>1,xjc2975[13]};vicfd6b<=xjc2975[14];ana4bc4<=xjc2975[15];end68fb<={wjf834e>>1,xjc2975[16]};kq562f2<=xjc2975[17];aaacd56<=xjc2975[18];vi66ab0<=xjc2975[19];uic1573<=xjc2975[20];tjbfcdf<=xjc2975[21];ri8ce98<=xjc2975[22];os674c3<=xjc2975[23];zm3a618<=xjc2975[24];os53e8a<=xjc2975[25];fpaac1a<={hl_gto_lbk>>1,xjc2975[26]};ald30c3<=xjc2975[27];vk86b1e<=xjc2975[28];zm2f40e<=xjc2975[29];ie9861c<=xjc2975[30];enc30e1<=xjc2975[31];of7a072<=xjc2975[32];psd0395<=xjc2975[33];fp81cab<=xjc2975[34];ofd9566<={kf184f1>>1,xjc2975[35]};zx559aa<={vvc278d>>1,xjc2975[36]};fadaff3<={xl8b1db>>1,xjc2975[37]};gq1a4f5<={tj2daa8>>1,xjc2975[38]};ou973dc<=xjc2975[39];sue54fa<=xjc2975[40];xla0b6c<=xjc2975[41];facf701<=xjc2975[42];osd19d3<=xjc2975[43];ba3a33a<=xjc2975[44];czc9d2b<={aa10d65>>1,xjc2975[45]};al4e95d<={je86b28>>1,xjc2975[46]};hq8c93a<={of7a099>>1,xjc2975[47]};gq24e9e<={wy92605>>1,xjc2975[48]};hq3a786<={rv2767d>>1,xjc2975[49]};hd9e19d<={mrd97dc>>1,xjc2975[50]};ba86771<={qgdb02a>>1,xjc2975[51]};gq9dc5c<={zk42cf7>>1,xjc2975[52]};rt71702<={mec1a2a>>1,xjc2975[53]};ic5c0b6<={sud1347>>1,xjc2975[54]};mt2d89<={fa6cd7e>>1,xjc2975[55]};ymb6267<={zx5aca4>>1,xjc2975[56]};hq899cc<={osde498>>1,xjc2975[57]};ay67319<={ec82cd8>>1,xjc2975[58]};wjcc645<={ukb3dd6>>1,xjc2975[59]};lf19162<={lsb8345>>1,xjc2975[60]};jp458bf<={vxba268>>1,xjc2975[61]};yk62ffd<={ay4650e>>1,xjc2975[62]};lfbff4d<={ks543b>>1,xjc2975[63]};wjfd370<={psd04cd>>1,xjc2975[64]};ne4dc26<={do93028>>1,xjc2975[65]};gb7099e<={wy3b3ee>>1,xjc2975[66]};oh267af<={iccbee5>>1,xjc2975[67]};bn9ebe4<={nrd8150>>1,xjc2975[68]};phaf939<={vx167ba>>1,xjc2975[69]};xwe4e7b<={yzd151>>1,xjc2975[70]};ep39ed6<={ba89a39>>1,xjc2975[71]};ld7b5ab<={jc66bf2>>1,xjc2975[72]};rgdad5f<=xjc2975[73];yxd6afb<={zz16a1e>>1,xjc2975[74]};zzb57dd<={hdb50f7>>1,xjc2975[75]};sjabeee<=xjc2975[76];kfb136c<=xjc2975[77];ba89b64<=xjc2975[78];dzddd72<=xjc2975[79];db22449<={zm83218>>1,xjc2975[80]};jr91274<={zz190c3>>1,xjc2975[81]};rt7e1a0<={uiffe18>>1,xjc2975[82]};vk86839<={goff0c0>>1,xjc2975[83]};alc6673<={jpf3363>>1,xjc2975[84]};zm99ced<={xy99b1f>>1,xjc2975[85]};ou92393<={ng2afcb>>1,xjc2975[86]};wjed450<={ps6c7d7>>1,xjc2975[87]};al5142c<={ps63ebb>>1,xjc2975[88]};shc6e50<={nrf96df>>1,xjc2975[89]};ps73b51<={rtcd8fa>>1,xjc2975[90]};dz55678<={jr2d4fc>>1,xjc2975[91]};lf2dd64<={nrd76c0>>1,xjc2975[92]};th50b2d<={ks1f5db>>1,xjc2975[93]};dmd5c15<={dzfcf0d>>1,xjc2975[94]};me59e3c<={gbe786f>>1,xjc2975[95]};nt33a1<={uv6a7e7>>1,xjc2975[96]};qgce87e<={yk53f3c>>1,xjc2975[97]};oha1f86<={yz9f9e1>>1,xjc2975[98]};ip70554<={yzdf62>>1,xjc2975[99]};cb2cb75<={osfaed8>>1,xjc2975[100]};fnf958b<={cm7d8ad>>1,xjc2975[101]};ph37a35<={bld81a8>>1,xjc2975[102]};nr55cc0<={off7068>>1,xjc2975[103]};bl74e8c<={os430fe>>1,xjc2975[104]};go6d98e<={ie920da>>1,xjc2975[105]};yz957e3<={ks825d1>>1,xjc2975[106]};blf37f3<={lf2d9af>>1,xjc2975[107]};jp64de8<={icdb035>>1,xjc2975[108]};en75937<={kfbb606>>1,xjc2975[109]};pfd7199<={nefe66c>>1,xjc2975[110]};oh39435<={qi1aeb1>>1,xjc2975[111]};qtfdbfd<={rtd7589>>1,xjc2975[112]};rgcac5e<={co3bfff>>1,xjc2975[113]};mrfdb2c<={mrd3092>>1,xjc2975[114]};vi6cb2c<={thc24a1>>1,xjc2975[115]};ep2cb14<={ym9287c>>1,xjc2975[116]};ir2c524<={gda1f0f>>1,xjc2975[117]};xy14929<={xw7c3e0>>1,xjc2975[118]};ie24a54<={ecf812>>1,xjc2975[119]};ux29503<={mee0482>>1,xjc2975[120]};uv540ee<={oh1208d>>1,xjc2975[121]};tj3baf<={aa82365>>1,xjc2975[122]};xweebf4<={wy8d94a>>1,xjc2975[123]};vxafd1d<={uv6528a>>1,xjc2975[124]};dmf477e<={bl4a2ad>>1,xjc2975[125]};qv1df91<={cb8ab7d>>1,xjc2975[126]};dz7e461<={lsadf66>>1,xjc2975[127]};bn9187d<={ui7d995>>1,xjc2975[128]};nr61f72<={vi6654e>>1,xjc2975[129]};cm7dcb0<={oh95396>>1,xjc2975[130]};ww72c0a<={al4e5a8>>1,xjc2975[131]};hdb0282<={ls96a28>>1,xjc2975[132]};oua0b6<={ria8a1e>>1,xjc2975[133]};oh9ac4d<=xjc2975[134];ie82d8f<=xjc2975[135];fnd24d5<=xjc2975[136];do93570<=xjc2975[137];uve8d72<=xjc2975[138];nee4d61<=xjc2975[139];ls35ca0<=xjc2975[140];os6d91b<={xjc71df>>1,xjc2975[141]};dm6c8d8<={jr38eff>>1,xjc2975[142]};pu3a2c2<={yz9f8f7>>1,xjc2975[143]};ay7de56<=xjc2975[144];goef2b1<=xjc2975[145];rg79588<=xjc2975[146];jccac42<=xjc2975[147];yk56212<=xjc2975[148];uxb1090<=xjc2975[149];co88484<=xjc2975[150];vi42420<=xjc2975[151];sj12103<=xjc2975[152];yz9081c<=xjc2975[153];vx840e4<=xjc2975[154];ng20726<=xjc2975[155];fp1c99e<={ie21396>>1,xjc2975[156]};ald626d<={ukb91c7>>1,xjc2975[157]};an267b2<={en4e58f>>1,xjc2975[158]};fn64cc9<={ep90086>>1,xjc2975[159]};oh33274<={ux80435>>1,xjc2975[160]};jra5767<=xjc2975[161];ou2bb3f<=xjc2975[162];ho5d9f9<={db284c5>>1,xjc2975[163]};ayfad3b<={mgac150>>1,xjc2975[
164]};end69d8<={sh60a81>>1,xjc2975[165]};ls993a5<=xjc2975[166];xy835c6<=xjc2975[167];dbb06b8<=xjc2975[168];blc78a1<=xjc2975[169];me560d7<=xjc2975[170];ay535eb<=xjc2975[171];uv7f7c5<=xjc2975[172];al7048f<=xjc2975[173];rg4db23<=xjc2975[174];wjed60a<=xjc2975[175];vv6b055<=xjc2975[176];kf9af58<=xjc2975[177];sw5b66<=xjc2975[178];je2a7d1<=xjc2975[179];jc69326<=xjc2975[180];su49933<=xjc2975[181];tjaf592<={qi8880f>>1,xjc2975[182]};shd64b4<={kdd9712>>1,xjc2975[183]};ec92d23<={su5c4a8>>1,xjc2975[184]};kfb48cb<={oh12a0c>>1,xjc2975[185]};sj232ed<={hqa832d>>1,xjc2975[186]};uicbb67<={ntcb5d>>1,xjc2975[187]};iped9c2<={vx2d77c>>1,xjc2975[188]};yk670a2<={zk5df3f>>1,xjc2975[189]};dzc2886<={fa7cfd1>>1,xjc2975[190]};fca21b3<={pu3f45d>>1,xjc2975[191]};pu86cd0<={ayd1759>>1,xjc2975[192]};qib3415<={vi5d64e>>1,xjc2975[193]};dmd054c<={su5939a>>1,xjc2975[194]};co15318<={gb4e68d>>1,xjc2975[195]};kq4c608<={sj9a36b>>1,xjc2975[196]};ho63040<=xjc2975[197];wl18202<=xjc2975[198];kqc1015<=xjc2975[199];ep80a8<=xjc2975[200];nr40544<=xjc2975[201];cb2a26<=xjc2975[202];qi15134<=xjc2975[203];lsa89a1<=xjc2975[204];gb44d0a<=xjc2975[205];cb26855<=xjc2975[206];ks342ad<=xjc2975[207];ksab45<={ne57ea6>>1,xjc2975[208]};doad146<={wwfa99f>>1,xjc2975[209]};rt45198<={coa67c0>>1,xjc2975[210]};os46636<={mt9f004>>1,xjc2975[211]};ks98d8d<={zkc0124>>1,xjc2975[212]};an36344<={tw4911>>1,xjc2975[213]};ie8d12d<={qi24458>>1,xjc2975[214]};uv44b40<={do1160e>>1,xjc2975[215]};nt2d02a<={jc5839f>>1,xjc2975[216]};ld40ab9<={hqe7d9>>1,xjc2975[217]};je2ae78<={an9f65a>>1,xjc2975[218]};ecb9e1a<={ipd96a3>>1,xjc2975[219]};ic7868b<={bl5a8e9>>1,xjc2975[220]};co1a2c5<={wya3a79>>1,xjc2975[221]};fp8b141<={rte9e4d>>1,xjc2975[222]};psc507a<={ho79377>>1,xjc2975[223]};wj41e97<={vi4ddd5>>1,xjc2975[224]};uv7a5e9<={ay7755f>>1,xjc2975[225]};mg97a6f<={rgd57ce>>1,xjc2975[226]};the9bca<={fn5f39d>>1,xjc2975[227]};qt6f2b3<={xl278b4>>1,xjc2975[228]};zkcace2<={zxcd672>>1,xjc2975[229]};cob3890<={lq58edf>>1,xjc2975[230]};ipe2403<={hd32871>>1,xjc2975[231]};qv900e4<={vv50ec2>>1,xjc2975[232]};vx392c<={ym2b494>>1,xjc2975[233]};dme4b36<={bld818e>>1,xjc2975[234]};ir2cd92<={dbb0f74>>1,xjc2975[235]};an364a3<={pu115d0>>1,xjc2975[236]};aa928eb<={xw472d0>>1,xjc2975[237]};coa3acf<={nr7e4df>>1,xjc2975[238]};jceb3cd<={mr51832>>1,xjc2975[239]};os59e6a<={ieb628a>>1,xjc2975[240]};vicf350<={qvb1451>>1,xjc2975[241]};end
always@* begin ux1852e[2047]<=reduce_idlecnt;ux1852e[2046]<=LINK_NUM[0];ux1852e[2045]<=hdb50f7[0];ux1852e[2044]<=N_FTS_INC[0];ux1852e[2042]<=doa87be;ux1852e[2040]<=TX_EIDL_CNT[0];ux1852e[2036]<=jpc8e38;ux1852e[2035]<=hq83685;ux1852e[2032]<=asb_data[0];ux1852e[2025]<=dm471c7;ux1852e[2023]<=fnc89d9;ux1852e[2017]<=asb_kcntl[0];ux1852e[2011]<=ho79377[0];ux1852e[2002]<=enf7cc3;ux1852e[1999]<=mtab2d0;ux1852e[1992]<=wjf834e[0];ux1852e[1987]<=asb_eidle_rx[0];ux1852e[1974]<=vi4ddd5[0];ux1852e[1957]<=zm83218[0];ux1852e[1952]<=dbb0f74[0];ux1852e[1950]<=me59684;ux1852e[1947]<=dzfcf0d[0];ux1852e[1937]<=en4e58f[0];ux1852e[1936]<=and3a1;ux1852e[1927]<=asb_detdone_rx[0];ux1852e[1922]<=kdd9712[0];ux1852e[1919]<=ba89a39[0];ux1852e[1913]<=rtcd8fa[0];ux1852e[1901]<=ay7755f[0];ux1852e[1873]<=vvc278d[0];ux1852e[1867]<=zz190c3[0];ux1852e[1857]<=pu115d0[0];ux1852e[1852]<=iccb421;ux1852e[1851]<=wy3b3ee[0];ux1852e[1849]<=vxba268[0];ux1852e[1847]<=mec1a2a[0];ux1852e[1846]<=gbe786f[0];ux1852e[1827]<=ep90086[0];ux1852e[1825]<=hl_disable_scr;ux1852e[1807]<=asb_detres_rx[0];ux1852e[1802]<=xw7c3e0[0];ux1852e[1797]<=su5c4a8[0];ux1852e[1791]<=jc66bf2[0];ux1852e[1780]<=vv50ec2[0];ux1852e[1779]<=jr2d4fc[0];ux1852e[1776]<=wy1a402;ux1852e[1767]<=ec82cd8[0];ux1852e[1761]<=thc24a1[0];ux1852e[1758]<=zxcd672[0];ux1852e[1755]<=rgd57ce[0];ux1852e[1733]<=osfaed8[0];ux1852e[1729]<=qt6ff99;ux1852e[1726]<=an9f65a[0];ux1852e[1716]<=mrccd3e;ux1852e[1698]<=xl8b1db[0];ux1852e[1687]<=uiffe18[0];ux1852e[1679]<=jr38eff[0];ux1852e[1673]<=ho47792;ux1852e[1666]<=xw472d0[0];ux1852e[1657]<=xj5a109;ux1852e[1655]<=iccbee5[0];ux1852e[1651]<=ay4650e[0];ux1852e[1646]<=sud1347[0];ux1852e[1644]<=uv6a7e7[0];ux1852e[1606]<=ux80435[0];ux1852e[1602]<=hl_gto_dis;ux1852e[1577]<=off7068[0];ux1852e[1567]<=asb_dskew_rx[0];ux1852e[1558]<=vi6654e[0];ux1852e[1557]<=ecf812[0];ux1852e[1552]<=wjc95fa;ux1852e[1547]<=ohae988;ux1852e[1546]<=oh12a0c[0];ux1852e[1535]<=thc2d43;ux1852e[1526]<=wya3a79[0];ux1852e[1512]<=ym2b494[0];ux1852e[1510]<=nrd76c0[0];ux1852e[1504]<=jpd2010;ux1852e[1502]<=ps63ebb[0];ux1852e[1486]<=ukb3dd6[0];ux1852e[1474]<=ym9287c[0];ux1852e[1469]<=lq58edf[0];ux1852e[1468]<=ne5241b;ux1852e[1464]<=co3bfff[0];ux1852e[1463]<=fn5f39d[0];ux1852e[1453]<=cb80666;ux1852e[1443]<=zz6a3b;ux1852e[1418]<=cm7d8ad[0];ux1852e[1413]<=lsadf66[0];ux1852e[1410]<=bl61d5a;ux1852e[1405]<=ipd96a3[0];ux1852e[1384]<=zkc0d47;ux1852e[1377]<=bl4a2ad[0];ux1852e[1348]<=tj2daa8[0];ux1852e[1332]<=ayd1759[0];ux1852e[1326]<=goff0c0[0];ux1852e[1325]<=icdb035[0];ux1852e[1311]<=yz9f8f7[0];ux1852e[1299]<=ie3bc93;ux1852e[1296]<=jcfb946;ux1852e[1287]<=hl_gto_cfg;ux1852e[1284]<=nr7e4df[0];ux1852e[1266]<=psd084e;ux1852e[1263]<=nrd8150[0];ux1852e[1255]<=ks543b[0];ux1852e[1244]<=fa6cd7e[0];ux1852e[1240]<=yk53f3c[0];ux1852e[1233]<=su5939a[0];ux1852e[1218]<=hd9e4a;ux1852e[1211]<=xy99b1f[0];ux1852e[1207]<=nefe66c[0];ux1852e[1165]<=ouaca13;ux1852e[1157]<=hl_gto_det;ux1852e[1151]<=en7f6fe;ux1852e[1132]<=mgac150[0];ux1852e[1106]<=os430fe[0];ux1852e[1100]<=fn6b809;ux1852e[1088]<=faeedbd;ux1852e[1086]<=asb_beacon_rx[0];ux1852e[1077]<=tw4911[0];ux1852e[1069]<=oh95396[0];ux1852e[1067]<=mee0482[0];ux1852e[1064]<=hl_gto_l1;ux1852e[1057]<=ne57ea6[0];ux1852e[1053]<=dll_rtrn_lnk;ux1852e[1046]<=vkb2882;ux1852e[1044]<=hqa832d[0];ux1852e[1041]<=ieb628a[0];ux1852e[1038]<=je86b28[0];ux1852e[1023]<=normal_time;ux1852e[1022]<=zz16a1e[0];ux1852e[1017]<=vka8ef2;ux1852e[1005]<=rte9e4d[0];ux1852e[996]<=no_pcie_train;ux1852e[976]<=bld818e[0];ux1852e[973]<=ks1f5db[0];ux1852e[968]<=ukb91c7[0];ux1852e[961]<=qi8880f[0];ux1852e[959]<=yzd151[0];ux1852e[956]<=nrf96df[0];ux1852e[936]<=kf184f1[0];ux1852e[925]<=do93028[0];ux1852e[924]<=lsb8345[0];ux1852e[923]<=zk42cf7[0];ux1852e[901]<=gda1f0f[0];ux1852e[890]<=hd32871[0];ux1852e[888]<=ea786d8;ux1852e[883]<=osde498[0];ux1852e[880]<=mrd3092[0];ux1852e[879]<=xl278b4[0];ux1852e[866]<=yzdf62[0];ux1852e[864]<=yx7fccd;ux1852e[863]<=hqe7d9[0];ux1852e[858]<=db199a7;ux1852e[839]<=xjc71df[0];ux1852e[836]<=sj9a36b[0];ux1852e[788]<=bld81a8[0];ux1852e[779]<=ui7d995[0];ux1852e[776]<=zk792bf;ux1852e[773]<=ec8dff3;ux1852e[763]<=bl5a8e9[0];ux1852e[751]<=ps6c7d7[0];ux1852e[734]<=jp74c45;ux1852e[732]<=rtd7589[0];ux1852e[726]<=zz37238;ux1852e[721]<=twa7d59;ux1852e[706]<=cb8ab7d[0];ux1852e[688]<=uv6528a[0];ux1852e[666]<=pu3f45d[0];ux1852e[662]<=lf2d9af[0];ux1852e[648]<=dz5fbb6;ux1852e[643]<=hl_gto_rcvry;ux1852e[616]<=vi5d64e[0];ux1852e[609]<=hq13c9;ux1852e[605]<=jpf3363[0];ux1852e[603]<=kfbb606[0];ux1852e[575]<=dz4fedf;ux1852e[566]<=db284c5[0];ux1852e[550]<=wjf24c0;ux1852e[544]<=yxdca32;ux1852e[538]<=zkc0124[0];ux1852e[532]<=hl_gto_l0stx;ux1852e[526]<=hl_snd_beacon;ux1852e[520]<=mr51832[0];ux1852e[519]<=aa10d65[0];ux1852e[508]<=godbfab;ux1852e[498]<=ext_sync;ux1852e[484]<=ie21396[0];ux1852e[479]<=vx167ba[0];ux1852e[468]<=nt2859e;ux1852e[462]<=psd04cd[0];ux1852e[461]<=qgdb02a[0];ux1852e[441]<=zx5aca4[0];ux1852e[433]<=yz9f9e1[0];ux1852e[432]<=gd21ac;ux1852e[431]<=jc5839f[0];ux1852e[418]<=gb4e68d[0];ux1852e[388]<=pf4f257;ux1852e[375]<=ng2afcb[0];ux1852e[367]<=iebcfb8;ux1852e[366]<=qi1aeb1[0];ux1852e[363]<=ria8a1e[0];ux1852e[344]<=wy8d94a[0];ux1852e[333]<=fa7cfd1[0];ux1852e[331]<=ks825d1[0];ux1852e[321]<=hl_gto_lbk[0];ux1852e[304]<=ice0279;ux1852e[283]<=en65098;ux1852e[269]<=mt9f004[0];ux1852e[266]<=hl_gto_hrst;ux1852e[259]<=alc3f8d;ux1852e[254]<=nefb7f5;ux1852e[249]<=cfgcs_losel[0];ux1852e[234]<=ld450b3;ux1852e[230]<=mrd97dc[0];ux1852e[216]<=sh60a81[0];ux1852e[215]<=do1160e[0];ux1852e[183]<=yk779f7;ux1852e[181]<=ls96a28[0];ux1852e[172]<=aa82365[0];ux1852e[166]<=zk5df3f[0];ux1852e[165]<=ie920da[0];ux1852e[160]<=hl_gto_l0stxfts;ux1852e[152]<=me5c04f;ux1852e[134]<=coa67c0[0];ux1852e[129]<=aa1fc6c;ux1852e[124]<=asb_lane_sync[0];ux1852e[117]<=ne48a16;ux1852e[115]<=rv2767d[0];ux1852e[107]<=qi24458[0];ux1852e[91]<=fp38e3b;ux1852e[90]<=al4e5a8[0];ux1852e[86]<=oh1208d[0];ux1852e[83]<=vx2d77c[0];ux1852e[80]<=hl_gto_l2;ux1852e[67]<=wwfa99f[0];ux1852e[58]<=cfg_rtrn_lnk;ux1852e[57]<=wy92605[0];ux1852e[45]<=ep1d462;ux1852e[41]<=ntcb5d[0];ux1852e[35]<=qvb1451[0];ux1852e[28]<=of7a099[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


















































































































`timescale 1 ns / 100 ps
module pcie_x1_top_phy_x1 #(
   parameter LANE_WIDTH   = 1 ,   parameter MSM_WIDTH    = 3 ,   parameter L0sTSM_WIDTH = 2 ,   parameter L1SM_WIDTH   = 1 ,   parameter L2SM_WIDTH   = 1 ,   parameter D_WIDTH      = 16 )
  (input wire                    clk_250_tx ,     
   input wire                    clk_250_rx ,     
   input wire                    sys_clk ,        
   input wire                    rst_n ,          
   input wire                    normal_time ,   
   input wire                    reduce_idlecnt ,

   
   input wire [7:0]              LINK_NUM,        
   input wire [4:0]              N_FTS_INC,       
   input wire [9:0]              SKP_INS_CNT,     
   input wire [3:0]              TX_EIDL_CNT,     
 
   
   input wire [8*LANE_WIDTH-1:0] asb_data,        
   input wire [LANE_WIDTH-1:0]   asb_kcntl,       
   input wire [LANE_WIDTH-1:0]   asb_err,         
   input wire [LANE_WIDTH-1:0]   asb_eidle_rx,    
   input wire [LANE_WIDTH-1:0]   asb_detdone_rx,  
   input wire [LANE_WIDTH-1:0]   asb_detres_rx,   
   input wire [LANE_WIDTH-1:0]   asb_dskew_rx,    
   input wire [LANE_WIDTH-1:0]   asb_beacon_rx,   
   input wire [LANE_WIDTH-1:0]   asb_lane_sync,   

   
   input wire                    force_disable_scr,
   input wire                    hl_disable_scr,  
   input wire                    hl_gto_dis,      
   input wire                    hl_gto_det,      
   input wire                    hl_gto_hrst,     
   input wire                    hl_gto_l0stx,    
   input wire                    hl_gto_l1,       
   input wire                    hl_gto_l2,       
   input wire                    hl_gto_l0stxfts, 
   input wire [LANE_WIDTH-1:0]   hl_gto_lbk,      
   input wire                    hl_gto_rcvry,    
   input wire                    hl_gto_cfg,      
   input wire                    hl_snd_beacon,   
   input wire [2:0]              cfgcs_losel,     
   input wire                    dll_rtrn_lnk,    
   input wire                    cfg_rtrn_lnk,    

   
   input wire                    ext_sync,        
   input wire                    no_pcie_train,   

   
   input wire [D_WIDTH-1:0]      tdmux_data,      
   input wire                    tdmux_st,        
   input wire                    tdmux_end,       
   input wire                    tdmux_edb,       
   input wire                    tdmux_dllp_st,   
   input wire                    tdmux_dllp_end,  
   input wire                    tdmux_skp,       
   
   
   input wire  [D_WIDTH-1:0]     tx_lbk_data,     
   input wire  [2*LANE_WIDTH-1:0]tx_lbk_kcntl,    

   output wire                   tx_lbk_rdy,      
   output reg  [D_WIDTH-1:0]     rx_lbk_data,     
   output reg  [2*LANE_WIDTH-1:0]rx_lbk_kcntl,    

   output wire                   phy_realign_req, 
   output wire [MSM_WIDTH:0]     phy_ltssm_state, 
   output wire [2:0]             phy_ltssm_substate, 
   output wire [2:0]             phy_cfgln_sum,   
   output wire [LANE_WIDTH-1:0]  phy_cfgln,       

   
   output wire                   phy_skpq_val,    
   output wire [1:0]             phy_skpq_nclks,  

   
   output wire [2:0]             phy_neg_lnkw,    
   output wire                   phy_trn_err,     
   output wire                   phy_lnk_trn,     

   
   output wire                   phy_disable_scr, 
   output wire [LANE_WIDTH-1:0]  phy_inv_polar,   
   output wire [LANE_WIDTH-1:0]  phy_eidle_tx,    
   output wire [LANE_WIDTH-1:0]  phy_godet_rx,    
   output wire                   phy_sloopback,   
   output wire                   phy_snd_beacon,  
   output wire [8*LANE_WIDTH-1:0]phy_data,        
   output wire [LANE_WIDTH-1:0]  phy_kcntl,       
   output wire [LANE_WIDTH-1:0]  phy_fndisp,      
   output wire                   phy_linkup,      
   output wire                   phy_l0,          
   output wire                   phy_l0_l0s,      
   output wire [L0sTSM_WIDTH:0]  phy_l0s_tx_state,
   output wire [L1SM_WIDTH:0]    phy_l1_state,
   output wire [L2SM_WIDTH:0]    phy_l2_state,
   output wire                   pol_compliance,

   
   output wire [D_WIDTH-1:0]     dfrm_ddata,      
   output wire                   dfrm_dllp_st,    
   output wire                   dfrm_dllp_end,   
   output wire [D_WIDTH-1:0]     dfrm_tdata,      
   output wire                   dfrm_tval,       
   output wire                   dfrm_st,         
   output wire                   dfrm_end,        
   output wire                   dfrm_edb,        
   output wire                   dfrm_perr           );
wire   [LANE_WIDTH-1:0]     ltssm_config_ln;
wire   [D_WIDTH-1:0]        ng2a05b;
wire   [(D_WIDTH/8)-1:0]    xj502da;
wire   [(D_WIDTH/8)-1:0]    hqb6be;
wire   [LANE_WIDTH-1:0]     rv816d7;
wire                        of5b5f3;
wire   [1:0]                wwc1a74;
wire   [3:0]                wjf834e;
wire   [2:0]                ltssm_cfgln_sum;
wire                        ne48a16;
wire                        ld450b3;
wire                        nt2859e;
wire   [16*LANE_WIDTH-1:0]  zz8bb13     ;
wire   [2*LANE_WIDTH-1:0]   rtec4f2    ;
wire   [2*LANE_WIDTH-1:0]   zz13cb8      ;
wire   [2*LANE_WIDTH-1:0]   shf2e3e;
wire   [2*LANE_WIDTH-1:0]   bab8fa0;
wire   [2*LANE_WIDTH-1:0]   gq3e81e;
wire   [LANE_WIDTH-1:0]     tja0782;
wire   [D_WIDTH-1:0]        xy1e0be     ;
wire   [(D_WIDTH/8)-1:0]    gq82f90    ;
wire   [(D_WIDTH/8)-1:0]    yzbe405;
wire   [1*LANE_WIDTH-1:0]   sj9016d;
reg    [15:0]               cb80b6d;
reg    [1:0]                uk5b6d;
reg                         wweafad;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef ROOT_COMP

`else

`endif

`ifdef DWN_STRM_PORT

`else

`endif
wire   ea6db4e;
wire   ay6da70;
wire   ui6d380;

`ifdef MASTER_LOOPBACK

`else

`endif	
reg puade3c;
reg wy88dee;
reg [7 : 0] yx4b2d9;
reg [4 : 0] yx5196d;
reg [9 : 0] zk48faf;
reg [3 : 0] su596cd;
reg [8 * LANE_WIDTH - 1 : 0] dm5d079;
reg [LANE_WIDTH - 1 : 0] yx41e5d;
reg [LANE_WIDTH - 1 : 0] ouf2ed;
reg [LANE_WIDTH - 1 : 0] ks3130b;
reg [LANE_WIDTH - 1 : 0] gbe2874;
reg [LANE_WIDTH - 1 : 0] uxa1d2b;
reg [LANE_WIDTH - 1 : 0] cm7281c;
reg [LANE_WIDTH - 1 : 0] ba89858;
reg [LANE_WIDTH - 1 : 0] qg4c2c3;
reg twb884e;
reg aaacd56;
reg vi66ab0;
reg uic1573;
reg tjbfcdf;
reg ri8ce98;
reg os674c3;
reg zm3a618;
reg os53e8a;
reg [LANE_WIDTH - 1 : 0] fpaac1a;
reg ald30c3;
reg vk86b1e;
reg zm2f40e;
reg [2 : 0] jccf6b4;
reg ie9861c;
reg enc30e1;
reg vicfd6b;
reg ana4bc4;
reg [D_WIDTH - 1 : 0] vxb5ae8;
reg puad747;
reg rt6ba3b;
reg fa5d1df;
reg mt8fd96;
reg zx7ecb4;
reg gbe8efb;
reg [D_WIDTH - 1 : 0] ng969ba;
reg [2 * LANE_WIDTH - 1 : 0] ksa6e9d;
reg [D_WIDTH - 1 : 0] xlba74f;
reg [(D_WIDTH / 8) - 1 : 0] ou9d3fd;
reg [(D_WIDTH / 8) - 1 : 0] fn4ff4e;
reg [LANE_WIDTH - 1 : 0] ipfd3b4;
reg rte9da4;
reg [1 : 0] cz4ed26;
reg [3 : 0] end68fb;
reg [2 : 0] coac9b5;
reg of7a072;
reg psd0395;
reg fp81cab;
reg [16 * LANE_WIDTH - 1 : 0] aa15943;
reg [2 * LANE_WIDTH - 1 : 0] ip650c0;
reg [2 * LANE_WIDTH - 1 : 0] su4302f;
reg [2 * LANE_WIDTH - 1 : 0] vic0bcd;
reg [2 * LANE_WIDTH - 1 : 0] do2f359;
reg [2 * LANE_WIDTH - 1 : 0] fncd653;
reg [LANE_WIDTH - 1 : 0] go594f6;
reg [D_WIDTH - 1 : 0] ic53d8b;
reg [(D_WIDTH / 8) - 1 : 0] blf62cf;
reg [(D_WIDTH / 8) - 1 : 0] tj8b3fc;
reg [1 * LANE_WIDTH - 1 : 0] tucff38;
reg [15 : 0] cz7f9c2;
reg [1 : 0] vvfce14;
reg ldddadd;
reg xl3853c;
reg hbc29e6;
reg fc14f36;
reg [2047:0] ux1852e;
wire [69:0] xjc2975;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef ROOT_COMP

`else

`endif

`ifdef DWN_STRM_PORT

`else

`endif





`ifdef MASTER_LOOPBACK

`else

`endif	

localparam do14bae = 70,jra5d72 = 32'hfdffca4b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef DWN_STRM_LANE


`else


`endif


`ifdef ROOT_COMP


`else


`endif


`ifdef DWN_STRM_PORT


`else


`endif


`ifdef MASTER_LOOPBACK


`else


`endif	








`ifdef DWN_STRM_LANE
   assign ne48a16 = 1'b1;

`else
   assign ne48a16 = 1'b0;

`endif




`ifdef ROOT_COMP
   assign nt2859e = 1'b1;

`else
   assign nt2859e = 1'b0;

`endif




`ifdef DWN_STRM_PORT
   assign ld450b3 = 1'b1;

`else
   assign ld450b3 = 1'b0;

`endif


assign phy_neg_lnkw = 3'b001;




assign ne58afd = twb884e ? 1'b1 : phy_disable_scr ;
pcie_x1_top_ps6c1e6 ng1bebc (      .qt60f33       ( sys_clk ),   .clk_250_tx       ( clk_250_tx ),   .an3cce4       ( sys_clk ),   .clk_250_rx       ( clk_250_rx ),   .rst_n            ( rst_n ),      .ri9c974 ( phy_snd_beacon ),   .ne58afd    ( ne58afd ),   .wweafad     ( ldddadd ),   .qi2e892    ( cz7f9c2 ),   .zx74491   ( vvfce14 ),   .ria248e  ( tj8b3fc ),   .yz12472( tucff38),   .sw92394       ( dm5d079 ),   .zz91ca0      ( yx41e5d ),   .db8e506        ( ouf2ed ),   .go72837   ( ks3130b ),   .xl941b8  ( ba89858 ),   .rva0dc7  ( qg4c2c3 ),      .vkb7786     ( phy_data ),   .qvbbc33    ( phy_kcntl ),   .ayde19c   ( phy_fndisp ),   .mef0ce0 ( phy_eidle_tx),   .zz6e3e      ( zz8bb13 ),   .vx371f6     ( rtec4f2 ),   .pub8fb7       ( zz13cb8 ),   .zxc7dbb  ( shf2e3e ),   .sw3edde ( bab8fa0 ),   .thf6ef0 ( gq3e81e )   );

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      wweafad <= 'd0;   else begin      if (phy_ltssm_state == 'd1)         wweafad <= 1'b1;      else if (phy_ltssm_state == 'd0)         wweafad <= 'd0;   end
end



pcie_x1_top_fne94d8 rgdffbd   (      .sys_clk              (sys_clk),   .rst_n                (rst_n),   .pcie_x1_top_dgrx_data            (aa15943),   .pcie_x1_top_dgrx_kcntl           (ip650c0),   .pcie_x1_top_dgrx_err             (su4302f),
      .dfrm_ddata           (dfrm_ddata),   .dfrm_dllp_st         (dfrm_dllp_st),   .dfrm_dllp_end        (dfrm_dllp_end),   .dfrm_tdata           (dfrm_tdata),   .dfrm_tval            (dfrm_tval),   .dfrm_st              (dfrm_st),   .dfrm_end             (dfrm_end),   .dfrm_edb             (dfrm_edb),   .dfrm_perr            (dfrm_perr)   );




assign ea6db4e  = vic0bcd[1] |  vic0bcd[0] ;
assign ay6da70 = do2f359[1] |  do2f359[0] ;
assign ui6d380 = fncd653[1] |  fncd653[0] ;
pcie_x1_top_mtabe09 zk581dc   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .normal_time         (puade3c),    .reduce_idlecnt      (wy88dee),    .LINK_NUM            (yx4b2d9),    .N_FTS_INC           (yx5196d),    .TX_EIDL_CNT         (su596cd),
        .cfgcs_losel         (jccf6b4),    .ext_sync            (vicfd6b),    .no_pcie_train       (ana4bc4),
        .asb_data            (aa15943),    .asb_kcntl           (ip650c0),    .asb_eidle_rx        (xl3853c),    .asb_beacon_rx       (hbc29e6),    .asb_lane_sync       (fc14f36),    .asb_detdone_rx      (gbe2874),    .asb_detres_rx       (uxa1d2b),    .asb_dskew_rx        (cm7281c),
    .wjf834e         (end68fb),    .and3a1        (and3a1),        .hl_disable_scr      (aaacd56),    .hl_gto_dis          (vi66ab0),    .hl_gto_det          (uic1573),    .hl_gto_hrst         (tjbfcdf),    .hl_gto_l0stx        (ri8ce98),    .hl_gto_l1           (os674c3),    .hl_gto_l2           (zm3a618),    .hl_gto_l0stxfts     (os53e8a),    .hl_gto_lbk          (fpaac1a),    .hl_gto_rcvry        (ald30c3),    .hl_gto_cfg          (vk86b1e),    .hl_snd_beacon       (zm2f40e),    .cfg_rtrn_lnk        (enc30e1),    .dll_rtrn_lnk        (ie9861c),
    .ne48a16        (of7a072),    .ld450b3        (psd0395),    .nt2859e        (fp81cab),
        .zm2540b   (phy_realign_req),    .ng2a05b          (ng2a05b),    .xj502da         (xj502da),    .rv816d7           (rv816d7),    .hqb6be        (hqb6be),    .of5b5f3       (of5b5f3),
    .ltssm_config_ln     (ltssm_config_ln),    .ltssm_cfgln_sum     (ltssm_cfgln_sum),
    .vk35942   (phy_disable_scr),    .go46e47     (phy_inv_polar),    .swa98d2      (swa98d2),    .zxe3f73      (phy_godet_rx),    .mg1fb9f     (ic46f86),    .kdfdcf9     (phy_sloopback),    .ri9c974    (phy_snd_beacon),    .ps73e6a        (phy_linkup),    .qv9f352       (phy_trn_err),    .nrf9a94       (phy_lnk_trn),    .dz71572         (phy_ltssm_state),    .al6a53e      (phy_ltssm_substate),    .ltssm_l0            (ltssm_l0),    .l0s_tx_state        (phy_l0s_tx_state),    .l1_state            (phy_l1_state),    .l2_state            (phy_l2_state),    .pol_compliance      (pol_compliance),    .wya3cc2        (phy_l0_l0s)    );



pcie_x1_top_mtd15b # (   .LANE_WIDTH      ( LANE_WIDTH ),   .D_WIDTH         ( 16 ))   os46afc (      .sys_clk              (sys_clk),   .rst_n                (rst_n),   .SKP_INS_CNT          (zk48faf),   .tdmux_data           (vxb5ae8),   .tdmux_st             (puad747),   .tdmux_end            (rt6ba3b),   .tdmux_edb            (fa5d1df),   .tdmux_dllp_st        (mt8fd96),   .tdmux_dllp_end       (zx7ecb4),   .tdmux_skp            (gbe8efb),   .an1dcdc             (xlba74f),   .vi73722            (ou9d3fd),   .zz227e3              (ipfd3b4),   .yxdc89f           (fn4ff4e),   .yz9f8f7         (swa98d2),   .en657c1          ({(LANE_WIDTH){rte9da4}}),   .dz71572          (phy_ltssm_state),   .pol_compliance       (pol_compliance),      .wjf834e          (wjf834e),   .wwc1a74       (wwc1a74),   .and3a1         (and3a1),   .frm_data             (xy1e0be),   .frm_kcntl            (gq82f90),   .frm_fndisp           (yzbe405),   .frm_eidle_tx         (sj9016d),   .frm_val              ()   );
assign phy_skpq_nclks = (ltssm_l0) ? cz4ed26 : 1'b0;
assign phy_skpq_val   = (ltssm_l0) ? and3a1   : 1'b0;
assign phy_l0         = ltssm_l0;
assign phy_cfgln_sum  = coac9b5;
assign phy_cfgln      = ltssm_config_ln;






assign tx_lbk_rdy = ic46f86;


`ifdef MASTER_LOOPBACK

always @(*) begin   if (ic46f86) begin            cb80b6d  = ng969ba;      uk5b6d = ksa6e9d;
            rx_lbk_data    = aa15943;      rx_lbk_kcntl   = ip650c0;   end   else begin            cb80b6d  = ic53d8b;      uk5b6d = blf62cf;
            rx_lbk_data    = 0;      rx_lbk_kcntl   = 0;   end
end

`else

always @(*) begin            cb80b6d  = ic53d8b;      uk5b6d = blf62cf;
            rx_lbk_data    = 0;      rx_lbk_kcntl   = 0;
end

`endif	

always@* begin puade3c<=xjc2975[0];wy88dee<=xjc2975[1];yx4b2d9<={LINK_NUM>>1,xjc2975[2]};yx5196d<={N_FTS_INC>>1,xjc2975[3]};zk48faf<={SKP_INS_CNT>>1,xjc2975[4]};su596cd<={TX_EIDL_CNT>>1,xjc2975[5]};dm5d079<={asb_data>>1,xjc2975[6]};yx41e5d<={asb_kcntl>>1,xjc2975[7]};ouf2ed<={asb_err>>1,xjc2975[8]};ks3130b<={asb_eidle_rx>>1,xjc2975[9]};gbe2874<={asb_detdone_rx>>1,xjc2975[10]};uxa1d2b<={asb_detres_rx>>1,xjc2975[11]};cm7281c<={asb_dskew_rx>>1,xjc2975[12]};ba89858<={asb_beacon_rx>>1,xjc2975[13]};qg4c2c3<={asb_lane_sync>>1,xjc2975[14]};twb884e<=xjc2975[15];aaacd56<=xjc2975[16];vi66ab0<=xjc2975[17];uic1573<=xjc2975[18];tjbfcdf<=xjc2975[19];ri8ce98<=xjc2975[20];os674c3<=xjc2975[21];zm3a618<=xjc2975[22];os53e8a<=xjc2975[23];fpaac1a<={hl_gto_lbk>>1,xjc2975[24]};ald30c3<=xjc2975[25];vk86b1e<=xjc2975[26];zm2f40e<=xjc2975[27];jccf6b4<={cfgcs_losel>>1,xjc2975[28]};ie9861c<=xjc2975[29];enc30e1<=xjc2975[30];vicfd6b<=xjc2975[31];ana4bc4<=xjc2975[32];vxb5ae8<={tdmux_data>>1,xjc2975[33]};puad747<=xjc2975[34];rt6ba3b<=xjc2975[35];fa5d1df<=xjc2975[36];mt8fd96<=xjc2975[37];zx7ecb4<=xjc2975[38];gbe8efb<=xjc2975[39];ng969ba<={tx_lbk_data>>1,xjc2975[40]};ksa6e9d<={tx_lbk_kcntl>>1,xjc2975[41]};xlba74f<={ng2a05b>>1,xjc2975[42]};ou9d3fd<={xj502da>>1,xjc2975[43]};fn4ff4e<={hqb6be>>1,xjc2975[44]};ipfd3b4<={rv816d7>>1,xjc2975[45]};rte9da4<=xjc2975[46];cz4ed26<={wwc1a74>>1,xjc2975[47]};end68fb<={wjf834e>>1,xjc2975[48]};coac9b5<={ltssm_cfgln_sum>>1,xjc2975[49]};of7a072<=xjc2975[50];psd0395<=xjc2975[51];fp81cab<=xjc2975[52];aa15943<={zz8bb13>>1,xjc2975[53]};ip650c0<={rtec4f2>>1,xjc2975[54]};su4302f<={zz13cb8>>1,xjc2975[55]};vic0bcd<={shf2e3e>>1,xjc2975[56]};do2f359<={bab8fa0>>1,xjc2975[57]};fncd653<={gq3e81e>>1,xjc2975[58]};go594f6<={tja0782>>1,xjc2975[59]};ic53d8b<={xy1e0be>>1,xjc2975[60]};blf62cf<={gq82f90>>1,xjc2975[61]};tj8b3fc<={yzbe405>>1,xjc2975[62]};tucff38<={sj9016d>>1,xjc2975[63]};cz7f9c2<={cb80b6d>>1,xjc2975[64]};vvfce14<={uk5b6d>>1,xjc2975[65]};ldddadd<=xjc2975[66];xl3853c<=xjc2975[67];hbc29e6<=xjc2975[68];fc14f36<=xjc2975[69];end
always@* begin ux1852e[2047]<=reduce_idlecnt;ux1852e[2046]<=LINK_NUM[0];ux1852e[2044]<=N_FTS_INC[0];ux1852e[2040]<=SKP_INS_CNT[0];ux1852e[2033]<=TX_EIDL_CNT[0];ux1852e[2019]<=asb_data[0];ux1852e[2011]<=force_disable_scr;ux1852e[1991]<=asb_kcntl[0];ux1852e[1974]<=hl_disable_scr;ux1852e[1935]<=asb_err[0];ux1852e[1925]<=rv816d7[0];ux1852e[1900]<=hl_gto_dis;ux1852e[1892]<=zz13cb8[0];ux1852e[1862]<=tdmux_data[0];ux1852e[1823]<=asb_eidle_rx[0];ux1852e[1803]<=of5b5f3;ux1852e[1753]<=hl_gto_det;ux1852e[1738]<=hl_gto_l1;ux1852e[1737]<=shf2e3e[0];ux1852e[1676]<=tdmux_st;ux1852e[1656]<=tx_lbk_kcntl[0];ux1852e[1619]<=hl_gto_lbk[0];ux1852e[1608]<=tja0782[0];ux1852e[1598]<=asb_detdone_rx[0];ux1852e[1559]<=wwc1a74[0];ux1852e[1497]<=zz8bb13[0];ux1852e[1458]<=hl_gto_hrst;ux1852e[1428]<=hl_gto_l2;ux1852e[1426]<=bab8fa0[0];ux1852e[1338]<=cfgcs_losel[0];ux1852e[1305]<=tdmux_end;ux1852e[1264]<=ng2a05b[0];ux1852e[1256]<=cfg_rtrn_lnk;ux1852e[1191]<=hl_gto_rcvry;ux1852e[1169]<=xy1e0be[0];ux1852e[1163]<=sj9016d[0];ux1852e[1149]<=asb_detres_rx[0];ux1852e[1127]<=tdmux_dllp_st;ux1852e[1114]<=wweafad;ux1852e[1070]<=wjf834e[0];ux1852e[1023]<=normal_time;ux1852e[1005]<=asb_lane_sync[0];ux1852e[962]<=hqb6be[0];ux1852e[946]<=rtec4f2[0];ux1852e[931]<=no_pcie_train;ux1852e[869]<=hl_gto_l0stx;ux1852e[828]<=tx_lbk_data[0];ux1852e[809]<=hl_gto_l0stxfts;ux1852e[804]<=gq3e81e[0];ux1852e[748]<=nt2859e;ux1852e[727]<=ui6d380;ux1852e[669]<=hl_snd_beacon;ux1852e[628]<=dll_rtrn_lnk;ux1852e[581]<=yzbe405[0];ux1852e[563]<=tdmux_edb;ux1852e[557]<=uk5b6d[0];ux1852e[502]<=asb_beacon_rx[0];ux1852e[481]<=xj502da[0];ux1852e[465]<=ext_sync;ux1852e[414]<=tdmux_skp;ux1852e[374]<=ld450b3;ux1852e[363]<=ay6da70;ux1852e[334]<=hl_gto_cfg;ux1852e[290]<=gq82f90[0];ux1852e[278]<=cb80b6d[0];ux1852e[251]<=asb_dskew_rx[0];ux1852e[207]<=tdmux_dllp_end;ux1852e[187]<=ne48a16;ux1852e[181]<=ea6db4e;ux1852e[93]<=ltssm_cfgln_sum[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_top_dbc42b (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   input wire [31:0]  gd85780 ,      
   input wire         wy2bc04 ,    

   input wire [11:0]  uv5e021 ,    
   input wire         qgf010c , 
   input              yz80860 ,       

   output wire [11:0] pu4305 ,    
   output reg         qi2182a ,       
   output reg         rvc150 ,      
   output reg         mr60a86 ,     
   output reg         ie5434          ) ;
reg [11:0]            ng2a1a0 ;
reg                   xj50d02 ;
reg                   ls86816 ;
reg                   ks340b2 ;
reg [11:0]            dba0590 ;
wire                  ux2c87 ;
wire                  hd1643c ;
wire [11:0]           ngb21e6 ;
wire [11:0]           ep90f33 ;
wire                  ou8799c ;
wire                  kf3cce0 ;
wire                  lde6705 ;
wire                  cb3382e ;
parameter pu9c174    = 12'hFFF ;
reg [31 : 0] goe0ba3;
reg mg5d18;
reg [11 : 0] wy2e8c1;
reg vv74609;
reg ksa304e;
reg ux18270;
reg uic1385;
reg hd9c28;
reg [11 : 0] of4e147;
reg sh70a3d;
reg sj851ed;
reg [11 : 0] rv28f6c;
reg [11 : 0] by47b66;
reg lf3db32;
reg shed997;
reg jc6ccbc;
reg ps665e2;
reg [2047:0] ux1852e;
wire [16:0] xjc2975;

localparam do14bae = 17,jra5d72 = 32'hfdffd28b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;







assign ux2c87 = (goe0ba3[31:24] == 8'h00)  ;


assign hd1643c = (goe0ba3[31:24] == 8'h10) ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin       ng2a1a0  <= 12'h000 ;       xj50d02   <= 1'b0 ;   end   else if (sh70a3d || sj851ed) begin       ng2a1a0  <= goe0ba3[11:0] ;       xj50d02   <= mg5d18 ;   end   else  begin       ng2a1a0  <= ng2a1a0 ;       xj50d02   <= 1'b0 ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ls86816   <= 1'b0 ;      ks340b2   <= 1'b0 ;   end   else  begin      ls86816   <= sh70a3d ;      ks340b2   <= sj851ed ;   end
end


assign ngb21e6 = ~ng2a1a0 ;




assign ou8799c = ((wy2e8c1 + rv28f6c) <= 12'd2048) ;


assign ep90f33 = ((~of4e147) + 12'h001) ;


assign kf3cce0 = ((ng2a1a0 + by47b66) < 12'd2048) ;


assign lde6705 = (ng2a1a0 == of4e147) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ie5434 <= 1'b0 ;   else if (ux18270 && (!lf3db32 || (lf3db32 && !shed997)))      ie5434 <= 1'b1 ;   else      ie5434 <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mr60a86 <= 1'b0 ;      dba0590   <= pu9c174 ;   end   else if (ksa304e) begin      mr60a86 <= 1'b0 ;      dba0590   <= pu9c174 ;   end   else if (ux18270 && lf3db32 && shed997 & !jc6ccbc) begin            if (uic1385 || hd9c28) begin         mr60a86 <= 1'b1 ;         dba0590   <= ng2a1a0 ;      end      else begin         mr60a86 <= 1'b0 ;         dba0590   <= of4e147 ;      end   end   else begin      mr60a86 <= 1'b0 ;      dba0590   <= of4e147 ;   end
end

assign pu4305 = of4e147 ;


assign cb3382e =  ~(wy2e8c1 == (ng2a1a0 + 1));



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rvc150 <= 1'b0 ;   else if (ux18270 && lf3db32 && shed997 && hd9c28 && ps665e2)      rvc150 <= 1'b1 ;   else if (vv74609)      rvc150 <= 1'b0 ;   else      rvc150 <= rvc150 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qi2182a <= 1'b0 ;   else if (ux18270 && lf3db32 && shed997 && uic1385)      qi2182a <= 1'b1 ;   else      qi2182a <= 1'b0 ;
end
always@* begin goe0ba3<={gd85780>>1,xjc2975[0]};mg5d18<=xjc2975[1];wy2e8c1<={uv5e021>>1,xjc2975[2]};vv74609<=xjc2975[3];ksa304e<=xjc2975[4];ux18270<=xjc2975[5];uic1385<=xjc2975[6];hd9c28<=xjc2975[7];of4e147<={dba0590>>1,xjc2975[8]};sh70a3d<=xjc2975[9];sj851ed<=xjc2975[10];rv28f6c<={ngb21e6>>1,xjc2975[11]};by47b66<={ep90f33>>1,xjc2975[12]};lf3db32<=xjc2975[13];shed997<=xjc2975[14];jc6ccbc<=xjc2975[15];ps665e2<=xjc2975[16];end
always@* begin ux1852e[2047]<=wy2bc04;ux1852e[2046]<=uv5e021[0];ux1852e[2044]<=qgf010c;ux1852e[2040]<=yz80860;ux1852e[2032]<=xj50d02;ux1852e[2017]<=ls86816;ux1852e[1987]<=ks340b2;ux1852e[1926]<=dba0590[0];ux1852e[1804]<=ux2c87;ux1852e[1614]<=cb3382e;ux1852e[1561]<=hd1643c;ux1852e[1074]<=ngb21e6[0];ux1852e[1023]<=gd85780[0];ux1852e[807]<=lde6705;ux1852e[403]<=kf3cce0;ux1852e[201]<=ou8799c;ux1852e[100]<=ep90f33[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_top_mgb911c (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   `ifdef X1
      input wire [15:0]  ux2383c , 
      input wire         dfrm_dllp_st ,   
      output wire        wy2bc04 ,    
      output wire        cb7978 ,   
   `endif
   `ifdef X4
      input wire [47:0]  ux2383c , 
      input wire         goe5a3f ,      
      output reg         wy2bc04 ,    
      output reg         cb7978 ,   
   `endif

   input              yz80860 ,       

   output reg [31:0]  gd85780           ) ;
reg [15:0]       jr2844b ;
reg [15:0]       tu4225f ;
reg [31:0]       ba112fb ;
reg [31:0]       vk897db ;
wire [15:0]      sh4beda ;
wire [15:0]      vv5f6d4 ;
wire             zkfb6a6 ;
wire [31:0]      ykdb533 ;

`ifdef X1
wire             xwda998 ;
reg              sud4cc3 ;
reg              wya6618 ;
reg              mt330c0 ;
reg [15:0]       uk98605 ;
reg [15:0]       wjc3029 ;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg ksa304e;
reg [15 : 0] rgc0a6d;
reg [31 : 0] ks536b;
reg [31 : 0] ep29b58;
reg [15 : 0] by4dac4;
reg [15 : 0] qg6d623;
reg zx6b119;
reg [31 : 0] ne588ce;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 8,jra5d72 = 32'hfdffd84b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`endif





`ifdef X1
   assign xwda998 = dfrm_dllp_st ;   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         sud4cc3 <= 1'b0 ;         wya6618 <= 1'b0 ;         mt330c0 <= 1'b0 ;
         uk98605 <= 1'd0 ;      end      else begin         sud4cc3 <=  xwda998 ;         wya6618 <=  sud4cc3 ;         mt330c0 <=  wya6618 ;
         if (xwda998)            uk98605 <= ux2383c ;         else            uk98605 <= uk98605 ;      end   end   assign ykdb533 = {uk98605, ux2383c} ;

`endif



`ifdef X4
   assign ykdb533 = ux2383c[47:16] ;

`endif



always @* begin   vk897db = ne588ce ;   ba112fb = {ep29b58[24],ep29b58[25],ep29b58[26],ep29b58[27],ep29b58[28],ep29b58[29],ep29b58[30],ep29b58[31],        ep29b58[16],ep29b58[17],ep29b58[18],ep29b58[19],ep29b58[20],ep29b58[21],ep29b58[22],ep29b58[23],        ep29b58[8],ep29b58[9],ep29b58[10],ep29b58[11],ep29b58[12],ep29b58[13],ep29b58[14],ep29b58[15],        ep29b58[0],ep29b58[1],ep29b58[2],ep29b58[3],ep29b58[4],ep29b58[5],ep29b58[6],ep29b58[7] };   tu4225f = 16'h32B9;   jr2844b[0] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[23] ^ ks536b[21] ^ ks536b[20] ^               ks536b[15] ^ ks536b[13] ^ ks536b[12] ^ ks536b[8] ^ ks536b[4] ^ ks536b[0] ^ rgc0a6d[0] ;   jr2844b[1] = ks536b[31] ^ ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^ ks536b[23] ^               ks536b[22] ^ ks536b[20] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[12] ^ ks536b[9] ^               ks536b[8] ^ ks536b[5] ^ ks536b[4] ^ ks536b[1] ^ ks536b[0] ^ rgc0a6d[1] ;   jr2844b[2] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^               ks536b[21] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[13] ^ ks536b[10] ^ ks536b[9] ^               ks536b[6] ^ ks536b[5] ^ ks536b[2] ^ ks536b[1] ^ rgc0a6d[2] ;   jr2844b[3] = ks536b[31] ^ ks536b[30] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[21] ^               ks536b[20] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^               ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ ks536b[7] ^ ks536b[6] ^ ks536b[4] ^               ks536b[3] ^ ks536b[2] ^ ks536b[0] ^ rgc0a6d[3] ;   jr2844b[4] = ks536b[31] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[21] ^               ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^               ks536b[12] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[7] ^ ks536b[5] ^ ks536b[4] ^               ks536b[3] ^ ks536b[1] ^ rgc0a6d[4] ;   jr2844b[5] = ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[20] ^               ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^               ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[8] ^ ks536b[6] ^ ks536b[5] ^ ks536b[4] ^               ks536b[2] ^  rgc0a6d[5] ;   jr2844b[6] = ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[21] ^               ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^               ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[9] ^ ks536b[7] ^ ks536b[6] ^ ks536b[5] ^               ks536b[3] ^ rgc0a6d[6] ;   jr2844b[7] = ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[22] ^               ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^               ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ ks536b[7] ^ ks536b[6] ^               ks536b[4] ^ rgc0a6d[7] ;   jr2844b[8] = ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[23] ^               ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^               ks536b[15] ^ ks536b[13] ^ ks536b[12] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[7] ^               ks536b[5] ^ rgc0a6d[8] ;   jr2844b[9] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^               ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^               ks536b[16] ^ ks536b[14] ^ ks536b[13] ^ ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[8] ^               ks536b[6] ^ rgc0a6d[9] ;   jr2844b[10] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^                ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^                ks536b[15] ^ ks536b[14] ^ ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[9] ^ ks536b[7] ^ rgc0a6d[10] ;   jr2844b[11] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^                ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[16] ^                ks536b[15] ^ ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ rgc0a6d[11] ;   jr2844b[12] = ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^ ks536b[22] ^ ks536b[19] ^                ks536b[17] ^ ks536b[16] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[4] ^ ks536b[0] ^ rgc0a6d[12] ;   jr2844b[13] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[25] ^ ks536b[23] ^ ks536b[20] ^                ks536b[18] ^ ks536b[17] ^ ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[5] ^ ks536b[1] ^ rgc0a6d[13];   jr2844b[14] = ks536b[30] ^ ks536b[29] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^ ks536b[21] ^ ks536b[19] ^                ks536b[18] ^ ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[6] ^ ks536b[2] ^ rgc0a6d[14] ;   jr2844b[15] = ks536b[31] ^ ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[22] ^ ks536b[20] ^                ks536b[19] ^ ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[7] ^ ks536b[3] ^ rgc0a6d[15] ;

end

assign sh4beda = {~jr2844b[8],  ~jr2844b[9],  ~jr2844b[10], ~jr2844b[11],                  ~jr2844b[12], ~jr2844b[13], ~jr2844b[14], ~jr2844b[15],                  ~jr2844b[0],  ~jr2844b[1],  ~jr2844b[2],  ~jr2844b[3],                  ~jr2844b[4],  ~jr2844b[5],  ~jr2844b[6],  ~jr2844b[7]} ;


`ifdef X1
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         wjc3029 <= 16'h0000 ;      else         wjc3029 <= by4dac4 ;   end      assign vv5f6d4 = (wjc3029 ^ ux2383c[15:0]) ;

`endif



`ifdef X4
      assign vv5f6d4 = (by4dac4 ^ ux2383c[15:0]) ;

`endif




assign zkfb6a6 =  (qg6d623 == 16'h0000) ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gd85780 <= 32'h0000_0000 ;


`ifdef X1
      else if (sud4cc3)         gd85780 <= ne588ce ;


`endif



`ifdef X4
      else         gd85780 <= ne588ce ;


`endif

end


`ifdef X1
   assign wy2bc04  = (!ksa304e & wya6618 & zx6b119) ;   assign cb7978 = (!ksa304e & wya6618 & ~zx6b119) ;

`endif



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         wy2bc04  <= 1'b0 ;      else if (!ksa304e && goe5a3f && zx6b119)         wy2bc04  <= 1'b1 ;      else         wy2bc04  <= 1'b0 ;   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         cb7978 <= 1'b0 ;      else if (!ksa304e && goe5a3f && !zx6b119)         cb7978 <= 1'b1 ;      else         cb7978 <= 1'b0 ;   end

`endif


always@* begin ksa304e<=xjc2975[0];rgc0a6d<={tu4225f>>1,xjc2975[1]};ks536b<={ba112fb>>1,xjc2975[2]};ep29b58<={vk897db>>1,xjc2975[3]};by4dac4<={sh4beda>>1,xjc2975[4]};qg6d623<={vv5f6d4>>1,xjc2975[5]};zx6b119<=xjc2975[6];ne588ce<={ykdb533>>1,xjc2975[7]};end
always@* begin ux1852e[2047]<=tu4225f[0];ux1852e[2046]<=ba112fb[0];ux1852e[2044]<=vk897db[0];ux1852e[2040]<=sh4beda[0];ux1852e[2033]<=vv5f6d4[0];ux1852e[2019]<=zkfb6a6;ux1852e[1991]<=ykdb533[0];ux1852e[1023]<=yz80860;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_top_uv515de (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   input wire [31:0]  gd85780 ,      
   input wire         wy2bc04 ,    

   output reg [22:0]  ayf58a1 ,    
   output reg [1:0]   coac509 ,  
   output reg         os62849 ,  
   output reg         do14249 ,  
   output reg         mta124b ,   
   output reg [23:0]  rxdp_vsd_data ,  
   output reg         ui492ee,    
   output reg [2:0]   rxdp_pmd_type ,  
   output reg         sh4bb80         ) ;
reg                    tu5dc04 ;
reg                    jcee022 ;
reg                    qt70112 ;
reg                    yz80894 ;
reg                    pu44a5 ;
reg [31 : 0] goe0ba3;
reg mg5d18;
reg xl94ab5;
reg nta55ae;
reg vk2ad77;
reg kq56bbb;
reg [2047:0] ux1852e;
wire [5:0] xjc2975;

localparam do14bae = 6,jra5d72 = 32'hfdffea0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;







always @* begin   if (mg5d18) begin      casex (goe0ba3[31:24])                  8'b0010_0000 ,         8'b0010_0001 ,         8'b0010_0011 ,         8'b0010_0100 : begin            tu5dc04       = 1'b1 ;            jcee022  = 1'b0 ;            qt70112  = 1'b0 ;            yz80894    = 1'b0 ;            pu44a5      = 1'b0 ;         end                  8'b0011_0000 : begin            tu5dc04       = 1'b0 ;            jcee022  = 1'b0 ;            qt70112  = 1'b0 ;            yz80894    = 1'b0 ;            pu44a5      = 1'b1 ;         end                  8'b0100_0xxx ,         8'b0101_0xxx ,         8'b0110_0xxx : begin            tu5dc04       = 1'b0 ;            jcee022  = 1'b1 ;            qt70112  = 1'b0 ;            yz80894    = 1'b0 ;            pu44a5      = 1'b0 ;         end                  8'b1100_0xxx ,         8'b1101_0xxx ,         8'b1110_0xxx : begin            tu5dc04       = 1'b0 ;            jcee022  = 1'b0 ;            qt70112  = 1'b1 ;            yz80894    = 1'b0 ;            pu44a5      = 1'b0 ;         end                  8'b1000_0xxx ,         8'b1001_0xxx ,         8'b1010_0xxx : begin            tu5dc04       = 1'b0 ;            jcee022  = 1'b0 ;            qt70112  = 1'b0 ;            yz80894    = 1'b1 ;            pu44a5      = 1'b0 ;         end         default      : begin            tu5dc04       = 1'b0 ;            jcee022  = 1'b0 ;            qt70112  = 1'b0 ;            yz80894    = 1'b0 ;            pu44a5      = 1'b0 ;         end     endcase   end   else begin      tu5dc04       = 1'b0 ;      jcee022  = 1'b0 ;      qt70112  = 1'b0 ;      yz80894    = 1'b0 ;      pu44a5      = 1'b0 ;   end
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ayf58a1 <= 23'h0_0000 ;   else      ayf58a1 <=  {goe0ba3[26:24], goe0ba3[21:14], goe0ba3[11:0]} ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      coac509 <= 2'b00 ;   else      coac509 <=  goe0ba3[29:28] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rxdp_pmd_type <= 3'b000 ;   else      rxdp_pmd_type <= goe0ba3[26:24] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rxdp_vsd_data <= 23'b000 ;   else      rxdp_vsd_data <= goe0ba3[23:0] ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      os62849  <= 1'b0 ;   else if (xl94ab5)      os62849  <= 1'b1 ;   else      os62849  <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      do14249  <= 1'b0 ;   else if (nta55ae)      do14249  <= 1'b1 ;   else      do14249  <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mta124b  <= 1'b0 ;   else if (vk2ad77)      mta124b  <= 1'b1 ;   else      mta124b  <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      sh4bb80  <= 1'b0 ;   else if (tu5dc04)      sh4bb80  <= 1'b1 ;   else      sh4bb80  <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ui492ee  <= 1'b0 ;   else if (kq56bbb)      ui492ee  <= 1'b1 ;   else      ui492ee  <= 1'b0 ;
end
always@* begin goe0ba3<={gd85780>>1,xjc2975[0]};mg5d18<=xjc2975[1];xl94ab5<=xjc2975[2];nta55ae<=xjc2975[3];vk2ad77<=xjc2975[4];kq56bbb<=xjc2975[5];end
always@* begin ux1852e[2047]<=wy2bc04;ux1852e[2046]<=jcee022;ux1852e[2044]<=qt70112;ux1852e[2040]<=yz80894;ux1852e[2032]<=pu44a5;ux1852e[1023]<=gd85780[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule



































`timescale 1 ns / 100 ps
module pcie_x1_top_psf187b (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   `ifdef X1
      input wire [15:0]  ux2383c , 
      input wire         dfrm_dllp_st ,   
   `endif
   `ifdef X4
      input wire [47:0]  ux2383c , 
      input wire         goe5a3f ,      
   `endif

   input wire [11:0]  uv5e021 ,    
   input wire         qgf010c , 
   input              yz80860 ,       

   output wire [22:0] ayf58a1 ,    
   output wire [1:0]  coac509 ,  
   output wire        os62849 ,  
   output wire        do14249 ,  
   output wire        mta124b ,   
   output wire [23:0] rxdp_vsd_data ,  
   output wire [2:0]  rxdp_pmd_type ,  
   output wire [1:0]  rxdp_dllp_val ,  
                                       

   output wire [11:0] pu4305 ,    
   output wire        qi2182a ,       
   output wire        rvc150 ,      
   output wire        mr60a86 ,     

   output wire        cb2c67b ,  
   output wire        ie5434          ) ;
wire [31:0] gd85780 ;

`ifdef X1

`endif

`ifdef X4

`endif
reg rst_n_split;
reg [11 : 0] wy2e8c1;
reg vv74609;
reg ksa304e;
reg [2047:0] ux1852e;
wire [3:0] xjc2975;


`ifdef X1

`endif

`ifdef X4

`endif



localparam do14bae = 4,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


pcie_x1_top_mgb911c lf3734c (
   .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,   


`ifdef X1
      .ux2383c ( ux2383c ) ,      .dfrm_dllp_st   ( dfrm_dllp_st ) ,


`endif



`ifdef X4
      .ux2383c ( ux2383c ) ,      .goe5a3f      ( goe5a3f ) ,


`endif

   .yz80860       ( ksa304e ) ,      .gd85780      ( gd85780 ) ,   .wy2bc04    ( wy2bc04 ) ,   .cb7978   ( cb2c67b )  ) ;
pcie_x1_top_dbc42b cmc41fe (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,      .gd85780      ( gd85780 ) ,   .wy2bc04    ( wy2bc04 ) ,   .uv5e021    ( wy2e8c1 ) ,   .qgf010c ( vv74609 ) ,   .yz80860       ( ksa304e ) ,      .pu4305    ( pu4305 ) ,   .qi2182a       ( qi2182a ) ,   .rvc150      ( rvc150 ) ,   .mr60a86     ( mr60a86 ) ,   .ie5434     ( ie5434 )  ) ;
pcie_x1_top_uv515de dz71c8e (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,      .gd85780      ( gd85780 ) ,   .wy2bc04    ( wy2bc04 ) ,      .ayf58a1    ( ayf58a1 ) ,   .coac509  ( coac509 ) ,   .os62849  ( os62849 ) ,   .do14249  ( do14249 ) ,   .mta124b   ( mta124b ) ,   .rxdp_vsd_data  ( rxdp_vsd_data ) ,   .rxdp_pmd_type  ( rxdp_pmd_type ) ,   .ui492ee   ( rxdp_dllp_val[1] ) ,   .sh4bb80    ( rxdp_dllp_val[0] )  ) ;
always@* begin rst_n_split<=xjc2975[0];wy2e8c1<={uv5e021>>1,xjc2975[1]};vv74609<=xjc2975[2];ksa304e<=xjc2975[3];end
always@* begin ux1852e[2047]<=uv5e021[0];ux1852e[2046]<=qgf010c;ux1852e[2044]<=yz80860;ux1852e[1023]<=rst_n;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule



































`timescale 1 ns / 100 ps
module pcie_x1_top_qtd9a26 #(
   parameter D_WIDTH  = 64 )
   (
   input              sys_clk ,    
   input              rst_n ,      

   input [D_WIDTH-1:0]  data_in ,  
   input                ksa6169 ,    
   `ifdef X4
      input              tw30b48 ,   
      output wire [31:0] an85a43,
   `endif
   output wire [31:0] hd2d21d       ) ;
reg  [31:0]            dm690ef ;
reg  [31:0]            xw4877b ;
reg  [15:0]            go43bda ;
reg  [31:0]            yz1ded0 ;
reg  [15:0]            wwef684 ;
wire [7:0]             rt7b420 ;
wire [7:0]             neda107 ;
wire [7:0]             ned083a ;
wire [7:0]             lf841d2 ;

`ifdef X4
reg  [31:0]         crc_reg64 ;
reg  [31:0]         cb74b2 ;
reg  [31:0]         vk3a595 ;
reg  [31:0]         vvd2cab ;
reg  [63:0]         zm9655f ;
reg  [31:0]         bab2afa ;
reg  [63:0]         ir957d2 ;
reg  [47:0]         anabe95 ;
reg  [31:0]         bl5f4ad ;
reg  [47:0]         uifa56e ;
wire [7:0]          nrd2b71 ;
wire [7:0]          oh95b8f ;
wire [7:0]          riadc7c ;
wire [7:0]          dz6e3e2 ;

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] mtb4467;
reg dm7c5bc;
reg [31 : 0] cze2de2;
reg [15 : 0] nt16f15;
reg [31 : 0] ngb78af;
reg [15 : 0] ymbc57a;
reg [7 : 0] ofe2bd0;
reg [7 : 0] co15e85;
reg [7 : 0] bnaf428;
reg [7 : 0] en7a146;
reg [2047:0] ux1852e;
wire [9:0] xjc2975;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

localparam do14bae = 10,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4



`endif






always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n) begin      dm690ef <= 32'hFFFF_FFFF ;


`ifdef X4
         cb74b2 <= 32'hFFFF_FFFF ;         crc_reg64 <= 32'hFFFF_FFFF ;


`endif
   end   else begin


`ifdef X1
         if(dm7c5bc)            dm690ef <= 32'hFFFF_FFFF ;         else            dm690ef <= cze2de2 ;


`endif



`ifdef X4
         dm690ef <= cze2de2 ;         cb74b2 <= vvd2cab ;         if(dm7c5bc)            crc_reg64 <= 32'hFFFF_FFFF ;         else if(tw30b48)             crc_reg64 <= vk3a595 ;



`endif
   end
end


`ifdef X4
            always @* begin   zm9655f = mtb4467;   ir957d2 = {          zm9655f[56], zm9655f[57], zm9655f[58], zm9655f[59], zm9655f[60], zm9655f[61], zm9655f[62], zm9655f[63],          zm9655f[48], zm9655f[49], zm9655f[50], zm9655f[51], zm9655f[52], zm9655f[53], zm9655f[54], zm9655f[55],          zm9655f[40], zm9655f[41], zm9655f[42], zm9655f[43], zm9655f[44], zm9655f[45], zm9655f[46], zm9655f[47],          zm9655f[32], zm9655f[33], zm9655f[34], zm9655f[35], zm9655f[36], zm9655f[37], zm9655f[38], zm9655f[39],          zm9655f[24], zm9655f[25], zm9655f[26], zm9655f[27], zm9655f[28], zm9655f[29], zm9655f[30], zm9655f[31],          zm9655f[16], zm9655f[17], zm9655f[18], zm9655f[19], zm9655f[20], zm9655f[21], zm9655f[22], zm9655f[23],          zm9655f[8], zm9655f[9], zm9655f[10], zm9655f[11], zm9655f[12], zm9655f[13], zm9655f[14], zm9655f[15],          zm9655f[0], zm9655f[1], zm9655f[2], zm9655f[3], zm9655f[4], zm9655f[5], zm9655f[6], zm9655f[7]         } ;   bab2afa = crc_reg64;   vk3a595[0] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^                  ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[37] ^ ir957d2[34] ^                  ir957d2[32] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[25] ^                  ir957d2[24] ^ ir957d2[16] ^ ir957d2[12] ^ ir957d2[10] ^ ir957d2[9] ^ ir957d2[6] ^ ir957d2[0] ^                  bab2afa[0] ^ bab2afa[2] ^ bab2afa[5] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^ bab2afa[16] ^                  bab2afa[18] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^                  bab2afa[31];   vk3a595[1] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[53] ^                  ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[38] ^                  ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[24] ^                  ir957d2[17] ^ ir957d2[16] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[7] ^                  ir957d2[6] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[6] ^                  bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[21] ^                  bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[28] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[2] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[44] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[37] ^ ir957d2[36] ^ ir957d2[35] ^ ir957d2[32] ^                  ir957d2[31] ^ ir957d2[30] ^ ir957d2[26] ^ ir957d2[24] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[16] ^                  ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[2] ^                  ir957d2[1] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[7] ^                  bab2afa[12] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^                  bab2afa[27];   vk3a595[3] = ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[52] ^                  ir957d2[45] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[37] ^ ir957d2[36] ^ ir957d2[33] ^                  ir957d2[32] ^ ir957d2[31] ^ ir957d2[27] ^ ir957d2[25] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[17] ^                  ir957d2[15] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[3] ^                  ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[7] ^                  bab2afa[8] ^ bab2afa[13] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[26] ^                  bab2afa[27] ^ bab2afa[28];   vk3a595[4] = ir957d2[63] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^                  ir957d2[46] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[41] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[38] ^                  ir957d2[33] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[25] ^ ir957d2[24] ^ ir957d2[20] ^                  ir957d2[19] ^ ir957d2[18] ^ ir957d2[15] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[6] ^                  ir957d2[4] ^ ir957d2[3] ^ ir957d2[2] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[8] ^                  bab2afa[9] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[16] ^ bab2afa[18] ^                  bab2afa[25] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[31];   vk3a595[5] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[49] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^ ir957d2[40] ^                  ir957d2[39] ^ ir957d2[37] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[20] ^                  ir957d2[19] ^ ir957d2[13] ^ ir957d2[10] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^ ir957d2[4] ^                  ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[10] ^                  bab2afa[12] ^ bab2afa[14] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[21] ^ bab2afa[22] ^                  bab2afa[23] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[6] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[41] ^ ir957d2[40] ^                  ir957d2[38] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[25] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[20] ^                  ir957d2[14] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^ ir957d2[4] ^                  ir957d2[2] ^ ir957d2[1] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[11] ^                  bab2afa[13] ^ bab2afa[15] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[23] ^                  bab2afa[24] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[7] = ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[41] ^                  ir957d2[39] ^ ir957d2[37] ^ ir957d2[34] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[25] ^                  ir957d2[24] ^ ir957d2[23] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[10] ^                  ir957d2[8] ^ ir957d2[7] ^ ir957d2[5] ^ ir957d2[3] ^ ir957d2[2] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[2] ^                  bab2afa[5] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^                  bab2afa[15] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[25] ^                  bab2afa[26] ^ bab2afa[28];   vk3a595[8] = ir957d2[63] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[40] ^ ir957d2[38] ^                  ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^                  ir957d2[23] ^ ir957d2[22] ^ ir957d2[17] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[10] ^ ir957d2[8] ^                  ir957d2[4] ^ ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^                  bab2afa[5] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^                  bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[28] ^                  bab2afa[31];   vk3a595[9] = ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[55] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^ ir957d2[39] ^ ir957d2[38] ^                  ir957d2[36] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33]
 ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[24] ^                  ir957d2[23] ^ ir957d2[18] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[5] ^                  ir957d2[4] ^ ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^                  bab2afa[6] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^                  bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29];   vk3a595[10] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^                   ir957d2[52] ^ ir957d2[50] ^ ir957d2[42] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[36] ^ ir957d2[35] ^                   ir957d2[33] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[19] ^                   ir957d2[16] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[5] ^ ir957d2[3] ^ ir957d2[2] ^                   ir957d2[0] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[10] ^                   bab2afa[18] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[28] ^                   bab2afa[30] ^ bab2afa[31];   vk3a595[11] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[51] ^                   ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^                   ir957d2[40] ^ ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^                   ir957d2[25] ^ ir957d2[24] ^ ir957d2[20] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[14] ^                   ir957d2[12] ^ ir957d2[9] ^ ir957d2[4] ^ ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[4] ^                   bab2afa[8] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^ bab2afa[16] ^                   bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[25] ^ bab2afa[26] ^                   bab2afa[27];   vk3a595[12] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[53] ^                   ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[42] ^                   ir957d2[41] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[18] ^                   ir957d2[17] ^ ir957d2[15] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[9] ^ ir957d2[6] ^ ir957d2[5] ^                   ir957d2[4] ^ ir957d2[2] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[14] ^                   bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^                   bab2afa[24] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[13] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^                   ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[43] ^ ir957d2[42] ^                   ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[25] ^ ir957d2[22] ^ ir957d2[19] ^ ir957d2[18] ^                   ir957d2[16] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[10] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^                   ir957d2[3] ^ ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^                   bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[14] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[44] ^ ir957d2[43] ^                   ir957d2[33] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[26] ^ ir957d2[23] ^ ir957d2[20] ^ ir957d2[19] ^                   ir957d2[17] ^ ir957d2[15] ^ ir957d2[14] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^                   ir957d2[4] ^ ir957d2[3] ^ ir957d2[2] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[11] ^ bab2afa[12] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^                   bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[15] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[53] ^ ir957d2[52] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[34] ^                   ir957d2[33] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[18] ^                   ir957d2[16] ^ ir957d2[15] ^ ir957d2[12] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[5] ^                   ir957d2[4] ^ ir957d2[3] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[17] ^                   bab2afa[18] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[16] = ir957d2[57] ^ ir957d2[56] ^ ir957d2[51] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^                   ir957d2[37] ^ ir957d2[35] ^ ir957d2[32] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[26] ^ ir957d2[24] ^                   ir957d2[22] ^ ir957d2[21] ^ ir957d2[19] ^ ir957d2[17] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[8] ^                   ir957d2[5] ^ ir957d2[4] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[12] ^ bab2afa[14] ^                   bab2afa[15] ^ bab2afa[16] ^ bab2afa[19] ^ bab2afa[24] ^ bab2afa[25];   vk3a595[17] = ir957d2[58] ^ ir957d2[57] ^ ir957d2[52] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^                   ir957d2[38] ^ ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[25] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[18] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^                   ir957d2[6] ^ ir957d2[5] ^ ir957d2[1] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[6] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[20] ^ bab2afa[25] ^ bab2afa[26];   vk3a595[18] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[53] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[46] ^                   ir957d2[39] ^ ir957d2[37] ^ ir957d2[34] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[26] ^                   ir957d2[24] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[19] ^ ir957d2[15] ^ ir957d2[14] ^ ir957d2[10] ^                   ir957d2[7] ^ ir957d2[6] ^ ir957d2[2] ^ bab2afa[0] ^ bab2afa[2] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[14] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[21] ^ bab2afa[26] ^ bab2afa[27];   vk3a595[19] = ir957d2[60] ^ ir957d2[59] ^ ir957d2[54] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^                   ir957d2[40] ^ ir957d2[38] ^ ir957d2[35] ^ ir957d2[33] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[27] ^                   ir957d2[25] ^ ir957d2[24] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[11] ^                   ir957d2[8] ^ ir957d2[7] ^ ir957d2[3] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[3] ^ bab2afa[6] ^ bab2afa[8] ^                   bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[27] ^ bab2afa[28];   vk3a595[20] = ir957d2[61] ^ ir957d2[60] ^ ir957d2[55] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[48] ^                   ir957d2[41] ^ ir957d2[39] ^ ir957d2[36] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[30] ^ ir957d2[28] ^                   ir957d2[26] ^ ir957d2[25] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[12] ^                   ir957d2[9] ^ ir957d2[8] ^ ir957d2[4] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[4] ^ bab2afa[7] ^ bab2afa[9] ^                   bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[28] ^ bab2afa[29];   vk3a595[21] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[56] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[49] ^                   ir957d2[42] ^ ir957d2[40] ^ ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] 
^ ir957d2[31] ^ ir957d2[29] ^                   ir957d2[27] ^ ir957d2[26] ^ ir957d2[24] ^ ir957d2[22] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[13] ^                   ir957d2[10] ^ ir957d2[9] ^ ir957d2[5] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[8] ^ bab2afa[10] ^                   bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[24] ^ bab2afa[29] ^ bab2afa[30];   vk3a595[22] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[52] ^                   ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^ ir957d2[38] ^                   ir957d2[37] ^ ir957d2[36] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[27] ^                   ir957d2[26] ^ ir957d2[24] ^ ir957d2[23] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[16] ^ ir957d2[14] ^                   ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[0] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^                   bab2afa[5] ^ bab2afa[6] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^                   bab2afa[30];   vk3a595[23] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[50] ^                   ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[42] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[36] ^                   ir957d2[35] ^ ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[20] ^                   ir957d2[19] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[6] ^                   ir957d2[1] ^ ir957d2[0] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[10] ^                   bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[24] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[51] ^                   ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[43] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[37] ^                   ir957d2[36] ^ ir957d2[35] ^ ir957d2[32] ^ ir957d2[30] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[21] ^                   ir957d2[20] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[7] ^                   ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[8] ^                   bab2afa[11] ^ bab2afa[15] ^ bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[25] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[25] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[52] ^ ir957d2[51] ^                   ir957d2[49] ^ ir957d2[48] ^ ir957d2[44] ^ ir957d2[41] ^ ir957d2[40] ^ ir957d2[38] ^ ir957d2[37] ^                   ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[22] ^ ir957d2[21] ^                   ir957d2[19] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[15] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[3] ^                   ir957d2[2] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[12] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[24] ^ bab2afa[25] ^ bab2afa[26] ^                   bab2afa[29] ^ bab2afa[30];   vk3a595[26] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[52] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^                   ir957d2[39] ^ ir957d2[38] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[25] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[10] ^ ir957d2[6] ^                   ir957d2[4] ^ ir957d2[3] ^ ir957d2[0] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[12] ^                   bab2afa[15] ^ bab2afa[16] ^ bab2afa[17] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[30];   vk3a595[27] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^                   ir957d2[53] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^                   ir957d2[40] ^ ir957d2[39] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[24] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[19] ^ ir957d2[11] ^ ir957d2[7] ^                   ir957d2[5] ^ ir957d2[4] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[10] ^ bab2afa[11] ^                   bab2afa[13] ^ bab2afa[16] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[28] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^                   ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^                   ir957d2[40] ^ ir957d2[33] ^ ir957d2[30] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[24] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[12] ^ ir957d2[8] ^ ir957d2[6] ^                   ir957d2[5] ^ ir957d2[2] ^ bab2afa[1] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^                   bab2afa[14] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[29] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[29] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[52] ^                   ir957d2[51] ^ ir957d2[50] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^                   ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[7] ^ ir957d2[6] ^                   ir957d2[3] ^ bab2afa[2] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^                   bab2afa[30] ^ bab2afa[31];   vk3a595[30] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[53] ^ ir957d2[52] ^                   ir957d2[51] ^ ir957d2[48] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[35] ^                   ir957d2[32] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[4] ^                   bab2afa[0] ^ bab2afa[3] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^ bab2afa[16] ^                   bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[29] ^                   bab2afa[31];   vk3a595[31] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[52] ^                   ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[36] ^ ir957d2[33] ^                   ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[25] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[15] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[5] ^ bab2afa[1] ^                   bab2afa[4] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[20] ^                   bab2afa[21] ^ bab2afa[22] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   end            always @* begin   anabe95 = mtb4467[63:16];   uifa56e = {          anabe95[40], anabe95[41], anabe95[42], anabe95[43], anabe95[44], anabe95[45], anabe95[46], anabe95[47],          anabe95[32], anabe95[33], anabe95[34], anabe95[35], 
anabe95[36], anabe95[37], anabe95[38], anabe95[39],          anabe95[24], anabe95[25], anabe95[26], anabe95[27], anabe95[28], anabe95[29], anabe95[30], anabe95[31],          anabe95[16], anabe95[17], anabe95[18], anabe95[19], anabe95[20], anabe95[21], anabe95[22], anabe95[23],          anabe95[8], anabe95[9], anabe95[10], anabe95[11], anabe95[12], anabe95[13], anabe95[14], anabe95[15],          anabe95[0], anabe95[1], anabe95[2], anabe95[3], anabe95[4], anabe95[5], anabe95[6], anabe95[7]         } ;   bl5f4ad = crc_reg64;   vvd2cab[0] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[31] ^                uifa56e[30] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[16] ^                uifa56e[12] ^ uifa56e[10] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[8] ^                bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[16] ^                bl5f4ad[18] ^ bl5f4ad[21] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[1] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[34] ^                uifa56e[33] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[24] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[13] ^                uifa56e[12] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[1] ^ uifa56e[0] ^                bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[8] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[17] ^ bl5f4ad[18] ^                bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[2] = uifa56e[44] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[35] ^ uifa56e[32] ^                uifa56e[31] ^ uifa56e[30] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[16] ^                uifa56e[14] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[2] ^                uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[14] ^                bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[23] ^                bl5f4ad[28];   vvd2cab[3] = uifa56e[45] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[33] ^                uifa56e[32] ^ uifa56e[31] ^ uifa56e[27] ^ uifa56e[25] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[17] ^                uifa56e[15] ^ uifa56e[14] ^ uifa56e[10] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[3] ^                uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[15] ^                bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[24] ^                bl5f4ad[29];   vvd2cab[4] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[39] ^                uifa56e[38] ^ uifa56e[33] ^ uifa56e[31] ^ uifa56e[30] ^ uifa56e[29] ^ uifa56e[25] ^ uifa56e[24] ^                uifa56e[20] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[15] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[8] ^                uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[4] ^                bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[22] ^                bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[5] = uifa56e[46] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[37] ^                uifa56e[29] ^ uifa56e[28] ^ uifa56e[24] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[19] ^ uifa56e[13] ^                uifa56e[10] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^                bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[21] ^                bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^ bl5f4ad[30];   vvd2cab[6] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[38] ^                uifa56e[30] ^ uifa56e[29] ^ uifa56e[25] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[14] ^                uifa56e[11] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^                bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[9] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[22] ^                bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[7] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[39] ^                uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[25] ^ uifa56e[24] ^                uifa56e[23] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[10] ^ uifa56e[8] ^                uifa56e[7] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[5] ^ bl5f4ad[6] ^                bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[18] ^                bl5f4ad[21] ^ bl5f4ad[23] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30] ^                bl5f4ad[31];   vvd2cab[8] = uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[37] ^                uifa56e[35] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[23] ^                uifa56e[22] ^ uifa56e[17] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[10] ^ uifa56e[8] ^ uifa56e[4] ^                uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[1] ^ bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[12] ^ bl5f4ad[15] ^                bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[24] ^                bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30];   vvd2cab[9] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[39] ^ uifa56e[38] ^                uifa56e[36] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[24] ^                uifa56e[23] ^ uifa56e[18] ^ uifa56e[13] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[5] ^                uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[2] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[13] ^ bl5f4ad[16] ^                bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[25] ^                bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[10] = uifa56e[42] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[36] ^ uifa56e[35] ^ uifa56e[33] ^ uifa56e[32] ^                 uifa56e[31] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[26] ^ uifa56e[19] ^ uifa56e[16] ^ uifa56e[14] ^                 uifa56e[13] ^ uifa56e[9] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[3] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[19] ^                 bl5f4ad[20] ^ bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[26];   vvd2cab[11] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[36] ^                 uifa56e[33] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^                 uifa56e[20] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[14] ^ uifa56e[12] ^ uifa56e[9] ^                 uifa56e[4] ^ uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[4] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[20] ^                 bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[12] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[31] ^ uifa56e[30] ^ uifa56e[27] ^                 uifa56e[24] ^ uifa56e[21] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[15] ^ uifa56e[13] ^ uifa56e[12] ^                 uifa56e[9] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[1] ^                 bl5f4ad[2] ^ bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[11] ^
 bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[25] ^                 bl5f4ad[26] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[13] = uifa56e[47] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[25] ^                 uifa56e[22] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[13] ^ uifa56e[10] ^                 uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[0] ^ bl5f4ad[2] ^                 bl5f4ad[3] ^ bl5f4ad[6] ^ bl5f4ad[9] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[26] ^                 bl5f4ad[27] ^ bl5f4ad[31];   vvd2cab[14] = uifa56e[44] ^ uifa56e[43] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[26] ^ uifa56e[23] ^                 uifa56e[20] ^ uifa56e[19] ^ uifa56e[17] ^ uifa56e[15] ^ uifa56e[14] ^ uifa56e[11] ^ uifa56e[8] ^                 uifa56e[7] ^ uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[2] ^ bl5f4ad[1] ^ bl5f4ad[3] ^ bl5f4ad[4] ^                 bl5f4ad[7] ^ bl5f4ad[10] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[27] ^ bl5f4ad[28];   vvd2cab[15] = uifa56e[45] ^ uifa56e[44] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[30] ^ uifa56e[27] ^ uifa56e[24] ^                 uifa56e[21] ^ uifa56e[20] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[12] ^ uifa56e[9] ^                 uifa56e[8] ^ uifa56e[7] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[3] ^ bl5f4ad[0] ^ bl5f4ad[2] ^ bl5f4ad[4] ^                 bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[11] ^ bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[28] ^                 bl5f4ad[29];   vvd2cab[16] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[32] ^ uifa56e[30] ^                 uifa56e[29] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[17] ^                 uifa56e[13] ^ uifa56e[12] ^ uifa56e[8] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[0] ^ bl5f4ad[1] ^                 bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[13] ^ bl5f4ad[14] ^                 bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[17] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[38] ^ uifa56e[36] ^ uifa56e[33] ^ uifa56e[31] ^ uifa56e[30] ^                 uifa56e[27] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[22] ^ uifa56e[20] ^ uifa56e[18] ^ uifa56e[14] ^                 uifa56e[13] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[1] ^ bl5f4ad[2] ^ bl5f4ad[4] ^ bl5f4ad[6] ^                 bl5f4ad[7] ^ bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[20] ^                 bl5f4ad[22] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[18] = uifa56e[46] ^ uifa56e[39] ^ uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^                 uifa56e[26] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[15] ^ uifa56e[14] ^                 uifa56e[10] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[2] ^ bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[18] ^ bl5f4ad[21] ^ bl5f4ad[23] ^                 bl5f4ad[30];   vvd2cab[19] = uifa56e[47] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[35] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[20] ^ uifa56e[16] ^ uifa56e[15] ^                 uifa56e[11] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[3] ^ bl5f4ad[0] ^ bl5f4ad[4] ^ bl5f4ad[6] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[19] ^ bl5f4ad[22] ^                 bl5f4ad[24] ^ bl5f4ad[31];   vvd2cab[20] = uifa56e[41] ^ uifa56e[39] ^ uifa56e[36] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[30] ^ uifa56e[28] ^                 uifa56e[26] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[12] ^                 uifa56e[9] ^ uifa56e[8] ^ uifa56e[4] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[9] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[20] ^ bl5f4ad[23] ^                 bl5f4ad[25];   vvd2cab[21] = uifa56e[42] ^ uifa56e[40] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[13] ^                 uifa56e[10] ^ uifa56e[9] ^ uifa56e[5] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[10] ^                 bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[24] ^                 bl5f4ad[26];   vvd2cab[22] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[38] ^ uifa56e[37] ^                 uifa56e[36] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^ uifa56e[27] ^ uifa56e[26] ^                 uifa56e[24] ^ uifa56e[23] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[12] ^                 uifa56e[11] ^ uifa56e[9] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^                 bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[23] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[42] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[36] ^ uifa56e[35] ^                 uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[20] ^ uifa56e[19] ^                 uifa56e[17] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[1] ^                 uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[10] ^ bl5f4ad[11] ^                 bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[22] ^ bl5f4ad[23] ^                 bl5f4ad[26] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[24] = uifa56e[47] ^ uifa56e[43] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[35] ^                 uifa56e[32] ^ uifa56e[30] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[18] ^                 uifa56e[17] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[10] ^ uifa56e[7] ^ uifa56e[2] ^ uifa56e[1] ^                 bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[11] ^ bl5f4ad[12] ^                 bl5f4ad[14] ^ bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[23] ^ bl5f4ad[24] ^                 bl5f4ad[27] ^ bl5f4ad[31];   vvd2cab[25] = uifa56e[44] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[33] ^                 uifa56e[31] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[18] ^                 uifa56e[17] ^ uifa56e[15] ^ uifa56e[11] ^ uifa56e[8] ^ uifa56e[3] ^ uifa56e[2] ^ bl5f4ad[1] ^                 bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[15] ^                 bl5f4ad[17] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[28];   vvd2cab[26] = uifa56e[47] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[31] ^                 uifa56e[28] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[22] ^ uifa56e[20] ^                 uifa56e[19] ^ uifa56e[18] ^ uifa56e[10] ^ uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[0] ^                 bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^                 bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^                 bl5f4ad[31];   vvd2cab[27] = uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[32] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[20] ^                 uifa56e[19] ^ uifa56e[11] ^ uifa56e[7] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[1] ^ bl5f4ad[3] ^                 bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^                 bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[23] ^ bl5f4ad[24] ^ 
bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29];   vvd2cab[28] = uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[33] ^ uifa56e[30] ^                 uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[21] ^                 uifa56e[20] ^ uifa56e[12] ^ uifa56e[8] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[2] ^ bl5f4ad[4] ^                 bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^                 bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30];   vvd2cab[29] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[34] ^ uifa56e[31] ^                 uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[22] ^                 uifa56e[21] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[3] ^ bl5f4ad[5] ^                 bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^                 bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[30] = uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[35] ^ uifa56e[32] ^ uifa56e[30] ^                 uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[22] ^                 uifa56e[14] ^ uifa56e[10] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[4] ^ bl5f4ad[6] ^ bl5f4ad[7] ^                 bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[16] ^                 bl5f4ad[19] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30];   vvd2cab[31] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[36] ^ uifa56e[33] ^ uifa56e[31] ^                 uifa56e[30] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^                 uifa56e[15] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^                 bl5f4ad[20] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   end

`endif





always @* begin


`ifdef X1
      go43bda = mtb4467;      yz1ded0 = dm690ef;


`endif



`ifdef X4
      go43bda = mtb4467[63:48];      yz1ded0 = crc_reg64;


`endif
   wwef684 = {          nt16f15[8], nt16f15[9], nt16f15[10], nt16f15[11], nt16f15[12], nt16f15[13], nt16f15[14], nt16f15[15],          nt16f15[0], nt16f15[1], nt16f15[2], nt16f15[3], nt16f15[4], nt16f15[5], nt16f15[6], nt16f15[7]         } ;   xw4877b[0] = ymbc57a[12] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[22] ^                ngb78af[25] ^ ngb78af[26] ^ ngb78af[28];   xw4877b[1] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[1] ^                ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[22] ^ ngb78af[23] ^ ngb78af[25] ^ ngb78af[27] ^                ngb78af[28] ^ ngb78af[29];   xw4877b[2] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[2] ^                ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[22] ^ ngb78af[23] ^                ngb78af[24] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[3] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[3] ^                ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[23] ^ ngb78af[24] ^                ngb78af[25] ^ ngb78af[26] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[4] = ymbc57a[15] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[6] ^ ymbc57a[4] ^ ymbc57a[3] ^                ymbc57a[2] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^                ngb78af[24] ^ ngb78af[27] ^ ngb78af[28] ^ ngb78af[31];   xw4877b[5] = ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[3] ^                ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[21] ^                ngb78af[22] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[29];   xw4877b[6] = ymbc57a[14] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^                ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[22] ^                ngb78af[23] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[30];   xw4877b[7] = ymbc57a[15] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[3] ^ ymbc57a[2] ^                ymbc57a[0] ^ ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[24] ^                ngb78af[26] ^ ngb78af[31];   xw4877b[8] = ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[1] ^                ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[24] ^ ngb78af[26] ^                ngb78af[27] ^ ngb78af[28];   xw4877b[9] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[2] ^                ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[25] ^ ngb78af[27] ^                ngb78af[28] ^ ngb78af[29];   xw4877b[10] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[5] ^ ymbc57a[3] ^ ymbc57a[2] ^ ymbc57a[0] ^                 ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[11] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[1] ^                 ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[25] ^ ngb78af[28] ^                 ngb78af[30] ^ ngb78af[31];   xw4877b[12] = ymbc57a[15] ^ ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^                 ymbc57a[2] ^ ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^                 ngb78af[21] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[28] ^ ngb78af[29] ^ ngb78af[31];   xw4877b[13] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[3] ^                 ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[22] ^                 ngb78af[23] ^ ngb78af[26] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[14] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[4] ^                 ymbc57a[3] ^ ymbc57a[2] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^ ngb78af[23] ^                 ngb78af[24] ^ ngb78af[27] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[15] = ymbc57a[15] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[4] ^                 ymbc57a[3] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[24] ^ ngb78af[25] ^                 ngb78af[28] ^ ngb78af[31];   xw4877b[16] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[8] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[0] ^ ngb78af[0] ^                 ngb78af[16] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[24] ^ ngb78af[28] ^ ngb78af[29];   xw4877b[17] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[1] ^ ngb78af[1] ^                ngb78af[17] ^ ngb78af[21] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[18] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[2] ^ ngb78af[2] ^                 ngb78af[18] ^ ngb78af[22] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[19] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[3] ^ ngb78af[3] ^ ngb78af[19] ^                 ngb78af[23] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[31];   xw4877b[20] = ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[4] ^ ngb78af[4] ^ ngb78af[20] ^ ngb78af[24] ^                 ngb78af[25] ^ ngb78af[28];   xw4877b[21] = ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[5] ^ ngb78af[5] ^ ngb78af[21] ^ ngb78af[25] ^                 ngb78af[26] ^ ngb78af[29];   xw4877b[22] = ymbc57a[14] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[0] ^ ngb78af[6] ^ ngb78af[16] ^                 ngb78af[25] ^ ngb78af[27] ^ ngb78af[28] ^ ngb78af[30];   xw4877b[23] = ymbc57a[15] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[7] ^                 ngb78af[16] ^ ngb78af[17] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[31];   xw4877b[24] = ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[8] ^ ngb78af[17] ^                 ngb78af[18] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[30];   xw4877b[25] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[3] ^ ymbc57a[2] ^ ngb78af[9] ^ ngb78af[18] ^                 ngb78af[19] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[31];   xw4877b[26] = ymbc57a[10] ^ ymbc57a[6] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[0] ^ ngb78af[10] ^ ngb78af[16] ^                 ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^ ngb78af[26];   xw4877b[27] = ymbc57a[11] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[1] ^ ngb78af[11] ^ ngb78af[17] ^                 ngb78af[20] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[27];   xw4877b[28] = ymbc57a[12] ^ ymbc57a[8] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[2] ^ ngb78af[12] ^ ngb78af[18] ^                 ngb78af[21] ^ ngb78af[22] ^ ngb78af[24] ^ ngb78af[28];   xw4877b[29] = ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[3] ^ ngb78af[13] ^ ngb78af[19] ^                 ngb78af[22] ^ ngb78af[23] ^ ngb78af[25] ^ ngb78af[29];   xw4877b[30] = ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[4] ^ ngb78af[14] ^ ngb78af[20] ^                 ngb78af[23] ^ ngb78af[24] ^ ngb78af[26] ^ ngb78af[30];   xw4877b[31] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[5] ^ ngb78af[15] ^ ngb78af[21] ^                 ngb78af[24] ^ ngb78af[25] ^ ngb78af[27] ^ ngb78af[31];
end




assign rt7b420 = { ~dm690ef[24], ~dm690ef[25], ~dm690ef[26], ~dm690ef[27],                        ~dm690ef[28], ~dm690ef[29], ~dm690ef[30], ~dm690ef[31] } ;
assign neda107 = { ~dm690ef[16], ~dm690ef[17], ~dm690ef[18], ~dm690ef[19],                        ~dm690ef[20], ~dm690ef[21], ~dm690ef[22], ~dm690ef[23] } ;
assign ned083a = { ~dm690ef[8], ~dm690ef[9], ~dm690ef[10], ~dm690ef[11],                        ~dm690ef[12], ~dm690ef[13], ~dm690ef[14], ~dm690ef[15] } ;
assign lf841d2 = { ~dm690ef[0], ~dm690ef[1], ~dm690ef[2], ~dm690ef[3],                        ~dm690ef[4], ~dm690ef[5], ~dm690ef[6], ~dm690ef[7] } ;



`ifdef X4
   assign nrd2b71 = { ~cb74b2[24], ~cb74b2[25], ~cb74b2[26], ~cb74b2[27],                           ~cb74b2[28], ~cb74b2[29], ~cb74b2[30], ~cb74b2[31] } ;   assign oh95b8f = { ~cb74b2[16], ~cb74b2[17], ~cb74b2[18], ~cb74b2[19],                           ~cb74b2[20], ~cb74b2[21], ~cb74b2[22], ~cb74b2[23] } ;   assign riadc7c = { ~cb74b2[8], ~cb74b2[9], ~cb74b2[10], ~cb74b2[11],                           ~cb74b2[12], ~cb74b2[13], ~cb74b2[14], ~cb74b2[15] } ;   assign dz6e3e2 = { ~cb74b2[0], ~cb74b2[1], ~cb74b2[2], ~cb74b2[3],                           ~cb74b2[4], ~cb74b2[5], ~cb74b2[6], ~cb74b2[7] } ;


`endif


assign hd2d21d = {ofe2bd0, co15e85, bnaf428, en7a146} ;

`ifdef X4
   assign an85a43 = {nrd2b71, oh95b8f, riadc7c, dz6e3e2} ;

`endif


always@* begin mtb4467<={data_in>>1,xjc2975[0]};dm7c5bc<=xjc2975[1];cze2de2<={xw4877b>>1,xjc2975[2]};nt16f15<={go43bda>>1,xjc2975[3]};ngb78af<={yz1ded0>>1,xjc2975[4]};ymbc57a<={wwef684>>1,xjc2975[5]};ofe2bd0<={rt7b420>>1,xjc2975[6]};co15e85<={neda107>>1,xjc2975[7]};bnaf428<={ned083a>>1,xjc2975[8]};en7a146<={lf841d2>>1,xjc2975[9]};end
always@* begin ux1852e[2047]<=ksa6169;ux1852e[2046]<=xw4877b[0];ux1852e[2044]<=go43bda[0];ux1852e[2041]<=yz1ded0[0];ux1852e[2035]<=wwef684[0];ux1852e[2022]<=rt7b420[0];ux1852e[1996]<=neda107[0];ux1852e[1945]<=ned083a[0];ux1852e[1842]<=lf841d2[0];ux1852e[1023]<=data_in[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule








































`timescale 1 ns / 100 ps
module pcie_x1_top_rxtp_x1(
   input wire              sys_clk ,    
   input wire              rst_n ,      

   input wire             tlp_debug,    
   input wire             dl_up,        
   input wire             phy_l0,       

   input wire [15:0]      dfrm_tdata,   
   input wire             dfrm_tval,    
   input wire             dfrm_st,      
   input wire             dfrm_end,     
   input wire             dfrm_edb,     

   output wire [15:0]     rxtp_data,     
   output wire            rxtp_st,       
   output reg             rxtp_end,      
   output wire [11:0]     rxtp_seq,      
   output wire            rxtp_bad_tlp,  
   output reg             rxtp_ack,      
   output reg             rxtp_nak,      
   output reg             rxtp_duptlp      ) ;

`ifdef MAX_TLP_512
localparam TLP_MEM_DEPTH   = 1024;
localparam tj28d51  = 10 ;

`endif

`ifdef MAX_TLP_1K
localparam TLP_MEM_DEPTH   = 1024;
localparam tj28d51  = 10 ;

`endif

`ifdef MAX_TLP_2K
localparam TLP_MEM_DEPTH   = 2048;
localparam tj28d51  = 11 ;

`endif

`ifdef MAX_TLP_4K
localparam TLP_MEM_DEPTH   = 3072;
localparam tj28d51  = 12 ;

`endif
parameter RXTP_IDLE = 2'b00;
parameter RXTP_PKT  = 2'b01;
parameter RXTP_ERR  = 2'b11;
reg  [15:0]            ksf33a;
reg  [15:0]            lq799d1;
reg  [15:0]            shcce8b;
reg                    ww6745d;
reg                    ls3a2e8;
reg                    qgd1743;
reg                    nt8ba19;
reg                    fa5d0ce;
reg                    gbe8673;
reg  [11:0]            ui4339d;
reg                    lf19ce9;
reg                    wwce74e;
reg                    dm73a71;
reg                    wy9d38a;
reg  [11:0]            nre9c51;
reg                    wj4e28e;
reg                    fn71475;
reg                    oh8a3ae;
reg                    sh51d75;
reg  [1:0]             zz8ebac;
reg                    yx75d66;
reg                    ohaeb35;
reg                    ip759ad;
reg                    ouacd6d;
reg                    dm66b68;
reg                    tw35b43;
reg                    zmada1b;
reg [tj28d51-1:0] qg686d1;
reg [tj28d51-1:0] zm1b449;
reg                    fada24a;
reg                    ayd1252;
reg                    ng89291;
reg [tj28d51-1:0] nr4a450;
reg [17:0]             jc52287;
wire  [31:0]           fp9143a;
wire  [17:0]           cb8a1d7;
wire  [17:0]           bl50ebd;
wire  [11:0]           qi875ee;
wire                   do3af71;

`ifdef MAX_TLP_4K

`else

`endif

`ifdef MAX_TLP_4K

`else

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif
reg dzd7b8a;
reg lsbdc57;
reg rgee2bb;
reg [15 : 0] dz715da;
reg yz8aed6;
reg ps576b4;
reg anbb5a2;
reg hodad15;
reg [15 : 0] wjd68ab;
reg [15 : 0] irb455d;
reg [15 : 0] lsa2aec;
reg ec15763;
reg uxabb19;
reg dm5d8cd;
reg nrec66a;
reg zk63357;
reg lf19aba;
reg [11 : 0] zxcd5d6;
reg yx6aeb6;
reg jc575b5;
reg fpbadaa;
reg shd6d56;
reg [11 : 0] aab6ab5;
reg bnb55a8;
reg jraad46;
reg su56a37;
reg dbb51b9;
reg [1 : 0] xya8dce;
reg ww46e72;
reg xl37390;
reg ecb9c87;
reg mece439;
reg ay721c9;
reg ep90e49;
reg ou8724c;
reg [tj28d51 - 1 : 0] mrc930c;
reg [tj28d51 - 1 : 0] cm4c321;
reg xj61908;
reg vxc846;
reg xj64237;
reg [tj28d51 - 1 : 0] qv8df9;
reg [17 : 0] go46fcd;
reg [31 : 0] zz37e68;
reg [17 : 0] tjbf346;
reg [17 : 0] fnf9a37;
reg [11 : 0] xjcd1bf;
reg go68dfe;
reg [2047:0] ux1852e;
wire [46:0] xjc2975;

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`ifdef MAX_TLP_4K

`else

`endif

`ifdef MAX_TLP_4K

`else

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif


`ifdef X4

`endif

localparam do14bae = 47,jra5d72 = 32'hfdffd84b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`ifdef MAX_TLP_4K


`else


`endif


`ifdef MAX_TLP_4K


`else


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef X4


`endif





`ifdef MAX_TLP_512
      


`endif



`ifdef MAX_TLP_1K
      


`endif



`ifdef MAX_TLP_2K
      


`endif



`ifdef MAX_TLP_4K
      


`endif








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ksf33a  <= 16'd0;      lq799d1  <= 16'd0;      shcce8b  <= 16'd0;      ww6745d    <= 1'b0;      ls3a2e8    <= 1'b0;      qgd1743    <= 1'b0;      nt8ba19    <= 1'b0;      fa5d0ce   <= 1'b0;      gbe8673   <= 1'b0;   end   else  begin      ksf33a  <= dz715da;      lq799d1  <= wjd68ab;      shcce8b  <= irb455d;      ww6745d    <= ps576b4;      ls3a2e8    <= ec15763;      qgd1743    <= uxabb19;      nt8ba19    <= dm5d8cd;         fa5d0ce   <= anbb5a2;      gbe8673   <= hodad15;   end
end




assign qi875ee   = wjd68ab[11:0];
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lf19ce9   <= 1'b0;      wwce74e   <= 1'b0;      dm73a71  <= 1'b0;      wy9d38a   <= 1'b0;      nre9c51  <= 12'h000;      wj4e28e     <= 1'b0;      fn71475      <= 1'b0;      oh8a3ae      <= 1'b0;      sh51d75     <= 1'b0;   end   else  begin      lf19ce9   <= ({wjd68ab, dz715da} == zz37e68) ? 1'b1 : 1'b0;      wwce74e   <= ({wjd68ab, dz715da} == ~zz37e68) ? 1'b1 : 1'b0;      nre9c51  <= zxcd5d6 - xjcd1bf;      if(uxabb19) begin         dm73a71 <= (aab6ab5 == 12'h000) ? 1'b1 : 1'b0;         wy9d38a  <= (aab6ab5 <= 12'd2048) ? 1'b1 : 1'b0;      end      wj4e28e <= 1'b0;      fn71475  <= 1'b0;      oh8a3ae  <= 1'b0;      sh51d75 <= 1'b0;      if(xl37390) begin         if(zk63357) begin            if(yx6aeb6)               if(fpbadaa)                       wj4e28e <= 1'b1;               else if(shd6d56)                   oh8a3ae  <= 1'b1;               else                                  fn71475  <= 1'b1;            else                                  fn71475  <= 1'b1;         end         else if(lf19aba) begin            if(jc575b5)                        sh51d75 <= 1'b1;            else                                  fn71475  <= 1'b1;         end     end     end
end



assign rxtp_bad_tlp  = jraad46;
assign rxtp_seq      = zxcd5d6 - 12'h001;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rxtp_ack      <= 1'b0;      rxtp_duptlp   <= 1'b0;      rxtp_nak      <= 1'b0;   end   else begin      rxtp_ack      <= bnb55a8;      rxtp_duptlp   <= su56a37;      rxtp_nak      <= jraad46 | ww46e72;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zz8ebac  <= RXTP_IDLE;      yx75d66    <= 1'b0;      ohaeb35 <= 1'b0;      ouacd6d  <= 1'b0;   end   else  begin      yx75d66    <= 1'b0;      ohaeb35 <= 1'b0;      ouacd6d  <= rgee2bb;      dm66b68   <= (rgee2bb & ~mece439);      if (ay721c9) begin         zz8ebac  <= RXTP_IDLE;      end      else begin      case(xya8dce)         RXTP_IDLE : begin                                    if(lsbdc57) begin               if(anbb5a2 || hodad15) begin                  yx75d66    <= 1'b1;                  zz8ebac  <= RXTP_ERR;               end               else if(ps576b4) begin                  zz8ebac  <= RXTP_PKT;               end       else begin                  zz8ebac  <= RXTP_IDLE;                  yx75d66    <= 1'b0;               end            end    else begin               zz8ebac  <= RXTP_IDLE;               yx75d66    <= 1'b0;            end         end         RXTP_PKT : begin                                    if(ay721c9) begin               zz8ebac  <= RXTP_IDLE;               yx75d66    <= 1'b1;            end            else if(lsbdc57) begin               yx75d66 <= (ps576b4) ? 1'b1 : 1'b0;               if(anbb5a2 || hodad15) begin                  zz8ebac  <= RXTP_IDLE;                  ohaeb35 <= 1'b1;               end            end            else               zz8ebac  <= RXTP_IDLE;         end         RXTP_ERR : begin            if(ay721c9) begin               zz8ebac  <= RXTP_IDLE;               yx75d66    <= 1'b1;            end            else if(lsbdc57) begin               if(ps576b4)                  zz8ebac  <= RXTP_PKT;       else if(anbb5a2 || hodad15) begin                  zz8ebac  <= RXTP_ERR;                  yx75d66 <= 1'b1;               end       else begin                  zz8ebac  <= RXTP_IDLE;                  yx75d66 <= 1'b0;               end            end            else               zz8ebac  <= RXTP_IDLE;        end        default : begin           zz8ebac  <= RXTP_IDLE;        end      endcase      end   end
end









assign bl50ebd = {lsa2aec, nrec66a, anbb5a2};
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tw35b43          <= 1'b0;      ip759ad<= 1'b0;      zmada1b        <= 1'b0;      qg686d1   <= 0;      zm1b449 <= 0;      ui4339d    <= 12'h000;   end   else  begin      if(ww46e72 || anbb5a2 || hodad15 || !lsbdc57)         tw35b43  <= 1'b0;      else if(uxabb19)         tw35b43  <= 1'b1;      zmada1b          <= ep90e49;      ip759ad  <= xl37390;      if(!lsbdc57 || ww46e72 || (ecb9c87 && !bnb55a8))          qg686d1 <= cm4c321;      else if(ep90e49)


`ifdef MAX_TLP_4K
            qg686d1 <= (mrc930c == 12'd3071) ? 12'd0 : mrc930c + 1;


`else
            qg686d1 <= mrc930c + 1;


`endif

            if(!lsbdc57)          zm1b449 <= 0;      else if(bnb55a8)            zm1b449 <= mrc930c;            if(!lsbdc57)         ui4339d  <= 12'h000;      else if(bnb55a8)           ui4339d  <= zxcd5d6 + 12'h001 ;   end
end




assign rxtp_data      =  go46fcd[17:2];
assign rxtp_st        =  xj64237 ? go46fcd[1] : 1'b0;
assign czc3c61 = xj64237 ? go46fcd[0] : 1'b0;
assign zm8c313 = vxc846 ? tjbf346[0] : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fada24a      <= 1'b0;      ayd1252    <= 1'b0;      ng89291   <= 1'b0;      nr4a450 <= 0;      rxtp_end     <= 1'b0;      jc52287 <= 18'd0;   end   else  begin      jc52287  <= tjbf346;      fada24a    <= 1'b0;      if(!lsbdc57)         nr4a450 <= 0;      else if((qv8df9 != cm4c321) && !zm8c313) begin         fada24a      <= 1'b1;


`ifdef MAX_TLP_4K
            nr4a450 <= (qv8df9 == 12'd3071) ? 12'd0 : qv8df9 + 1;


`else
            nr4a450 <= qv8df9 + 1;


`endif
      end      rxtp_end        <= czc3c61;      ayd1252       <= xj61908;      ng89291      <= vxc846;   end
end




pmi_ram_dp #(   .pmi_wr_addr_depth    (TLP_MEM_DEPTH),   .pmi_wr_addr_width    (tj28d51),   .pmi_wr_data_width    (18),   .pmi_rd_addr_depth    (TLP_MEM_DEPTH),   .pmi_rd_addr_width    (tj28d51),   .pmi_rd_data_width    (18),   .pmi_regmode          ("noreg"),   .pmi_gsr              ("enable"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   ec87ae5 (   .Data         (bl50ebd),   .WrAddress    (qg686d1),   .RdAddress    (nr4a450),   .WrClock      (sys_clk),   .RdClock      (sys_clk),   .WrClockEn    (1'b1),   .RdClockEn    (fada24a),   .WE           (zmada1b),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            (cb8a1d7)   );



pcie_x1_top_qtd9a26 #(   .D_WIDTH       ( 16 ) )   ks8d25f(   .sys_clk       (sys_clk),   .rst_n         (rst_n),      .data_in       (wjd68ab),   .ksa6169         (ps576b4),


`ifdef X4
      .tw30b48      (),         .an85a43  (),


`endif
   .hd2d21d     (fp9143a)   ) ;
always@* begin dzd7b8a<=xjc2975[0];lsbdc57<=xjc2975[1];rgee2bb<=xjc2975[2];dz715da<={dfrm_tdata>>1,xjc2975[3]};yz8aed6<=xjc2975[4];ps576b4<=xjc2975[5];anbb5a2<=xjc2975[6];hodad15<=xjc2975[7];wjd68ab<={ksf33a>>1,xjc2975[8]};irb455d<={lq799d1>>1,xjc2975[9]};lsa2aec<={shcce8b>>1,xjc2975[10]};ec15763<=xjc2975[11];uxabb19<=xjc2975[12];dm5d8cd<=xjc2975[13];nrec66a<=xjc2975[14];zk63357<=xjc2975[15];lf19aba<=xjc2975[16];zxcd5d6<={ui4339d>>1,xjc2975[17]};yx6aeb6<=xjc2975[18];jc575b5<=xjc2975[19];fpbadaa<=xjc2975[20];shd6d56<=xjc2975[21];aab6ab5<={nre9c51>>1,xjc2975[22]};bnb55a8<=xjc2975[23];jraad46<=xjc2975[24];su56a37<=xjc2975[25];dbb51b9<=xjc2975[26];xya8dce<={zz8ebac>>1,xjc2975[27]};ww46e72<=xjc2975[28];xl37390<=xjc2975[29];ecb9c87<=xjc2975[30];mece439<=xjc2975[31];ay721c9<=xjc2975[32];ep90e49<=xjc2975[33];ou8724c<=xjc2975[34];mrc930c<={qg686d1>>1,xjc2975[35]};cm4c321<={zm1b449>>1,xjc2975[36]};xj61908<=xjc2975[37];vxc846<=xjc2975[38];xj64237<=xjc2975[39];qv8df9<={nr4a450>>1,xjc2975[40]};go46fcd<={jc52287>>1,xjc2975[41]};zz37e68<={fp9143a>>1,xjc2975[42]};tjbf346<={cb8a1d7>>1,xjc2975[43]};fnf9a37<={bl50ebd>>1,xjc2975[44]};xjcd1bf<={qi875ee>>1,xjc2975[45]};go68dfe<=xjc2975[46];end
always@* begin ux1852e[2047]<=dl_up;ux1852e[2046]<=phy_l0;ux1852e[2044]<=dfrm_tdata[0];ux1852e[2040]<=dfrm_tval;ux1852e[2033]<=dfrm_st;ux1852e[2019]<=dfrm_end;ux1852e[1999]<=qg686d1[0];ux1852e[1991]<=dfrm_edb;ux1852e[1950]<=zm1b449[0];ux1852e[1947]<=fp9143a[0];ux1852e[1934]<=ksf33a[0];ux1852e[1892]<=dm73a71;ux1852e[1852]<=fada24a;ux1852e[1851]<=fa5d0ce;ux1852e[1847]<=cb8a1d7[0];ux1852e[1820]<=lq799d1[0];ux1852e[1737]<=wy9d38a;ux1852e[1657]<=ayd1252;ux1852e[1654]<=gbe8673;ux1852e[1647]<=bl50ebd[0];ux1852e[1610]<=fn71475;ux1852e[1593]<=shcce8b[0];ux1852e[1523]<=tw35b43;ux1852e[1426]<=nre9c51[0];ux1852e[1404]<=ouacd6d;ux1852e[1267]<=ng89291;ux1852e[1260]<=ui4339d[0];ux1852e[1246]<=qi875ee[0];ux1852e[1199]<=yx75d66;ux1852e[1173]<=oh8a3ae;ux1852e[1139]<=ww6745d;ux1852e[1023]<=tlp_debug;ux1852e[999]<=zmada1b;ux1852e[973]<=jc52287[0];ux1852e[946]<=wwce74e;ux1852e[925]<=nt8ba19;ux1852e[805]<=wj4e28e;ux1852e[761]<=dm66b68;ux1852e[702]<=ip759ad;ux1852e[599]<=zz8ebac[0];ux1852e[486]<=nr4a450[0];ux1852e[473]<=lf19ce9;ux1852e[462]<=qgd1743;ux1852e[445]<=do3af71;ux1852e[351]<=ohaeb35;ux1852e[299]<=sh51d75;ux1852e[231]<=ls3a2e8;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





































































`timescale 1 ns / 100 ps
module  pcie_x1_top_pff6fd9(
   
   sys_clk,              
   rst_n,                

   nefb397,         
   
   ipd9cbb,              
   ykce5dc,               
   su72ee1,             

   
   phy_ltssm_state,      
   phy_link_up,          

   
   trnc_st,              

   
   os62849,        
   do14249,        
   mta124b,         
   coac509,        
   ng2573b,            

   
   uk2b9db,             
   cm5ced9,            
   ene76c8,        
   wy3b644,        

   
   rxtp_nak,             
   ofd9108,         

   
   
   dl_inactive,          
   dl_init,              
   dl_active,            
   dl_up,                

   
   rt45f0d,           
   ls2f86f,          
   jc7c37b,          
   xwe1bda,          
   uxded2,          

   
   vcneg_pend            
                         

   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
parameter ne4231a   = 2'b00;
parameter fc118d3  = 2'b01;
parameter xy8c69a = 2'b10;
parameter ho634d2 = 1'b0;
parameter uk1a692 = 1'b1;
parameter shd3490 = 2'b00;
parameter yz9a484     = 2'b01;
parameter zxd2424   = 2'b10;
parameter aa92126  = 3'b000;
parameter kf90930     = 3'b001;
parameter nt84984    = 3'b010;
parameter ec24c27   = 3'b011;
parameter yz26138 = 3'b100;
parameter ba309c4   = 1'b0;
parameter nt84e23   = 1'b1;
input                     sys_clk;
input                     rst_n;
input [11:0]              nefb397;
input                     ipd9cbb;
input [`NUM_VC -1:0]      ykce5dc;
input [(`NUM_VC*3)-1:0]   su72ee1;
input [MSM_WIDTH:0]       phy_ltssm_state;
input                     phy_link_up;
input [`NUM_VC -1:0]      trnc_st;
input                     os62849;
input                     do14249;
input                     mta124b;
input [1:0]               coac509;
input [2:0]               ng2573b;
input                     uk2b9db;
input                     cm5ced9;
input                     ene76c8;
input                     wy3b644;
input                     rxtp_nak;
input                     ofd9108;
output                    dl_inactive;
output                    dl_init;
output                    dl_active;
output [`NUM_VC -1:0]     dl_up;
output                    rt45f0d;
output                    ls2f86f;
output [2:0]              jc7c37b;
output                    xwe1bda;
output [1:0]              uxded2;
output [`NUM_VC -1:0]     vcneg_pend;
reg                       dl_inactive;
reg                       dl_init;
reg                       dl_active;
reg    [`NUM_VC -1:0]     dl_up;
reg                       rt45f0d;
reg                       ls2f86f;
reg    [2:0]              jc7c37b;
reg                       xwe1bda;
reg    [1:0]              uxded2;
reg    [`NUM_VC -1:0]     vcneg_pend;
reg  [1:0]                lq79e22;
reg  [2:0]                rgcf113;
reg                       os7889b;
reg                       osc44d9;
reg  [11:0]               lf226c8;
reg                       db13646;
reg                       jr9b236;
reg                       ipd91b6;
reg                       fnc8db5;
reg                       ww46daf;
reg                       wl36d78;
reg                       swb6bc4;
reg                       phb5e20;
reg                       vxaf107;
reg                       go7883e;
reg                       cmc41f1;
reg  [`NUM_VC -1:0]       ri20f88;
reg                       yz7c42;

`ifdef VC1
wire  [2:0]               ks3e214;

`else
reg   [2:0]               ks3e214;

`endif

`ifndef VC1

`ifdef VC2
reg    sw8850a;

`else

`ifdef VC3
reg  [1:0]   sw8850a;

`else

`ifdef VC4
reg  [1:0]   sw8850a;

`else   // 5 - 8
reg  [2:0]   sw8850a;

`endif

`endif

`endif

`endif
wire  [7:0]               swa09d;
wire  [2:0]               zx504e9;
wire  [2:0]               ec8274f;
wire  [2:0]               nt13a79;
wire  [2:0]               mg9d3cf;
wire  [2:0]               lde9e79;
wire  [2:0]               hb4f3ce;
wire  [2:0]               ne79e77;
wire  [2:0]               hocf3bb;
wire                      ne79ddb;
wire                      goceedb;

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifndef VC1

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif
reg [8*10:1]     ay776d8;
reg [8*10:1]     epbb6c1;
reg [8*10:1]     medb60d;
reg [11 : 0] eadb068;
reg vvd8340;
reg [`NUM_VC - 1 : 0] cmc1a07;
reg [(`NUM_VC * 3) - 1 : 0] wld039;
reg [MSM_WIDTH : 0] ld40e61;
reg qv730f;
reg [`NUM_VC - 1 : 0] ep3987d;
reg ofcc3ed;
reg pf61f6c;
reg gqfb66;
reg [1 : 0] ay7db30;
reg [2 : 0] iped981;
reg ho6cc0c;
reg zk66062;
reg je30312;
reg vx81892;
reg tjc497;
reg ay624be;
reg [1 : 0] sj125f0;
reg [2 : 0] wy92f84;
reg gq97c21;
reg kfbe109;
reg [11 : 0] icf084d;
reg rv84269;
reg gq2134e;
reg tj9a71;
reg fa4d38f;
reg tu69c7a;
reg sh4e3d2;
reg zx71e95;
reg wl8f4af;
reg en7a57d;
reg pfd2bed;
reg ep95f6f;
reg [`NUM_VC - 1 : 0] rvafb7c;
reg ea7dbe7;
reg [7 : 0] ofedf39;
reg [2 : 0] en6f9cc;
reg [2 : 0] fa7ce65;
reg [2 : 0] wje732b;
reg [2 : 0] mt3995c;
reg [2 : 0] alccae5;
reg [2 : 0] kd6572d;
reg [2 : 0] wy2b96d;
reg [2 : 0] su5cb69;
reg aye5b48;
reg tj2da40;
reg [8 * 10 : 1] qg6d206;
reg [8 * 10 : 1] xw69031;
reg [8 * 10 : 1] by4818b;
reg [2047:0] ux1852e;
wire [49:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef VC1

`else

`endif

`ifndef VC1

`ifdef VC2

`else

`ifdef VC3

`else

`ifdef VC4

`else   // 5 - 8

`endif

`endif

`endif

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifndef VC1

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

localparam do14bae = 50,jra5d72 = 32'hfdfff02b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef VC1


`else


`endif


`ifndef VC1


`ifdef VC2


`else


`ifdef VC3


`else


`ifdef VC4


`else   // 5 - 8


`endif


`endif


`endif


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1


`else


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifndef VC1


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`else


`endif


`ifdef EN_VC1


`else


`endif


`ifdef EN_VC2


`else


`endif


`ifdef EN_VC3


`else


`endif


`ifdef EN_VC4


`else


`endif


`ifdef EN_VC5


`else


`endif


`ifdef EN_VC6


`else


`endif


`ifdef EN_VC7


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif



















`ifdef VC1



`else



`endif




`ifndef VC1



`ifdef VC2



`else



`ifdef VC3



`else



`ifdef VC4



`else   // 5 - 8



`endif



`endif



`endif



`endif












always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      dl_inactive  <= 1'b0;      dl_init      <= 1'b0;      dl_active    <= 1'b0;            lq79e22    <= shd3490;   end   else begin      dl_inactive  <= 1'b0;      dl_init      <= 1'b0;      dl_active    <= 1'b0;      case(sj125f0)         shd3490 : begin            dl_inactive  <= 1'b1;                        if(vvd8340 && qv730f)               lq79e22  <= yz9a484;         end         yz9a484 : begin            dl_init    <= 1'b1;                                       if(!qv730f || !vvd8340)               lq79e22  <= shd3490;            else if(ofedf39[0] && wl8f4af)               lq79e22  <= zxd2424;         end         zxd2424 : begin                        dl_active <= 1'b1;            if(!qv730f || !vvd8340)               lq79e22  <= shd3490;         end         default : begin            lq79e22    <= shd3490;         end      endcase   end
end
















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      rgcf113   <= aa92126;      xwe1bda <= ho634d2;      rt45f0d  <= 1'b0;      ls2f86f <= 1'b0;      uxded2 <= ne4231a;      os7889b <= 1'b0;      dl_up       <= 0;   end   else begin      os7889b <= 1'b0;      case(wy92f84)         aa92126 : begin            os7889b <= 1'b1;            xwe1bda <= ho634d2;                        if(sj125f0 != zxd2424)               dl_up      <= 0;            if(pfd2bed && (sj125f0 != shd3490))               rgcf113  <= kf90930;         end         kf90930 : begin            if(dl_active & ea7dbe7) begin               rgcf113   <= yz26138;               rt45f0d  <= 1'b0;               ls2f86f <= 1'b0;            end            else if(kfbe109) begin               if(ho6cc0c) begin                  rgcf113   <= nt84984;                  rt45f0d  <= 1'b1;                  uxded2 <= ne4231a;               end            end            else if(zk66062) begin               os7889b <= 1'b1;               rgcf113   <= nt84984;               ls2f86f <= 1'b1;               uxded2 <= ne4231a;            end         end         nt84984 : begin            if(kfbe109) begin               if(je30312) begin                  rgcf113   <= ec24c27;                  uxded2 <= fc118d3;               end            end            else if(vx81892) begin               rgcf113   <= ec24c27;               uxded2 <= fc118d3;            end         end         ec24c27 : begin            if(kfbe109) begin               if(je30312) begin                  rgcf113   <= yz26138;                  uxded2 <= xy8c69a;               end            end            else if(vx81892) begin               rgcf113   <= yz26138;               uxded2 <= xy8c69a;            end         end         yz26138 : begin            if((vx81892 && !kfbe109) || (je30312 && kfbe109)) begin               rt45f0d  <= 1'b0;               ls2f86f <= 1'b0;               if(zx71e95)                   xwe1bda <= uk1a692;               if(dl_inactive)                  dl_up       <= 0;               else if(zx71e95 && !en7a57d) begin 


`ifdef VC1   //VC0 only
                     dl_up[0]      <= 1'b1;


`else
                     dl_up[sw8850a] <= 1'b1;


`endif
               end               if((wl8f4af & ea7dbe7) || dl_inactive || en7a57d)                    rgcf113   <= aa92126;               else                  rgcf113   <= kf90930;            end         end         default : begin            rgcf113   <= aa92126;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      osc44d9  <= 1'b0;      lf226c8 <= 0;   end   else begin      if(kfbe109 && je30312 && (wy92f84 == yz26138))         osc44d9  <= 1'b0;      else if(icf084d == eadb068)         osc44d9  <= 1'b1;            if(gq97c21)         lf226c8  <= 0;      else if(ld40e61 != RECOVERY)         lf226c8  <= icf084d + 1;   end
end










`ifdef VC1   //VC0 only
   assign ne79ddb = gq2134e;   assign goceedb        = gq2134e | dl_inactive;

`else
   assign ne79ddb = gq2134e | ~ofedf39[sw8850a] ;   assign goceedb        = gq2134e | dl_inactive | ~ofedf39[sw8850a];

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      db13646   <= 1'b0;      jr9b236 <= 1'b0;      ipd91b6    <= 1'b0;      fnc8db5   <= 1'b0;      ww46daf  <= 1'b0;      yz7c42   <= 1'b0;      wl36d78      <= 1'b0;   end   else begin                                                db13646  <= ep3987d[ks3e214];      if( aye5b48 )         jr9b236 <= 1'b0;               else if(wl8f4af & ea7dbe7 & ((wy92f84 == yz26138) ? 1'b1 : 1'b0))         jr9b236 <= 1'b1;      if( tj2da40 ) begin         ipd91b6   <= 1'b0;         fnc8db5  <= 1'b0;         ww46daf <= 1'b0;         yz7c42  <= 1'b0;         wl36d78     <= 1'b0;      end      else if(xwe1bda == ho634d2) begin         if((iped981 == ks3e214) && (ofcc3ed || pf61f6c)) begin            if(ay7db30 == ne4231a)               ipd91b6   <= 1'b1;            if(ay7db30 == fc118d3)               fnc8db5   <= 1'b1;            if(ay7db30 == xy8c69a)               ww46daf  <= 1'b1;         end      end      else begin          yz7c42   <= ea7dbe7 | (ls2f86f & xwe1bda);         if(((iped981 == ks3e214) && (pf61f6c || gqfb66)) || rv84269)            wl36d78  <= 1'b1;      end   end
end







`ifdef VC1
   assign ks3e214  = 3'b000;

`else
   always@(*) begin         ks3e214  = 3'b000;         case(sw8850a)            0 : ks3e214  = 3'b000;


`ifdef EN_VC1
               1 : ks3e214  = fa7ce65;


`endif



`ifdef EN_VC2
               2 : ks3e214  = wje732b;


`endif



`ifdef EN_VC3
               3 : ks3e214  = mt3995c;


`endif



`ifdef EN_VC4
               4 : ks3e214  = alccae5;


`endif



`ifdef EN_VC5
               5 : ks3e214  = kd6572d;


`endif



`ifdef EN_VC6
               6 : ks3e214  = wy2b96d;


`endif



`ifdef EN_VC7
               7 : ks3e214  = su5cb69;


`endif
         endcase   end

`endif










always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      swb6bc4  <= 1'b0;      phb5e20  <= 1'b0;


`ifndef VC1
         sw8850a           <= 0;


`endif
      go7883e        <= 1'b0;      cmc41f1         <= ba309c4;      vxaf107      <= 1'b0;   end   else begin      if(ep95f6f == nt84e23) begin         


`ifdef VC1   //VC0 only
            go7883e   <= (wl8f4af) ? 1'b0 : 1'b1;


`else
            go7883e   <= (wl8f4af || !ofedf39[sw8850a]) ? 1'b0 : 1'b1;


`endif
         if(wy92f84 == aa92126)            swb6bc4  <= 1'b0;         else if(tj9a71 && fa4d38f && tu69c7a)            swb6bc4  <= 1'b1;         if(wy92f84 == aa92126)            phb5e20  <= 1'b0;         else if(sh4e3d2)            phb5e20  <= 1'b1;      end      else if(dl_inactive) begin         swb6bc4  <= 1'b0;         phb5e20  <= 1'b0;         go7883e        <= 1'b0;      end


`ifdef VC1   //VC0 only
         vxaf107  <= 1'b0;


`else
         if(ep95f6f == nt84e23) begin            if(ofedf39[sw8850a] == 1'b0)                 vxaf107  <= 1'b1;         end         else            vxaf107  <= 1'b0;


`endif




`ifdef VC1   //VC0 only
         case(ep95f6f)            ba309c4 : begin               if(!dl_inactive && ofedf39[0] && ~rvafb7c[0])                 cmc41f1  <= nt84e23;            end            nt84e23 : begin               if((wl8f4af && (wy92f84 == aa92126)) || dl_inactive)                  cmc41f1 <= ba309c4;            end            default : begin               cmc41f1         <= ba309c4;            end         endcase


`else
                           case(ep95f6f)            ba309c4 : begin               if(!dl_inactive && ofedf39[sw8850a] && ~rvafb7c[sw8850a])                 cmc41f1  <= nt84e23;                              if(dl_inactive)                  sw8850a   <= 0;               else if((!ofedf39[sw8850a] || rvafb7c[sw8850a]) && (sw8850a != 0))                                                sw8850a   <= (sw8850a == (`NUM_VC -1)) ? 1 : (sw8850a + 1);            end            nt84e23 : begin                              if(gq2134e || (en7a57d && (wy92f84 == aa92126)))                  sw8850a   <= (sw8850a == (`NUM_VC -1)) ? 1 : (sw8850a + 1);               if(((wl8f4af || en7a57d) && (wy92f84 == aa92126)) || dl_inactive)                  cmc41f1 <= ba309c4;            end            default : begin               cmc41f1         <= ba309c4;            end         endcase


`endif
   end
end








always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      jc7c37b      <= 3'b000;      ri20f88              <= {(`NUM_VC){1'b0}};      vcneg_pend       <= {(`NUM_VC){1'b1}};   end   else begin      vcneg_pend     <= ~rvafb7c;      


`ifdef VC1   //VC0 only
         jc7c37b  <= 3'b000;


`else
         if(wy92f84 == aa92126) begin            case(sw8850a)                0 : jc7c37b    <= 3'b000;


`ifdef EN_VC1
                  1 : jc7c37b    <= 3'd1;


`endif



`ifdef EN_VC2
                  2 : jc7c37b    <= 3'd2;


`endif



`ifdef EN_VC3
                  3 : jc7c37b    <= 3'd3;


`endif



`ifdef EN_VC4
                  4 : jc7c37b    <= 3'd4;


`endif



`ifdef EN_VC5
                  5 : jc7c37b    <= 3'd5;


`endif



`ifdef EN_VC6
                  6 : jc7c37b    <= 3'd6;


`endif



`ifdef EN_VC7
                  7 : jc7c37b    <= 3'd7;


`endif
            endcase         end


`endif




`ifdef EN_VC0
                  if(dl_inactive)            ri20f88[0]  <= 1'b0;                  else if(gq2134e)            ri20f88[0] <= 1'b1;


`endif



`ifdef EN_VC1
         if(dl_inactive || !ofedf39[1])            ri20f88[1]  <= 1'b0;         else if(gq2134e && (sw8850a == 1))            ri20f88[1] <= 1'b1;


`endif



`ifdef EN_VC2
         if(dl_inactive || !ofedf39[2])            ri20f88[2]  <= 1'b0;         else if(gq2134e && (sw8850a == 2))            ri20f88[2] <= 1'b1;


`endif



`ifdef EN_VC3
         if(dl_inactive || !ofedf39[3])            ri20f88[3]  <= 1'b0;         else if(gq2134e && (sw8850a == 3))            ri20f88[3] <= 1'b1;


`endif



`ifdef EN_VC4
         if(dl_inactive || !ofedf39[4])            ri20f88[4]  <= 1'b0;         else if(gq2134e && (sw8850a == 4))            ri20f88[4] <= 1'b1;


`endif



`ifdef EN_VC5
         if(dl_inactive || !ofedf39[5])            ri20f88[5]  <= 1'b0;         else if(gq2134e && (sw8850a == 5))            ri20f88[5] <= 1'b1;


`endif



`ifdef EN_VC6
         if(dl_inactive || !ofedf39[6])            ri20f88[6]  <= 1'b0;         else if(gq2134e && (sw8850a == 6))            ri20f88[6] <= 1'b1;


`endif



`ifdef EN_VC7
         if(dl_inactive || !ofedf39[7])            ri20f88[7]  <= 1'b0;         else if(gq2134e && (sw8850a == 7))            ri20f88[7] <= 1'b1;


`endif
   end
end




`ifdef EN_VC0
   assign zx504e9    = wld039[2:0];   assign swa09d[0] = cmc1a07[0];

`else
   assign zx504e9    = 3'b000;   assign swa09d[0] = 1'b0;

`endif



`ifdef EN_VC1
   assign ec8274f    = wld039[5:3];   assign swa09d[1] = cmc1a07[1];

`else
   assign ec8274f    = 3'b000;   assign swa09d[1] = 1'b0;

`endif



`ifdef EN_VC2
   assign nt13a79    = wld039[8:6];   assign swa09d[2] = cmc1a07[2];

`else
   assign nt13a79    = 3'b000;   assign swa09d[2] = 1'b0;

`endif



`ifdef EN_VC3
   assign mg9d3cf    = wld039[11:9];   assign swa09d[3] = cmc1a07[3];

`else
   assign mg9d3cf    = 3'b000;   assign swa09d[3] = 1'b0;

`endif



`ifdef EN_VC4
   assign lde9e79    = wld039[14:12];   assign swa09d[4] = cmc1a07[4];

`else
   assign lde9e79    = 3'b000;   assign swa09d[4] = 1'b0;

`endif



`ifdef EN_VC5
   assign hb4f3ce    = wld039[17:15];   assign swa09d[5] = cmc1a07[5];

`else
   assign hb4f3ce    = 3'b000;   assign swa09d[5] = 1'b0;

`endif



`ifdef EN_VC6
   assign ne79e77    = wld039[20:18];   assign swa09d[6] = cmc1a07[6];

`else
   assign ne79e77    = 3'b000;   assign swa09d[6] = 1'b0;

`endif



`ifdef EN_VC7
   assign hocf3bb    = wld039[23:21];   assign swa09d[7] = cmc1a07[7];

`else
   assign hocf3bb    = 3'b000;   assign swa09d[7] = 1'b0;

`endif





always @(sj125f0 or wy92f84 or ep95f6f) begin   case(sj125f0)      shd3490 : ay776d8 = "INACTIVE";      yz9a484     : ay776d8 = "  INIT  ";      zxd2424   : ay776d8 = " ACTIVE ";   endcase   case(wy92f84)      aa92126  : epbb6c1 = "IDLE";      kf90930     : epbb6c1 = " P  ";      nt84984    : epbb6c1 = " NP ";      ec24c27   : epbb6c1 = " CPL";      yz26138 : epbb6c1 = "CHCK";   endcase   case(ep95f6f)      ba309c4 : medb60d = "IDLE";      nt84e23 : medb60d = "WAIT";   endcase
end

always@* begin eadb068<={nefb397>>1,xjc2975[0]};vvd8340<=xjc2975[1];cmc1a07<={ykce5dc>>1,xjc2975[2]};wld039<={su72ee1>>1,xjc2975[3]};ld40e61<={phy_ltssm_state>>1,xjc2975[4]};qv730f<=xjc2975[5];ep3987d<={trnc_st>>1,xjc2975[6]};ofcc3ed<=xjc2975[7];pf61f6c<=xjc2975[8];gqfb66<=xjc2975[9];ay7db30<={coac509>>1,xjc2975[10]};iped981<={ng2573b>>1,xjc2975[11]};ho6cc0c<=xjc2975[12];zk66062<=xjc2975[13];je30312<=xjc2975[14];vx81892<=xjc2975[15];tjc497<=xjc2975[16];ay624be<=xjc2975[17];sj125f0<={lq79e22>>1,xjc2975[18]};wy92f84<={rgcf113>>1,xjc2975[19]};gq97c21<=xjc2975[20];kfbe109<=xjc2975[21];icf084d<={lf226c8>>1,xjc2975[22]};rv84269<=xjc2975[23];gq2134e<=xjc2975[24];tj9a71<=xjc2975[25];fa4d38f<=xjc2975[26];tu69c7a<=xjc2975[27];sh4e3d2<=xjc2975[28];zx71e95<=xjc2975[29];wl8f4af<=xjc2975[30];en7a57d<=xjc2975[31];pfd2bed<=xjc2975[32];ep95f6f<=xjc2975[33];rvafb7c<={ri20f88>>1,xjc2975[34]};ea7dbe7<=xjc2975[35];ofedf39<={swa09d>>1,xjc2975[36]};en6f9cc<={zx504e9>>1,xjc2975[37]};fa7ce65<={ec8274f>>1,xjc2975[38]};wje732b<={nt13a79>>1,xjc2975[39]};mt3995c<={mg9d3cf>>1,xjc2975[40]};alccae5<={lde9e79>>1,xjc2975[41]};kd6572d<={hb4f3ce>>1,xjc2975[42]};wy2b96d<={ne79e77>>1,xjc2975[43]};su5cb69<={hocf3bb>>1,xjc2975[44]};aye5b48<=xjc2975[45];tj2da40<=xjc2975[46];qg6d206<={ay776d8>>1,xjc2975[47]};xw69031<={epbb6c1>>1,xjc2975[48]};by4818b<={medb60d>>1,xjc2975[49]};end
always@* begin ux1852e[2047]<=ipd9cbb;ux1852e[2046]<=ykce5dc[0];ux1852e[2044]<=su72ee1[0];ux1852e[2041]<=phy_ltssm_state[0];ux1852e[2035]<=phy_link_up;ux1852e[2022]<=trnc_st[0];ux1852e[1996]<=os62849;ux1852e[1945]<=do14249;ux1852e[1843]<=mta124b;ux1852e[1752]<=goceedb;ux1852e[1746]<=lq79e22[0];ux1852e[1728]<=medb60d[1];ux1852e[1685]<=osc44d9;ux1852e[1645]<=ene76c8;ux1852e[1638]<=coac509[0];ux1852e[1605]<=cmc41f1;ux1852e[1456]<=ay776d8[1];ux1852e[1445]<=rgcf113[0];ux1852e[1425]<=vxaf107;ux1852e[1380]<=swb6bc4;ux1852e[1369]<=ww46daf;ux1852e[1334]<=lde9e79[0];ux1852e[1322]<=lf226c8[0];ux1852e[1243]<=ne79e77[0];ux1852e[1242]<=wy3b644;ux1852e[1229]<=ng2573b[0];ux1852e[1195]<=jr9b236;ux1852e[1162]<=ri20f88[0];ux1852e[1107]<=zx504e9[0];ux1852e[1023]<=nefb397[0];ux1852e[876]<=ne79ddb;ux1852e[873]<=ofd9108;ux1852e[864]<=epbb6c1[1];ux1852e[842]<=os7889b;ux1852e[822]<=cm5ced9;ux1852e[802]<=go7883e;ux1852e[712]<=phb5e20;ux1852e[690]<=wl36d78;ux1852e[684]<=fnc8db5;ux1852e[667]<=mg9d3cf[0];ux1852e[621]<=hb4f3ce[0];ux1852e[597]<=db13646;ux1852e[553]<=swa09d[0];ux1852e[438]<=hocf3bb[0];ux1852e[436]<=rxtp_nak;ux1852e[411]<=uk2b9db;ux1852e[342]<=ipd91b6;ux1852e[333]<=nt13a79[0];ux1852e[276]<=yz7c42;ux1852e[166]<=ec8274f[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule









































































































`timescale 1 ns / 100 ps
module  pcie_x1_top_td_mux_x1 (
   input wire                sys_clk,           
   input wire                rst_n,             

   input wire                phy_link_up,       

   
   input wire [15:0]         txtp_tdata,        
   input wire                txtp_st,           
   input wire                txtp_end,          
   input wire                txtp_edb,          
   input wire                txtp_erly_tval,    

   
    input wire               txdp_req1,            
    input wire               txdp_req2,            
    input wire               txdp_val,             
    input wire               txdp_dllp_st,         
    input wire               txdp_dllp_end,        

    input wire [3:0]         txdp_skip_cnt,        
    input wire [15:0]        txdp_data,            

   
   output reg [15:0]         tdmux_data,           
   output reg                tdmux_val,            
   output reg                tdmux_st,             
   output reg                tdmux_end,            
   output reg                tdmux_edb,            
   output reg                tdmux_dllp_st,        
   output reg                tdmux_dllp_end,       
   output reg                tdmux_skip,           

   
   output reg                tdmux_rdy1,           
   output reg                tdmux_rdy2               );
parameter  CHECK = 1'b0;
parameter  WAIT  = 1'b1;
reg    [15:0]             ksf33a, lq799d1, shcce8b, rg695bf, hb4adfb, ic56fde, zmb7ef1, tjbf78a;
reg                       dmfbc57;
reg                       ayde2ba,  nef15d0,  an8ae82,  fa57414,  zzba0a2,  zkd0517,  ec828bb, hq145d8;
reg                       ria2ec3,    cb1761b,    anbb0dc,    jpd86e5,    mrc372f,    xy1b97d,    uvdcbeb,   qge5f5c;
reg                       pu2fae0,   os7d703,   lqeb818,   ic5c0c3,   cme0619,   nt30c9,   gd1864f,  ofc327d;
reg                       ph193ed,   ipc9f6f,   xj4fb7d,   go7dbee,   enedf71,   cz6fb8c,   os7dc65,  psee329;
reg                       nr7194a, do8ca57, ip652bb, ir295dd;
reg                       nr4aeed;
reg  [3:0]                fa5776e;
reg  [1:0]                yzbbb72;
reg  [7:0]                pfddb94;
reg qv730f;
reg [15 : 0] dz6e534;
reg su729a6;
reg ph94d30;
reg yma6986;
reg ec34c31;
reg iea6189;
reg do30c48;
reg ba86243;
reg mg3121b;
reg ri890d8;
reg [3 : 0] lq486c2;
reg [15 : 0] os43612;
reg [15 : 0] wjd68ab;
reg [15 : 0] irb455d;
reg [15 : 0] lsa2aec;
reg [15 : 0] an122bf;
reg [15 : 0] lf915fc;
reg [15 : 0] yz8afe7;
reg [15 : 0] ps57f3c;
reg [15 : 0] fpbf9e3;
reg thfcf1e;
reg ene78f7;
reg cb3c7bd;
reg vve3dec;
reg hq1ef67;
reg wjf7b3b;
reg twbd9dc;
reg fnecee3;
reg ic6771e;
reg co3b8f0;
reg uvdc780;
reg xje3c05;
reg xy1e02f;
reg osf017a;
reg ir80bd0;
reg qi5e85;
reg do2f429;
reg uv7a14a;
reg lqd0a55;
reg ux852aa;
reg gd29554;
reg xj4aaa5;
reg jp5552e;
reg jraa977;
reg uv54bbf;
reg pha5dfc;
reg gq2efe6;
reg ui77f31;
reg fpbf988;
reg thfcc46;
reg fne6237;
reg ec311be;
reg ec88df0;
reg os46f81;
reg lf37c08;
reg kfbe046;
reg icf0235;
reg nt811a8;
reg [3 : 0] cb8d46;
reg [1 : 0] yk46a35;
reg [7 : 0] ls351a8;
reg [2047:0] ux1852e;
wire [61:0] xjc2975;

localparam do14bae = 62,jra5d72 = 32'hfdfff02b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;








always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      dmfbc57  <= 1'b0;      ksf33a <= 0; ayde2ba  <= 1'b0; ria2ec3    <= 1'b0; pu2fae0   <= 1'b0; ph193ed   <= 1'b0;      lq799d1 <= 0; nef15d0  <= 1'b0; cb1761b    <= 1'b0; os7d703   <= 1'b0; ipc9f6f   <= 1'b0;      shcce8b <= 0; an8ae82  <= 1'b0; anbb0dc    <= 1'b0; lqeb818   <= 1'b0; xj4fb7d   <= 1'b0;      rg695bf <= 0; fa57414  <= 1'b0; jpd86e5    <= 1'b0; ic5c0c3   <= 1'b0; go7dbee   <= 1'b0;      hb4adfb <= 0; zzba0a2  <= 1'b0; mrc372f    <= 1'b0; cme0619   <= 1'b0; enedf71   <= 1'b0;      ic56fde <= 0; zkd0517  <= 1'b0; xy1b97d    <= 1'b0; nt30c9   <= 1'b0; cz6fb8c   <= 1'b0;      zmb7ef1 <= 0; ec828bb  <= 1'b0; uvdcbeb    <= 1'b0; gd1864f   <= 1'b0; os7dc65   <= 1'b0;      tjbf78a <= 0; hq145d8  <= 1'b0; qge5f5c    <= 1'b0; ofc327d   <= 1'b0; psee329   <= 1'b0;   end   else begin      dmfbc57  <= ec34c31;      ksf33a <= dz6e534; ayde2ba <= thfcf1e; ria2ec3 <= su729a6; pu2fae0 <= ph94d30; ph193ed <= yma6986;      lq799d1 <= wjd68ab;     nef15d0 <= ene78f7;     cb1761b <= co3b8f0;     os7d703 <= uv7a14a;     ipc9f6f <= pha5dfc;      shcce8b <= irb455d;     an8ae82 <= cb3c7bd;     anbb0dc <= uvdc780;     lqeb818 <= lqd0a55;     xj4fb7d <= gq2efe6;      rg695bf <= lsa2aec;     fa57414 <= vve3dec;     jpd86e5 <= xje3c05;     ic5c0c3 <= ux852aa;     go7dbee <= ui77f31;      hb4adfb <= an122bf;     zzba0a2 <= hq1ef67;     mrc372f <= xy1e02f;     cme0619 <= gd29554;     enedf71 <= fpbf988;      ic56fde <= lf915fc;     zkd0517 <= wjf7b3b;     xy1b97d <= osf017a;     nt30c9 <= xj4aaa5;     cz6fb8c <= thfcc46;      zmb7ef1 <= yz8afe7;     ec828bb <= twbd9dc;     uvdcbeb <= ir80bd0;     gd1864f <= jp5552e;     os7dc65 <= fne6237;      tjbf78a <= ps57f3c;     hq145d8 <= fnecee3;     qge5f5c <= qi5e85;     ofc327d <= jraa977;     psee329 <= ec311be;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tdmux_data     <= 0;      tdmux_val      <= 1'b0;      tdmux_st       <= 1'b0;      tdmux_end      <= 1'b0;      tdmux_edb      <= 1'b0;      tdmux_dllp_st  <= 1'b0;      tdmux_dllp_end <= 1'b0;      tdmux_skip     <= 1'b0;      pfddb94    <= 8'h00;   end   else begin      tdmux_dllp_st     <= mg3121b;      tdmux_dllp_end    <= ri890d8;      pfddb94       <= os43612[7:0];            tdmux_skip        <= icf0235;      tdmux_data        <= ba86243 ? {ls351a8, os43612[15:8]} : {fpbf9e3[7:0], ps57f3c[15:8]};      tdmux_val         <= fnecee3 | ba86243 | icf0235;      tdmux_st          <= qi5e85;      tdmux_end         <= uv54bbf;      tdmux_edb         <= ec88df0;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      nr4aeed    <= CHECK;      tdmux_rdy1     <= 1'b0;      tdmux_rdy2     <= 1'b0;      yzbbb72       <= 2'b00;      fa5776e <= 4'b0000;      nr7194a     <= 1'b0;      do8ca57    <= 1'b0;      ip652bb    <= 1'b0;      ir295dd    <= 1'b0;   end   else begin      do8ca57  <= os46f81;      ip652bb  <= lf37c08;      ir295dd  <= kfbe046;                        case(nt811a8)         CHECK : begin                         nr7194a  <= 1'b0;            tdmux_rdy1  <= 1'b0;            tdmux_rdy2  <= 1'b0;            yzbbb72    <= 2'b00;            if(!thfcf1e && !ene78f7 && !cb3c7bd && !vve3dec && !hq1ef67) begin                if(lq486c2 != cb8d46) begin                  nr4aeed    <= WAIT;                  nr7194a     <= 1'b1;                  fa5776e <= cb8d46 + 4'd1;               end               else if(iea6189) begin                  nr4aeed    <= WAIT;                  tdmux_rdy1     <= 1'b1;                  tdmux_rdy2     <= 1'b0;               end               else if(do30c48) begin                  nr4aeed    <= WAIT;                  tdmux_rdy1     <= 1'b0;                  tdmux_rdy2     <= 1'b1;               end            end         end         WAIT : begin            tdmux_rdy1  <= 1'b0;            tdmux_rdy2  <= 1'b0;            yzbbb72    <= yk46a35 + 1'b1;                                    if(os46f81)               nr4aeed  <= CHECK;            else if(yk46a35 == 2'b10)               nr4aeed  <= CHECK;         end         default : begin            nr4aeed    <= CHECK;         end      endcase   end
end
always@* begin qv730f<=xjc2975[0];dz6e534<={txtp_tdata>>1,xjc2975[1]};su729a6<=xjc2975[2];ph94d30<=xjc2975[3];yma6986<=xjc2975[4];ec34c31<=xjc2975[5];iea6189<=xjc2975[6];do30c48<=xjc2975[7];ba86243<=xjc2975[8];mg3121b<=xjc2975[9];ri890d8<=xjc2975[10];lq486c2<={txdp_skip_cnt>>1,xjc2975[11]};os43612<={txdp_data>>1,xjc2975[12]};wjd68ab<={ksf33a>>1,xjc2975[13]};irb455d<={lq799d1>>1,xjc2975[14]};lsa2aec<={shcce8b>>1,xjc2975[15]};an122bf<={rg695bf>>1,xjc2975[16]};lf915fc<={hb4adfb>>1,xjc2975[17]};yz8afe7<={ic56fde>>1,xjc2975[18]};ps57f3c<={zmb7ef1>>1,xjc2975[19]};fpbf9e3<={tjbf78a>>1,xjc2975[20]};thfcf1e<=xjc2975[21];ene78f7<=xjc2975[22];cb3c7bd<=xjc2975[23];vve3dec<=xjc2975[24];hq1ef67<=xjc2975[25];wjf7b3b<=xjc2975[26];twbd9dc<=xjc2975[27];fnecee3<=xjc2975[28];ic6771e<=xjc2975[29];co3b8f0<=xjc2975[30];uvdc780<=xjc2975[31];xje3c05<=xjc2975[32];xy1e02f<=xjc2975[33];osf017a<=xjc2975[34];ir80bd0<=xjc2975[35];qi5e85<=xjc2975[36];do2f429<=xjc2975[37];uv7a14a<=xjc2975[38];lqd0a55<=xjc2975[39];ux852aa<=xjc2975[40];gd29554<=xjc2975[41];xj4aaa5<=xjc2975[42];jp5552e<=xjc2975[43];jraa977<=xjc2975[44];uv54bbf<=xjc2975[45];pha5dfc<=xjc2975[46];gq2efe6<=xjc2975[47];ui77f31<=xjc2975[48];fpbf988<=xjc2975[49];thfcc46<=xjc2975[50];fne6237<=xjc2975[51];ec311be<=xjc2975[52];ec88df0<=xjc2975[53];os46f81<=xjc2975[54];lf37c08<=xjc2975[55];kfbe046<=xjc2975[56];icf0235<=xjc2975[57];nt811a8<=xjc2975[58];cb8d46<={fa5776e>>1,xjc2975[59]};yk46a35<={yzbbb72>>1,xjc2975[60]};ls351a8<={pfddb94>>1,xjc2975[61]};end
always@* begin ux1852e[2047]<=txtp_tdata[0];ux1852e[2046]<=txtp_st;ux1852e[2044]<=txtp_end;ux1852e[2041]<=txtp_edb;ux1852e[2035]<=txtp_erly_tval;ux1852e[2022]<=txdp_req1;ux1852e[1996]<=txdp_req2;ux1852e[1945]<=txdp_val;ux1852e[1843]<=txdp_dllp_st;ux1852e[1752]<=ph193ed;ux1852e[1746]<=ic56fde[0];ux1852e[1728]<=go7dbee;ux1852e[1685]<=dmfbc57;ux1852e[1645]<=lq799d1[0];ux1852e[1638]<=txdp_dllp_end;ux1852e[1605]<=jpd86e5;ux1852e[1536]<=os7dc65;ux1852e[1456]<=ipc9f6f;ux1852e[1445]<=zmb7ef1[0];ux1852e[1425]<=cb1761b;ux1852e[1408]<=enedf71;ux1852e[1380]<=hq145d8;ux1852e[1369]<=zkd0517;ux1852e[1334]<=ic5c0c3;ux1852e[1322]<=ayde2ba;ux1852e[1243]<=nt30c9;ux1852e[1242]<=shcce8b[0];ux1852e[1229]<=txdp_skip_cnt[0];ux1852e[1195]<=an8ae82;ux1852e[1162]<=mrc372f;ux1852e[1107]<=qge5f5c;ux1852e[1024]<=psee329;ux1852e[1023]<=phy_link_up;ux1852e[876]<=ofc327d;ux1852e[873]<=hb4adfb[0];ux1852e[864]<=xj4fb7d;ux1852e[842]<=tjbf78a[0];ux1852e[822]<=ksf33a[0];ux1852e[802]<=anbb0dc;ux1852e[768]<=cz6fb8c;ux1852e[712]<=ria2ec3;ux1852e[690]<=ec828bb;ux1852e[684]<=zzba0a2;ux1852e[667]<=lqeb818;ux1852e[621]<=cme0619;ux1852e[597]<=nef15d0;ux1852e[553]<=uvdcbeb;ux1852e[438]<=gd1864f;ux1852e[436]<=rg695bf[0];ux1852e[411]<=txdp_data[0];ux1852e[342]<=fa57414;ux1852e[333]<=os7d703;ux1852e[276]<=xy1b97d;ux1852e[170]<=pfddb94[0];ux1852e[166]<=pu2fae0;ux1852e[85]<=yzbbb72[0];ux1852e[42]<=fa5776e[0];ux1852e[21]<=nr4aeed;ux1852e[10]<=ir295dd;ux1852e[5]<=ip652bb;ux1852e[2]<=do8ca57;ux1852e[1]<=nr7194a;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
















































`timescale 1 ns / 100 ps
module pcie_x1_top_zk4da2e(
   input wire            sys_clk,      
   input wire            rst_n,        

   `ifdef X1
      input wire         hb45cc8,    
      output reg         txdp_val,     
      output reg         txdp_dllp_st, 
      output reg         txdp_dllp_end,
      output reg [15:0]  xjc8e1b,         
   `endif
   `ifdef X4
      output wire [47:0] xjc8e1b,         
   `endif

   
   input wire            rv386fb,   
   input wire [31:0]     kdc37de,     
   input wire [31:0]     hq1bef5   
);
reg     [31:0] ba112fb;
reg     [15:0] zkfbd5a;
reg     [15:0] uidead2;
wire    [31:0] vk897db;
wire    [15:0] tu4225f;
wire    [15:0] dz5a444;
reg     [31:0] nrd2226;
reg     [1:0]  lf91136;

`ifdef X1
reg     [31:0] pfddb94;

`endif

`ifdef X4
wire    [31:0] pfddb94;

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg mt26dcd;
reg [31 : 0] oh36e6d;
reg [31 : 0] hqb736c;
reg [31 : 0] ks536b;
reg [15 : 0] fncdb19;
reg [15 : 0] ww6d8cf;
reg [31 : 0] ep29b58;
reg [15 : 0] rgc0a6d;
reg [15 : 0] jr19e1a;
reg [31 : 0] hocf0d6;
reg [1 : 0] me786b3;
reg [2047:0] ux1852e;
wire [10:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 11,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef X1



`endif



`ifdef X4



`endif




`ifdef X1
         always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         txdp_val      <= 1'b0;         txdp_dllp_st  <= 1'b0;         txdp_dllp_end <= 1'b0;         lf91136       <= 2'b00;      end      else begin                  txdp_dllp_st  <= hb45cc8;         txdp_dllp_end <= (me786b3 == 2'b10) ? 1'b1 : 1'b0;         if(hb45cc8)            txdp_val      <= 1'b1;         else if(me786b3 == 2'b11)            txdp_val      <= 1'b0;         if(txdp_val)            lf91136    <= me786b3 + 1'b1;      end   end

`endif





`ifdef X1
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         pfddb94  <= 32'd0;      else if(hb45cc8)         pfddb94  <= (mt26dcd) ? hqb736c : oh36e6d;   end

`endif



`ifdef X4
   assign pfddb94 = (mt26dcd) ? hqb736c : oh36e6d;

`endif


assign  vk897db   =  pfddb94;
assign  tu4225f   =  16'h32B9;




always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n)      uidead2 <= 16'h0000 ;   else      uidead2 <= fncdb19;
end


`ifdef X1
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         xjc8e1b    <= 16'h0000;      else if(hb45cc8)         xjc8e1b  <= (mt26dcd) ? hqb736c[31:16] : oh36e6d[31:16];      else if(me786b3 == 2'b00)         xjc8e1b  <= pfddb94[15:0];      else         xjc8e1b  <= jr19e1a;   end

`endif



`ifdef X4
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         nrd2226<= 32'd0;      else         nrd2226<= ep29b58;   end   assign xjc8e1b = {hocf0d6, jr19e1a};

`endif





assign   dz5a444 = {~ww6d8cf[ 8], ~ww6d8cf[ 9], ~ww6d8cf[10], ~ww6d8cf[11],                     ~ww6d8cf[12], ~ww6d8cf[13], ~ww6d8cf[14], ~ww6d8cf[15],                     ~ww6d8cf[ 0], ~ww6d8cf[ 1], ~ww6d8cf[ 2], ~ww6d8cf[ 3],                     ~ww6d8cf[ 4], ~ww6d8cf[ 5], ~ww6d8cf[ 6], ~ww6d8cf[ 7] };




always @(*) begin    ba112fb = { ep29b58[24], ep29b58[25], ep29b58[26], ep29b58[27], ep29b58[28], ep29b58[29], ep29b58[30], ep29b58[31],           ep29b58[16], ep29b58[17], ep29b58[18], ep29b58[19], ep29b58[20], ep29b58[21], ep29b58[22], ep29b58[23],           ep29b58[ 8], ep29b58[ 9], ep29b58[10], ep29b58[11], ep29b58[12], ep29b58[13], ep29b58[14], ep29b58[15],           ep29b58[ 0], ep29b58[ 1], ep29b58[ 2], ep29b58[ 3], ep29b58[ 4], ep29b58[ 5], ep29b58[ 6], ep29b58[ 7]};    zkfbd5a[0] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[23] ^ ks536b[21] ^ ks536b[20] ^                ks536b[15] ^ ks536b[13] ^ ks536b[12] ^ ks536b[8] ^ ks536b[4] ^ ks536b[0] ^ rgc0a6d[0];
    zkfbd5a[1] = ks536b[31] ^ ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^ ks536b[23] ^                ks536b[22] ^ ks536b[20] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[12] ^ ks536b[9] ^                ks536b[8] ^ ks536b[5] ^ ks536b[4] ^ ks536b[1] ^ ks536b[0] ^ rgc0a6d[1];
    zkfbd5a[2] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^                ks536b[21] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[13] ^ ks536b[10] ^ ks536b[9] ^                ks536b[6] ^ ks536b[5] ^ ks536b[2] ^ ks536b[1] ^ rgc0a6d[2];
    zkfbd5a[3] = ks536b[31] ^ ks536b[30] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[21] ^                ks536b[20] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^                ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ ks536b[7] ^ ks536b[6] ^ ks536b[4] ^                ks536b[3] ^ ks536b[2] ^ ks536b[0] ^ rgc0a6d[3];
    zkfbd5a[4] = ks536b[31] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[21] ^                ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^                ks536b[12] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[7] ^ ks536b[5] ^ ks536b[4] ^                ks536b[3] ^ ks536b[1] ^ rgc0a6d[4];    zkfbd5a[5] = ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[22] ^ ks536b[20] ^                ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^ ks536b[13] ^                ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[8] ^ ks536b[6] ^ ks536b[5] ^ ks536b[4] ^                ks536b[2] ^ rgc0a6d[5];
    zkfbd5a[6] = ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[23] ^ ks536b[21] ^                ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^ ks536b[14] ^                ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[9] ^ ks536b[7] ^ ks536b[6] ^ ks536b[5] ^                ks536b[3]  ^ rgc0a6d[6];
    zkfbd5a[7] = ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^ ks536b[22] ^                ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^ ks536b[15] ^                ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ ks536b[7] ^ ks536b[6] ^                ks536b[4]  ^ rgc0a6d[7];    zkfbd5a[8] = ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[25] ^ ks536b[23] ^                ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^ ks536b[16] ^                ks536b[15] ^ ks536b[13] ^ ks536b[12] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[7] ^                ks536b[5]  ^ rgc0a6d[8];
    zkfbd5a[9] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^                ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^                ks536b[16] ^ ks536b[14] ^ ks536b[13] ^ ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[8] ^                ks536b[6]  ^ rgc0a6d[9];
    zkfbd5a[10] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^                 ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[17] ^                 ks536b[15] ^ ks536b[14] ^ ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[9] ^ ks536b[7] ^ rgc0a6d[10];
    zkfbd5a[11] = ks536b[31] ^ ks536b[30] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[25] ^ ks536b[24] ^                 ks536b[23] ^ ks536b[22] ^ ks536b[21] ^ ks536b[20] ^ ks536b[19] ^ ks536b[18] ^ ks536b[16] ^                 ks536b[15] ^ ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[10] ^ ks536b[8] ^ rgc0a6d[11];
    zkfbd5a[12] = ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[24] ^ ks536b[22] ^ ks536b[19] ^                 ks536b[17] ^ ks536b[16] ^ ks536b[11] ^ ks536b[9] ^ ks536b[8] ^ ks536b[4] ^ ks536b[0] ^ rgc0a6d[12];
    zkfbd5a[13] = ks536b[31] ^ ks536b[29] ^ ks536b[28] ^ ks536b[26] ^ ks536b[25] ^ ks536b[23] ^ ks536b[20] ^                 ks536b[18] ^ ks536b[17] ^ ks536b[12] ^ ks536b[10] ^ ks536b[9] ^ ks536b[5] ^ ks536b[1] ^ rgc0a6d[13];
    zkfbd5a[14] = ks536b[30] ^ ks536b[29] ^ ks536b[27] ^ ks536b[26] ^ ks536b[24] ^ ks536b[21] ^ ks536b[19] ^                 ks536b[18] ^ ks536b[13] ^ ks536b[11] ^ ks536b[10] ^ ks536b[6] ^ ks536b[2] ^ rgc0a6d[14];
    zkfbd5a[15] = ks536b[31] ^ ks536b[30] ^ ks536b[28] ^ ks536b[27] ^ ks536b[25] ^ ks536b[22] ^ ks536b[20] ^                 ks536b[19] ^ ks536b[14] ^ ks536b[12] ^ ks536b[11] ^ ks536b[7] ^ ks536b[3] ^ rgc0a6d[15];
end


always@* begin mt26dcd<=xjc2975[0];oh36e6d<={kdc37de>>1,xjc2975[1]};hqb736c<={hq1bef5>>1,xjc2975[2]};ks536b<={ba112fb>>1,xjc2975[3]};fncdb19<={zkfbd5a>>1,xjc2975[4]};ww6d8cf<={uidead2>>1,xjc2975[5]};ep29b58<={vk897db>>1,xjc2975[6]};rgc0a6d<={tu4225f>>1,xjc2975[7]};jr19e1a<={dz5a444>>1,xjc2975[8]};hocf0d6<={nrd2226>>1,xjc2975[9]};me786b3<={lf91136>>1,xjc2975[10]};end
always@* begin ux1852e[2047]<=kdc37de[0];ux1852e[2046]<=hq1bef5[0];ux1852e[2044]<=ba112fb[0];ux1852e[2040]<=zkfbd5a[0];ux1852e[2032]<=uidead2[0];ux1852e[2017]<=vk897db[0];ux1852e[1987]<=tu4225f[0];ux1852e[1927]<=dz5a444[0];ux1852e[1806]<=nrd2226[0];ux1852e[1565]<=lf91136[0];ux1852e[1023]<=rv386fb;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule












































`timescale 1 ns / 100 ps
module  pcie_x1_top_vif49c5 #(
   parameter FADDR    = 3 )
   (
   input wire            sys_clk,           
   input wire            rst_n,             

   input wire [13:0]     zkc5737,   
                                            
   `ifdef X4
      input wire         sw2b9ba,       
      input wire [1:0]   phy_skpq_nclks,    
   `endif
   input wire            phy_skpq_val,      
   input wire            bn37447,    

   
   input wire            ntba23f,        
   input wire [2:0]      god11ff,          
   input wire [1:0]      ie88ff9,          

   input wire            vi47fc9,        
   input wire [2:0]      ng3fe4a,          
   input wire [1:0]      cmff252,          
 
   input wire [`NUM_VC -1:0]     zxf9291,    
   input wire [`NUM_VC -1:0]     wjc948e,   
   input wire [`NUM_VC -1:0]     bl4a474,  
   input wire [(`NUM_VC*3) -1:0] su72ee1,         
   `ifdef EN_VC0
      input wire [23:0]      rv91d3a,               
      input wire [23:0]      rv8e9d6,
      input wire [23:0]      nr74eb6,
   `endif
   `ifdef EN_VC1
      input wire [23:0]      doa75b7,               
      input wire [23:0]      pu3adba,
      input wire [23:0]      uvd6dd2,
   `endif
   `ifdef EN_VC2
      input wire [23:0]      qib6e95,               
      input wire [23:0]      xyb74a8,
      input wire [23:0]      hdba543,
   `endif
   `ifdef EN_VC3
      input wire [23:0]      nrd2a1f,               
      input wire [23:0]      oh950ff,
      input wire [23:0]      vka87fd,
   `endif
   `ifdef EN_VC4
      input wire [23:0]      kq43feb,               
      input wire [23:0]      co1ff58,
      input wire [23:0]      goffac1,
   `endif
   `ifdef EN_VC5
      input wire [23:0]      alfd608,               
      input wire [23:0]      dmeb044,
      input wire [23:0]      tu58222,
   `endif
   `ifdef EN_VC6
      input wire [23:0]      mec1113,               
      input wire [23:0]      ux8898,
      input wire [23:0]      of444c5,
   `endif
   `ifdef EN_VC7
      input wire [23:0]      lf2262c,               
      input wire [23:0]      db13166,
      input wire [23:0]      gq98b36,
   `endif

   
   input wire                jcc59b0,                
   input wire                an2cd83,            
   input wire [2:0]          vi66c1c,          
   input wire [23:0]         tx_vsd_data,          

   
   input wire                rxtp_nak,             
   input wire                ofd9108,         
   input wire                rxtp_ack,             
   input wire [11:0]         rxtp_seq,             

   
   input wire                rt45f0d,           
   input wire                ls2f86f,          
   input wire [2:0]          jc7c37b,          
   input wire                xwe1bda,          
   input wire [1:0]          uxded2,          
   input wire [`NUM_VC -1:0] vcneg_pend,           

   
   input wire                tdmux_rdy1,           
   input wire                tdmux_rdy2,           

   input wire                bn81da1,        

   
   
   output reg [FADDR:0]      dll_pause_cnt,       

   
   output reg                txdp_req1,           
   output reg                txdp_req2,           
   `ifdef X1
      output reg [3:0]       txdp_skip_cnt,       
   `endif
   `ifdef X4
      output reg [2:0]       txdp_skip_cnt,       
      output reg             jpd290d,           
      output reg             jr9486f,           
   `endif

   
   output reg [`NUM_VC -1:0] epa437e,         
   output reg [`NUM_VC -1:0] aa21bf5,        
   output reg [`NUM_VC -1:0] sjdfa8,       

   
   output reg                uk2b9db,            
   output reg                cm5ced9,           

   
   output wire               mef516e,        

   
   `ifdef X1
      output reg             hb45cc8,           
   `endif
   output reg                rv386fb,          
   output reg [31:0]         kdc37de,            
   output reg [31:0]         hq1bef5,         

   output reg                gb705f6             );

`ifdef VC1
parameter  uk82fb4=2;
parameter  gd17da0=7;
parameter  kfbed05       =  3'b011;
parameter  hbf682c  =  3'b111;
parameter  epb4166     =  3'b000;
parameter  hda0b34    =  3'b001;
parameter  uk59a6   =  3'b010;

`else 

`ifdef VC2
parameter  uk82fb4=2;
parameter  gd17da0=7;
parameter  kfbed05       =  3'b011;
parameter  hbf682c  =  3'b111;
parameter  epb4166     =  3'b000;
parameter  hda0b34    =  3'b001;
parameter  uk59a6   =  3'b010;
parameter  ph19052     =  3'b100;
parameter  jpc8297    =  3'b101;
parameter  al414be   =  3'b110;

`else 

`ifdef VC3 
parameter  uk82fb4=3;
parameter  gd17da0=15;
parameter  kfbed05       =  4'b0011;
parameter  hbf682c  =  4'b1111;
parameter  epb4166     =  4'b0000;
parameter  hda0b34    =  4'b0001;
parameter  uk59a6   =  4'b0010;
parameter  ph19052     =  4'b0100;
parameter  jpc8297    =  4'b0101;
parameter  al414be   =  4'b0110;
parameter  qi15621     =  4'b1000;
parameter  mtab109    =  4'b1001;
parameter  ne5884c   =  4'b1010;

`else

`ifdef VC4
parameter  uk82fb4=3;
parameter  gd17da0=15;
parameter  kfbed05       =  4'b0011;
parameter  hbf682c  =  4'b1111;
parameter  epb4166     =  4'b0000;
parameter  hda0b34    =  4'b0001;
parameter  uk59a6   =  4'b0010;
parameter  ph19052     =  4'b0100;
parameter  jpc8297    =  4'b0101;
parameter  al414be   =  4'b0110;
parameter  qi15621     =  4'b1000;
parameter  mtab109    =  4'b1001;
parameter  ne5884c   =  4'b1010;
parameter  zxc84ca     =  4'b1100;
parameter  xw42656    =  4'b1101;
parameter  jr132b3   =  4'b1110;

`else
parameter  uk82fb4=4;
parameter  gd17da0=31;
parameter  kfbed05       =  5'b00011;
parameter  hbf682c  =  5'b11111;
parameter  epb4166     =  5'b00000;
parameter  hda0b34    =  5'b00001;
parameter  uk59a6   =  5'b00010;
parameter  ph19052     =  5'b00100;
parameter  jpc8297    =  5'b00101;
parameter  al414be   =  5'b00110;
parameter  qi15621     =  5'b01000;
parameter  mtab109    =  5'b01001;
parameter  ne5884c   =  5'b01010;
parameter  zxc84ca     =  5'b01100;
parameter  xw42656    =  5'b01101;
parameter  jr132b3   =  5'b01110;
parameter  lfb0f1b     =  5'b10000;
parameter  mg878df    =  5'b10001;
parameter  ux3c6f8   =  5'b10010;
parameter  jpe37c4     =  5'b10100;
parameter  ls1be26    =  5'b10101;
parameter  bydf133   =  5'b10110;
parameter  wjf899a     =  5'b11000;
parameter  ayc4cd5    =  5'b11001;
parameter  gd266a9   =  5'b11010;
parameter  oh3354c     =  5'b11100;
parameter  mt9aa65    =  5'b11101;
parameter  jcd532d   =  5'b11110;

`endif

`endif

`endif

`endif
parameter ne4231a   = 2'b00;
parameter fc118d3  = 2'b01;
parameter xy8c69a = 2'b10;

`ifdef X4
parameter fp2d60c   =  1'b0;
parameter pf6b067    =  1'b1;
parameter lq5833e   =  1'b0;
parameter ayc19f3    =  1'b1;
parameter hdcf99  =  2'b00;
parameter me67ccf =  2'b01;
parameter mg3e679 =  2'b10;
parameter blf33c9 =  2'b11;
parameter ls99e4f  =  2'b00;
parameter xwcf27a =  2'b01;
parameter lq793d3 =  2'b10;
parameter ofc9e9a =  2'b11;

`endif
reg                       th4f4d5;
reg    [`NUM_VC -1:0]     gb7a6af;
reg  [31:0]               end357d[0:`NUM_VC -1];
reg  [31:0]               qv9abec[0:`NUM_VC -1];
reg  [31:0]               psd5f65[0:`NUM_VC -1];
reg  [`NUM_VC -1:0]       bnafb2a;
reg  [`NUM_VC -1:0]       go7d957;
reg  [`NUM_VC -1:0]       fnecab9;
reg  [`NUM_VC -1:0]       kd655ce;
reg  [`NUM_VC -1:0]       xy2ae75;
reg  [`NUM_VC -1:0]       by573ab;
reg  [`NUM_VC -1:0]       qib9d5a;
reg  [`NUM_VC -1:0]       eacead1;
reg  [`NUM_VC -1:0]       mr75688;
reg  [`NUM_VC -1:0]       sjab444;
reg  [`NUM_VC -1:0]       ld5a224;
reg                       wwd1126;
reg                       gq88931;
reg  [uk82fb4:0]            aa24c4d;
reg                       sj26268;
reg                       ec31344;
reg  [uk82fb4:0]            xw4d103;
reg  [uk82fb4:0]            sh440d0;
reg  [1:0]                pu20684 [0:`NUM_VC -1];
reg  [1:0]                nt3423 [0:`NUM_VC -1];
reg  [1:0]                ec1a11f [0:`NUM_VC -1];
reg                       tud08f8;
reg                       hd847c2;
reg  [uk82fb4:0]            qi1f0b5;
reg  [uk82fb4:0]            xjc2d44;
reg                       fp16a26;
reg                       dbb5137;
reg  [31:0]               xya89be;
reg  [31:0]               yx44df2;
reg                       qv26f95;
reg                       vx37cad;
reg                       mtbe56e;
reg                       alf2b75;
reg                       an95bac;
reg  [31:0]               jeadd64;
reg                       rt6eb22;
reg                       gb75917;
reg                       ymac8bd;
reg                       hb645e8;
reg                       bn22f47;
reg  [uk82fb4:0]            twbd1fd;
reg  [uk82fb4:0]            vi47f54 [gd17da0:0];
reg  [uk82fb4:0]            icea894;
reg  [uk82fb4:0]            fca250d;
reg  [uk82fb4:0]            lf94355;
reg  [uk82fb4:0]            cbd57c;
reg                       wj6abe4;
reg  [uk82fb4:0]            xlaf92e;
reg                       by7c977;
reg  [uk82fb4:0]            hq25dda;
reg  [uk82fb4:0]            cm77691 [gd17da0:0];
reg  [uk82fb4:0]            zxd226a;
reg  [uk82fb4:0]            ls89ab7;
reg  [uk82fb4:0]            cz6adda;
reg  [uk82fb4:0]            vkb76a9;
reg                       qvbb54b;
reg  [uk82fb4:0]            fad52eb;
reg  [13:0]               aaa975b;
reg                       al4bad9;
reg                       fa5d6cc;
reg                       faeb663;
reg                       kd5b31a;
reg  [FADDR:0]            mrcc6a4;
reg                       xw63524;
reg    [FADDR:0]          ead4911;
reg    [FADDR:0]          ou24444;
reg    [FADDR:0]          fc1110e;
integer                   aa88873, kd44399, co21ccc, hqe660, ne73303, do9981b;
reg  [uk82fb4:0]            yx606d4 [`NUM_VC -1:0];
reg  [uk82fb4:0]            je1b52f [`NUM_VC -1:0];
reg  [uk82fb4:0]            uid4bd3 [`NUM_VC -1:0];
wire [uk82fb4:0]            hq2f4c6;
wire [uk82fb4:0]            ipd3195;
wire [uk82fb4:0]            shc6560;

`ifdef X1
reg  [3:0]                vx32b05;
reg  [3:0]                mt9582e;
reg  [3:0]                aaac174;
reg  [3:0]                al60ba1;

`endif

`ifdef X4
reg                       qi5d0c;
reg                       co2e861;
reg                       rt74309;
reg                       gda184e;
reg                       phc274;
reg                       xj613a6;
reg                       zz9d37;
reg                       cz4e9bf;
reg  [1:0]                xj74dfc;
reg                       eca6fe7;
reg  [1:0]                db37f39;
reg                       zzbf9ce;
reg                       xjfce76;
reg  [2:0]                vx32b05;
reg  [2:0]                mt9582e;
reg  [2:0]                aaac174;
reg  [2:0]                al60ba1;
reg  [2:0]                dob7942;

`endif

`ifdef X4

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef EN_VC0
wire [2:0] zx504e9 = 3'b000;

`endif

`ifdef EN_VC1
wire [2:0] ec8274f = su72ee1[5:3];

`endif

`ifdef EN_VC2
wire [2:0] nt13a79 = su72ee1[8:6];

`endif

`ifdef EN_VC3
wire [2:0] mg9d3cf = su72ee1[11:9];

`endif

`ifdef EN_VC4
wire [2:0] lde9e79 = su72ee1[14:12];

`endif

`ifdef EN_VC5
wire [2:0] hb4f3ce = su72ee1[17:15];

`endif

`ifdef EN_VC6
wire [2:0] ne79e77 = su72ee1[20:18];

`endif

`ifdef EN_VC7
wire [2:0] hocf3bb = su72ee1[23:21];

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif
wire [1:0]  cba40d3  = pu20684[0];
wire [1:0]  hd34eb  = nt3423[0];
wire [1:0]  ald3af8  = ec1a11f[0];
wire [31:0]  jcebe29     = end357d[0];
wire [31:0]  alf8a5e    = qv9abec[0];
wire [31:0]  gd297aa   = psd5f65[0];
reg [13 : 0] al5eaac;
reg qgf5565;
reg zzaab28;
reg th55947;
reg [2 : 0] ecaca3e;
reg [1 : 0] cz651f0;
reg nt28f85;
reg [2 : 0] vi47c2e;
reg [1 : 0] mg3e172;
reg [`NUM_VC - 1 : 0] ykf0b91;
reg [`NUM_VC - 1 : 0] oh85c89;
reg [`NUM_VC - 1 : 0] mg2e44d;
reg [(`NUM_VC * 3) - 1 : 0] wld039;
reg xl91341;
reg pu89a0f;
reg [2 : 0] zk4d07b;
reg [23 : 0] ww683da;
reg tjc497;
reg ay624be;
reg xj7b469;
reg [11 : 0] jcda34f;
reg god1a7a;
reg ec8d3d0;
reg [2 : 0] lq69e80;
reg hb4f402;
reg [1 : 0] of7a017;
reg [`NUM_VC - 1 : 0] psd00bd;
reg ep805eb;
reg ir2f5c;
reg oh17ae4;
reg vkbd725;
reg [`NUM_VC - 1 : 0] pseb92a;
reg [`NUM_VC - 1 : 0] os5c953;
reg [`NUM_VC - 1 : 0] vie4a98;
reg [`NUM_VC - 1 : 0] do254c2;
reg [`NUM_VC - 1 : 0] tw2a613;
reg [`NUM_VC - 1 : 0] qg5309a;
reg [`NUM_VC - 1 : 0] gq984d0;
reg [`NUM_VC - 1 : 0] pfc2681;
reg [`NUM_VC - 1 : 0] xl1340f;
reg [`NUM_VC - 1 : 0] mt9a07e;
reg [`NUM_VC - 1 : 0] fad03f4;
reg [`NUM_VC - 1 : 0] db81fa3;
reg cofd1f;
reg xj7e8f8;
reg [uk82fb4 : 0] mga3e32;
reg mg1f191;
reg gbf8c88;
reg [uk82fb4 : 0] nt3222d;
reg [uk82fb4 : 0] aa88b7f;
reg ld45bf9;
reg rv2dfcf;
reg [uk82fb4 : 0] qt7f3f5;
reg [uk82fb4 : 0] lqcfd6f;
reg rt7eb7a;
reg icf5bd6;
reg [31 : 0] puadeb1;
reg [31 : 0] mr6f58a;
reg of7ac54;
reg mrd62a4;
reg cbb1524;
reg qv8a924;
reg en54924;
reg [31 : 0] qva4924;
reg ou24924;
reg ym24920;
reg aa24900;
reg qi24800;
reg ou24000;
reg [uk82fb4 : 0] swb;
reg [uk82fb4 : 0] ie2c0;
reg [uk82fb4 : 0] bab002;
reg [uk82fb4 : 0] xwc009b;
reg [uk82fb4 : 0] sj26d0;
reg vx13685;
reg [uk82fb4 : 0] psda176;
reg dmd0bb2;
reg [uk82fb4 : 0] qi2ec95;
reg [uk82fb4 : 0] fcb254b;
reg [uk82fb4 : 0] mt952d9;
reg [uk82fb4 : 0] gb4b669;
reg [uk82fb4 : 0] kdd9a6c;
reg rtcd364;
reg [uk82fb4 : 0] fa4d932;
reg [13 : 0] xw6c993;
reg zx64c9a;
reg kf264d6;
reg vx326b4;
reg pu935a7;
reg [FADDR : 0] shd69d5;
reg cbb4ead;
reg [FADDR : 0] ng3ab6a;
reg [FADDR : 0] hqada92;
reg [FADDR : 0] kd6a491;
reg [uk82fb4 : 0] ks92462;
reg [uk82fb4 : 0] nt91880;
reg [uk82fb4 : 0] yk62032;
reg [1 : 0] aa10190;
reg [1 : 0] oh80c81;
reg [1 : 0] ph640d;
reg [31 : 0] xl3206f;
reg [31 : 0] gd9037f;
reg [31 : 0] lf81bfd;
reg [2047:0] ux1852e;
wire [102:0] xjc2975;

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

localparam do14bae = 103,jra5d72 = 32'hfdffca4b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif





`ifdef VC1
         


`else 



`ifdef VC2
                  


`else 



`ifdef VC3 
                           


`else



`ifdef VC4
                                    


`else
                                                            


`endif



`endif



`endif



`endif




`ifdef X4



`endif













`ifdef X1



`endif



`ifdef X4



`endif






`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (rst_n == 1'b0) begin         qi5d0c  <= 1'b0;         co2e861  <= 1'b0;         rt74309  <= 1'b0;         gda184e  <= 1'b0;      end      else begin         qi5d0c  <= sw2b9ba;         co2e861  <= qi5d0c;         rt74309  <= co2e861;         gda184e  <= rt74309;      end   end

`endif




















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx44df2      <= 32'd0;      qv26f95   <= 1'b0;      vx37cad <= 1'b0;      mtbe56e     <= 1'b0;      alf2b75      <= 1'b0;      an95bac        <= 1'b0;   end   else begin            if(tjc497 || ay624be || xj7b469)         yx44df2[11:0]  <= jcda34f;      yx44df2[23:12] <= 12'h000;              if(tjc497)         yx44df2[31:24]  <= 8'b0001_0000;          else if(((ay624be || oh17ae4) && !en54924) || xj7b469)         yx44df2[31:24]  <= 8'b0000_0000;    
            alf2b75  <= (tjc497 || ay624be || oh17ae4) ? 1'b1 : 1'b0;            if(vx13685 && (psda176 == hbf682c))         an95bac <= 1'b0;      else if(tjc497)         an95bac <= 1'b1;
            if(vx13685 && (psda176 == hbf682c))         mtbe56e <= 1'b0;      else if(qv8a924)         mtbe56e <= 1'b1;            qv26f95  <= qv8a924 & !cbb1524;            vx37cad  <= of7ac54 | gbf8c88;   end
end


`ifdef VC1
   assign hq2f4c6  = {1'b0, cz651f0};           assign ipd3195  = {1'b0, mg3e172};   assign shc6560 = {1'b0, of7a017};

`else 



`ifdef VC2
      assign hq2f4c6  = {ecaca3e[0], cz651f0};      assign ipd3195  = {vi47c2e[0], mg3e172};      assign shc6560 = {lq69e80[0], of7a017};


`else 



`ifdef VC3 
         assign hq2f4c6  = {ecaca3e[1:0], cz651f0};         assign ipd3195  = {vi47c2e[1:0], mg3e172};         assign shc6560 = {lq69e80[1:0], of7a017};


`else



`ifdef VC4
            assign hq2f4c6  = {ecaca3e[1:0], cz651f0};              assign ipd3195  = {vi47c2e[1:0], mg3e172};              assign shc6560 = {lq69e80[1:0], of7a017};  


`else
            assign hq2f4c6  = {ecaca3e, cz651f0};                  assign ipd3195  = {vi47c2e, mg3e172};                  assign shc6560 = {lq69e80, of7a017};  


`endif



`endif



`endif



`endif





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      bn22f47   <= 1'b0;      twbd1fd       <= 0;      for(aa88873=0; aa88873<=gd17da0; aa88873=aa88873+1)         vi47f54[aa88873]     <= 0;      icea894       <= 0;      fca250d     <= 0;      lf94355    <= 0;   end   else begin                        icea894 <= ks92462;            fca250d  <= ie2c0;            if(of7ac54)         lf94355 <= hbf682c;      else         lf94355 <= (gbf8c88) ? aa88b7f : bab002;            bn22f47  <= |os5c953;                  if(ou24000 || mrd62a4)         twbd1fd  <= swb + 1;      if(ou24000 || mrd62a4)         vi47f54[swb]  <= xwc009b;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      for(kd44399=0; kd44399<`NUM_VC; kd44399=kd44399+1) begin                  pu20684[kd44399]       <= 2'b01;         nt3423[kd44399]      <= 2'b01;         ec1a11f[kd44399]     <= 2'b01;      end      sj26268         <= 1'b0;      ec31344       <= 1'b0;      xw4d103         <= 0;      sh440d0       <= 0;      uk2b9db           <= 1'b1;      al4bad9         <= 1'b1;   end   else begin
                  for(kd44399=0; kd44399<`NUM_VC; kd44399=kd44399+1) begin         if((lq69e80 == kd44399) && (god1a7a || ec8d3d0)) begin            if(hb4f402) begin                  pu20684[kd44399]   <= 2'b11;               nt3423[kd44399]  <= 2'b11;               ec1a11f[kd44399] <= 2'b11;            end            else begin                 pu20684[kd44399]   <= 2'b01;               nt3423[kd44399]  <= 2'b01;               ec1a11f[kd44399] <= 2'b01;            end         end         else if(!pseb92a[kd44399]) begin                          if(!ykf0b91[kd44399])               pu20684[kd44399]   <= 2'b10;                if(!oh85c89[kd44399])               nt3423[kd44399]  <= 2'b10;                if(!mg2e44d[kd44399])               ec1a11f[kd44399] <= 2'b10;             end      end            sj26268   <= god1a7a;      if(god1a7a)            xw4d103   <= yk62032;            ec31344  <= mg1f191;      sh440d0  <= nt3222d;
                  if(god1a7a)         uk2b9db  <= 1'b0;      else if(vx13685 && (psda176 == nt3222d))         uk2b9db  <= 1'b1;
      al4bad9  <= uk2b9db;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tud08f8        <= 1'b0;      hd847c2      <= 1'b0;      qi1f0b5        <= 0;      xjc2d44      <= 0;      cm5ced9          <= 1'b1;   end   else begin            tud08f8   <= ec8d3d0;      if(ec8d3d0)            qi1f0b5   <= yk62032;            hd847c2  <= ld45bf9;      xjc2d44  <= qt7f3f5;
                  if(ec8d3d0)         cm5ced9  <= 1'b0;      else if(rtcd364 && (fa4d932 == qt7f3f5))         cm5ced9  <= 1'b1;
   end
end













always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      faeb663          <= 1'b0;      kd5b31a          <= 1'b0;      vx32b05          <= 0;


`ifdef X4
         dob7942   <= 0;


`endif
      mt9582e     <= 0;      aaac174     <= 0;      al60ba1     <= 0;   end   else begin      faeb663 <= 1'b0;      kd5b31a <= 1'b0;      if(qgf5565 || vx326b4) begin         if(ou24000 || mrd62a4 || zzaab28)             faeb663     <= 1'b1;         else begin            kd5b31a     <= 1'b1;


`ifdef X1
       vx32b05     <= vx32b05 + 3'b001;   


`endif



`ifdef X4
               dob7942 <= phy_skpq_nclks;                             vx32b05     <= vx32b05 + phy_skpq_nclks;    


`endif
         end      end      mt9582e <= vx32b05;      aaac174 <= mt9582e;      al60ba1 <= aaac174;   end
end












always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      fa5d6cc            <= 1'b0;      dll_pause_cnt       <= 0;      ead4911  <= 0;      ou24444       <= 0;      txdp_skip_cnt       <= 0;      mrcc6a4             <= 0;      xw63524       <= 1'b0;   end   else begin      fa5d6cc       <= ou24000 | mrd62a4;      dll_pause_cnt  <= shd69d5;      xw63524  <= zzaab28;      if(zzaab28)          txdp_skip_cnt <= al60ba1;        ead4911 <= ~dll_pause_cnt + 1;              if((ou24000 || mrd62a4) && zzaab28)          ou24444  <= ng3ab6a + 1;              else         ou24444  <= ng3ab6a;        mrcc6a4 <= shd69d5 + kd6a491;   end
end




always @(*) begin      case({kf264d6, pu935a7, cbb4ead})


`ifdef X1
         3'b100,         3'b010   : fc1110e = 1;   


`endif 



`ifdef X4
         3'b100   : fc1110e = 1;         3'b010   : fc1110e = dob7942;


`endif 
         3'b001,         3'b101   : fc1110e = hqada92;         default  : fc1110e = 0;      endcase
end


`ifdef X1







always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      hb45cc8     <= 1'b0;      aa24c4d       <= 0;      txdp_req1     <= 1'b0;      wj6abe4     <= 1'b0;      cbd57c     <= 0;      xlaf92e   <= 0;      txdp_req2     <= 1'b0;      qvbb54b     <= 1'b0;      vkb76a9     <= 0;      fad52eb   <= 0;   end   else begin            hb45cc8   <= vx13685 || rtcd364;         if(ir2f5c)         aa24c4d    <= cm77691[kdd9a6c];      else         aa24c4d    <= vi47f54[sj26d0];            txdp_req1   <= (swb != sj26d0) ? 1'b1 : 1'b0;      xlaf92e <= vi47f54[sj26d0];      wj6abe4     <= 1'b0;      if(ep805eb) begin         wj6abe4     <= 1'b1;         cbd57c     <= sj26d0 + 1;      end            txdp_req2   <= (qi2ec95 != kdd9a6c) ? 1'b1 : 1'b0;      fad52eb <= cm77691[kdd9a6c];      qvbb54b     <= 1'b0;      if(ir2f5c) begin         qvbb54b     <= 1'b1;         vkb76a9     <= kdd9a6c + 1;      end   end
end

`endif



`ifdef X4














always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      xj74dfc <= hdcf99;      wj6abe4     <= 1'b0;      cz4e9bf   <= 1'b0;      jpd290d     <= 1'b0;      cbd57c     <= 0;      xlaf92e   <= 0;      aa24c4d       <= 0;   end   else begin      cz4e9bf <= vx13685;      jpd290d   <= cz4e9bf;      xlaf92e <= vi47f54[sj26d0];      if(ir2f5c)         aa24c4d    <= cm77691[kdd9a6c];      else         aa24c4d    <= vi47f54[sj26d0];      wj6abe4     <= 1'b0;      case(xj74dfc)         hdcf99 : begin            if(swb != sj26d0)               xj74dfc <= me67ccf;         end         me67ccf : begin            if(gda184e && ep805eb) begin               xj74dfc <= mg3e679;               wj6abe4     <= 1'b1;               cbd57c     <= sj26d0 + 1;               end         end         mg3e679 : begin            if(qi5d0c && (swb == sj26d0)) begin               xj74dfc <= blf33c9;            end            else if(gda184e && ep805eb) begin                  wj6abe4     <= 1'b1;               cbd57c     <= sj26d0 + 1;            end         end         blf33c9 : begin            xj74dfc <= hdcf99;         end      endcase   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      phc274     <= fp2d60c;      txdp_req1    <= 1'b0;      zz9d37       <= 1'b0;      xj613a6       <= 1'b0;   end   else begin      zz9d37  <= txdp_req1;      if(zz9d37 && txdp_req1) begin         xj613a6  <= ep805eb;      end      else begin         xj613a6  <= 1'b0;      end      case(phc274)         fp2d60c : begin            if(swb != sj26d0) begin               txdp_req1 <= 1'b1;            end            phc274  <= (xj613a6 && gda184e) ? pf6b067 : fp2d60c;         end         pf6b067 : begin            txdp_req1    <= vx13685;            phc274     <= (cz4e9bf) ? pf6b067 : fp2d60c;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      eca6fe7     <= lq5833e;      txdp_req2    <= 1'b0;      zzbf9ce       <= 1'b0;   end   else begin      if(txdp_req2)         zzbf9ce  <= ir2f5c;      else         zzbf9ce  <= 1'b0;      case(eca6fe7)         lq5833e : begin            if(qi2ec95 != kdd9a6c)               txdp_req2 <= 1'b1;            eca6fe7  <= (zzbf9ce && txdp_req2) ? ayc19f3 : lq5833e;         end         ayc19f3 : begin            if((qi2ec95 == kdd9a6c) || !ir2f5c)               txdp_req2    <= 1'b0;            eca6fe7     <= (txdp_req2) ? ayc19f3 : lq5833e;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      db37f39 <= ls99e4f;      qvbb54b     <= 1'b0;      xjfce76   <= 1'b0;      jr9486f     <= 1'b0;      vkb76a9     <= 0;      fad52eb   <= 0;   end   else begin      xjfce76 <= rtcd364;      jr9486f   <= xjfce76;      fad52eb <= cm77691[kdd9a6c];      qvbb54b     <= 1'b0;      case(db37f39)         ls99e4f : begin            if(qi2ec95 != kdd9a6c)               db37f39 <= xwcf27a;         end         xwcf27a : begin            if(gda184e && ir2f5c) begin               db37f39 <= lq793d3;               qvbb54b     <= 1'b1;               vkb76a9     <= kdd9a6c + 1;               end         end         lq793d3 : begin            if(qi5d0c && (qi2ec95 == kdd9a6c)) begin               db37f39 <= ofc9e9a;            end            else if(gda184e && ir2f5c) begin                  qvbb54b     <= 1'b1;               vkb76a9     <= kdd9a6c + 1;            end         end         ofc9e9a : begin            db37f39 <= ls99e4f;         end      endcase   end
end

`endif






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      hb645e8          <= 1'b0;      ymac8bd         <= 1'b0;      rt6eb22       <= 1'b0;      gb75917       <= 1'b0;      gb705f6      <= 1'b0;      aaa975b <= 14'd0;   end   else begin            hb645e8  <= (xj7b469 && !cbb1524) ? 1'b1 : 1'b0;            if((rtcd364 && (fa4d932 == hbf682c)) || (vx13685 && (psda176 == hbf682c)))         ymac8bd <= 1'b0;      else if(qi24800)         ymac8bd <= 1'b1;            rt6eb22  <= qi24800 & !aa24900;            gb75917    <= ou24924 | icf5bd6 | rv2dfcf;                  if(aa24900)         aaa975b <= xw6c993 + 1;      else         aaa975b <= 14'd0;
      if(xw6c993 == al5eaac)         gb705f6  <= 1'b1;      else         gb705f6  <= 1'b0;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      by7c977    <= 1'b0;      hq25dda     <= 0;      for(co21ccc=0; co21ccc<=gd17da0; co21ccc=co21ccc+1)         cm77691[co21ccc]     <= 0;      zxd226a       <= 0;      ls89ab7     <= 0;      cz6adda    <= 0;   end   else begin                        zxd226a <= nt91880;            ls89ab7  <= fcb254b;            if(icf5bd6)         cz6adda  <= kfbed05;      else if(rv2dfcf)         cz6adda  <= lqcfd6f;      else         cz6adda <= (ou24924) ? hbf682c : mt952d9;                by7c977  <= |vie4a98;                  if(dmd0bb2 || ym24920)         hq25dda  <= qi2ec95 + 1;      if(dmd0bb2 || ym24920)         cm77691[qi2ec95]  <= gb4b669;   end
end










always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      fp16a26      <= 1'b0;      dbb5137    <= 1'b0;      xya89be     <= 32'd0;      hq1bef5 <= 32'd0;      rv386fb  <= 1'b0;      th4f4d5  <= 1'b0;   end   else begin            fp16a26 <= xl91341 || pu89a0f;      if(xl91341)          xya89be   <= {5'b00100, zk4d07b, 24'd0};      else if(pu89a0f)           xya89be   <= {8'b00110000, ww683da};            dbb5137  <= rt7eb7a;      if((fa4d932 == kfbed05) && ir2f5c)         hq1bef5 <= puadeb1;            th4f4d5  <= ((fa4d932 == kfbed05) && ir2f5c)  ? 1'b1 : 1'b0;


`ifdef X1
         rv386fb <= vkbd725;


`endif



`ifdef X4
         rv386fb <= ((fa4d932 == kfbed05) && rtcd364)  ? 1'b1 : 1'b0;  


`endif
   end
end
assign mef516e = rv386fb;












`ifdef EN_VC0
   always @(pu20684[0] or nt3423[0] or ec1a11f[0] or      zx504e9 or rv91d3a or rv8e9d6 or nr74eb6) begin      end357d[0]   = {pu20684[0], 2'b00, 1'b0, zx504e9, rv91d3a};      qv9abec[0]  = {nt3423[0], 2'b01, 1'b0, zx504e9, rv8e9d6};      psd5f65[0] = {ec1a11f[0], 2'b10, 1'b0, zx504e9, nr74eb6};   end

`endif



`ifdef EN_VC1
   always @(pu20684[1] or nt3423[1] or ec1a11f[1] or      ec8274f or doa75b7 or pu3adba or uvd6dd2) begin      end357d[1]   = {pu20684[1], 2'b00, 1'b0, ec8274f, doa75b7};      qv9abec[1]  = {nt3423[1], 2'b01, 1'b0, ec8274f, pu3adba};      psd5f65[1] = {ec1a11f[1], 2'b10, 1'b0, ec8274f, uvd6dd2};   end

`endif



`ifdef EN_VC2
   always @(pu20684[2] or nt3423[2] or ec1a11f[2] or      nt13a79 or qib6e95 or xyb74a8 or hdba543) begin      end357d[2]   = {pu20684[2], 2'b00, 1'b0, nt13a79, qib6e95};      qv9abec[2]  = {nt3423[2], 2'b01, 1'b0, nt13a79, xyb74a8};      psd5f65[2] = {ec1a11f[2], 2'b10, 1'b0, nt13a79, hdba543};   end

`endif



`ifdef EN_VC3
   always @(pu20684[3] or nt3423[3] or ec1a11f[3] or      mg9d3cf or nrd2a1f or oh950ff or vka87fd) begin      end357d[3]   = {pu20684[3], 2'b00, 1'b0, mg9d3cf, nrd2a1f};      qv9abec[3]  = {nt3423[3], 2'b01, 1'b0, mg9d3cf, oh950ff};      psd5f65[3] = {ec1a11f[3], 2'b10, 1'b0, mg9d3cf, vka87fd};   end

`endif



`ifdef EN_VC4
   always @(pu20684[4] or nt3423[4] or ec1a11f[4] or      lde9e79 or kq43feb or co1ff58 or goffac1) begin      end357d[4]   = {pu20684[4], 2'b00, 1'b0, lde9e79, kq43feb};      qv9abec[4]  = {nt3423[4], 2'b01, 1'b0, lde9e79, co1ff58};      psd5f65[4] = {ec1a11f[4], 2'b10, 1'b0, lde9e79, goffac1};   end

`endif



`ifdef EN_VC5
   always @(pu20684[5] or nt3423[5] or ec1a11f[5] or      hb4f3ce or alfd608 or dmeb044 or tu58222) begin      end357d[5]   = {pu20684[5], 2'b00, 1'b0, hb4f3ce, alfd608};      qv9abec[5]  = {nt3423[5], 2'b01, 1'b0, hb4f3ce, dmeb044};      psd5f65[5] = {ec1a11f[5], 2'b10, 1'b0, hb4f3ce, tu58222};   end

`endif



`ifdef EN_VC6
   always @(pu20684[6] or nt3423[6] or ec1a11f[6] or      ne79e77 or mec1113 or ux8898 or of444c5) begin      end357d[6]   = {pu20684[6], 2'b00, 1'b0, ne79e77, mec1113};      qv9abec[6]  = {nt3423[6], 2'b01, 1'b0, ne79e77, ux8898};      psd5f65[6] = {ec1a11f[6], 2'b10, 1'b0, ne79e77, of444c5};   end

`endif



`ifdef EN_VC7
   always @(pu20684[7] or nt3423[7] or ec1a11f[7] or      hocf3bb or lf2262c or db13166 or gq98b36) begin      end357d[7]   = {pu20684[7], 2'b00, 1'b0, hocf3bb, lf2262c};      qv9abec[7]  = {nt3423[7], 2'b01, 1'b0, hocf3bb, db13166};      psd5f65[7] = {ec1a11f[7], 2'b10, 1'b0, hocf3bb, gq98b36};   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      kdc37de   <= 32'd0;   end   else begin      case(mga3e32[uk82fb4:0])


`ifdef EN_VC0
            epb4166     : kdc37de  <= end357d[0];            hda0b34    : kdc37de  <= qv9abec[0];            uk59a6   : kdc37de  <= psd5f65[0];


`endif



`ifdef EN_VC1
            ph19052     : kdc37de  <= end357d[1];            jpc8297    : kdc37de  <= qv9abec[1];            al414be   : kdc37de  <= psd5f65[1];


`endif



`ifdef EN_VC2
            qi15621     : kdc37de  <= end357d[2];            mtab109    : kdc37de  <= qv9abec[2];            ne5884c   : kdc37de  <= psd5f65[2];


`endif



`ifdef EN_VC3
            zxc84ca     : kdc37de  <= end357d[3];            xw42656    : kdc37de  <= qv9abec[3];            jr132b3   : kdc37de  <= psd5f65[3];


`endif



`ifdef EN_VC4
            lfb0f1b     : kdc37de  <= end357d[4];            mg878df    : kdc37de  <= qv9abec[4];            ux3c6f8   : kdc37de  <= psd5f65[4];


`endif



`ifdef EN_VC5
            jpe37c4     : kdc37de  <= end357d[5];            ls1be26    : kdc37de  <= qv9abec[5];            bydf133   : kdc37de  <= psd5f65[5];


`endif



`ifdef EN_VC6
            wjf899a     : kdc37de  <= end357d[6];            ayc4cd5    : kdc37de  <= qv9abec[6];            gd266a9   : kdc37de  <= psd5f65[6];


`endif



`ifdef EN_VC7
            oh3354c     : kdc37de  <= end357d[7];            mt9aa65    : kdc37de  <= qv9abec[7];            jcd532d   : kdc37de  <= psd5f65[7];


`endif
         default  : kdc37de  <= mr6f58a;       endcase   end
end




`ifdef EN_VC0

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[0]   <= epb4166;      je1b52f[0]  <= hda0b34;      uid4bd3[0] <= uk59a6;   end   else begin      yx606d4[0]   <= epb4166;      je1b52f[0]  <= hda0b34;      uid4bd3[0] <= uk59a6;   end
end

`endif



`ifdef EN_VC1

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[1]   <= ph19052;      je1b52f[1]  <= jpc8297;      uid4bd3[1] <= al414be;   end   else begin      yx606d4[1]   <= ph19052;      je1b52f[1]  <= jpc8297;      uid4bd3[1] <= al414be;   end
end

`endif



`ifdef EN_VC2

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[2]   <= qi15621;      je1b52f[2]  <= mtab109;      uid4bd3[2] <= ne5884c;   end   else begin      yx606d4[2]   <= qi15621;      je1b52f[2]  <= mtab109;      uid4bd3[2] <= ne5884c;   end
end

`endif



`ifdef EN_VC3

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[3]   <= zxc84ca;      je1b52f[3]  <= xw42656;      uid4bd3[3] <= jr132b3;   end   else begin      yx606d4[3]   <= zxc84ca;      je1b52f[3]  <= xw42656;      uid4bd3[3] <= jr132b3;   end
end

`endif



`ifdef EN_VC4

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[4]   <= lfb0f1b;      je1b52f[4]  <= mg878df;      uid4bd3[4] <= ux3c6f8;   end   else begin      yx606d4[4]   <= lfb0f1b;      je1b52f[4]  <= mg878df;      uid4bd3[4] <= ux3c6f8;   end
end

`endif



`ifdef EN_VC5

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[5]   <= jpe37c4;      je1b52f[5]  <= ls1be26;      uid4bd3[5] <= bydf133;   end   else begin      yx606d4[5]   <= jpe37c4;      je1b52f[5]  <= ls1be26;      uid4bd3[5] <= bydf133;   end
end

`endif



`ifdef EN_VC6

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[6]   <= wjf899a;      je1b52f[6]  <= ayc4cd5;      uid4bd3[6] <= gd266a9;   end   else begin      yx606d4[6]   <= wjf899a;      je1b52f[6]  <= ayc4cd5;      uid4bd3[6] <= gd266a9;   end
end

`endif



`ifdef EN_VC7

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yx606d4[7]   <= oh3354c;      je1b52f[7]  <= mt9aa65;      uid4bd3[7] <= jcd532d;   end   else begin      yx606d4[7]   <= oh3354c;      je1b52f[7]  <= mt9aa65;      uid4bd3[7] <= jcd532d;   end
end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      for(hqe660=0; hqe660<`NUM_VC; hqe660=hqe660+1) begin         fnecab9[hqe660]   <= 1'b0;         kd655ce[hqe660]  <= 1'b0;         xy2ae75[hqe660] <= 1'b0;         by573ab[hqe660]  <= 1'b0;         qib9d5a[hqe660] <= 1'b0;         eacead1[hqe660]<= 1'b0;         mr75688[hqe660]  <= 1'b0;         sjab444[hqe660] <= 1'b0;         ld5a224[hqe660]<= 1'b0;      end      wwd1126     <= 1'b0;      gq88931     <= 1'b0;      bnafb2a   <= 0;      go7d957   <= 0;   end   else begin      wwd1126  <= th55947;      gq88931  <= nt28f85 & ~th55947;      for(hqe660=0; hqe660<`NUM_VC; hqe660=hqe660+1) begin                  fnecab9[hqe660]   <= 1'b0;         kd655ce[hqe660]  <= 1'b0;         xy2ae75[hqe660] <= 1'b0;         if((th55947 && ecaca3e == hqe660) || (nt28f85 && vi47c2e == hqe660)) begin            case(cz651f0)               ne4231a   : fnecab9[hqe660]   <= 1'b1;               fc118d3  : kd655ce[hqe660]  <= 1'b1;               xy8c69a : xy2ae75[hqe660] <= 1'b1;            endcase         end                                    if(vx13685 && (psda176 == yx606d4[hqe660]))            by573ab[hqe660] <= 1'b0;         else if(do254c2[hqe660] && cofd1f)            by573ab[hqe660] <= 1'b1;         if(vx13685 && (psda176 == je1b52f[hqe660]))            qib9d5a[hqe660] <= 1'b0;         else if(tw2a613[hqe660] && cofd1f)            qib9d5a[hqe660] <= 1'b1;         if(vx13685 && (psda176 == uid4bd3[hqe660]))            eacead1[hqe660] <= 1'b0;         else if(qg5309a[hqe660] && cofd1f)            eacead1[hqe660] <= 1'b1;                  bnafb2a[hqe660]    <= cofd1f & ((do254c2[hqe660] & !gq984d0[hqe660]) |                          (tw2a613[hqe660] & !pfc2681[hqe660]) | (qg5309a[hqe660] & !xl1340f[hqe660]));                           if(rtcd364 && (fa4d932 == yx606d4[hqe660]))            mr75688[hqe660] <= 1'b0;                  else if(do254c2[hqe660] && xj7e8f8 && !gq984d0[hqe660])            mr75688[hqe660] <= 1'b1;         if(rtcd364 && (fa4d932 == je1b52f[hqe660]))            sjab444[hqe660] <= 1'b0;         else if(tw2a613[hqe660] && xj7e8f8 && !pfc2681[hqe660])            sjab444[hqe660] <= 1'b1;         if(rtcd364 && (fa4d932 == uid4bd3[hqe660]))            ld5a224[hqe660] <= 1'b0;         else if(qg5309a[hqe660] && xj7e8f8 && !xl1340f[hqe660])            ld5a224[hqe660] <= 1'b1;                  go7d957[hqe660]    <= xj7e8f8 & ((do254c2[hqe660] & !gq984d0[hqe660] & !mt9a07e[hqe660]) |                          (tw2a613[hqe660] & !pfc2681[hqe660] & !fad03f4[hqe660]) |                          (qg5309a[hqe660] & !xl1340f[hqe660] & !db81fa3[hqe660]));      end    end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      epa437e   <= 0;      aa21bf5  <= 0;      sjdfa8 <= 0;   end   else begin      for(ne73303=0; ne73303<`NUM_VC; ne73303=ne73303+1) begin         epa437e[ne73303]   <= 1'b0;         aa21bf5[ne73303]  <= 1'b0;         sjdfa8[ne73303] <= 1'b0;         if((vx13685 && (psda176 == yx606d4[ne73303])) ||            (rtcd364 && (fa4d932 == yx606d4[ne73303])))            epa437e[ne73303] <= 1'b1;         if((vx13685 && (psda176 == je1b52f[ne73303])) ||            (rtcd364 && (fa4d932 == je1b52f[ne73303])))            aa21bf5[ne73303] <= 1'b1;         if((vx13685 && (psda176 == uid4bd3[ne73303])) ||            (rtcd364 && (fa4d932 == uid4bd3[ne73303])))            sjdfa8[ne73303] <= 1'b1;      end   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gb7a6af <= 1;   end   else begin      for(do9981b=0; do9981b<`NUM_VC; do9981b=do9981b+1) begin         if(psd00bd[do9981b])            gb7a6af[do9981b] <= 1'b1;         else if(!psd00bd[do9981b] && (sjdfa8[do9981b] || xj7b469 || tjc497))            gb7a6af[do9981b] <= 1'b0;      end   end
end




always@* begin al5eaac<={zkc5737>>1,xjc2975[0]};qgf5565<=xjc2975[1];zzaab28<=xjc2975[2];th55947<=xjc2975[3];ecaca3e<={god11ff>>1,xjc2975[4]};cz651f0<={ie88ff9>>1,xjc2975[5]};nt28f85<=xjc2975[6];vi47c2e<={ng3fe4a>>1,xjc2975[7]};mg3e172<={cmff252>>1,xjc2975[8]};ykf0b91<={zxf9291>>1,xjc2975[9]};oh85c89<={wjc948e>>1,xjc2975[10]};mg2e44d<={bl4a474>>1,xjc2975[11]};wld039<={su72ee1>>1,xjc2975[12]};xl91341<=xjc2975[13];pu89a0f<=xjc2975[14];zk4d07b<={vi66c1c>>1,xjc2975[15]};ww683da<={tx_vsd_data>>1,xjc2975[16]};tjc497<=xjc2975[17];ay624be<=xjc2975[18];xj7b469<=xjc2975[19];jcda34f<={rxtp_seq>>1,xjc2975[20]};god1a7a<=xjc2975[21];ec8d3d0<=xjc2975[22];lq69e80<={jc7c37b>>1,xjc2975[23]};hb4f402<=xjc2975[24];of7a017<={uxded2>>1,xjc2975[25]};psd00bd<={vcneg_pend>>1,xjc2975[26]};ep805eb<=xjc2975[27];ir2f5c<=xjc2975[28];oh17ae4<=xjc2975[29];vkbd725<=xjc2975[30];pseb92a<={gb7a6af>>1,xjc2975[31]};os5c953<={bnafb2a>>1,xjc2975[32]};vie4a98<={go7d957>>1,xjc2975[33]};do254c2<={fnecab9>>1,xjc2975[34]};tw2a613<={kd655ce>>1,xjc2975[35]};qg5309a<={xy2ae75>>1,xjc2975[36]};gq984d0<={by573ab>>1,xjc2975[37]};pfc2681<={qib9d5a>>1,xjc2975[38]};xl1340f<={eacead1>>1,xjc2975[39]};mt9a07e<={mr75688>>1,xjc2975[40]};fad03f4<={sjab444>>1,xjc2975[41]};db81fa3<={ld5a224>>1,xjc2975[42]};cofd1f<=xjc2975[43];xj7e8f8<=xjc2975[44];mga3e32<={aa24c4d>>1,xjc2975[45]};mg1f191<=xjc2975[46];gbf8c88<=xjc2975[47];nt3222d<={xw4d103>>1,xjc2975[48]};aa88b7f<={sh440d0>>1,xjc2975[49]};ld45bf9<=xjc2975[50];rv2dfcf<=xjc2975[51];qt7f3f5<={qi1f0b5>>1,xjc2975[52]};lqcfd6f<={xjc2d44>>1,xjc2975[53]};rt7eb7a<=xjc2975[54];icf5bd6<=xjc2975[55];puadeb1<={xya89be>>1,xjc2975[56]};mr6f58a<={yx44df2>>1,xjc2975[57]};of7ac54<=xjc2975[58];mrd62a4<=xjc2975[59];cbb1524<=xjc2975[60];qv8a924<=xjc2975[61];en54924<=xjc2975[62];qva4924<={jeadd64>>1,xjc2975[63]};ou24924<=xjc2975[64];ym24920<=xjc2975[65];aa24900<=xjc2975[66];qi24800<=xjc2975[67];ou24000<=xjc2975[68];swb<={twbd1fd>>1,xjc2975[69]};ie2c0<={icea894>>1,xjc2975[70]};bab002<={fca250d>>1,xjc2975[71]};xwc009b<={lf94355>>1,xjc2975[72]};sj26d0<={cbd57c>>1,xjc2975[73]};vx13685<=xjc2975[74];psda176<={xlaf92e>>1,xjc2975[75]};dmd0bb2<=xjc2975[76];qi2ec95<={hq25dda>>1,xjc2975[77]};fcb254b<={zxd226a>>1,xjc2975[78]};mt952d9<={ls89ab7>>1,xjc2975[79]};gb4b669<={cz6adda>>1,xjc2975[80]};kdd9a6c<={vkb76a9>>1,xjc2975[81]};rtcd364<=xjc2975[82];fa4d932<={fad52eb>>1,xjc2975[83]};xw6c993<={aaa975b>>1,xjc2975[84]};zx64c9a<=xjc2975[85];kf264d6<=xjc2975[86];vx326b4<=xjc2975[87];pu935a7<=xjc2975[88];shd69d5<={mrcc6a4>>1,xjc2975[89]};cbb4ead<=xjc2975[90];ng3ab6a<={ead4911>>1,xjc2975[91]};hqada92<={ou24444>>1,xjc2975[92]};kd6a491<={fc1110e>>1,xjc2975[93]};ks92462<={hq2f4c6>>1,xjc2975[94]};nt91880<={ipd3195>>1,xjc2975[95]};yk62032<={shc6560>>1,xjc2975[96]};aa10190<={cba40d3>>1,xjc2975[97]};oh80c81<={hd34eb>>1,xjc2975[98]};ph640d<={ald3af8>>1,xjc2975[99]};xl3206f<={jcebe29>>1,xjc2975[100]};gd9037f<={alf8a5e>>1,xjc2975[101]};lf81bfd<={gd297aa>>1,xjc2975[102]};end
always@* begin ux1852e[2047]<=phy_skpq_val;ux1852e[2046]<=bn37447;ux1852e[2044]<=ntba23f;ux1852e[2040]<=god11ff[0];ux1852e[2033]<=ie88ff9[0];ux1852e[2032]<=al4bad9;ux1852e[2019]<=vi47fc9;ux1852e[2017]<=fa5d6cc;ux1852e[2011]<=vi66c1c[0];ux1852e[1991]<=ng3fe4a[0];ux1852e[1987]<=faeb663;ux1852e[1974]<=tx_vsd_data[0];ux1852e[1935]<=cmff252[0];ux1852e[1926]<=kd5b31a;ux1852e[1925]<=aa24c4d[0];ux1852e[1919]<=alf8a5e[0];ux1852e[1900]<=rxtp_nak;ux1852e[1892]<=dbb5137;ux1852e[1862]<=go7d957[0];ux1852e[1847]<=hq25dda[0];ux1852e[1823]<=zxf9291[0];ux1852e[1805]<=mrcc6a4[0];ux1852e[1803]<=sj26268;ux1852e[1791]<=gd297aa[0];ux1852e[1790]<=qvbb54b;ux1852e[1753]<=ofd9108;ux1852e[1738]<=rt45f0d;ux1852e[1737]<=xya89be[0];ux1852e[1723]<=shc6560[0];ux1852e[1721]<=lf94355[0];ux1852e[1676]<=fnecab9[0];ux1852e[1656]<=sjab444[0];ux1852e[1647]<=zxd226a[0];ux1852e[1619]<=xwe1bda;ux1852e[1608]<=vx37cad;ux1852e[1598]<=wjc948e[0];ux1852e[1562]<=xw63524;ux1852e[1559]<=ec31344;ux1852e[1532]<=fad52eb[0];ux1852e[1503]<=ald3af8[0];ux1852e[1497]<=xjc2d44[0];ux1852e[1485]<=xlaf92e[0];ux1852e[1458]<=rxtp_ack;ux1852e[1454]<=icea894[0];ux1852e[1428]<=ls2f86f;ux1852e[1426]<=yx44df2[0];ux1852e[1399]<=cba40d3[0];ux1852e[1395]<=cbd57c[0];ux1852e[1338]<=tdmux_rdy2;ux1852e[1305]<=kd655ce[0];ux1852e[1264]<=ld5a224[0];ux1852e[1256]<=th4f4d5;ux1852e[1247]<=ls89ab7[0];ux1852e[1191]<=uxded2[0];ux1852e[1169]<=mtbe56e;ux1852e[1163]<=jeadd64[0];ux1852e[1149]<=bl4a474[0];ux1852e[1127]<=by573ab[0];ux1852e[1114]<=ymac8bd;ux1852e[1077]<=ead4911[0];ux1852e[1070]<=xw4d103[0];ux1852e[1023]<=zkc5737[0];ux1852e[1016]<=aaa975b[0];ux1852e[1005]<=an2cd83;ux1852e[962]<=gq88931;ux1852e[959]<=jcebe29[0];ux1852e[946]<=fp16a26;ux1852e[931]<=bnafb2a[0];ux1852e[923]<=by7c977;ux1852e[895]<=vkb76a9[0];ux1852e[869]<=rxtp_seq[0];ux1852e[861]<=ipd3195[0];ux1852e[860]<=fca250d[0];ux1852e[828]<=mr75688[0];ux1852e[809]<=jc7c37b[0];ux1852e[804]<=qv26f95;ux1852e[751]<=hd34eb[0];ux1852e[748]<=qi1f0b5[0];ux1852e[742]<=wj6abe4;ux1852e[727]<=twbd1fd[0];ux1852e[669]<=tdmux_rdy1;ux1852e[628]<=bn81da1;ux1852e[581]<=an95bac;ux1852e[563]<=xy2ae75[0];ux1852e[557]<=gb75917;ux1852e[502]<=jcc59b0;ux1852e[481]<=wwd1126;ux1852e[465]<=gb7a6af[0];ux1852e[447]<=cz6adda[0];ux1852e[430]<=hq2f4c6[0];ux1852e[414]<=eacead1[0];ux1852e[374]<=hd847c2;ux1852e[363]<=bn22f47;ux1852e[334]<=vcneg_pend[0];ux1852e[290]<=alf2b75;ux1852e[278]<=rt6eb22;ux1852e[251]<=su72ee1[0];ux1852e[215]<=fc1110e[0];ux1852e[207]<=qib9d5a[0];ux1852e[187]<=tud08f8;ux1852e[181]<=hb645e8;ux1852e[107]<=ou24444[0];ux1852e[93]<=sh440d0[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule















































































`timescale 1 ns / 100 ps
module  pcie_x1_top_fne3c2e #(
   parameter FADDR    = 6,   parameter D_WIDTH  = 64 )
   (
   input wire                   sys_clk,           
   input wire                   rst_n,             

   input wire [13:0]            zkc5737,   
                                            
   `ifdef X4
      input wire                sw2b9ba,       
      input wire                qgd1a4f,        
      input wire [2:0]          phy_cfgln_sum,     
      input wire [1:0]          phy_skpq_nclks,    
   `endif
   input wire                   phy_link_up,       
   input wire                   phy_skpq_val,      
   input wire                   bn37447,    

   
   input wire                   ntba23f,        
   input wire [2:0]             god11ff,          
   input wire [1:0]             ie88ff9,          

   input wire                   vi47fc9,        
   input wire [2:0]             ng3fe4a,          
   input wire [1:0]             cmff252,          
 
   input wire [`NUM_VC -1:0]     zxf9291,    
   input wire [`NUM_VC -1:0]     wjc948e,   
   input wire [`NUM_VC -1:0]     bl4a474,  
   input wire [(`NUM_VC*3) -1:0] su72ee1,         
   `ifdef EN_VC0
      input wire [23:0]      rv91d3a,               
      input wire [23:0]      rv8e9d6,
      input wire [23:0]      nr74eb6,
   `endif
   `ifdef EN_VC1
      input wire [23:0]      doa75b7,               
      input wire [23:0]      pu3adba,
      input wire [23:0]      uvd6dd2,
   `endif
   `ifdef EN_VC2
      input wire [23:0]      qib6e95,               
      input wire [23:0]      xyb74a8,
      input wire [23:0]      hdba543,
   `endif
   `ifdef EN_VC3
      input wire [23:0]      nrd2a1f,               
      input wire [23:0]      oh950ff,
      input wire [23:0]      vka87fd,
   `endif
   `ifdef EN_VC4
      input wire [23:0]      kq43feb,               
      input wire [23:0]      co1ff58,
      input wire [23:0]      goffac1,
   `endif
   `ifdef EN_VC5
      input wire [23:0]      alfd608,               
      input wire [23:0]      dmeb044,
      input wire [23:0]      tu58222,
   `endif
   `ifdef EN_VC6
      input wire [23:0]      mec1113,               
      input wire [23:0]      ux8898,
      input wire [23:0]      of444c5,
   `endif
   `ifdef EN_VC7
      input wire [23:0]      lf2262c,               
      input wire [23:0]      db13166,
      input wire [23:0]      gq98b36,
   `endif

   
   input wire                jcc59b0,                
   input wire                an2cd83,            
   input wire [2:0]          vi66c1c,          
   input wire [23:0]         tx_vsd_data,          

   
   input wire                rxtp_nak,             
   input wire                ofd9108,         
   input wire                rxtp_ack,             
   input wire [11:0]         rxtp_seq,             

   
   input wire                rt45f0d,           
   input wire                ls2f86f,          
   input wire [2:0]          jc7c37b,          
   input wire                xwe1bda,          
   input wire [1:0]          uxded2,          
   input wire [`NUM_VC -1:0] vcneg_pend,           


   
   input wire [D_WIDTH-1:0]  txtp_tdata,           
   input wire                txtp_st,              
   input wire                txtp_end,             
   input wire                txtp_edb,             
   `ifdef X1
      input wire             txtp_erly_tval,       
   `endif
   `ifdef X4
      input wire             ne79b37,            
      input wire             jpcd9bb ,           
   `endif

   
   output wire [FADDR:0]     dll_pause_cnt,        

   
   output wire [D_WIDTH-1:0]  tdmux_data,           
   output wire               tdmux_val,            
   output wire               tdmux_st,             
   output wire               tdmux_end,            
   output wire               tdmux_edb,            
   `ifdef X1
      output wire            tdmux_dllp_st,        
      output wire            tdmux_dllp_end,       
   `endif
   `ifdef X4
      output wire            ng96a8a,           
      output wire            rvaa29e,           
   `endif
   output wire               tdmux_skip,           

   
   output wire [`NUM_VC -1:0] epa437e,         
   output wire [`NUM_VC -1:0] aa21bf5,        
   output wire [`NUM_VC -1:0] sjdfa8,       
   output wire                hq111f2,          
   output wire                qi88f93,          
   output wire                ene76c8,       
   output wire                wy3b644,       

   
   output wire                uk2b9db,            
   output wire                cm5ced9,           

   
   output wire                mef516e           );
wire                      txdp_req1;
wire                      txdp_req2;

`ifdef X1
wire   [3:0]           txdp_skip_cnt;
wire   [15:0]          txdp_data;

`endif

`ifdef X4
wire   [2:0]           txdp_skip_cnt;
wire                   jpd290d;
wire                   jr9486f;
wire   [47:0]          txdp_data;
wire                   tw41e8;

`endif
reg                       bn81da1;
reg                       ux7a12;
reg                       hd3d094;
reg                       ipe84a6;
reg   [11:0]              lq42535;
reg                       qv129ab;
reg   [2:0]               nt94d5d;
reg                       iea6aee;
reg    [23:0]             hq35771;
reg                       epabb8a;
reg                       fa5dc55;
wire                      rv386fb;
wire   [31:0]             kdc37de;
wire   [31:0]             hq1bef5;
wire                      gb705f6;
wire                      fpaa5a7;
wire                      jc52d3e;
wire                      tdmux_rdy1;
wire                      tdmux_rdy2;

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`define TDMUX_MOD pcie_x1_top_td_mux_x1

`endif

`ifdef X4

`define TDMUX_MOD td_mux

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [13 : 0] al5eaac;
reg qv730f;
reg qgf5565;
reg zzaab28;
reg th55947;
reg [2 : 0] ecaca3e;
reg [1 : 0] cz651f0;
reg nt28f85;
reg [2 : 0] vi47c2e;
reg [1 : 0] mg3e172;
reg [`NUM_VC - 1 : 0] ykf0b91;
reg [`NUM_VC - 1 : 0] oh85c89;
reg [`NUM_VC - 1 : 0] mg2e44d;
reg [(`NUM_VC * 3) - 1 : 0] wld039;
reg xl91341;
reg pu89a0f;
reg [2 : 0] zk4d07b;
reg [23 : 0] ww683da;
reg tjc497;
reg ay624be;
reg xj7b469;
reg [11 : 0] jcda34f;
reg god1a7a;
reg ec8d3d0;
reg [2 : 0] lq69e80;
reg hb4f402;
reg [1 : 0] of7a017;
reg [`NUM_VC - 1 : 0] psd00bd;
reg [D_WIDTH - 1 : 0] dz6e534;
reg su729a6;
reg ph94d30;
reg yma6986;
reg do30c48;
reg oh17ae4;
reg kqc45e9;
reg fp22f48;
reg kf17a47;
reg [11 : 0] pubd23d;
reg vve91ea;
reg [2 : 0] lq48f57;
reg tu47abb;
reg [23 : 0] zz3d5da;
reg uieaed6;
reg dm576b1;
reg mt26dcd;
reg [31 : 0] oh36e6d;
reg [31 : 0] hqb736c;
reg sjb155c;
reg oh8aae4;
reg pf55724;
reg ep805eb;
reg ir2f5c;
reg [2047:0] ux1852e;
wire [51:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`define TDMUX_MOD pcie_x1_top_td_mux_x1

`endif

`ifdef X4

`define TDMUX_MOD td_mux

`endif


`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 52,jra5d72 = 32'hfdffe81b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`define TDMUX_MOD pcie_x1_top_td_mux_x1


`endif


`ifdef X4


`define TDMUX_MOD td_mux


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`endif



`ifdef X4



`endif

















assign hq111f2 = tjc497 | ay624be | sjb155c;
assign qi88f93 = xj7b469 | xl91341 | pu89a0f;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      bn81da1    <= 1'b0;      ux7a12       <= 1'b0;      hd3d094   <= 1'b0;      ipe84a6       <= 1'b0;      lq42535       <= 12'd0;      qv129ab          <= 1'b0;      nt94d5d      <= 3'b000;      iea6aee      <= 1'b0;      hq35771     <= 24'd0;   end   else begin      bn81da1    <= sjb155c;      ux7a12       <= tjc497;      hd3d094   <= ay624be;      ipe84a6       <= xj7b469;      lq42535       <= jcda34f;      qv129ab          <= xl91341;      nt94d5d      <= zk4d07b;      iea6aee      <= pu89a0f;      hq35771     <= ww683da;   end
end






assign ene76c8    = !(uieaed6 || th55947);
assign wy3b644    = !(dm576b1 || nt28f85);
assign fpaa5a7  = god1a7a && ene76c8;
assign jc52d3e = ec8d3d0 && wy3b644;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin     epabb8a    <= 1'b0;     fa5dc55   <= 1'b0;   end   else begin     epabb8a       <= tjc497 | ay624be | sjb155c;     fa5dc55      <= xj7b469 | xl91341 | pu89a0f;   end
end




pcie_x1_top_vif49c5 #(   .FADDR                ( FADDR ))   wl9f2f2 (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),   .zkc5737          (al5eaac),


`ifdef X4
      .sw2b9ba           (sw2b9ba),      .phy_skpq_nclks        (phy_skpq_nclks),


`endif
      .phy_skpq_val             (qgf5565),   .bn37447           (zzaab28),      .ntba23f               (th55947),   .god11ff                 (ecaca3e),   .ie88ff9                 (cz651f0),   .vi47fc9               (nt28f85),   .ng3fe4a                 (vi47c2e),   .cmff252                 (mg3e172),
   .zxf9291            (ykf0b91),   .wjc948e           (oh85c89),   .bl4a474          (mg2e44d),   .su72ee1                 (wld039),


`ifdef EN_VC0
      .rv91d3a                   (rv91d3a),      .rv8e9d6                  (rv8e9d6),      .nr74eb6                 (nr74eb6),


`endif



`ifdef EN_VC1
      .doa75b7                   (doa75b7),      .pu3adba                  (pu3adba),      .uvd6dd2                 (uvd6dd2),


`endif



`ifdef EN_VC2
      .qib6e95                   (qib6e95),      .xyb74a8                  (xyb74a8),      .hdba543                 (hdba543),


`endif



`ifdef EN_VC3
      .nrd2a1f                   (nrd2a1f),      .oh950ff                  (oh950ff),      .vka87fd                 (vka87fd),


`endif



`ifdef EN_VC4
      .kq43feb                   (kq43feb),      .co1ff58                  (co1ff58),      .goffac1                 (goffac1),


`endif



`ifdef EN_VC5
      .alfd608                   (alfd608),      .dmeb044                  (dmeb044),      .tu58222                 (tu58222),


`endif



`ifdef EN_VC6
      .mec1113                   (mec1113),      .ux8898                  (ux8898),      .of444c5                 (of444c5),


`endif



`ifdef EN_VC7
      .lf2262c                   (lf2262c),      .db13166                  (db13166),      .gq98b36                 (gq98b36),


`endif


      .jcc59b0                    (vve91ea),   .vi66c1c              (lq48f57),   .an2cd83                (tu47abb),   .tx_vsd_data              (zz3d5da),      .rxtp_nak                 (kqc45e9),   .ofd9108             (fp22f48),   .rxtp_ack                 (kf17a47),   .rxtp_seq                 (pubd23d),      .vcneg_pend               (psd00bd),   .rt45f0d               (oh8aae4),   .ls2f86f              (pf55724),   .jc7c37b              (lq69e80),   .xwe1bda              (hb4f402),   .uxded2              (of7a017),      .tdmux_rdy1               (ep805eb),   .tdmux_rdy2               (ir2f5c),   .bn81da1            (oh17ae4),         .dll_pause_cnt            (dll_pause_cnt),      .txdp_req1                (txdp_req1),   .txdp_req2                (txdp_req2),   .txdp_skip_cnt            (txdp_skip_cnt),


`ifdef X4
      .jpd290d             (jpd290d),      .jr9486f             (jr9486f),


`endif

      .epa437e              (epa437e),   .aa21bf5             (aa21bf5),   .sjdfa8            (sjdfa8),      .uk2b9db                 (uk2b9db),   .cm5ced9                (cm5ced9),      .mef516e             (mef516e),   


`ifdef X1
      .hb45cc8             (hb45cc8),


`endif
   .rv386fb               (rv386fb),   .kdc37de                 (kdc37de),   .hq1bef5              (hq1bef5),   .gb705f6              (gb705f6)   );



pcie_x1_top_zk4da2e  ykef365(   .sys_clk                  (sys_clk),   .rst_n                    (rst_n),


`ifdef X1
      .hb45cc8             (hb45cc8),      .txdp_val              (txdp_val),      .txdp_dllp_st          (txdp_dllp_st),      .txdp_dllp_end         (txdp_dllp_end),      .xjc8e1b                  (txdp_data[15:0]),


`endif



`ifdef X4
      .xjc8e1b                  (txdp_data[47:0]),


`endif
   .rv386fb               (mt26dcd),   .kdc37de                 (oh36e6d),   .hq1bef5              (hqb736c)   );




`ifdef X1



`define TDMUX_MOD pcie_x1_top_td_mux_x1



`endif



`ifdef X4



`define TDMUX_MOD td_mux



`endif

`TDMUX_MOD qi88f6c (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .phy_link_up              (phy_link_up),


`ifdef X4
      .tlpgen_tval           (sw2b9ba),      .phy_x4_val            (qgd1a4f),      .phy_cfgln_sum         (phy_cfgln_sum),


`endif

      .txtp_tdata               (txtp_tdata),   .txtp_st                  (txtp_st),   .txtp_end                 (txtp_end),   .txtp_edb                 (txtp_edb),


`ifdef X1
      .txtp_erly_tval        (txtp_erly_tval),


`endif



`ifdef X4
      .txtp_tval             (ne79b37),      .txtp_dwen             (jpcd9bb),


`endif

   


`ifdef X1
      .txdp_req1             (txdp_req1),      .txdp_req2             (txdp_req2),      .txdp_val              (txdp_val),      .txdp_dllp_st          (txdp_dllp_st),      .txdp_dllp_end         (txdp_dllp_end),


`endif



`ifdef X4
      .txdp_req1             (txdp_req1),      .txdp_val1             (jpd290d),      .txdp_val2             (jr9486f),


`endif
   .txdp_skip_cnt            (txdp_skip_cnt),   .txdp_data                (txdp_data),         .tdmux_data               (tdmux_data),   .tdmux_val                (tdmux_val),   .tdmux_st                 (tdmux_st),   .tdmux_end                (tdmux_end),   .tdmux_edb                (tdmux_edb),   .tdmux_skip               (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st         (tdmux_dllp_st),      .tdmux_dllp_end        (tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_dwen            (ng96a8a),      .tdmux_dllp            (rvaa29e),


`endif

      .tdmux_rdy1               (tdmux_rdy1),   .tdmux_rdy2               (tdmux_rdy2)   );

always@* begin al5eaac<={zkc5737>>1,xjc2975[0]};qv730f<=xjc2975[1];qgf5565<=xjc2975[2];zzaab28<=xjc2975[3];th55947<=xjc2975[4];ecaca3e<={god11ff>>1,xjc2975[5]};cz651f0<={ie88ff9>>1,xjc2975[6]};nt28f85<=xjc2975[7];vi47c2e<={ng3fe4a>>1,xjc2975[8]};mg3e172<={cmff252>>1,xjc2975[9]};ykf0b91<={zxf9291>>1,xjc2975[10]};oh85c89<={wjc948e>>1,xjc2975[11]};mg2e44d<={bl4a474>>1,xjc2975[12]};wld039<={su72ee1>>1,xjc2975[13]};xl91341<=xjc2975[14];pu89a0f<=xjc2975[15];zk4d07b<={vi66c1c>>1,xjc2975[16]};ww683da<={tx_vsd_data>>1,xjc2975[17]};tjc497<=xjc2975[18];ay624be<=xjc2975[19];xj7b469<=xjc2975[20];jcda34f<={rxtp_seq>>1,xjc2975[21]};god1a7a<=xjc2975[22];ec8d3d0<=xjc2975[23];lq69e80<={jc7c37b>>1,xjc2975[24]};hb4f402<=xjc2975[25];of7a017<={uxded2>>1,xjc2975[26]};psd00bd<={vcneg_pend>>1,xjc2975[27]};dz6e534<={txtp_tdata>>1,xjc2975[28]};su729a6<=xjc2975[29];ph94d30<=xjc2975[30];yma6986<=xjc2975[31];do30c48<=xjc2975[32];oh17ae4<=xjc2975[33];kqc45e9<=xjc2975[34];fp22f48<=xjc2975[35];kf17a47<=xjc2975[36];pubd23d<={lq42535>>1,xjc2975[37]};vve91ea<=xjc2975[38];lq48f57<={nt94d5d>>1,xjc2975[39]};tu47abb<=xjc2975[40];zz3d5da<={hq35771>>1,xjc2975[41]};uieaed6<=xjc2975[42];dm576b1<=xjc2975[43];mt26dcd<=xjc2975[44];oh36e6d<={kdc37de>>1,xjc2975[45]};hqb736c<={hq1bef5>>1,xjc2975[46]};sjb155c<=xjc2975[47];oh8aae4<=xjc2975[48];pf55724<=xjc2975[49];ep805eb<=xjc2975[50];ir2f5c<=xjc2975[51];end
always@* begin ux1852e[2047]<=phy_link_up;ux1852e[2046]<=phy_skpq_val;ux1852e[2045]<=bn37447;ux1852e[2042]<=ntba23f;ux1852e[2037]<=god11ff[0];ux1852e[2026]<=ie88ff9[0];ux1852e[2005]<=vi47fc9;ux1852e[1962]<=ng3fe4a[0];ux1852e[1891]<=uxded2[0];ux1852e[1877]<=cmff252[0];ux1852e[1844]<=hd3d094;ux1852e[1742]<=ofd9108;ux1852e[1735]<=vcneg_pend[0];ux1852e[1707]<=zxf9291[0];ux1852e[1666]<=iea6aee;ux1852e[1654]<=rt45f0d;ux1852e[1640]<=ipe84a6;ux1852e[1593]<=txtp_end;ux1852e[1459]<=tx_vsd_data[0];ux1852e[1437]<=rxtp_ack;ux1852e[1422]<=txtp_tdata[0];ux1852e[1388]<=an2cd83;ux1852e[1371]<=su72ee1[0];ux1852e[1366]<=wjc948e[0];ux1852e[1351]<=jc52d3e;ux1852e[1308]<=tdmux_rdy2;ux1852e[1285]<=hq35771[0];ux1852e[1260]<=ls2f86f;ux1852e[1232]<=lq42535[0];ux1852e[1139]<=txtp_edb;ux1852e[1045]<=fa5dc55;ux1852e[1023]<=zkc5737[0];ux1852e[945]<=xwe1bda;ux1852e[922]<=ux7a12;ux1852e[871]<=rxtp_nak;ux1852e[833]<=nt94d5d[0];ux1852e[827]<=rxtp_seq[0];ux1852e[796]<=txtp_st;ux1852e[729]<=vi66c1c[0];ux1852e[694]<=jcc59b0;ux1852e[685]<=bl4a474[0];ux1852e[675]<=fpaa5a7;ux1852e[654]<=tdmux_rdy1;ux1852e[522]<=epabb8a;ux1852e[472]<=jc7c37b[0];ux1852e[461]<=bn81da1;ux1852e[416]<=qv129ab;ux1852e[337]<=gb705f6;ux1852e[230]<=txdp_req2;ux1852e[168]<=hq1bef5[0];ux1852e[84]<=kdc37de[0];ux1852e[42]<=rv386fb;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
























































`timescale 1 ns / 100 ps
module pcie_x1_top_cmc144a #(
   parameter D_WIDTH  = 64 )
   (
   input wire        sys_clk ,       
   input wire        rst_n ,         

   input wire [D_WIDTH-1:0] dz50357 ,     
   input wire        nt81abf ,       
   input wire        gdd5ff ,      
   input wire        cz6affc ,      
   `ifdef X4
      input wire     ps57fe5 ,     
      input wire     fpbff2b ,     
      output wire    ne79b37 ,     
      output reg     jpcd9bb ,     
   `endif

   output reg [D_WIDTH-1:0] txtp_tdata ,    
   output wire       al5e1c9 , 
   output reg        txtp_st ,       
   output reg        txtp_end ,      
   output reg        txtp_edb          ) ;
reg [D_WIDTH-1:0]    ea4c265 ;
reg                  nr61328 ;
reg                  xl9947 ;
reg                  kq4ca3f ;
reg                  mr651f9 ;
reg                  ph28fcd ;
reg                  lq47e6e ;
reg                  ls3f372 ;
reg [31:0]           thf9b93;
wire                 enable_crc ;
wire [31:0]          hd2d21d;
reg                    me727fe;
reg                    vk93ff1 ;

`ifdef X4
reg                 an9ff8b ;
reg                 qgffc5d ;
reg                 byfe2e8 ;
wire [31:0]         an85a43;
reg [15:0]          rv8ba1a ;
reg                 lq5d0d6;
wire                half_data ;
reg                 os4359d ;
reg                 mg1ace9 ;

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] ksb3a4c;
reg aa9d260;
reg the9301;
reg ui4980f;
reg me4c079;
reg yx603c8;
reg fc1e45;
reg swf22b;
reg xw79159;
reg hbc8aca;
reg pf45657;
reg [31 : 0] qi2b2be;
reg su595f0;
reg [31 : 0] facaf81;
reg tu57c0a;
reg kfbe053;
reg [2047:0] ux1852e;
wire [15:0] xjc2975;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 16,jra5d72 = 32'hfdffe81b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X4



`endif







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ea4c265 <= {D_WIDTH{1'b0}} ;      nr61328   <= 1'b0 ;      xl9947  <= 1'b0 ;      kq4ca3f  <= 1'b0 ;      mr651f9  <= 1'b0 ;      ph28fcd  <= 1'b0 ;
      lq47e6e  <= 1'b0 ;      ls3f372  <= 1'b0 ;



`ifdef X4
         an9ff8b <= 1'b0 ;         qgffc5d <= 1'b0 ;         byfe2e8 <= 1'b0 ;


`endif
   end


`ifdef X4
   else if (ps57fe5) begin      ea4c265 <= ksb3a4c ;      nr61328   <= aa9d260 ;      xl9947 <= the9301 ;      kq4ca3f <= ui4980f ;      mr651f9 <= yx603c8 ;      ph28fcd <= fc1e45 ;      lq47e6e <= swf22b ;      ls3f372 <= xw79159 ;      an9ff8b <= fpbff2b ;      qgffc5d <= an9ff8b ;      byfe2e8 <= qgffc5d ;   end


`endif



`ifdef X1
   else begin      ea4c265 <= ksb3a4c ;      nr61328   <= aa9d260 ;      xl9947 <= the9301 ;      kq4ca3f <= ui4980f ;      mr651f9 <= yx603c8 ;      ph28fcd <= fc1e45 ;      lq47e6e <= swf22b ;      ls3f372 <= xw79159 ;   end


`endif

end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vk93ff1 <= 1'b0 ;


`ifdef X1
   else if (aa9d260)      vk93ff1 <= 1'b1 ;   else if (yx603c8 || fc1e45 )      vk93ff1 <= 1'b0 ;


`endif



`ifdef X4
   else if (aa9d260 & ps57fe5)      vk93ff1 <= 1'b1 ;   else if ((the9301 || ui4980f) & ps57fe5)      vk93ff1 <= 1'b0 ;


`endif

end

`ifdef X1
   assign enable_crc = kfbe053 ;

`endif



`ifdef X4
   assign enable_crc = (aa9d260 & ps57fe5) | kfbe053 ;

`endif



pcie_x1_top_al705a0 #(   .D_WIDTH     ( D_WIDTH ) )   ohb4107(      .sys_clk     ( sys_clk ) ,   .rst_n       ( rst_n ),   


`ifdef X1
      .data_in    ( ea4c265 ),


`endif



`ifdef X4
      .data_in    ( ksb3a4c ),


`endif
   .enable_crc ( su595f0 ),


`ifdef X4
      .qi2ee76   ( ps57fe5 ),      .half_data  ( half_data ),      .an85a43  ( an85a43 ),


`endif
   .hd2d21d  ( hd2d21d )   ) ;




`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         txtp_tdata <= 16'h00 ;      else if (swf22b)         txtp_tdata <= facaf81[31:16] ;      else if (hbc8aca)         txtp_tdata <= qi2b2be[15:0] ;      else if (xw79159)         txtp_tdata <= ~facaf81[31:16] ;      else if (pf45657)         txtp_tdata <= ~qi2b2be[15:0] ;      else         txtp_tdata <= ea4c265 ;   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         thf9b93 <= 32'h0000 ;      else         thf9b93 <= facaf81 ;   end

`endif



`ifdef X4
   always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         txtp_tdata <= 64'h0000_0000 ;      else if (os4359d)         case ({an9ff8b, fc1e45})            2'b11 :               txtp_tdata <= {ea4c265[63:48], ~(facaf81[31:0]), 16'h0000} ;            2'b10 :               txtp_tdata <= {ea4c265[63:48], facaf81[31:0], 16'h0000} ;            2'b01 :               txtp_tdata <= {ea4c265[63:16], ~(an85a43[31:16])} ;            2'b00 :               txtp_tdata <= {ea4c265[63:16], an85a43[31:16]} ;            default :                txtp_tdata <= {ea4c265[63:16], an85a43[31:16]} ;         endcase      else if (mg1ace9 && !qgffc5d )         if (xw79159)            txtp_tdata <= {~(rv8ba1a[15:0]), 48'h0000_0000_0000} ;         else            txtp_tdata <= {rv8ba1a[15:0], 48'h0000_0000_0000} ;      else         txtp_tdata <= ea4c265 ;   end

`endif




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      me727fe <= 1'b0 ;   else if (aa9d260)      me727fe <= 1'b1 ;


`ifdef X1
      else if (hbc8aca || pf45657)         me727fe <= 1'b0 ;


`endif



`ifdef X4
      else if (an9ff8b && (yx603c8 | fc1e45))         me727fe <= 1'b0 ;      else if (!qgffc5d && (swf22b | xw79159))         me727fe <= 1'b0 ;


`endif

end


`ifdef X1
   assign al5e1c9 = tu57c0a ;

`endif



`ifdef X4
   assign al5e1c9 = tu57c0a & ps57fe5 ;

`endif




`ifdef X4
      assign half_data = the9301 | ui4980f ;      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n) begin         os4359d <= 1'b0 ;         mg1ace9 <= 1'b0 ;         rv8ba1a <= 16'h0000 ;      end      else if (ps57fe5) begin         os4359d <= half_data ;         mg1ace9 <= os4359d ;         rv8ba1a <= an85a43 ;      end   end      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         lq5d0d6 <= 1'b0 ;      else if (me4c079 )         lq5d0d6 <= 1'b1 ;      else if (qgffc5d && (swf22b | xw79159))         lq5d0d6 <= 1'b0 ;      else if (!byfe2e8 && (hbc8aca | pf45657))         lq5d0d6 <= 1'b0 ;   end   assign ne79b37 = lq5d0d6 & ps57fe5 ;

`endif




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      txtp_st    <= 1'b0 ;      txtp_end   <= 1'b0 ;      txtp_edb   <= 1'b0 ;


`ifdef X4
         jpcd9bb  <= 1'b0 ;


`endif
   end   else begin


`ifdef X1
         txtp_st    <= me4c079 ;         txtp_end   <= hbc8aca ;         txtp_edb   <= pf45657 ;


`endif



`ifdef X4
         txtp_st <= me4c079 ;         if (an9ff8b) begin            txtp_end  <= yx603c8 ;            txtp_edb  <= fc1e45 ;            jpcd9bb <= ~an9ff8b & (yx603c8 | fc1e45)  ;         end         else if (!qgffc5d) begin            txtp_end  <= swf22b ;            txtp_edb  <= xw79159 ;            jpcd9bb <= ~qgffc5d & (swf22b | xw79159)  ;         end         else begin            txtp_end  <= 1'b0 ;            txtp_edb  <= 1'b0 ;            jpcd9bb <= 1'b0 ;         end


`endif
   end
end
always@* begin ksb3a4c<={dz50357>>1,xjc2975[0]};aa9d260<=xjc2975[1];the9301<=xjc2975[2];ui4980f<=xjc2975[3];me4c079<=xjc2975[4];yx603c8<=xjc2975[5];fc1e45<=xjc2975[6];swf22b<=xjc2975[7];xw79159<=xjc2975[8];hbc8aca<=xjc2975[9];pf45657<=xjc2975[10];qi2b2be<={thf9b93>>1,xjc2975[11]};su595f0<=xjc2975[12];facaf81<={hd2d21d>>1,xjc2975[13]};tu57c0a<=xjc2975[14];kfbe053<=xjc2975[15];end
always@* begin ux1852e[2047]<=nt81abf;ux1852e[2046]<=gdd5ff;ux1852e[2045]<=cz6affc;ux1852e[2042]<=nr61328;ux1852e[2037]<=xl9947;ux1852e[2026]<=kq4ca3f;ux1852e[2005]<=mr651f9;ux1852e[1962]<=ph28fcd;ux1852e[1877]<=lq47e6e;ux1852e[1707]<=ls3f372;ux1852e[1388]<=vk93ff1;ux1852e[1371]<=hd2d21d[0];ux1852e[1366]<=thf9b93[0];ux1852e[1023]<=dz50357[0];ux1852e[694]<=me727fe;ux1852e[685]<=enable_crc;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

































`timescale 1 ns / 100 ps
module pcie_x1_top_al705a0 #(
   parameter D_WIDTH = 64 )
   (
   input wire         sys_clk ,    
   input wire         rst_n ,      

   input wire [D_WIDTH-1:0]  data_in ,    
   input wire         enable_crc , 
   `ifdef X4
      input wire         qi2ee76 ,   
      input wire         half_data ,  
      output wire [31:0] an85a43 , 
   `endif
   output wire [31:0] hd2d21d         ) ;
reg  [31:0]            dm690ef ;
reg  [31:0]            xw4877b ;
reg  [15:0]            go43bda ;
reg  [31:0]            yz1ded0 ;
reg  [15:0]            wwef684 ;
wire [7:0]             rt7b420 ;
wire [7:0]             neda107 ;
wire [7:0]             ned083a ;
wire [7:0]             lf841d2 ;

`ifdef X4
reg  [31:0]            crc_reg64 ;
reg  [31:0]            cb74b2 ;
reg  [31:0]            vk3a595 ;
reg  [31:0]            vvd2cab ;
reg  [63:0]            zm9655f ;
reg  [31:0]            bab2afa ;
reg  [63:0]            ir957d2 ;
reg  [47:0]            anabe95 ;
reg  [31:0]            bl5f4ad ;
reg  [47:0]            uifa56e ;
wire [7:0]             nrd2b71 ;
wire [7:0]             oh95b8f ;
wire [7:0]             riadc7c ;
wire [7:0]             dz6e3e2 ;
reg                    os4359d ;
wire                   uvf2d82 ;

`endif

`ifdef X1
reg                    do96c14 ;
wire                   ksb60a3 ;

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] mtb4467;
reg su595f0;
reg [31 : 0] cze2de2;
reg [15 : 0] nt16f15;
reg [31 : 0] ngb78af;
reg [15 : 0] ymbc57a;
reg [7 : 0] ofe2bd0;
reg [7 : 0] co15e85;
reg [7 : 0] bnaf428;
reg [7 : 0] en7a146;
reg [2047:0] ux1852e;
wire [9:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 10,jra5d72 = 32'hfdffca8b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X4



`endif



`ifdef X1



`endif







`ifdef X4
      always @* begin   zm9655f = mtb4467[63:0];   ir957d2 = {          zm9655f[56], zm9655f[57], zm9655f[58], zm9655f[59], zm9655f[60], zm9655f[61], zm9655f[62], zm9655f[63],          zm9655f[48], zm9655f[49], zm9655f[50], zm9655f[51], zm9655f[52], zm9655f[53], zm9655f[54], zm9655f[55],          zm9655f[40], zm9655f[41], zm9655f[42], zm9655f[43], zm9655f[44], zm9655f[45], zm9655f[46], zm9655f[47],          zm9655f[32], zm9655f[33], zm9655f[34], zm9655f[35], zm9655f[36], zm9655f[37], zm9655f[38], zm9655f[39],          zm9655f[24], zm9655f[25], zm9655f[26], zm9655f[27], zm9655f[28], zm9655f[29], zm9655f[30], zm9655f[31],          zm9655f[16], zm9655f[17], zm9655f[18], zm9655f[19], zm9655f[20], zm9655f[21], zm9655f[22], zm9655f[23],          zm9655f[8], zm9655f[9], zm9655f[10], zm9655f[11], zm9655f[12], zm9655f[13], zm9655f[14], zm9655f[15],          zm9655f[0], zm9655f[1], zm9655f[2], zm9655f[3], zm9655f[4], zm9655f[5], zm9655f[6], zm9655f[7]         } ;   bab2afa = crc_reg64;   vk3a595[0] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^                  ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[37] ^ ir957d2[34] ^                  ir957d2[32] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[25] ^                  ir957d2[24] ^ ir957d2[16] ^ ir957d2[12] ^ ir957d2[10] ^ ir957d2[9] ^ ir957d2[6] ^ ir957d2[0] ^                  bab2afa[0] ^ bab2afa[2] ^ bab2afa[5] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^ bab2afa[16] ^                  bab2afa[18] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^                  bab2afa[31];   vk3a595[1] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[53] ^                  ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[38] ^                  ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[24] ^                  ir957d2[17] ^ ir957d2[16] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[7] ^                  ir957d2[6] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[6] ^                  bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[21] ^                  bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[28] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[2] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[44] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[37] ^ ir957d2[36] ^ ir957d2[35] ^ ir957d2[32] ^                  ir957d2[31] ^ ir957d2[30] ^ ir957d2[26] ^ ir957d2[24] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[16] ^                  ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[2] ^                  ir957d2[1] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[7] ^                  bab2afa[12] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^                  bab2afa[27];   vk3a595[3] = ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[52] ^                  ir957d2[45] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[37] ^ ir957d2[36] ^ ir957d2[33] ^                  ir957d2[32] ^ ir957d2[31] ^ ir957d2[27] ^ ir957d2[25] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[17] ^                  ir957d2[15] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[3] ^                  ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[7] ^                  bab2afa[8] ^ bab2afa[13] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[26] ^                  bab2afa[27] ^ bab2afa[28];   vk3a595[4] = ir957d2[63] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^                  ir957d2[46] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[41] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[38] ^                  ir957d2[33] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[25] ^ ir957d2[24] ^ ir957d2[20] ^                  ir957d2[19] ^ ir957d2[18] ^ ir957d2[15] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[6] ^                  ir957d2[4] ^ ir957d2[3] ^ ir957d2[2] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[8] ^                  bab2afa[9] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[16] ^ bab2afa[18] ^                  bab2afa[25] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[31];   vk3a595[5] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[49] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^ ir957d2[40] ^                  ir957d2[39] ^ ir957d2[37] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[20] ^                  ir957d2[19] ^ ir957d2[13] ^ ir957d2[10] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^ ir957d2[4] ^                  ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[10] ^                  bab2afa[12] ^ bab2afa[14] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[21] ^ bab2afa[22] ^                  bab2afa[23] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[6] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[41] ^ ir957d2[40] ^                  ir957d2[38] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[25] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[20] ^                  ir957d2[14] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^ ir957d2[4] ^                  ir957d2[2] ^ ir957d2[1] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[11] ^                  bab2afa[13] ^ bab2afa[15] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[23] ^                  bab2afa[24] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[7] = ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[41] ^                  ir957d2[39] ^ ir957d2[37] ^ ir957d2[34] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[25] ^                  ir957d2[24] ^ ir957d2[23] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[10] ^                  ir957d2[8] ^ ir957d2[7] ^ ir957d2[5] ^ ir957d2[3] ^ ir957d2[2] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[2] ^                  bab2afa[5] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^                  bab2afa[15] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[25] ^                  bab2afa[26] ^ bab2afa[28];   vk3a595[8] = ir957d2[63] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[54] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[50] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[40] ^ ir957d2[38] ^                  ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^                  ir957d2[23] ^ ir957d2[22] ^ ir957d2[17] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[10] ^ ir957d2[8] ^                  ir957d2[4] ^ ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^                  bab2afa[5] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^                  bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[28] ^                  bab2afa[31];   vk3a595[9] = ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[55] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^                  ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^ ir957d2[39] ^ ir957d2[38] ^                  ir957d2[36] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[33]
 ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[24] ^                  ir957d2[23] ^ ir957d2[18] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[5] ^                  ir957d2[4] ^ ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^                  bab2afa[6] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^                  bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29];   vk3a595[10] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^                   ir957d2[52] ^ ir957d2[50] ^ ir957d2[42] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[36] ^ ir957d2[35] ^                   ir957d2[33] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[19] ^                   ir957d2[16] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[5] ^ ir957d2[3] ^ ir957d2[2] ^                   ir957d2[0] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[10] ^                   bab2afa[18] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[28] ^                   bab2afa[30] ^ bab2afa[31];   vk3a595[11] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[51] ^                   ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^                   ir957d2[40] ^ ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^                   ir957d2[25] ^ ir957d2[24] ^ ir957d2[20] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[14] ^                   ir957d2[12] ^ ir957d2[9] ^ ir957d2[4] ^ ir957d2[3] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[1] ^ bab2afa[4] ^                   bab2afa[8] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^ bab2afa[16] ^                   bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[25] ^ bab2afa[26] ^                   bab2afa[27];   vk3a595[12] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^ ir957d2[53] ^                   ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[42] ^                   ir957d2[41] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[18] ^                   ir957d2[17] ^ ir957d2[15] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[9] ^ ir957d2[6] ^ ir957d2[5] ^                   ir957d2[4] ^ ir957d2[2] ^ ir957d2[1] ^ ir957d2[0] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[14] ^                   bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^                   bab2afa[24] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[13] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[53] ^                   ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[43] ^ ir957d2[42] ^                   ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[25] ^ ir957d2[22] ^ ir957d2[19] ^ ir957d2[18] ^                   ir957d2[16] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[10] ^ ir957d2[7] ^ ir957d2[6] ^ ir957d2[5] ^                   ir957d2[3] ^ ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^                   bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[14] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[44] ^ ir957d2[43] ^                   ir957d2[33] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[26] ^ ir957d2[23] ^ ir957d2[20] ^ ir957d2[19] ^                   ir957d2[17] ^ ir957d2[15] ^ ir957d2[14] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[6] ^                   ir957d2[4] ^ ir957d2[3] ^ ir957d2[2] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[11] ^ bab2afa[12] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^                   bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[15] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[53] ^ ir957d2[52] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[34] ^                   ir957d2[33] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[24] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[18] ^                   ir957d2[16] ^ ir957d2[15] ^ ir957d2[12] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[5] ^                   ir957d2[4] ^ ir957d2[3] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[17] ^                   bab2afa[18] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[16] = ir957d2[57] ^ ir957d2[56] ^ ir957d2[51] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^                   ir957d2[37] ^ ir957d2[35] ^ ir957d2[32] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[26] ^ ir957d2[24] ^                   ir957d2[22] ^ ir957d2[21] ^ ir957d2[19] ^ ir957d2[17] ^ ir957d2[13] ^ ir957d2[12] ^ ir957d2[8] ^                   ir957d2[5] ^ ir957d2[4] ^ ir957d2[0] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[12] ^ bab2afa[14] ^                   bab2afa[15] ^ bab2afa[16] ^ bab2afa[19] ^ bab2afa[24] ^ bab2afa[25];   vk3a595[17] = ir957d2[58] ^ ir957d2[57] ^ ir957d2[52] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^                   ir957d2[38] ^ ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[30] ^ ir957d2[27] ^ ir957d2[25] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[18] ^ ir957d2[14] ^ ir957d2[13] ^ ir957d2[9] ^                   ir957d2[6] ^ ir957d2[5] ^ ir957d2[1] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[6] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[20] ^ bab2afa[25] ^ bab2afa[26];   vk3a595[18] = ir957d2[59] ^ ir957d2[58] ^ ir957d2[53] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[46] ^                   ir957d2[39] ^ ir957d2[37] ^ ir957d2[34] ^ ir957d2[32] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[26] ^                   ir957d2[24] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[19] ^ ir957d2[15] ^ ir957d2[14] ^ ir957d2[10] ^                   ir957d2[7] ^ ir957d2[6] ^ ir957d2[2] ^ bab2afa[0] ^ bab2afa[2] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[14] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[21] ^ bab2afa[26] ^ bab2afa[27];   vk3a595[19] = ir957d2[60] ^ ir957d2[59] ^ ir957d2[54] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[47] ^                   ir957d2[40] ^ ir957d2[38] ^ ir957d2[35] ^ ir957d2[33] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[27] ^                   ir957d2[25] ^ ir957d2[24] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[11] ^                   ir957d2[8] ^ ir957d2[7] ^ ir957d2[3] ^ bab2afa[0] ^ bab2afa[1] ^ bab2afa[3] ^ bab2afa[6] ^ bab2afa[8] ^                   bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[27] ^ bab2afa[28];   vk3a595[20] = ir957d2[61] ^ ir957d2[60] ^ ir957d2[55] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[50] ^ ir957d2[48] ^                   ir957d2[41] ^ ir957d2[39] ^ ir957d2[36] ^ ir957d2[34] ^ ir957d2[33] ^ ir957d2[30] ^ ir957d2[28] ^                   ir957d2[26] ^ ir957d2[25] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[12] ^                   ir957d2[9] ^ ir957d2[8] ^ ir957d2[4] ^ bab2afa[1] ^ bab2afa[2] ^ bab2afa[4] ^ bab2afa[7] ^ bab2afa[9] ^                   bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[28] ^ bab2afa[29];   vk3a595[21] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[56] ^ ir957d2[53] ^ ir957d2[52] ^ ir957d2[51] ^ ir957d2[49] ^                   ir957d2[42] ^ ir957d2[40] ^ ir957d2[37] ^ ir957d2[35] ^ ir957d2[34] 
^ ir957d2[31] ^ ir957d2[29] ^                   ir957d2[27] ^ ir957d2[26] ^ ir957d2[24] ^ ir957d2[22] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[13] ^                   ir957d2[10] ^ ir957d2[9] ^ ir957d2[5] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[5] ^ bab2afa[8] ^ bab2afa[10] ^                   bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[24] ^ bab2afa[29] ^ bab2afa[30];   vk3a595[22] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[52] ^                   ir957d2[48] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^ ir957d2[38] ^                   ir957d2[37] ^ ir957d2[36] ^ ir957d2[35] ^ ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[27] ^                   ir957d2[26] ^ ir957d2[24] ^ ir957d2[23] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[16] ^ ir957d2[14] ^                   ir957d2[12] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[0] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^                   bab2afa[5] ^ bab2afa[6] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[16] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^                   bab2afa[30];   vk3a595[23] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[54] ^ ir957d2[50] ^                   ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[42] ^ ir957d2[39] ^ ir957d2[38] ^ ir957d2[36] ^                   ir957d2[35] ^ ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[20] ^                   ir957d2[19] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[15] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[6] ^                   ir957d2[1] ^ ir957d2[0] ^ bab2afa[2] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[10] ^                   bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   vk3a595[24] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[55] ^ ir957d2[51] ^                   ir957d2[50] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[43] ^ ir957d2[40] ^ ir957d2[39] ^ ir957d2[37] ^                   ir957d2[36] ^ ir957d2[35] ^ ir957d2[32] ^ ir957d2[30] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[21] ^                   ir957d2[20] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[16] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[7] ^                   ir957d2[2] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[3] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[7] ^ bab2afa[8] ^                   bab2afa[11] ^ bab2afa[15] ^ bab2afa[16] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[25] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[31];   vk3a595[25] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[52] ^ ir957d2[51] ^                   ir957d2[49] ^ ir957d2[48] ^ ir957d2[44] ^ ir957d2[41] ^ ir957d2[40] ^ ir957d2[38] ^ ir957d2[37] ^                   ir957d2[36] ^ ir957d2[33] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[22] ^ ir957d2[21] ^                   ir957d2[19] ^ ir957d2[18] ^ ir957d2[17] ^ ir957d2[15] ^ ir957d2[11] ^ ir957d2[8] ^ ir957d2[3] ^                   ir957d2[2] ^ bab2afa[1] ^ bab2afa[4] ^ bab2afa[5] ^ bab2afa[6] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[12] ^                   bab2afa[16] ^ bab2afa[17] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[24] ^ bab2afa[25] ^ bab2afa[26] ^                   bab2afa[29] ^ bab2afa[30];   vk3a595[26] = ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[54] ^                   ir957d2[52] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[47] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^                   ir957d2[39] ^ ir957d2[38] ^ ir957d2[31] ^ ir957d2[28] ^ ir957d2[26] ^ ir957d2[25] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[20] ^ ir957d2[19] ^ ir957d2[18] ^ ir957d2[10] ^ ir957d2[6] ^                   ir957d2[4] ^ ir957d2[3] ^ ir957d2[0] ^ bab2afa[6] ^ bab2afa[7] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[12] ^                   bab2afa[15] ^ bab2afa[16] ^ bab2afa[17] ^ bab2afa[20] ^ bab2afa[22] ^ bab2afa[23] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[30];   vk3a595[27] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[61] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[55] ^                   ir957d2[53] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[48] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^                   ir957d2[40] ^ ir957d2[39] ^ ir957d2[32] ^ ir957d2[29] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[24] ^ ir957d2[23] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[19] ^ ir957d2[11] ^ ir957d2[7] ^                   ir957d2[5] ^ ir957d2[4] ^ ir957d2[1] ^ bab2afa[0] ^ bab2afa[7] ^ bab2afa[8] ^ bab2afa[10] ^ bab2afa[11] ^                   bab2afa[13] ^ bab2afa[16] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[21] ^ bab2afa[23] ^ bab2afa[24] ^                   bab2afa[26] ^ bab2afa[28] ^ bab2afa[29] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[28] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[56] ^ ir957d2[54] ^                   ir957d2[51] ^ ir957d2[50] ^ ir957d2[49] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[41] ^                   ir957d2[40] ^ ir957d2[33] ^ ir957d2[30] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[24] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[20] ^ ir957d2[12] ^ ir957d2[8] ^ ir957d2[6] ^                   ir957d2[5] ^ ir957d2[2] ^ bab2afa[1] ^ bab2afa[8] ^ bab2afa[9] ^ bab2afa[11] ^ bab2afa[12] ^                   bab2afa[14] ^ bab2afa[17] ^ bab2afa[18] ^ bab2afa[19] ^ bab2afa[22] ^ bab2afa[24] ^ bab2afa[25] ^                   bab2afa[27] ^ bab2afa[29] ^ bab2afa[30] ^ bab2afa[31];   vk3a595[29] = ir957d2[63] ^ ir957d2[62] ^ ir957d2[60] ^ ir957d2[58] ^ ir957d2[57] ^ ir957d2[55] ^ ir957d2[52] ^                   ir957d2[51] ^ ir957d2[50] ^ ir957d2[47] ^ ir957d2[45] ^ ir957d2[44] ^ ir957d2[42] ^ ir957d2[41] ^                   ir957d2[34] ^ ir957d2[31] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[25] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[21] ^ ir957d2[13] ^ ir957d2[9] ^ ir957d2[7] ^ ir957d2[6] ^                   ir957d2[3] ^ bab2afa[2] ^ bab2afa[9] ^ bab2afa[10] ^ bab2afa[12] ^ bab2afa[13] ^ bab2afa[15] ^                   bab2afa[18] ^ bab2afa[19] ^ bab2afa[20] ^ bab2afa[23] ^ bab2afa[25] ^ bab2afa[26] ^ bab2afa[28] ^                   bab2afa[30] ^ bab2afa[31];   vk3a595[30] = ir957d2[63] ^ ir957d2[61] ^ ir957d2[59] ^ ir957d2[58] ^ ir957d2[56] ^ ir957d2[53] ^ ir957d2[52] ^                   ir957d2[51] ^ ir957d2[48] ^ ir957d2[46] ^ ir957d2[45] ^ ir957d2[43] ^ ir957d2[42] ^ ir957d2[35] ^                   ir957d2[32] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[26] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[22] ^ ir957d2[14] ^ ir957d2[10] ^ ir957d2[8] ^ ir957d2[7] ^ ir957d2[4] ^                   bab2afa[0] ^ bab2afa[3] ^ bab2afa[10] ^ bab2afa[11] ^ bab2afa[13] ^ bab2afa[14] ^ bab2afa[16] ^                   bab2afa[19] ^ bab2afa[20] ^ bab2afa[21] ^ bab2afa[24] ^ bab2afa[26] ^ bab2afa[27] ^ bab2afa[29] ^                   bab2afa[31];   vk3a595[31] = ir957d2[62] ^ ir957d2[60] ^ ir957d2[59] ^ ir957d2[57] ^ ir957d2[54] ^ ir957d2[53] ^ ir957d2[52] ^                   ir957d2[49] ^ ir957d2[47] ^ ir957d2[46] ^ ir957d2[44] ^ ir957d2[43] ^ ir957d2[36] ^ ir957d2[33] ^                   ir957d2[31] ^ ir957d2[30] ^ ir957d2[29] ^ ir957d2[28] ^ ir957d2[27] ^ ir957d2[25] ^ ir957d2[24] ^                   ir957d2[23] ^ ir957d2[15] ^ ir957d2[11] ^ ir957d2[9] ^ ir957d2[8] ^ ir957d2[5] ^ bab2afa[1] ^                   bab2afa[4] ^ bab2afa[11] ^ bab2afa[12] ^ bab2afa[14] ^ bab2afa[15] ^ bab2afa[17] ^ bab2afa[20] ^                   bab2afa[21] ^ bab2afa[22] ^ bab2afa[25] ^ bab2afa[27] ^ bab2afa[28] ^ bab2afa[30];   end      always @* begin   anabe95 = mtb4467[63:16];   uifa56e = {          anabe95[40], anabe95[41], anabe95[42], anabe95[43], anabe95[44], anabe95[45], anabe95[46], anabe95[47],          anabe95[32], anabe95[33], anabe95[34], anabe95[35], anabe95[
36], anabe95[37], anabe95[38], anabe95[39],          anabe95[24], anabe95[25], anabe95[26], anabe95[27], anabe95[28], anabe95[29], anabe95[30], anabe95[31],          anabe95[16], anabe95[17], anabe95[18], anabe95[19], anabe95[20], anabe95[21], anabe95[22], anabe95[23],          anabe95[8], anabe95[9], anabe95[10], anabe95[11], anabe95[12], anabe95[13], anabe95[14], anabe95[15],          anabe95[0], anabe95[1], anabe95[2], anabe95[3], anabe95[4], anabe95[5], anabe95[6], anabe95[7]         } ;   bl5f4ad = crc_reg64;   vvd2cab[0] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[31] ^                uifa56e[30] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[16] ^                uifa56e[12] ^ uifa56e[10] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[8] ^                bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[16] ^                bl5f4ad[18] ^ bl5f4ad[21] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[1] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[34] ^                uifa56e[33] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[24] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[13] ^                uifa56e[12] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[1] ^ uifa56e[0] ^                bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[8] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[17] ^ bl5f4ad[18] ^                bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[2] = uifa56e[44] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[35] ^ uifa56e[32] ^                uifa56e[31] ^ uifa56e[30] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[16] ^                uifa56e[14] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[2] ^                uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[14] ^                bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[23] ^                bl5f4ad[28];   vvd2cab[3] = uifa56e[45] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[33] ^                uifa56e[32] ^ uifa56e[31] ^ uifa56e[27] ^ uifa56e[25] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[17] ^                uifa56e[15] ^ uifa56e[14] ^ uifa56e[10] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[3] ^                uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[15] ^                bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[24] ^                bl5f4ad[29];   vvd2cab[4] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[39] ^                uifa56e[38] ^ uifa56e[33] ^ uifa56e[31] ^ uifa56e[30] ^ uifa56e[29] ^ uifa56e[25] ^ uifa56e[24] ^                uifa56e[20] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[15] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[8] ^                uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[4] ^                bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[22] ^                bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[5] = uifa56e[46] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[37] ^                uifa56e[29] ^ uifa56e[28] ^ uifa56e[24] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[19] ^ uifa56e[13] ^                uifa56e[10] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^                bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[21] ^                bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^ bl5f4ad[30];   vvd2cab[6] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[38] ^                uifa56e[30] ^ uifa56e[29] ^ uifa56e[25] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[14] ^                uifa56e[11] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^                bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[9] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[22] ^                bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[7] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[39] ^                uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[25] ^ uifa56e[24] ^                uifa56e[23] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[10] ^ uifa56e[8] ^                uifa56e[7] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[5] ^ bl5f4ad[6] ^                bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[18] ^                bl5f4ad[21] ^ bl5f4ad[23] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30] ^                bl5f4ad[31];   vvd2cab[8] = uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[37] ^                uifa56e[35] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[23] ^                uifa56e[22] ^ uifa56e[17] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[10] ^ uifa56e[8] ^ uifa56e[4] ^                uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[1] ^ bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[12] ^ bl5f4ad[15] ^                bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[24] ^                bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30];   vvd2cab[9] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[39] ^ uifa56e[38] ^                uifa56e[36] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[24] ^                uifa56e[23] ^ uifa56e[18] ^ uifa56e[13] ^ uifa56e[12] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[5] ^                uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[2] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[13] ^ bl5f4ad[16] ^                bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[25] ^                bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[10] = uifa56e[42] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[36] ^ uifa56e[35] ^ uifa56e[33] ^ uifa56e[32] ^                 uifa56e[31] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[26] ^ uifa56e[19] ^ uifa56e[16] ^ uifa56e[14] ^                 uifa56e[13] ^ uifa56e[9] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[3] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[19] ^                 bl5f4ad[20] ^ bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[26];   vvd2cab[11] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[36] ^                 uifa56e[33] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^                 uifa56e[20] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[14] ^ uifa56e[12] ^ uifa56e[9] ^                 uifa56e[4] ^ uifa56e[3] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[4] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[20] ^                 bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[12] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[31] ^ uifa56e[30] ^ uifa56e[27] ^                 uifa56e[24] ^ uifa56e[21] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[15] ^ uifa56e[13] ^ uifa56e[12] ^                 uifa56e[9] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[2] ^ uifa56e[1] ^ uifa56e[0] ^ bl5f4ad[1] ^                 bl5f4ad[2] ^ bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[11] ^ bl5f4ad
[14] ^ bl5f4ad[15] ^ bl5f4ad[25] ^                 bl5f4ad[26] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[13] = uifa56e[47] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^ uifa56e[25] ^                 uifa56e[22] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[13] ^ uifa56e[10] ^                 uifa56e[7] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[3] ^ uifa56e[2] ^ uifa56e[1] ^ bl5f4ad[0] ^ bl5f4ad[2] ^                 bl5f4ad[3] ^ bl5f4ad[6] ^ bl5f4ad[9] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[26] ^                 bl5f4ad[27] ^ bl5f4ad[31];   vvd2cab[14] = uifa56e[44] ^ uifa56e[43] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^ uifa56e[26] ^ uifa56e[23] ^                 uifa56e[20] ^ uifa56e[19] ^ uifa56e[17] ^ uifa56e[15] ^ uifa56e[14] ^ uifa56e[11] ^ uifa56e[8] ^                 uifa56e[7] ^ uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[2] ^ bl5f4ad[1] ^ bl5f4ad[3] ^ bl5f4ad[4] ^                 bl5f4ad[7] ^ bl5f4ad[10] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[27] ^ bl5f4ad[28];   vvd2cab[15] = uifa56e[45] ^ uifa56e[44] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[30] ^ uifa56e[27] ^ uifa56e[24] ^                 uifa56e[21] ^ uifa56e[20] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[12] ^ uifa56e[9] ^                 uifa56e[8] ^ uifa56e[7] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[3] ^ bl5f4ad[0] ^ bl5f4ad[2] ^ bl5f4ad[4] ^                 bl5f4ad[5] ^ bl5f4ad[8] ^ bl5f4ad[11] ^ bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[28] ^                 bl5f4ad[29];   vvd2cab[16] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[32] ^ uifa56e[30] ^                 uifa56e[29] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[17] ^                 uifa56e[13] ^ uifa56e[12] ^ uifa56e[8] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[0] ^ bl5f4ad[1] ^                 bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[13] ^ bl5f4ad[14] ^                 bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[17] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[38] ^ uifa56e[36] ^ uifa56e[33] ^ uifa56e[31] ^ uifa56e[30] ^                 uifa56e[27] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[22] ^ uifa56e[20] ^ uifa56e[18] ^ uifa56e[14] ^                 uifa56e[13] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[1] ^ bl5f4ad[2] ^ bl5f4ad[4] ^ bl5f4ad[6] ^                 bl5f4ad[7] ^ bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^ bl5f4ad[20] ^                 bl5f4ad[22] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[18] = uifa56e[46] ^ uifa56e[39] ^ uifa56e[37] ^ uifa56e[34] ^ uifa56e[32] ^ uifa56e[31] ^ uifa56e[28] ^                 uifa56e[26] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[15] ^ uifa56e[14] ^                 uifa56e[10] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[2] ^ bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[16] ^ bl5f4ad[18] ^ bl5f4ad[21] ^ bl5f4ad[23] ^                 bl5f4ad[30];   vvd2cab[19] = uifa56e[47] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[35] ^ uifa56e[33] ^ uifa56e[32] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[20] ^ uifa56e[16] ^ uifa56e[15] ^                 uifa56e[11] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[3] ^ bl5f4ad[0] ^ bl5f4ad[4] ^ bl5f4ad[6] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[17] ^ bl5f4ad[19] ^ bl5f4ad[22] ^                 bl5f4ad[24] ^ bl5f4ad[31];   vvd2cab[20] = uifa56e[41] ^ uifa56e[39] ^ uifa56e[36] ^ uifa56e[34] ^ uifa56e[33] ^ uifa56e[30] ^ uifa56e[28] ^                 uifa56e[26] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[17] ^ uifa56e[16] ^ uifa56e[12] ^                 uifa56e[9] ^ uifa56e[8] ^ uifa56e[4] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[9] ^                 bl5f4ad[10] ^ bl5f4ad[12] ^ bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[18] ^ bl5f4ad[20] ^ bl5f4ad[23] ^                 bl5f4ad[25];   vvd2cab[21] = uifa56e[42] ^ uifa56e[40] ^ uifa56e[37] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[18] ^ uifa56e[17] ^ uifa56e[13] ^                 uifa56e[10] ^ uifa56e[9] ^ uifa56e[5] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[10] ^                 bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[21] ^ bl5f4ad[24] ^                 bl5f4ad[26];   vvd2cab[22] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[38] ^ uifa56e[37] ^                 uifa56e[36] ^ uifa56e[35] ^ uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^ uifa56e[27] ^ uifa56e[26] ^                 uifa56e[24] ^ uifa56e[23] ^ uifa56e[19] ^ uifa56e[18] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[12] ^                 uifa56e[11] ^ uifa56e[9] ^ uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^                 bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[23] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[42] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[36] ^ uifa56e[35] ^                 uifa56e[34] ^ uifa56e[31] ^ uifa56e[29] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[20] ^ uifa56e[19] ^                 uifa56e[17] ^ uifa56e[16] ^ uifa56e[15] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[6] ^ uifa56e[1] ^                 uifa56e[0] ^ bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[10] ^ bl5f4ad[11] ^                 bl5f4ad[13] ^ bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[22] ^ bl5f4ad[23] ^                 bl5f4ad[26] ^ bl5f4ad[30] ^ bl5f4ad[31];   vvd2cab[24] = uifa56e[47] ^ uifa56e[43] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[35] ^                 uifa56e[32] ^ uifa56e[30] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[21] ^ uifa56e[20] ^ uifa56e[18] ^                 uifa56e[17] ^ uifa56e[16] ^ uifa56e[14] ^ uifa56e[10] ^ uifa56e[7] ^ uifa56e[2] ^ uifa56e[1] ^                 bl5f4ad[0] ^ bl5f4ad[1] ^ bl5f4ad[2] ^ bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[11] ^ bl5f4ad[12] ^                 bl5f4ad[14] ^ bl5f4ad[16] ^ bl5f4ad[19] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[23] ^ bl5f4ad[24] ^                 bl5f4ad[27] ^ bl5f4ad[31];   vvd2cab[25] = uifa56e[44] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[38] ^ uifa56e[37] ^ uifa56e[36] ^ uifa56e[33] ^                 uifa56e[31] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[22] ^ uifa56e[21] ^ uifa56e[19] ^ uifa56e[18] ^                 uifa56e[17] ^ uifa56e[15] ^ uifa56e[11] ^ uifa56e[8] ^ uifa56e[3] ^ uifa56e[2] ^ bl5f4ad[1] ^                 bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[15] ^                 bl5f4ad[17] ^ bl5f4ad[20] ^ bl5f4ad[21] ^ bl5f4ad[22] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[28];   vvd2cab[26] = uifa56e[47] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[39] ^ uifa56e[38] ^ uifa56e[31] ^                 uifa56e[28] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[22] ^ uifa56e[20] ^                 uifa56e[19] ^ uifa56e[18] ^ uifa56e[10] ^ uifa56e[6] ^ uifa56e[4] ^ uifa56e[3] ^ uifa56e[0] ^                 bl5f4ad[2] ^ bl5f4ad[3] ^ bl5f4ad[4] ^ bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^                 bl5f4ad[12] ^ bl5f4ad[15] ^ bl5f4ad[22] ^ bl5f4ad[23] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^                 bl5f4ad[31];   vvd2cab[27] = uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[40] ^ uifa56e[39] ^ uifa56e[32] ^ uifa56e[29] ^                 uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[21] ^ uifa56e[20] ^                 uifa56e[19] ^ uifa56e[11] ^ uifa56e[7] ^ uifa56e[5] ^ uifa56e[4] ^ uifa56e[1] ^ bl5f4ad[3] ^                 bl5f4ad[4] ^ bl5f4ad[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^                 bl5f4ad[13] ^ bl5f4ad[16] ^ bl5f4ad[23] ^ bl5f4ad[24] ^ bl5f4ad[26]
 ^ bl5f4ad[27] ^ bl5f4ad[29];   vvd2cab[28] = uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[41] ^ uifa56e[40] ^ uifa56e[33] ^ uifa56e[30] ^                 uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[22] ^ uifa56e[21] ^                 uifa56e[20] ^ uifa56e[12] ^ uifa56e[8] ^ uifa56e[6] ^ uifa56e[5] ^ uifa56e[2] ^ bl5f4ad[4] ^                 bl5f4ad[5] ^ bl5f4ad[6] ^ bl5f4ad[8] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^                 bl5f4ad[14] ^ bl5f4ad[17] ^ bl5f4ad[24] ^ bl5f4ad[25] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30];   vvd2cab[29] = uifa56e[47] ^ uifa56e[45] ^ uifa56e[44] ^ uifa56e[42] ^ uifa56e[41] ^ uifa56e[34] ^ uifa56e[31] ^                 uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[25] ^ uifa56e[23] ^ uifa56e[22] ^                 uifa56e[21] ^ uifa56e[13] ^ uifa56e[9] ^ uifa56e[7] ^ uifa56e[6] ^ uifa56e[3] ^ bl5f4ad[5] ^                 bl5f4ad[6] ^ bl5f4ad[7] ^ bl5f4ad[9] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^                 bl5f4ad[15] ^ bl5f4ad[18] ^ bl5f4ad[25] ^ bl5f4ad[26] ^ bl5f4ad[28] ^ bl5f4ad[29] ^ bl5f4ad[31];   vvd2cab[30] = uifa56e[46] ^ uifa56e[45] ^ uifa56e[43] ^ uifa56e[42] ^ uifa56e[35] ^ uifa56e[32] ^ uifa56e[30] ^                 uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[26] ^ uifa56e[24] ^ uifa56e[23] ^ uifa56e[22] ^                 uifa56e[14] ^ uifa56e[10] ^ uifa56e[8] ^ uifa56e[7] ^ uifa56e[4] ^ bl5f4ad[6] ^ bl5f4ad[7] ^                 bl5f4ad[8] ^ bl5f4ad[10] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[16] ^                 bl5f4ad[19] ^ bl5f4ad[26] ^ bl5f4ad[27] ^ bl5f4ad[29] ^ bl5f4ad[30];   vvd2cab[31] = uifa56e[47] ^ uifa56e[46] ^ uifa56e[44] ^ uifa56e[43] ^ uifa56e[36] ^ uifa56e[33] ^ uifa56e[31] ^                 uifa56e[30] ^ uifa56e[29] ^ uifa56e[28] ^ uifa56e[27] ^ uifa56e[25] ^ uifa56e[24] ^ uifa56e[23] ^                 uifa56e[15] ^ uifa56e[11] ^ uifa56e[9] ^ uifa56e[8] ^ uifa56e[5] ^ bl5f4ad[7] ^ bl5f4ad[8] ^                 bl5f4ad[9] ^ bl5f4ad[11] ^ bl5f4ad[12] ^ bl5f4ad[13] ^ bl5f4ad[14] ^ bl5f4ad[15] ^ bl5f4ad[17] ^                 bl5f4ad[20] ^ bl5f4ad[27] ^ bl5f4ad[28] ^ bl5f4ad[30] ^ bl5f4ad[31];   end

`endif



always @* begin


`ifdef X4
      go43bda = mtb4467[63:48];


`endif



`ifdef X1
      go43bda = mtb4467;


`endif
   wwef684 = {          nt16f15[8], nt16f15[9], nt16f15[10], nt16f15[11], nt16f15[12], nt16f15[13], nt16f15[14], nt16f15[15],          nt16f15[0], nt16f15[1], nt16f15[2], nt16f15[3], nt16f15[4], nt16f15[5], nt16f15[6], nt16f15[7]         } ;


`ifdef X4
      yz1ded0 = crc_reg64 ;


`endif



`ifdef X1
      yz1ded0 = dm690ef ;


`endif

   xw4877b[0] = ymbc57a[12] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[22] ^                 ngb78af[25] ^ ngb78af[26] ^ ngb78af[28];   xw4877b[1] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[1] ^                 ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[22] ^ ngb78af[23] ^ ngb78af[25] ^ ngb78af[27] ^                 ngb78af[28] ^ ngb78af[29];   xw4877b[2] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[2] ^                 ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[22] ^ ngb78af[23] ^                 ngb78af[24] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[3] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[3] ^                 ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[23] ^ ngb78af[24] ^                 ngb78af[25] ^ ngb78af[26] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[4] = ymbc57a[15] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[6] ^ ymbc57a[4] ^ ymbc57a[3] ^                 ymbc57a[2] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^                 ngb78af[24] ^ ngb78af[27] ^ ngb78af[28] ^ ngb78af[31];   xw4877b[5] = ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[3] ^                 ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[21] ^                 ngb78af[22] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[29];   xw4877b[6] = ymbc57a[14] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^                 ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[22] ^                 ngb78af[23] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[30];   xw4877b[7] = ymbc57a[15] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[3] ^ ymbc57a[2] ^                 ymbc57a[0] ^ ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[24] ^                 ngb78af[26] ^ ngb78af[31];   xw4877b[8] = ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[1] ^                 ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[24] ^ ngb78af[26] ^                 ngb78af[27] ^ ngb78af[28];   xw4877b[9] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[2] ^                 ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[25] ^ ngb78af[27] ^                 ngb78af[28] ^ ngb78af[29];   xw4877b[10] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[5] ^ ymbc57a[3] ^ ymbc57a[2] ^ ymbc57a[0] ^                  ngb78af[16] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[11] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[1] ^                  ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[25] ^ ngb78af[28] ^                  ngb78af[30] ^ ngb78af[31];   xw4877b[12] = ymbc57a[15] ^ ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[4] ^                  ymbc57a[2] ^ ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[16] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[20] ^                  ngb78af[21] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[28] ^ ngb78af[29] ^ ngb78af[31];   xw4877b[13] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[3] ^                  ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[17] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[21] ^ ngb78af[22] ^                  ngb78af[23] ^ ngb78af[26] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[14] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[4] ^                  ymbc57a[3] ^ ymbc57a[2] ^ ngb78af[18] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^ ngb78af[23] ^                  ngb78af[24] ^ ngb78af[27] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[15] = ymbc57a[15] ^ ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[4] ^                  ymbc57a[3] ^ ngb78af[19] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[24] ^ ngb78af[25] ^                  ngb78af[28] ^ ngb78af[31];   xw4877b[16] = ymbc57a[13] ^ ymbc57a[12] ^ ymbc57a[8] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[0] ^ ngb78af[0] ^                  ngb78af[16] ^ ngb78af[20] ^ ngb78af[21] ^ ngb78af[24] ^ ngb78af[28] ^ ngb78af[29];   xw4877b[17] = ymbc57a[14] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[1] ^ ngb78af[1] ^                  ngb78af[17] ^ ngb78af[21] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[30];   xw4877b[18] = ymbc57a[15] ^ ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[2] ^ ngb78af[2] ^                  ngb78af[18] ^ ngb78af[22] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[30] ^ ngb78af[31];   xw4877b[19] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[3] ^ ngb78af[3] ^ ngb78af[19] ^                  ngb78af[23] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[31];   xw4877b[20] = ymbc57a[12] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[4] ^ ngb78af[4] ^ ngb78af[20] ^ ngb78af[24] ^                  ngb78af[25] ^ ngb78af[28];   xw4877b[21] = ymbc57a[13] ^ ymbc57a[10] ^ ymbc57a[9] ^ ymbc57a[5] ^ ngb78af[5] ^ ngb78af[21] ^ ngb78af[25] ^                  ngb78af[26] ^ ngb78af[29];   xw4877b[22] = ymbc57a[14] ^ ymbc57a[12] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[0] ^ ngb78af[6] ^ ngb78af[16] ^                  ngb78af[25] ^ ngb78af[27] ^ ngb78af[28] ^ ngb78af[30];   xw4877b[23] = ymbc57a[15] ^ ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[6] ^ ymbc57a[1] ^ ymbc57a[0] ^ ngb78af[7] ^                  ngb78af[16] ^ ngb78af[17] ^ ngb78af[22] ^ ngb78af[25] ^ ngb78af[29] ^ ngb78af[31];   xw4877b[24] = ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[7] ^ ymbc57a[2] ^ ymbc57a[1] ^ ngb78af[8] ^ ngb78af[17] ^                  ngb78af[18] ^ ngb78af[23] ^ ngb78af[26] ^ ngb78af[30];   xw4877b[25] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[8] ^ ymbc57a[3] ^ ymbc57a[2] ^ ngb78af[9] ^ ngb78af[18] ^                  ngb78af[19] ^ ngb78af[24] ^ ngb78af[27] ^ ngb78af[31];   xw4877b[26] = ymbc57a[10] ^ ymbc57a[6] ^ ymbc57a[4] ^ ymbc57a[3] ^ ymbc57a[0] ^ ngb78af[10] ^ ngb78af[16] ^                  ngb78af[19] ^ ngb78af[20] ^ ngb78af[22] ^ ngb78af[26];   xw4877b[27] = ymbc57a[11] ^ ymbc57a[7] ^ ymbc57a[5] ^ ymbc57a[4] ^ ymbc57a[1] ^ ngb78af[11] ^ ngb78af[17] ^                  ngb78af[20] ^ ngb78af[21] ^ ngb78af[23] ^ ngb78af[27];   xw4877b[28] = ymbc57a[12] ^ ymbc57a[8] ^ ymbc57a[6] ^ ymbc57a[5] ^ ymbc57a[2] ^ ngb78af[12] ^ ngb78af[18] ^                  ngb78af[21] ^ ngb78af[22] ^ ngb78af[24] ^ ngb78af[28];   xw4877b[29] = ymbc57a[13] ^ ymbc57a[9] ^ ymbc57a[7] ^ ymbc57a[6] ^ ymbc57a[3] ^ ngb78af[13] ^ ngb78af[19] ^                  ngb78af[22] ^ ngb78af[23] ^ ngb78af[25] ^ ngb78af[29];   xw4877b[30] = ymbc57a[14] ^ ymbc57a[10] ^ ymbc57a[8] ^ ymbc57a[7] ^ ymbc57a[4] ^ ngb78af[14] ^ ngb78af[20] ^                  ngb78af[23] ^ ngb78af[24] ^ ngb78af[26] ^ ngb78af[30];   xw4877b[31] = ymbc57a[15] ^ ymbc57a[11] ^ ymbc57a[9] ^ ymbc57a[8] ^ ymbc57a[5] ^ ngb78af[15] ^ ngb78af[21] ^                  ngb78af[24] ^ ngb78af[25] ^ ngb78af[27] ^ ngb78af[31];
end

`ifdef X4
      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         os4359d  <= 1'b0 ;      else if (qi2ee76)         os4359d  <= half_data ;   end   assign uvf2d82 = half_data & ~os4359d ;         always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         crc_reg64 <= 32'hFFFF_FFFF ;      else if (uvf2d82 && qi2ee76)         crc_reg64 <= 32'hFFFF_FFFF ;      else if (su595f0 && qi2ee76)         crc_reg64 <= vk3a595 ;   end      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         cb74b2 <= 32'd0 ;      else if (uvf2d82 && qi2ee76)         cb74b2 <= vvd2cab ;   end      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         dm690ef <= 32'd0 ;      else if (uvf2d82 && qi2ee76)         dm690ef <= cze2de2 ;   end

`endif




`ifdef X1
      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         do96c14  <= 1'b0 ;      else         do96c14  <= su595f0 ;   end   assign ksb60a3 = ~su595f0 & do96c14 ;         always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         dm690ef <= 32'hFFFF_FFFF ;      else if (ksb60a3)         dm690ef <= 32'hFFFF_FFFF ;      else if (su595f0)         dm690ef <= cze2de2 ;      else         dm690ef <= dm690ef ;   end

`endif



assign rt7b420 = { ~dm690ef[24], ~dm690ef[25], ~dm690ef[26], ~dm690ef[27],                        ~dm690ef[28], ~dm690ef[29], ~dm690ef[30], ~dm690ef[31] } ;
assign neda107 = { ~dm690ef[16], ~dm690ef[17], ~dm690ef[18], ~dm690ef[19],                        ~dm690ef[20], ~dm690ef[21], ~dm690ef[22], ~dm690ef[23] } ;
assign ned083a = { ~dm690ef[8], ~dm690ef[9], ~dm690ef[10], ~dm690ef[11],                        ~dm690ef[12], ~dm690ef[13], ~dm690ef[14], ~dm690ef[15] } ;
assign lf841d2 = { ~dm690ef[0], ~dm690ef[1], ~dm690ef[2], ~dm690ef[3],                        ~dm690ef[4], ~dm690ef[5], ~dm690ef[6], ~dm690ef[7] } ;



`ifdef X4
   assign nrd2b71 = { ~cb74b2[24], ~cb74b2[25], ~cb74b2[26], ~cb74b2[27],                           ~cb74b2[28], ~cb74b2[29], ~cb74b2[30], ~cb74b2[31] } ;   assign oh95b8f = { ~cb74b2[16], ~cb74b2[17], ~cb74b2[18], ~cb74b2[19],                           ~cb74b2[20], ~cb74b2[21], ~cb74b2[22], ~cb74b2[23] } ;   assign riadc7c = { ~cb74b2[8], ~cb74b2[9], ~cb74b2[10], ~cb74b2[11],                           ~cb74b2[12], ~cb74b2[13], ~cb74b2[14], ~cb74b2[15] } ;   assign dz6e3e2 = { ~cb74b2[0], ~cb74b2[1], ~cb74b2[2], ~cb74b2[3],                           ~cb74b2[4], ~cb74b2[5], ~cb74b2[6], ~cb74b2[7] } ;
      assign an85a43 = {nrd2b71, oh95b8f, riadc7c, dz6e3e2} ;

`endif



assign hd2d21d = {ofe2bd0, co15e85, bnaf428, en7a146} ;

always@* begin mtb4467<={data_in>>1,xjc2975[0]};su595f0<=xjc2975[1];cze2de2<={xw4877b>>1,xjc2975[2]};nt16f15<={go43bda>>1,xjc2975[3]};ngb78af<={yz1ded0>>1,xjc2975[4]};ymbc57a<={wwef684>>1,xjc2975[5]};ofe2bd0<={rt7b420>>1,xjc2975[6]};co15e85<={neda107>>1,xjc2975[7]};bnaf428<={ned083a>>1,xjc2975[8]};en7a146<={lf841d2>>1,xjc2975[9]};end
always@* begin ux1852e[2047]<=enable_crc;ux1852e[2046]<=xw4877b[0];ux1852e[2044]<=go43bda[0];ux1852e[2040]<=yz1ded0[0];ux1852e[2032]<=wwef684[0];ux1852e[2017]<=rt7b420[0];ux1852e[1987]<=neda107[0];ux1852e[1926]<=ned083a[0];ux1852e[1804]<=lf841d2[0];ux1852e[1023]<=data_in[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_top_rg4dfc2 #(
   parameter D_WIDTH = 64 ,   parameter FADDR = 3 )
   (
   input wire            sys_clk ,       
   input wire            rst_n ,         

   input wire            db13b67 ,    
   input wire            tlpgen_rdy_ack ,
   input wire            qted9f8 ,      
   input wire            tu6cfc4 , 
   input wire            qg67e22 , 
   input wire [FADDR:0]  dll_pause_cnt , 
   input wire            phy_l0 ,        
   input wire            vx222e8 ,     

   input wire [D_WIDTH-1:0] nt8ba33 ,     
   input wire               fa5d19e ,       
   input wire               gbe8cf3 ,      
   input wire               qg4679c ,     

   input wire [D_WIDTH-1:0] hd9e70c ,     
   input wire               thf3866 ,       
   input wire               vk9c336 ,      
   input wire               dme19b3 ,     
   `ifdef X4
      input wire            rvcd9a ,     
      input wire            ps66cd7 ,     
      input wire            mt366bb ,     
   `endif

   `ifdef X1
      output wire [D_WIDTH-1:0] dz50357 ,     
      output wire               nt81abf ,       
      output wire               gdd5ff ,      
      output wire               cz6affc ,      
   `endif
   `ifdef X4
      output reg [D_WIDTH-1:0]  dz50357 ,     
      output reg                ps57fe5 ,     
      output reg                nt81abf ,       
      output reg                gdd5ff ,      
      output reg                cz6affc ,      
      output reg                fpbff2b ,     
   `endif

   output reg               txtp_rdy ,      
   output wire              ayff675 ,      
   output wire              hofb3a9,   
   output reg               mrd9d4b    ) ;
reg                 eacea5c ;
reg                 mr752e0 ;
reg                 qia9704 ;
reg                 yx4b821 ;
reg                 os5c10c ;
reg                 yke0861 ;
reg                 ouacd6d ;
reg                 ie21842 ;
reg                 fpc210 ;
reg                 vv61086 ;
reg [4:0]           ir8437 ;
reg                 rg421bc ;
reg                 ks10de3 ;
reg                 ls86f18 ;
reg                 nt378c2 ;
reg                 ymbc616 ;
reg [4:0]           pfe30b0 ;
wire                ir18586 ;
wire                fnc2c35 ;
wire                rv161ae ;
wire                rvb0d76 ;
wire                je86bb7 ;
wire                vk35dba ;
wire                qvaedd3 ;
wire                xw76e9d ;
wire                bab74ea ;
wire                ntba753 ;
wire                ipd3a9f ;
wire                ym9d4fd ;
wire                ayea7e9 ;
wire                ui53f48 ;
wire                sj9fa41 ;
wire                gbfd20d ;
wire                ble906c ;
wire                ho48367 ;

`ifdef X1

`endif 

`ifdef X4

`endif 
reg       kd41b3a ;
reg [2:0] ird9d5 ;

`ifdef X1

`endif

`ifdef X4

`endif
parameter vi6cead = 16 ;
reg go6756a;
reg ng3ab50;
reg dmd5a82;
reg hqad412;
reg en6a093;
reg [FADDR : 0] ks824e7;
reg rgee2bb;
reg vk939cc;
reg [D_WIDTH - 1 : 0] gbe731a;
reg oh398d4;
reg qtcc6a5;
reg dm6352c;
reg [D_WIDTH - 1 : 0] ykd4b11;
reg vxa5888;
reg ep2c446;
reg ea62235;
reg xy111a8;
reg ou88d43;
reg qg46a19;
reg zm350c8;
reg ria8642;
reg mece439;
reg nt19099;
reg thc84cf;
reg by4267e;
reg [4 : 0] ph133f3;
reg zm99f9e;
reg facfcf2;
reg vv7e792;
reg vvf3c97;
reg nt9e4be;
reg [4 : 0] off25f6;
reg ks92fb5;
reg ou97da9;
reg wlbed49;
reg zxf6a4c;
reg tjb5266;
reg uka9336;
reg cm499b1;
reg yk4cd89;
reg tu66c49;
reg sj3624b;
reg sjb125d;
reg ng892ec;
reg ea49762;
reg mr4bb10;
reg xw5d884;
reg rtec422;
reg ea62117;
reg wy108b8;
reg fp845c0;
reg [2 : 0] rv22e06;
reg [2047:0] ux1852e;
wire [51:0] xjc2975;

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 52,jra5d72 = 32'hfdffc68b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1
   assign dz50357 = (gbe731a | ykd4b11) ;   assign nt81abf   = (vxa5888 | oh398d4) ;   assign gdd5ff = (qtcc6a5 | ep2c446) ;   assign cz6affc = dm6352c ;

`endif 



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         dz50357 <= 64'd0 ;         ps57fe5 <= 1'b0 ;         nt81abf   <= 1'b0 ;         gdd5ff  <= 1'b0 ;         fpbff2b <= 1'b0 ;         cz6affc  <= 1'b0 ;      end      else begin         dz50357 <= (gbe731a | ykd4b11) ;         ps57fe5 <= rvcd9a ;         nt81abf   <= (vxa5888 | oh398d4) ;         gdd5ff  <= (qtcc6a5 | ep2c446) ;         fpbff2b <= (ps66cd7 | mt366bb) ;         cz6affc  <= dm6352c ;      end   end

`endif 




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mr752e0  <= 1'b0 ;      qia9704 <= 1'b0 ;      yx4b821 <= 1'b0 ;      os5c10c  <= 1'b0 ;      yke0861  <= 1'b0 ;      ouacd6d    <= 1'b0 ;      vv61086 <= 1'b0 ;   end   else begin      mr752e0  <= go6756a ;      qia9704 <= hqad412 ;      yx4b821 <= en6a093 ;      os5c10c  <= dmd5a82 ;      yke0861  <= txtp_rdy ;      ouacd6d    <= rgee2bb ;      vv61086 <= ng3ab50 ;   end
end

assign qvaedd3  = go6756a & ~xy111a8 ;
assign bab74ea = hqad412 & ~ou88d43 ;
assign ntba753 = en6a093 & ~qg46a19 ;
assign xw76e9d  = dmd5a82 & ~zm350c8 ;
assign ipd3a9f    = rgee2bb & ~mece439 ;

assign ym9d4fd  = ~go6756a & xy111a8 ;
assign ui53f48 = ~hqad412 & ou88d43 ;
assign sj9fa41 = ~en6a093 & qg46a19 ;
assign ayea7e9  = ~dmd5a82 & zm350c8 ;
assign gbfd20d    = ~rgee2bb & mece439 ;

always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      ie21842 <= 1'b0 ;   else if (txtp_rdy && (yk4cd89 || tu66c49 || vk939cc ||                         sj3624b || rtec422 || ng892ec))      ie21842 <= 1'b1 ;   else if (ng3ab50 || ks92fb5)      ie21842 <= 1'b0 ;   else      ie21842 <= nt19099 ;
end
always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      fpc210 <= 1'b0 ;   else if (ayff675 && (vk939cc || rtec422))      fpc210 <= 1'b1 ;   else if (ea62235)      fpc210 <= 1'b0 ;   else      fpc210 <= thc84cf ;
end

assign ir18586  = cm499b1 & ~dmd5a82 & ~hqad412 & ~en6a093 && rgee2bb ;
assign fnc2c35 = by4267e & ~dmd5a82 & ~hqad412 & ~en6a093 && rgee2bb & go6756a ;

assign rv161ae = (ea49762  & ~hqad412 & ~en6a093  & rgee2bb & go6756a) ;
assign rvb0d76 = (mr4bb10 & ~dmd5a82 & ~en6a093  & rgee2bb & go6756a) ;
assign je86bb7 = (xw5d884 & ~hqad412 & ~dmd5a82  & rgee2bb & go6756a) ;
assign vk35dba = (sjb125d & ~hqad412 & ~dmd5a82  & ~en6a093 & go6756a) ;

always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      txtp_rdy <= 1'b0 ;   else if (((ou97da9 || wlbed49 || zxf6a4c || tjb5266 || uka9336) && !nt19099) || ks92fb5)      txtp_rdy <= 1'b1 ;   else if (nt19099)      txtp_rdy <= 1'b0 ;   else      txtp_rdy <= txtp_rdy ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rg421bc <= 1'b0 ;   else if (ep2c446 && (ks824e7 > 'd2))      rg421bc <= 1'b1 ;   else if (ph133f3 == 5'd3)      rg421bc <= 1'b0 ;   else      rg421bc <= zm99f9e ;
end
assign hofb3a9 =  ep2c446 ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ir8437 <= 5'h00 ;   else if (ea62235)         ir8437 <= ks824e7 ;   else if (zm99f9e)      ir8437 <=  ph133f3 - 1'b1 ;   else      ir8437 <= ph133f3 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      kd41b3a <= 1'b0 ;   else if (dmd5a82 && !txtp_rdy && ria8642)      kd41b3a <= 1'b1 ;   else if (rv22e06 == 3'd4)      kd41b3a <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ird9d5 <= 3'h0 ;


`ifdef X1
      else if (fp845c0)         ird9d5 <= rv22e06 + 1  ;      else if (rv22e06 == 3'd4)         ird9d5 <= 3'h0 ;


`endif



`ifdef X4
      else if (fp845c0 && rvcd9a)         ird9d5 <= rv22e06 + 1  ;      else if (rv22e06 == 3'd4 && rvcd9a)         ird9d5 <= 3'h0 ;


`endif

end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      eacea5c <= 1'b0 ;
else if (dmd5a82 && !txtp_rdy && !nt19099 && !thc84cf && !fp845c0)      eacea5c <= 1'b1 ;   else if (!dmd5a82 && ayff675 )      eacea5c <= 1'b0 ;   else      eacea5c <= (ayff675 & ~nt19099 & ~thc84cf & !fp845c0) ;
end
assign ayff675 = (eacea5c & ~zm99f9e & rgee2bb) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ls86f18 <= 1'b0 ;   else if (vk939cc)      ls86f18 <= 1'b1 ;   else if (!txtp_rdy && !ayff675 && !nt19099)      ls86f18 <= 1'b0 ;   else      ls86f18 <= vv7e792 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nt378c2 <= 1'b0 ;   else      nt378c2 <= vv7e792 ;
end
assign ho48367 = ~vv7e792 & vvf3c97 ;






always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ymbc616 <= 1'b0 ;   else if (wy108b8)      ymbc616 <= 1'b1 ;   else if (off25f6 == vi6cead +2)      ymbc616 <= 1'b0 ;   else      ymbc616 <= nt9e4be ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pfe30b0 <= 'd0 ;   else if (nt9e4be)      pfe30b0 <= off25f6 + 1 ;   else      pfe30b0 <= 'd0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mrd9d4b <= 'd0 ;   else      mrd9d4b <= (off25f6 == vi6cead) ;
end
always@* begin go6756a<=xjc2975[0];ng3ab50<=xjc2975[1];dmd5a82<=xjc2975[2];hqad412<=xjc2975[3];en6a093<=xjc2975[4];ks824e7<={dll_pause_cnt>>1,xjc2975[5]};rgee2bb<=xjc2975[6];vk939cc<=xjc2975[7];gbe731a<={nt8ba33>>1,xjc2975[8]};oh398d4<=xjc2975[9];qtcc6a5<=xjc2975[10];dm6352c<=xjc2975[11];ykd4b11<={hd9e70c>>1,xjc2975[12]};vxa5888<=xjc2975[13];ep2c446<=xjc2975[14];ea62235<=xjc2975[15];xy111a8<=xjc2975[16];ou88d43<=xjc2975[17];qg46a19<=xjc2975[18];zm350c8<=xjc2975[19];ria8642<=xjc2975[20];mece439<=xjc2975[21];nt19099<=xjc2975[22];thc84cf<=xjc2975[23];by4267e<=xjc2975[24];ph133f3<={ir8437>>1,xjc2975[25]};zm99f9e<=xjc2975[26];facfcf2<=xjc2975[27];vv7e792<=xjc2975[28];vvf3c97<=xjc2975[29];nt9e4be<=xjc2975[30];off25f6<={pfe30b0>>1,xjc2975[31]};ks92fb5<=xjc2975[32];ou97da9<=xjc2975[33];wlbed49<=xjc2975[34];zxf6a4c<=xjc2975[35];tjb5266<=xjc2975[36];uka9336<=xjc2975[37];cm499b1<=xjc2975[38];yk4cd89<=xjc2975[39];tu66c49<=xjc2975[40];sj3624b<=xjc2975[41];sjb125d<=xjc2975[42];ng892ec<=xjc2975[43];ea49762<=xjc2975[44];mr4bb10<=xjc2975[45];xw5d884<=xjc2975[46];rtec422<=xjc2975[47];ea62117<=xjc2975[48];wy108b8<=xjc2975[49];fp845c0<=xjc2975[50];rv22e06<={ird9d5>>1,xjc2975[51]};end
always@* begin ux1852e[2047]<=tlpgen_rdy_ack;ux1852e[2046]<=qted9f8;ux1852e[2044]<=tu6cfc4;ux1852e[2040]<=qg67e22;ux1852e[2032]<=dll_pause_cnt[0];ux1852e[2017]<=phy_l0;ux1852e[1987]<=vx222e8;ux1852e[1980]<=ho48367;ux1852e[1963]<=fnc2c35;ux1852e[1926]<=nt8ba33[0];ux1852e[1921]<=fpc210;ux1852e[1913]<=kd41b3a;ux1852e[1903]<=ipd3a9f;ux1852e[1879]<=rv161ae;ux1852e[1805]<=fa5d19e;ux1852e[1795]<=vv61086;ux1852e[1783]<=sj9fa41;ux1852e[1778]<=ird9d5[0];ux1852e[1758]<=ym9d4fd;ux1852e[1710]<=rvb0d76;ux1852e[1679]<=mr752e0;ux1852e[1562]<=gbe8cf3;ux1852e[1543]<=ir8437[0];ux1852e[1519]<=gbfd20d;ux1852e[1499]<=bab74ea;ux1852e[1469]<=ayea7e9;ux1852e[1398]<=qvaedd3;ux1852e[1373]<=je86bb7;ux1852e[1310]<=qia9704;ux1852e[1144]<=os5c10c;ux1852e[1076]<=qg4679c;ux1852e[1039]<=rg421bc;ux1852e[1023]<=db13b67;ux1852e[990]<=ble906c;ux1852e[981]<=ir18586;ux1852e[960]<=ie21842;ux1852e[951]<=ntba753;ux1852e[891]<=ui53f48;ux1852e[839]<=dme19b3;ux1852e[749]<=xw76e9d;ux1852e[699]<=vk35dba;ux1852e[572]<=yx4b821;ux1852e[490]<=pfe30b0[0];ux1852e[480]<=ouacd6d;ux1852e[419]<=vk9c336;ux1852e[245]<=ymbc616;ux1852e[240]<=yke0861;ux1852e[209]<=thf3866;ux1852e[122]<=nt378c2;ux1852e[104]<=hd9e70c[0];ux1852e[61]<=ls86f18;ux1852e[30]<=ks10de3;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_wj44d28 #(
   parameter D_WIDTH  = 64 )
   (
   input wire        sys_clk ,        
   input wire        rst_n ,          

   input wire [D_WIDTH-1:0] nt8ba33 ,      
   input wire        fa5d19e ,        
   input wire        gbe8cf3 ,       
   input wire        qg4679c ,      

   input wire [11:0] pu4305 ,    
   input wire        qi2182a ,       
   input wire        rvc150 ,      
   input wire        mr60a86 ,     

   input wire        czd6d38 , 
   input wire        phy_l0 ,         
   input wire        yz80860 ,       
   input wire [2:0]  max_pl_size ,    
   `ifdef X4
      input wire     rvcd9a ,      
      input wire     ps66cd7 ,      
      output reg     tj28aba ,      
      output reg     mt366bb ,      
   `endif
   output wire       xy2aeb6 ,  
   output reg [D_WIDTH-1:0] hd9e70c ,      
   output reg        thf3866 ,        
   output reg        vk9c336 ,       
   output wire       ukb35a9 , 
   output reg        ir9ad49 ,     

   output wire       tx_rbuf_empty ,  
   output reg        qgf010c , 
   output reg        ksa936e , 
   output reg        mrd9d4b      ) ;

`ifdef X1

`ifdef MAX_TLP_512
localparam jc4db89    = ((512/2) + 4) ;
localparam TLP_MEM_DEPTH   = 512/2 * 4 ;
localparam tj28d51  = 10 ;
localparam xj712c6 = 20 ;
localparam ba89636 = 8 ;
localparam of4b1b2  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_1K
localparam jc4db89    = ((1024/2) + 4) ;
localparam TLP_MEM_DEPTH   = 1024/2 * 4 ;
localparam tj28d51  = 11 ;
localparam xj712c6 = 22 ;
localparam ba89636 = 9 ;
localparam of4b1b2  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_2K
localparam jc4db89    = ((2048/2) + 4) ;
localparam TLP_MEM_DEPTH   = 2048/2 * 4 ;
localparam tj28d51  = 12 ;
localparam xj712c6 = 24 ;
localparam ba89636 = 10 ;
localparam of4b1b2  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_4K
localparam jc4db89    = ((4096/2) + 4) ;
localparam TLP_MEM_DEPTH   = 4096/2 * 4 ;
localparam tj28d51  = 13 ;
localparam xj712c6 = 26 ;
localparam ba89636 = 11 ;
localparam of4b1b2  = TLP_MEM_DEPTH/7 ;

`endif

`endif

`ifdef X4

`ifdef MAX_TLP_512
localparam jc4db89    = ((512/8) + 4) ;
localparam TLP_MEM_DEPTH   = 512/8 * 8 ;
localparam tj28d51  = 9 ;
localparam xj712c6 = 18 ;
localparam ba89636 = 8 ;
localparam of4b1b2  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_1K
localparam jc4db89    = ((1024/8) + 4) ;
localparam TLP_MEM_DEPTH   = 1024/8 * 8 ;
localparam tj28d51  = 10 ;
localparam xj712c6 = 20 ;
localparam ba89636 = 9 ;
localparam of4b1b2  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_2K
localparam jc4db89    = ((2048/8) + 4) ;
localparam TLP_MEM_DEPTH   = 2048/8 * 8 ;
localparam tj28d51  = 11 ;
localparam xj712c6 = 22 ;
localparam ba89636 = 10 ;
localparam of4b1b2  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_4K
localparam jc4db89    = ((4096/8) + 4) ;
localparam TLP_MEM_DEPTH   = 4096/8 * 8 ;
localparam tj28d51  = 12 ;
localparam xj712c6 = 24 ;
localparam ba89636 = 11 ;
localparam of4b1b2  = TLP_MEM_DEPTH/2 ;

`endif

`endif
reg [D_WIDTH-1:0]          jccf08f ;
reg                        cm7847b ;
reg                        vvc23d8 ;
reg                        ri11ec7 ;
reg                        qv8f63a ;
reg                        jp7b1d5 ;
reg                        dzd8eaf ;

`ifdef X4
reg                     nrc757e ;

`endif
reg                        fc3abf7 ;
reg [tj28d51 -1:0]  rvafdd2 ;
reg [tj28d51 -1:0]  ipf74be ;
reg [tj28d51 -1:0]  pfd2faf ;
reg [tj28d51 -1:0]  epbebf9 ;
reg [tj28d51 -1:0]  rvafe61 ;
reg [tj28d51 -1:0]  fnf987d ;
reg [ba89636 -1:0] bl61f7c ;
reg [ba89636 -1:0] os7df30 ;
reg                        osef981 ;
reg                        ho7cc09 ;
reg                        nre604b ;
reg                        ri3025e ;
reg                        hd812f2 ;
reg                        hd9796 ;
reg                        kd4bcb6 ;
reg                        ip5e5b4 ;
reg                        alf2da4 ;
reg [tj28d51 -1:0]  ecb6923 ;
reg [ba89636 -1:0] ana48c5 ;
reg                        qi2462c ;
reg                        os5c10c ;
reg                        wl18b0c ;
reg                        hoc5864 ;
reg                        kf2c323 ;
reg                        dz6191d ;
reg                        rvc8ee ;
reg                        rt64777 ;
reg                        cb23bbf ;
reg [11:0]                 mt1ddfd ;
reg [11:0]                 faeefec ;
reg [11:0]                 me77f63 ;
reg                        tjbfb18 ;
reg                        alfd8c6 ;
reg [2:0]                  jpec635 ;
reg [2:0]                  tu631af ;
reg                        oh18d7a ;
reg                        wjc6bd4 ;
reg                        vk35ea4 ;
reg                        rvaf523 ;
reg                        cz7a91e ;
reg                        sud48f4 ;
reg                        yza47a0;
reg                        gd23d05 ;
reg                        ri1e82d ;
reg                        ouacd6d ;
reg [2:0]                  dba0b5a ;
reg                        ou5ad6 ;
reg                        ph2d6b1 ;
wire [ba89636 -1:0] dz5ac7e ;
wire [tj28d51 -1:0]  irb1fbc ;
wire [tj28d51:0]     fn7ef2c ;
wire [xj712c6 -1:0] mgbcb34 ;
wire [xj712c6 -1:0] cb2cd08 ;
wire [ba89636 -1:0] ec34223 ;

`ifdef X1
reg [13:0]               gda1118 ;
wire [15:0]              sj88c5 ;
wire [15:0]              yx4462d ;
wire [11:0]              ou8799c ;
wire                     rvcd9a = 1'b1 ;

`endif

`ifdef X4
reg [12:0]               gda1118 ;
wire [63 +1:0]           sj88c5 ;
wire [63 +1:0]           yx4462d ;
wire [10:0]              ou8799c ;

`endif
wire                        ie24796 ;
wire                        ir23cb1 ;
wire                        hq1e58d ;
wire                        shf2c6a ;
wire                        ng96354 ;
wire                        kfb1aa2 ;
wire                        ec8d515 ;
wire                        mr6a8a8 ;
wire                        sh54545 ;
wire                        baa2a2d ;
wire                        co1516b ;
wire                        doa8b59 ;
wire                        vv45aca ;
wire                        tj2d657 ;
wire                        xj6b2bf ;
wire                        ww595fe ;
wire                        lqcaff1 ;
wire                        ps57f8a ;

`ifdef X1
reg [12:0] fpbfc53 ;
reg [13:0] rgfe29e ;

`endif

`ifdef X4
reg [12:0] fpbfc53 ;
reg [12:0] rgfe29e ;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] gbe731a;
reg oh398d4;
reg qtcc6a5;
reg dm6352c;
reg [11 : 0] mga9deb;
reg of4ef58;
reg me77ac4;
reg ribd620;
reg jceb102;
reg rgee2bb;
reg ksa304e;
reg [2 : 0] ri20490;
reg [D_WIDTH - 1 : 0] wl1241d;
reg co920ec;
reg an90760;
reg ng83b05;
reg cb1d82a;
reg fnec154;
reg of60aa7;
reg ym553c;
reg [tj28d51 - 1 : 0] kd54f03;
reg [tj28d51 - 1 : 0] gd3c0e3;
reg [tj28d51 - 1 : 0] hd38e1;
reg [tj28d51 - 1 : 0] xje3877;
reg [tj28d51 - 1 : 0] jce1dff;
reg [tj28d51 - 1 : 0] os77fd2;
reg [ba89636 - 1 : 0] wwff486;
reg [ba89636 - 1 : 0] jpd2189;
reg ep90c4e;
reg pu86274;
reg uk313a3;
reg do89d18;
reg ip4e8c3;
reg th7461c;
reg uka30e6;
reg wl18730;
reg mrc3985;
reg [tj28d51 - 1 : 0] ble6166;
reg [ba89636 - 1 : 0] wl859b3;
reg an2cd9d;
reg zm350c8;
reg ir36763;
reg oub3b1d;
reg gq9d8e8;
reg ldec740;
reg jc63a07;
reg qv1d03b;
reg qte81dd;
reg [11 : 0] zx40eed;
reg [11 : 0] yz776f;
reg [11 : 0] ou3bb7d;
reg nrddbe8;
reg ofedf46;
reg [2 : 0] en6fa34;
reg [2 : 0] ea7d1a5;
reg kde8d28;
reg ww46944;
reg uk34a20;
reg jra5101;
reg rv2880f;
reg cz4407e;
reg ri203f4;
reg ba1fa3;
reg mgfd1b;
reg mece439;
reg [2 : 0] vif46c6;
reg ksa3632;
reg tw1b190;
reg [ba89636 - 1 : 0] yxc6416;
reg [tj28d51 - 1 : 0] kf905af;
reg [tj28d51 : 0] lf16be8;
reg [xj712c6 - 1 : 0] xlafa3f;
reg [xj712c6 - 1 : 0] ene8ff8;
reg [ba89636 - 1 : 0] je3fe22;
reg wwff112;
reg czf8891;
reg wwc448d;
reg xl22468;
reg ux12346;
reg ph91a34;
reg ym8d1a6;
reg os68d30;
reg cm46980;
reg qi34c00;
reg aaa6001;
reg ri30008;
reg gd80042;
reg wy214;
reg vk10a0;
reg oh8502;
reg ne42814;
reg ba140a2;
reg [2047:0] ux1852e;
wire [91:0] xjc2975;

`ifdef X1

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`endif

`ifdef X4

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 92,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`endif


`ifdef X4


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`ifdef MAX_TLP_512



`endif



`ifdef MAX_TLP_1K



`endif



`ifdef MAX_TLP_2K



`endif



`ifdef MAX_TLP_4K



`endif



`endif




`ifdef X4



`ifdef MAX_TLP_512



`endif



`ifdef MAX_TLP_1K



`endif



`ifdef MAX_TLP_2K



`endif



`ifdef MAX_TLP_4K



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif



`ifdef X4



`endif









`ifdef X1



`endif



`ifdef X4



`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      dba0b5a <= 3'b000 ;   else      dba0b5a <= ri20490 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      fpbfc53 <= 12'd0 ;   else begin      case (vif46c6)


`ifdef X1
            3'd0,            3'd1,            3'd2 : fpbfc53 <= 13'd752 ;              3'd3 : fpbfc53 <= 13'd1520 ;             3'd4 : fpbfc53 <= 13'd3056 ;             3'd5 : fpbfc53 <= 13'd6128 ;             3'd6 : fpbfc53 <= 13'd752 ;            3'd7 : fpbfc53 <= 13'd752 ;


`endif



`ifdef X4
            3'd0,            3'd1,            3'd2 : fpbfc53 <= 13'd376 ;              3'd3 : fpbfc53 <= 13'd760 ;              3'd4 : fpbfc53 <= 13'd1528 ;             3'd5 : fpbfc53 <= 13'd3064 ;             3'd6 : fpbfc53 <= 13'd376 ;            3'd7 : fpbfc53 <= 13'd376 ;


`endif
      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rgfe29e <= 'd0 ;   else begin      case (vif46c6)


`ifdef X1
            3'd0 : rgfe29e <= 14'd622 ;               3'd1 : rgfe29e <= 14'd1092 ;              3'd2 : rgfe29e <= 14'd1468 ;              3'd3 : rgfe29e <= 14'd2812 ;              3'd4 : rgfe29e <= 14'd5500 ;              3'd5 : rgfe29e <= 14'd10876 ;             3'd6 : rgfe29e <= 14'd622 ;            3'd7 : rgfe29e <= 14'd622 ;


`endif



`ifdef X4
            3'd0 : rgfe29e <= 13'd192 ;              3'd1 : rgfe29e <= 13'd310 ;              3'd2 : rgfe29e <= 13'd404 ;              3'd3 : rgfe29e <= 13'd740 ;              3'd4 : rgfe29e <= 13'd1412 ;             3'd5 : rgfe29e <= 13'd2756 ;             3'd6 : rgfe29e <= 13'd192 ;            3'd7 : rgfe29e <= 13'd192 ;


`endif
      endcase   end
end





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      jccf08f  <= {D_WIDTH{1'd0}} ;      cm7847b    <= 1'b0 ;      vvc23d8   <= 1'b0 ;      ri11ec7 <= 1'b0 ;


`ifdef X4
         nrc757e  <= 1'b0 ;


`endif
   end   else if(rvcd9a) begin      jccf08f  <= gbe731a ;      cm7847b    <= oh398d4 ;      vvc23d8   <= qtcc6a5 ;      ri11ec7 <= dm6352c ;


`ifdef X4
         nrc757e  <= ps66cd7 ;


`endif
   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jp7b1d5 <= 1'b0 ;   else if (oh398d4 && rvcd9a)      jp7b1d5 <= 1'b1 ;   else if ((an90760 || ng83b05) && rvcd9a)      jp7b1d5 <= 1'b0 ;   else      jp7b1d5 <= fnec154 ;
end
assign ie24796 = fnec154 & rvcd9a ;


`ifdef X1
   assign sj88c5 = {wl1241d} ;

`endif



`ifdef X4
   assign sj88c5 = {nrc757e, wl1241d} ;

`endif



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rvafe61 <= {(tj28d51){1'b1}} ;   else if (ip4e8c3 && wwff112)      rvafe61 <= {(tj28d51){1'b0}} ;   else if (wwff112)      rvafe61 <= jce1dff + 1'b1 ;   else if (ip4e8c3)      rvafe61 <= {(tj28d51){1'b1}} ;   else      rvafe61 <= jce1dff ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mt1ddfd <= 12'hFFF ;   else if (oh398d4 && rvcd9a) begin


`ifdef X1
         mt1ddfd <= gbe731a[11:0];


`endif



`ifdef X4
         mt1ddfd <= gbe731a[59:48];


`endif
   end   else      mt1ddfd <= zx40eed ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      faeefec <= 12'hFFF ;   else if (qtcc6a5 && rvcd9a)      faeefec <= zx40eed;   else      faeefec <= yz776f ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      epbebf9 <= {(tj28d51){1'b0}} ;   else if (co920ec && rvcd9a)      epbebf9 <= kd54f03 ;   else      epbebf9 <= xje3877 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rvafdd2 <= {(tj28d51){1'b0}} ;   else if (ksa304e)      rvafdd2 <= {(tj28d51){1'b0}} ;   else if (ng83b05 && rvcd9a)      rvafdd2 <= xje3877 ;   else if (wwff112)      rvafdd2 <= kd54f03 + 1'b1 ;   else      rvafdd2 <= kd54f03 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      dzd8eaf <= 1'b0 ;   else if (an2cd9d ||            (nrddbe8 && jceb102 && mrc3985 && !uk34a20 && rvcd9a))      dzd8eaf <= 1'b1 ;   else if (cm46980 && rvcd9a )      dzd8eaf <= 1'b0 ;   else      dzd8eaf <= of60aa7  ;
end
assign ir23cb1 = of60aa7 & rvcd9a ;




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ipf74be <= {(tj28d51){1'b0}} ;   else if (ksa304e)      ipf74be <= {(tj28d51){1'b0}} ;   else if (wwc448d)      ipf74be <= xje3877 ;


`ifdef X1
      else if ( an2cd9d ||             (an90760 & ~jceb102 & ~wwc448d) ||     (ng83b05 & ~jceb102 & ~wwc448d) ||             (!jceb102 & ldec740) ||             (nrddbe8 & jceb102 & mrc3985 & ~uk34a20))         ipf74be <= ene8ff8[(xj712c6/2)-1:0] ;



`endif



`ifdef X4
      else if ( an2cd9d ||             (an90760 & rvcd9a & ~jceb102 & ~wwc448d) ||     (ng83b05 & rvcd9a & ~jceb102 & ~wwc448d) ||             (!jceb102 & gq9d8e8) ||             (nrddbe8 & jceb102 & mrc3985 & ~uk34a20))         ipf74be <= ene8ff8[(xj712c6/2)-1:0] ;


`endif
   else if (os68d30 & ~ofedf46)      ipf74be <= ble6166 ;   else if (czf8891)      ipf74be <= gd3c0e3 + 1'b1 ;   else      ipf74be <= gd3c0e3 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vk35ea4 <= 1'b0 ;   else if (uka30e6 && rvcd9a && xl22468)      vk35ea4 <= 1'b1 ;   else if (thf3866 && rvcd9a && !xl22468)      vk35ea4 <= 1'b0 ;   else if (qgf010c)      vk35ea4 <= 1'b0 ;   else      vk35ea4 <= uk34a20 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      fnf987d <= {(tj28d51){1'b1}} ;   else if (uk34a20 && qgf010c)      fnf987d <= {(tj28d51){1'b1}} ;   else if ( an2cd9d ||             (nrddbe8 & jceb102 & mrc3985 & !uk34a20))      fnf987d <= ene8ff8[xj712c6 -1:(xj712c6/2)] ;   else if (czf8891)      fnf987d <= os77fd2 - 1'b1 ;   else      fnf987d <= os77fd2 ;
end



assign fn7ef2c = kd54f03 + ~gd3c0e3 + 1'b1 ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pfd2faf <= {(tj28d51){1'b0}} ;   else if (ksa304e || wwc448d)      pfd2faf <= {(tj28d51){1'b0}} ;


`ifdef X1
   else if ((jc63a07 && !me77ac4) ||            qgf010c || ((qtcc6a5 || dm6352c)) ||            (jce1dff == jc4db89-18) ) begin      if (lf16be8[tj28d51] )         pfd2faf <= lf16be8[tj28d51 -1:0] + {(tj28d51){1'b1}} ;      else         pfd2faf <= lf16be8[tj28d51 -1:0] ;   end


`endif



`ifdef X4
   else if ((gq9d8e8 && !me77ac4) ||            qgf010c || ((qtcc6a5 || dm6352c) && rvcd9a) ||            (jce1dff == jc4db89-18) ) begin      if (lf16be8[tj28d51] )         pfd2faf <= lf16be8[tj28d51 -1:0] + {(tj28d51){1'b1}} ;      else         pfd2faf <= lf16be8[tj28d51 -1:0] ;   end


`endif
   else      pfd2faf <= hd38e1 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ou5ad6   <= 1'b0 ;      ph2d6b1   <= 1'b0 ;      ir9ad49 <= 1'b0 ;   end   else if (ksa304e) begin      ou5ad6   <= 1'b0 ;      ph2d6b1   <= 1'b0 ;      ir9ad49 <= 1'b0 ;   end   else if (hd38e1 >= fpbfc53) begin      ou5ad6   <= 1'b1 ;      ir9ad49 <= 1'b1 ;   end      else if (xy2aeb6) begin      ph2d6b1   <= 1'b1 ;      ir9ad49 <= 1'b1 ;   end      else if (~|ou8799c && tw1b190) begin      ph2d6b1   <= 1'b0 ;      ir9ad49 <= 1'b0 ;   end      else if (!xy2aeb6 & (hd38e1 < fpbfc53) && ksa3632) begin      ou5ad6   <= 1'b0 ;      ir9ad49 <= 1'b0 ;   end   else      ir9ad49 <= ir9ad49 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      fc3abf7    <= 1'b0 ;      qv8f63a     <= 1'b0 ;      cz7a91e <= 1'b0 ;   end   else begin      fc3abf7    <= ym8d1a6 ;      qv8f63a     <= (an90760 | ng83b05) && rvcd9a ;      cz7a91e <= cb1d82a ;   end
end


assign sh54545 = (os77fd2 == {(tj28d51){1'b0}}) & rvcd9a ;


assign ec8d515 = ((gd3c0e3 == {(tj28d51){1'b0}}) &                    (kd54f03 == {(tj28d51){1'b0}})) |                    (gd3c0e3 == (kd54f03 - 1)) ;


pmi_ram_dp #(   .pmi_wr_addr_depth    ( TLP_MEM_DEPTH ),   .pmi_wr_addr_width    ( tj28d51 ),   .pmi_rd_addr_depth    ( TLP_MEM_DEPTH ),   .pmi_rd_addr_width    ( tj28d51 ),


`ifdef X1
   .pmi_wr_data_width    ( 16 ),   .pmi_rd_data_width    ( 16 ),


`endif



`ifdef X4
   .pmi_wr_data_width    ( 64 +1 ),   .pmi_rd_data_width    ( 64 +1 ),


`endif
   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   rt7e8e3 (   .Data         ( sj88c5 ),   .WrAddress    ( rvafdd2 ),   .RdAddress    ( ipf74be ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( ir23cb1 ),   .WE           ( ie24796 ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( yx4462d )   );





assign mgbcb34 = {jce1dff, xje3877} ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      hd812f2     <= 1'b0 ;   else      hd812f2     <= (an90760 && !ng83b05 && rvcd9a) ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bl61f7c <= {(ba89636){1'b0}} ;   else if (ksa304e)      bl61f7c <= {(ba89636){1'b0}} ;   else if (ip4e8c3)      bl61f7c <= wwff486 + 1'b1 ;   else      bl61f7c <= wwff486 ;
end

assign hq1e58d  = (jpd2189 == wwff486) ;

assign dz5ac7e = (wwff486-1) ;
assign shf2c6a = (jpd2189 == yxc6416) ;



assign ng96354 = (cm46980 & ~uk34a20) & ~wwc448d ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      os7df30 <= {(ba89636){1'b0}} ;   else if (ksa304e)      os7df30 <= {(ba89636){1'b0}} ;   else if (os68d30 || rv2880f ||            (!jceb102 && !zm350c8 && oub3b1d) ||            (of4ef58 && ~|ou8799c) ) begin      if (ofedf46 || oub3b1d )         os7df30 <= je3fe22 ;      else         os7df30 <= (wl859b3) ;   end   else if (uk313a3)      os7df30 <= jpd2189 + 1'b1 ;   else      os7df30 <= jpd2189 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      hoc5864  <= 1'b0 ;      kf2c323 <= 1'b0 ;      dz6191d <= 1'b0 ;      rvc8ee <= 1'b0 ;      rt64777    <= 1'b0 ;      osef981  <= 1'b0 ;      ho7cc09 <= 1'b0 ;      nre604b       <= 1'b0 ;      ri3025e   <= 1'b0 ;   end   else begin      hoc5864  <= ribd620 ;      kf2c323 <= oub3b1d ;      dz6191d <= gq9d8e8 ;      rvc8ee <= ldec740 ;      rt64777    <= of4ef58 ;      osef981  <= wwc448d ;      ho7cc09 <= ep90c4e ;      nre604b       <= ux12346  ;      ri3025e   <= uk313a3 ;   end
end
assign kfb1aa2 = wwc448d & ~ep90c4e ;
assign tx_rbuf_empty = pu86274 ;

pmi_ram_dp #(   .pmi_wr_addr_depth    ( of4b1b2 ),   .pmi_wr_addr_width    ( ba89636 ),   .pmi_wr_data_width    ( xj712c6 ),   .pmi_rd_addr_depth    ( of4b1b2 ),   .pmi_rd_addr_width    ( ba89636 ),   .pmi_rd_data_width    ( xj712c6 ),   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   zk52c7f (   .Data         ( mgbcb34 ),   .WrAddress    ( bl61f7c ),   .RdAddress    ( os7df30 ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( 1'b1 ),   .WE           ( hd812f2 ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( cb2cd08 )   );



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      me77f63 <= 12'h000 ;   else if (of4ef58 || ribd620)      me77f63 <= mga9deb ;   else      me77f63 <= ou3bb7d ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      alfd8c6 <= 1'b0 ;   else if (ribd620)      alfd8c6 <= 1'b1 ;   else if (do89d18 || cm46980 || rv2880f )      alfd8c6 <= 1'b0 ;   else      alfd8c6 <= ofedf46 ;
end



assign ou8799c = yz776f + ~ou3bb7d + 1 ;




assign ec34223 = wwff486 + ~ou8799c + 1 ;

assign irb1fbc =  ene8ff8[10:0] ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      wl18b0c    <= 1'b0 ;      cb23bbf     <= 1'b0 ;      qi2462c  <= 1'b0 ;      rvaf523 <= 1'b0 ;      yza47a0   <= 1'b0 ;      ouacd6d       <= 1'b0 ;   end   else  begin      wl18b0c    <= me77ac4 ;      cb23bbf     <= jceb102  ;      qi2462c  <= (aaa6001 & nrddbe8) |                          (jceb102 & cz4407e & ri203f4) ;      rvaf523 <= cm46980 ;      yza47a0   <= qgf010c ;      ouacd6d       <= rgee2bb ;   end
end

assign baa2a2d = me77ac4 & ~ir36763 ;

assign co1516b  = jceb102 & ~qte81dd ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ecb6923 <= {(tj28d51){1'b0}} ;      ana48c5 <= {(ba89636){1'b0}} ;   end   else if (ofedf46 & (cm46980 || rv2880f)) begin      ecb6923  <= kf905af ;      ana48c5 <= je3fe22 ;   end   else if (ri30008) begin      ecb6923  <= gd3c0e3 ;      ana48c5 <= jpd2189 ;   end   else begin      ecb6923  <= ble6166 ;      ana48c5 <= wl859b3 ;   end
end



assign mr6a8a8= (jra5101 & uk34a20 & jceb102) ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jpec635 <= 3'b000 ;      else  if (ksa304e || ((en6fa34 == 3'b100) && qgf010c ) || (ribd620 && !me77ac4))      jpec635 <= 3'b000 ;   else  if ((qi34c00  || ksa936e) && !wwc448d)      jpec635 <= en6fa34 + 3'b001 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tu631af <= 3'b000 ;      mrd9d4b <= 1'b0 ;   end   else begin      tu631af <= en6fa34 ;      mrd9d4b <= ((en6fa34 == 3'b100) & (ea7d1a5 == 3'b011)) ;   end
end










always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gda1118  <= 'h0000 ;   else  if (ne42814 || ba140a2 || ph91a34)      gda1118 <= 'h0000 ;   else  if (gd80042 || ba1fa3 ||             mgfd1b || wwc448d )      gda1118 <= gda1118 ;   else if (rvcd9a)      gda1118 <= gda1118 + 1 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      oh18d7a <= 1'b0 ;   else  if (ba140a2)      oh18d7a <= 1'b1 ;   else  if (ne42814 || gd80042 ||             ba1fa3 || mgfd1b || ym553c)      oh18d7a <= 1'b0 ;   else      oh18d7a <= kde8d28 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      wjc6bd4 <= 1'b0 ;   else  if (ir36763 && wl18730 )      wjc6bd4 <= 1'b1 ;   else  if (!ir36763)      wjc6bd4 <= 1'b0 ;   else      wjc6bd4 <= ww46944 ;
end


assign vv45aca = ~ww46944 & ir36763 & (|ou8799c) ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gd23d05 <= 1'b0 ;   else  if (wy214 )      gd23d05 <= 1'b1 ;   else  if (ba140a2 | oh8502 | vk10a0 | mrd9d4b)      gd23d05 <= 1'b0 ;   else      gd23d05 <= ba1fa3 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ri1e82d <= 1'b0 ;   else  if (mrd9d4b )      ri1e82d <= 1'b1 ;   else  if (rgee2bb & ~mece439)      ri1e82d <= 1'b0 ;   else      ri1e82d <= mgfd1b ;
end



assign xj6b2bf = (~wwc448d & qi34c00) ;



assign ww595fe = (~wwc448d & qv1d03b) ;


assign tj2d657 = (gda1118 == rgfe29e)  ;
assign lqcaff1 = oh8502 | vk10a0 | wy214 ;


assign ps57f8a =  (!kde8d28 & (qtcc6a5 | wl18730)) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ksa936e   <= 1'b0 ;   else      ksa936e   <= wy214 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      sud48f4 <= 1'b0 ;   else if  (ksa936e && qte81dd)      sud48f4 <= 1'b1 ;   else if (!qte81dd)      sud48f4 <= 1'b0 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      tjbfb18 <= 1'b0 ;   else if (ksa304e)      tjbfb18 <= 1'b0 ;  else if ((qi34c00  || ksa936e) && !wwc448d && (en6fa34 != 3'b011))      tjbfb18 <= 1'b1 ;  else  if ((rgee2bb & ~mece439) && !wwc448d && (en6fa34 == 3'b100))      tjbfb18 <= 1'b1 ;   else if (qgf010c || (of4ef58 && ~|ou8799c))      tjbfb18 <= 1'b0 ;   else if (cz4407e )      tjbfb18 <= 1'b1 ;   else      tjbfb18 <= nrddbe8 ;
end
assign xy2aeb6 = nrddbe8 | cz4407e ;
assign doa8b59 = nrddbe8 & ~zm350c8 ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qgf010c <= 1'b0 ;      else if (os68d30)      qgf010c <= 1'b1 ;   else if (me77ac4 && ~|ou8799c && wwc448d)      qgf010c <= qi34c00 ;   else      qgf010c <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      os5c10c  <= 1'b0 ;      hd9796  <= 1'b0 ;      hd9e70c     <= {D_WIDTH{1'b0}} ;


`ifdef X4
         tj28aba  <= 1'b0 ;         mt366bb  <= 1'b0 ;


`endif

      kd4bcb6   <= 1'b0 ;      thf3866       <= 1'b0 ;      ip5e5b4 <= 1'b0 ;      vk9c336     <= 1'b0 ;      alf2da4 <= 1'b0 ;   end   else if (rvcd9a) begin      os5c10c  <= nrddbe8 ;      hd9796  <= of60aa7 ;


`ifdef X1
         hd9e70c     <= th7461c ? yx4462d[15:0] : 16'h0000 ;


`endif



`ifdef X4
         hd9e70c     <= th7461c ? yx4462d[63:0] : 64'h0000_0000_0000_0000 ;         tj28aba  <= th7461c ;         mt366bb  <= (yx4462d[64] & wl18730) ;


`endif

      kd4bcb6   <= (of60aa7 & ~th7461c) ;      thf3866       <= uka30e6 ;      ip5e5b4 <= cm46980 ;      vk9c336     <= wl18730 ;      alf2da4 <= vk9c336 ;   end
end
assign ukb35a9 =  cm46980 ;
always@* begin gbe731a<={nt8ba33>>1,xjc2975[0]};oh398d4<=xjc2975[1];qtcc6a5<=xjc2975[2];dm6352c<=xjc2975[3];mga9deb<={pu4305>>1,xjc2975[4]};of4ef58<=xjc2975[5];me77ac4<=xjc2975[6];ribd620<=xjc2975[7];jceb102<=xjc2975[8];rgee2bb<=xjc2975[9];ksa304e<=xjc2975[10];ri20490<={max_pl_size>>1,xjc2975[11]};wl1241d<={jccf08f>>1,xjc2975[12]};co920ec<=xjc2975[13];an90760<=xjc2975[14];ng83b05<=xjc2975[15];cb1d82a<=xjc2975[16];fnec154<=xjc2975[17];of60aa7<=xjc2975[18];ym553c<=xjc2975[19];kd54f03<={rvafdd2>>1,xjc2975[20]};gd3c0e3<={ipf74be>>1,xjc2975[21]};hd38e1<={pfd2faf>>1,xjc2975[22]};xje3877<={epbebf9>>1,xjc2975[23]};jce1dff<={rvafe61>>1,xjc2975[24]};os77fd2<={fnf987d>>1,xjc2975[25]};wwff486<={bl61f7c>>1,xjc2975[26]};jpd2189<={os7df30>>1,xjc2975[27]};ep90c4e<=xjc2975[28];pu86274<=xjc2975[29];uk313a3<=xjc2975[30];do89d18<=xjc2975[31];ip4e8c3<=xjc2975[32];th7461c<=xjc2975[33];uka30e6<=xjc2975[34];wl18730<=xjc2975[35];mrc3985<=xjc2975[36];ble6166<={ecb6923>>1,xjc2975[37]};wl859b3<={ana48c5>>1,xjc2975[38]};an2cd9d<=xjc2975[39];zm350c8<=xjc2975[40];ir36763<=xjc2975[41];oub3b1d<=xjc2975[42];gq9d8e8<=xjc2975[43];ldec740<=xjc2975[44];jc63a07<=xjc2975[45];qv1d03b<=xjc2975[46];qte81dd<=xjc2975[47];zx40eed<={mt1ddfd>>1,xjc2975[48]};yz776f<={faeefec>>1,xjc2975[49]};ou3bb7d<={me77f63>>1,xjc2975[50]};nrddbe8<=xjc2975[51];ofedf46<=xjc2975[52];en6fa34<={jpec635>>1,xjc2975[53]};ea7d1a5<={tu631af>>1,xjc2975[54]};kde8d28<=xjc2975[55];ww46944<=xjc2975[56];uk34a20<=xjc2975[57];jra5101<=xjc2975[58];rv2880f<=xjc2975[59];cz4407e<=xjc2975[60];ri203f4<=xjc2975[61];ba1fa3<=xjc2975[62];mgfd1b<=xjc2975[63];mece439<=xjc2975[64];vif46c6<={dba0b5a>>1,xjc2975[65]};ksa3632<=xjc2975[66];tw1b190<=xjc2975[67];yxc6416<={dz5ac7e>>1,xjc2975[68]};kf905af<={irb1fbc>>1,xjc2975[69]};lf16be8<={fn7ef2c>>1,xjc2975[70]};xlafa3f<={mgbcb34>>1,xjc2975[71]};ene8ff8<={cb2cd08>>1,xjc2975[72]};je3fe22<={ec34223>>1,xjc2975[73]};wwff112<=xjc2975[74];czf8891<=xjc2975[75];wwc448d<=xjc2975[76];xl22468<=xjc2975[77];ux12346<=xjc2975[78];ph91a34<=xjc2975[79];ym8d1a6<=xjc2975[80];os68d30<=xjc2975[81];cm46980<=xjc2975[82];qi34c00<=xjc2975[83];aaa6001<=xjc2975[84];ri30008<=xjc2975[85];gd80042<=xjc2975[86];wy214<=xjc2975[87];vk10a0<=xjc2975[88];oh8502<=xjc2975[89];ne42814<=xjc2975[90];ba140a2<=xjc2975[91];end
always@* begin ux1852e[2047]<=fa5d19e;ux1852e[2046]<=gbe8cf3;ux1852e[2044]<=qg4679c;ux1852e[2040]<=pu4305[0];ux1852e[2032]<=qi2182a;ux1852e[2016]<=rvc150;ux1852e[1985]<=mr60a86;ux1852e[1950]<=jp7b1d5;ux1852e[1930]<=epbebf9[0];ux1852e[1923]<=czd6d38;ux1852e[1909]<=baa2a2d;ux1852e[1878]<=wjc6bd4;ux1852e[1874]<=tj2d657;ux1852e[1870]<=hq1e58d;ux1852e[1852]<=dzd8eaf;ux1852e[1813]<=rvafe61[0];ux1852e[1799]<=phy_l0;ux1852e[1770]<=co1516b;ux1852e[1708]<=vk35ea4;ux1852e[1700]<=xj6b2bf;ux1852e[1693]<=shf2c6a;ux1852e[1656]<=fc3abf7;ux1852e[1578]<=fnf987d[0];ux1852e[1573]<=ouacd6d;ux1852e[1551]<=yz80860;ux1852e[1493]<=tu631af[0];ux1852e[1492]<=doa8b59;ux1852e[1491]<=ie24796;ux1852e[1417]<=gd23d05;ux1852e[1396]<=cb2cd08[0];ux1852e[1378]<=sud48f4;ux1852e[1368]<=rvaf523;ux1852e[1353]<=os5c10c;ux1852e[1352]<=ww595fe;ux1852e[1345]<=nre604b;ux1852e[1339]<=ng96354;ux1852e[1316]<=hoc5864;ux1852e[1312]<=ps57f8a;ux1852e[1285]<=hd812f2;ux1852e[1265]<=rvafdd2[0];ux1852e[1262]<=ec8d515;ux1852e[1198]<=irb1fbc[0];ux1852e[1169]<=dz6191d;ux1852e[1163]<=cb23bbf;ux1852e[1117]<=me77f63[0];ux1852e[1108]<=bl61f7c[0];ux1852e[1098]<=dba0b5a[0];ux1852e[1054]<=max_pl_size[0];ux1852e[1045]<=kd4bcb6;ux1852e[1023]<=nt8ba33[0];ux1852e[975]<=qv8f63a;ux1852e[965]<=pfd2faf[0];ux1852e[954]<=sh54545;ux1852e[939]<=oh18d7a;ux1852e[937]<=vv45aca;ux1852e[935]<=ir23cb1;ux1852e[786]<=ri1e82d;ux1852e[746]<=jpec635[0];ux1852e[745]<=ec34223[0];ux1852e[708]<=yza47a0;ux1852e[698]<=mgbcb34[0];ux1852e[689]<=cz7a91e;ux1852e[676]<=qi2462c;ux1852e[672]<=ho7cc09;ux1852e[658]<=wl18b0c;ux1852e[656]<=lqcaff1;ux1852e[642]<=ri3025e;ux1852e[631]<=kfb1aa2;ux1852e[599]<=dz5ac7e[0];ux1852e[584]<=kf2c323;ux1852e[581]<=rt64777;ux1852e[558]<=faeefec[0];ux1852e[522]<=hd9796;ux1852e[487]<=ri11ec7;ux1852e[482]<=ipf74be[0];ux1852e[477]<=mr6a8a8;ux1852e[373]<=alfd8c6;ux1852e[349]<=fn7ef2c[0];ux1852e[338]<=ana48c5[0];ux1852e[336]<=osef981;ux1852e[299]<=ph2d6b1;ux1852e[290]<=rvc8ee;ux1852e[279]<=mt1ddfd[0];ux1852e[243]<=vvc23d8;ux1852e[186]<=tjbfb18;ux1852e[169]<=ecb6923[0];ux1852e[168]<=os7df30[0];ux1852e[149]<=ou5ad6;ux1852e[121]<=cm7847b;ux1852e[84]<=alf2da4;ux1852e[60]<=jccf08f[0];ux1852e[42]<=ip5e5b4;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_top_zm83266 #(
   parameter D_WIDTH  = 64,   parameter kdc999f  = 12'd0,   parameter kq4ccfd  = 12'd2048 )
   (
   input wire        sys_clk ,     
   input wire        rst_n ,       

   input wire [D_WIDTH-1:0] tlpgen_data , 
   input wire        tlpgen_st ,   
   input wire        tlpgen_end ,  
   input wire        tlpgen_nlfy , 

   input wire [11:0] dba0590 ,    
   input wire        yz80860 ,    
   `ifdef X4
      input wire     sw2b9ba , 
      input wire     uk3e9a1 , 
      output reg     ps66cd7 ,   
   `endif

   output wire       gqa6843 ,   

   output reg [D_WIDTH-1:0] nt8ba33 ,   
   output reg        fa5d19e ,     
   output reg        gbe8cf3 ,    
   output reg        qg4679c ,   
   output reg [11:0] uv5e021     ) ;
reg [D_WIDTH-1:0]     gd2c3ff ;
reg                   xj61ffd ;
reg                   swffee ;
reg                   uv7ff70 ;

`ifdef X4
reg                goffb84 ;
reg                alfdc20 ;
reg [15:0]         zk7c0b4 ;
reg                al7082a ;
reg                fp84155 ;
reg                pu20aae ;

`endif
wire [11:0]           ep90f33 ;
wire                  xy2ab90 ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] irae41e;
reg go720f4;
reg an907a1;
reg ng83d0d;
reg [11 : 0] of4e147;
reg ksa304e;
reg sja1a9a;
reg gdd4d4;
reg cz6a6a4;
reg [11 : 0] by47b66;
reg mt9a920;
reg [2047:0] ux1852e;
wire [10:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 11,jra5d72 = 32'hfdffc68b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef X4



`endif












`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         xj61ffd  <= 1'b0 ;         swffee <= 1'b0 ;         gd2c3ff <= {D_WIDTH{1'b0}} ;      end      else begin         xj61ffd  <= an907a1 ;         swffee <= ng83d0d ;         gd2c3ff <= irae41e ;      end   end

`endif



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         xj61ffd  <= 1'b0 ;         swffee <= 1'b0 ;         gd2c3ff <= {D_WIDTH{1'b0}} ;         goffb84 <= 1'b0 ;         alfdc20   <= 1'b0 ;         al7082a  <= 1'b0 ;         fp84155 <= 1'b0 ;         pu20aae <= 1'b0 ;      end      else if (sw2b9ba) begin         xj61ffd  <= an907a1 ;         swffee <= ng83d0d ;         gd2c3ff <= irae41e ;         goffb84 <= uk3e9a1 ;         alfdc20   <= go720f4 ;         al7082a  <= sja1a9a ;         fp84155 <= gdd4d4 ;         pu20aae <= goffb84 ;      end   end

`endif




`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         fa5d19e         <= 1'b0 ;         gbe8cf3        <= 1'b0 ;         qg4679c       <= 1'b0 ;      end      else begin         fa5d19e         <= go720f4 ;         gbe8cf3        <= sja1a9a ;         qg4679c       <= gdd4d4 ;      end   end

`endif



`ifdef X4
               always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         fa5d19e   <= 1'b0 ;         gbe8cf3  <= 1'b0 ;         qg4679c <= 1'b0 ;         ps66cd7 <= 1'b0 ;      end      else begin if (sw2b9ba)            fa5d19e <= alfdc20 ; if (goffb84 & sw2b9ba) begin            gbe8cf3  <= sja1a9a ;            qg4679c <= gdd4d4 ;            ps66cd7 <= ~goffb84 & (sja1a9a | gdd4d4)  ;         end         else if (sw2b9ba) begin            if (!pu20aae) begin               gbe8cf3  <= al7082a ;               qg4679c <= fp84155 ;               ps66cd7 <= ~pu20aae & (al7082a | fp84155)  ;            end            else begin               gbe8cf3  <= 1'b0 ;               qg4679c <= 1'b0 ;               ps66cd7 <= 1'b0 ;            end         end      end   end

`endif




`ifdef X1
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         uv7ff70  <= 1'b0 ;      else if (go720f4)         uv7ff70  <= 1'b1 ;      else if (sja1a9a)         uv7ff70  <= 1'd0 ;   end         always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         nt8ba33  <= 16'd0 ;      else if (go720f4)         nt8ba33  <= uv5e021 ;      else if (cz6a6a4)         nt8ba33  <= gd2c3ff ;      else         nt8ba33  <= 16'd0 ;   end

`endif



`ifdef X4
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         uv7ff70  <= 1'b0 ;      else if (alfdc20 && sw2b9ba)         uv7ff70  <= 1'b1 ;      else if (gbe8cf3 && sw2b9ba)         uv7ff70  <= 1'd0 ;   end         always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         zk7c0b4 <= 16'd0 ;         nt8ba33  <= 64'd0 ;      end      else begin                           if (alfdc20 || sw2b9ba)            zk7c0b4 <= gd2c3ff[15:0] ;         else            zk7c0b4 <= zk7c0b4 ;         case (1'b1)            alfdc20 & sw2b9ba  :               nt8ba33  <= {4'b0000, uv5e021, gd2c3ff[63:16]} ;            sw2b9ba & cz6a6a4 :               nt8ba33  <= {zk7c0b4, gd2c3ff[63:16]} ;            sja1a9a & sw2b9ba :               nt8ba33  <= {zk7c0b4, 48'h0000_0000_0000} ;            gdd4d4 & sw2b9ba :               nt8ba33  <= {zk7c0b4, 48'h0000_0000_0000} ;            sw2b9ba :               nt8ba33  <= 64'd0 ;            default :               nt8ba33  <= nt8ba33 ;         endcase      end   end

`endif





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      uv5e021 <= kdc999f ;   else if (ksa304e)      uv5e021 <= kdc999f ;


`ifdef X1
      else if (an907a1)         uv5e021 <= uv5e021 + 12'h001 ;


`endif



`ifdef X4
      else if (an907a1 && sw2b9ba)         uv5e021 <= uv5e021 + 12'h001 ;


`endif
   else      uv5e021 <= uv5e021 ;
end





assign ep90f33 = ((~of4e147) + 12'h001) ;




assign xy2ab90 = ((uv5e021 + by47b66) >= kq4ccfd ) ;

assign gqa6843 = mt9a920  ;
always@* begin irae41e<={tlpgen_data>>1,xjc2975[0]};go720f4<=xjc2975[1];an907a1<=xjc2975[2];ng83d0d<=xjc2975[3];of4e147<={dba0590>>1,xjc2975[4]};ksa304e<=xjc2975[5];sja1a9a<=xjc2975[6];gdd4d4<=xjc2975[7];cz6a6a4<=xjc2975[8];by47b66<={ep90f33>>1,xjc2975[9]};mt9a920<=xjc2975[10];end
always@* begin ux1852e[2047]<=tlpgen_st;ux1852e[2046]<=tlpgen_end;ux1852e[2044]<=tlpgen_nlfy;ux1852e[2040]<=dba0590[0];ux1852e[2032]<=yz80860;ux1852e[2017]<=xj61ffd;ux1852e[1987]<=swffee;ux1852e[1926]<=uv7ff70;ux1852e[1805]<=ep90f33[0];ux1852e[1562]<=xy2ab90;ux1852e[1023]<=tlpgen_data[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_top_dm73f1d #(
   parameter FADDR = 3,   parameter D_WIDTH  = 64 )
   (
   input wire            sys_clk ,         
   input wire            rst_n ,           

   input wire            db13b67 ,      
   input wire [D_WIDTH-1:0]     tlpgen_data ,     
   input wire            tlpgen_st ,       
   input wire            tlpgen_end ,      
   input wire            tlpgen_nlfy ,     
   input wire            tlpgen_rdy_ack ,  

   input wire [11:0]     pu4305 ,     
   input wire            qi2182a ,        
   input wire            rvc150 ,       
   input wire            mr60a86 ,      

   input wire            yz80860 ,        
   input wire [FADDR:0]  dll_pause_cnt ,   
   input wire            phy_l0 ,          
   input wire [2:0]      max_pl_size ,     
   `ifdef X4
      input wire         sw2b9ba ,     
      input wire         uk3e9a1 ,     
      output wire        ne79b37 ,       
      output wire        jpcd9bb ,       
   `endif

   output wire           txtp_rdy ,        
   output wire           hofb3a9 ,
   output wire [D_WIDTH-1:0]    txtp_tdata ,      
   output wire           al5e1c9 ,   
   output wire           txtp_st ,         
   output wire           txtp_end ,        
   output wire           txtp_edb ,        

   output wire           tx_rbuf_empty ,  
   output wire           qgf010c ,  
   output wire [11:0]    uv5e021 ,     
   output wire           ksa936e ,  
   output wire           mrd9d4b       ) ;
wire[D_WIDTH-1:0]    nt8ba33 ;
wire[D_WIDTH-1:0]    hd9e70c ;
wire[D_WIDTH-1:0]    dz50357 ;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg rst_n_split;
reg go6756a;
reg [D_WIDTH - 1 : 0] irae41e;
reg go720f4;
reg an907a1;
reg ng83d0d;
reg ng3ab50;
reg [11 : 0] mga9deb;
reg of4ef58;
reg me77ac4;
reg ribd620;
reg ksa304e;
reg [FADDR : 0] ks824e7;
reg rgee2bb;
reg [2 : 0] ri20490;
reg [D_WIDTH - 1 : 0] ykd4b11;
reg [D_WIDTH - 1 : 0] ksb3a4c;
reg [2047:0] ux1852e;
wire [16:0] xjc2975;


`ifdef X4

`endif


`ifdef X4

`endif


`ifdef X4

`endif


`ifdef X4

`endif

localparam do14bae = 17,jra5d72 = 32'hfdffd14b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


pcie_x1_top_zm83266 #(   .D_WIDTH              ( D_WIDTH ) )   rge1c88 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .tlpgen_data   ( irae41e ) ,   .tlpgen_st     ( go720f4 ) ,   .tlpgen_end    ( an907a1 ) ,   .tlpgen_nlfy   ( ng83d0d ) ,   .dba0590      ( mga9deb ) ,   .yz80860      ( ksa304e  ) ,


`ifdef X4
      .sw2b9ba( sw2b9ba ) ,      .uk3e9a1( uk3e9a1 ) ,      .ps66cd7  ( ps66cd7 ) ,


`endif
      .gqa6843     ( tu6cfc4 ) ,   .nt8ba33     ( nt8ba33 ) ,   .fa5d19e       ( fa5d19e ) ,   .gbe8cf3      ( gbe8cf3 ) ,   .qg4679c     ( qg4679c ) ,   .uv5e021   ( uv5e021 )  ) ;  pcie_x1_top_wj44d28 #(   .D_WIDTH              ( D_WIDTH ) )   xwdf89c (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ),      .nt8ba33      ( nt8ba33 ) ,   .fa5d19e        ( fa5d19e ) ,   .gbe8cf3       ( gbe8cf3 ) ,   .qg4679c      ( qg4679c ) ,
   .pu4305    ( mga9deb ) ,   .qi2182a       ( of4ef58 ) ,   .rvc150      ( me77ac4 ) ,   .mr60a86     ( ribd620 ) ,   .czd6d38 ( ayff675 ) ,   .yz80860       ( ksa304e  ) ,   .phy_l0         ( rgee2bb ) ,   .max_pl_size    ( ri20490 ),


`ifdef X4
      .rvcd9a   ( sw2b9ba ) ,      .ps66cd7   ( ps66cd7 ) ,      .tj28aba   ( ) ,      .mt366bb   ( mt366bb ) ,


`endif

      .xy2aeb6  ( qted9f8 ) ,   .hd9e70c      ( hd9e70c ) ,   .thf3866        ( thf3866 ) ,   .vk9c336       ( vk9c336 ) ,   .ukb35a9 ( ayd4e99 ) ,   .ir9ad49     ( qg67e22 ) ,   .tx_rbuf_empty  ( tx_rbuf_empty ) ,   .qgf010c ( qgf010c ) ,   .ksa936e ( ksa936e ) ,   .mrd9d4b ( vx222e8 )   ) ;
pcie_x1_top_rg4dfc2 #(   .FADDR         ( FADDR ),   .D_WIDTH       ( D_WIDTH ) )   shd6890 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .db13b67     ( go6756a ) ,   .tlpgen_rdy_ack ( ng3ab50 ) ,   .qted9f8       ( qted9f8 ) ,   .tu6cfc4  ( tu6cfc4 ) ,   .qg67e22  ( qg67e22 ) ,   .dll_pause_cnt  ( ks824e7 ) ,   .phy_l0         ( rgee2bb ) ,   .vx222e8      ( vx222e8 ) ,   .nt8ba33      ( nt8ba33 ) ,   .fa5d19e        ( fa5d19e ) ,   .gbe8cf3       ( gbe8cf3 ) ,   .qg4679c      ( qg4679c ) ,   .hd9e70c      ( ykd4b11 ) ,   .thf3866        ( thf3866 ) ,   .vk9c336       ( vk9c336 ) ,   .dme19b3      ( ayd4e99 ) ,


`ifdef X4
      .rvcd9a   ( sw2b9ba ) ,      .ps66cd7   ( ps66cd7 ) ,      .mt366bb   ( mt366bb ) ,      .ps57fe5   ( ps57fe5 ) ,      .fpbff2b   ( fpbff2b ) ,


`endif

      .txtp_rdy       ( txtp_rdy ) ,   .ayff675       ( ayff675 ) ,   .hofb3a9 ( hofb3a9 ) ,   .mrd9d4b ( mrd9d4b ) ,   .dz50357      ( dz50357 ) ,   .nt81abf        ( nt81abf ) ,   .gdd5ff       ( gdd5ff ) ,   .cz6affc       ( cz6affc )  ) ;
pcie_x1_top_cmc144a #(   .D_WIDTH              ( D_WIDTH ) )   mec45d6 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .dz50357     ( ksb3a4c ) ,   .nt81abf       ( nt81abf ) ,   .gdd5ff      ( gdd5ff ) ,   .cz6affc      ( cz6affc ) ,


`ifdef X4
      .ps57fe5 ( ps57fe5 ) ,      .fpbff2b ( fpbff2b ) ,      .ne79b37 ( ne79b37 ) ,      .jpcd9bb ( jpcd9bb ) ,


`endif

      .txtp_tdata    ( txtp_tdata ) ,   .al5e1c9 ( al5e1c9 ) ,   .txtp_st       ( txtp_st ) ,   .txtp_end      ( txtp_end ) ,   .txtp_edb      ( txtp_edb )  ) ;

always@* begin rst_n_split<=xjc2975[0];go6756a<=xjc2975[1];irae41e<={tlpgen_data>>1,xjc2975[2]};go720f4<=xjc2975[3];an907a1<=xjc2975[4];ng83d0d<=xjc2975[5];ng3ab50<=xjc2975[6];mga9deb<={pu4305>>1,xjc2975[7]};of4ef58<=xjc2975[8];me77ac4<=xjc2975[9];ribd620<=xjc2975[10];ksa304e<=xjc2975[11];ks824e7<={dll_pause_cnt>>1,xjc2975[12]};rgee2bb<=xjc2975[13];ri20490<={max_pl_size>>1,xjc2975[14]};ykd4b11<={hd9e70c>>1,xjc2975[15]};ksb3a4c<={dz50357>>1,xjc2975[16]};end
always@* begin ux1852e[2047]<=db13b67;ux1852e[2046]<=tlpgen_data[0];ux1852e[2044]<=tlpgen_st;ux1852e[2040]<=tlpgen_end;ux1852e[2033]<=tlpgen_nlfy;ux1852e[2019]<=tlpgen_rdy_ack;ux1852e[1990]<=pu4305[0];ux1852e[1933]<=qi2182a;ux1852e[1819]<=rvc150;ux1852e[1778]<=hd9e70c[0];ux1852e[1591]<=mr60a86;ux1852e[1508]<=dz50357[0];ux1852e[1135]<=yz80860;ux1852e[1023]<=rst_n;ux1852e[889]<=max_pl_size[0];ux1852e[444]<=phy_l0;ux1852e[222]<=dll_pause_cnt[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_cfg_dec1_x1 (
   input wire          sys_clk ,      
   input wire          rst_n ,        

   input wire [15:0]   tlp_data ,     
   input wire          tlp_st ,       
   input wire          tlp_end ,      
   input wire          tlp_erly_st ,  
   input wire          phy_link_up ,  
   input wire          term_all_cfg , 

   `ifdef ECRC
      input wire       tlp_ecrc_ok ,  
      input wire       ecrc_chk_enb , 
   `endif

   
   input wire [9:0]    ADR_I ,        
   input wire [31:0]   DAT_I ,        
   input wire          WE_I ,         
   input wire          STB_I ,        

   output reg [7:0]    bus_num ,
   output reg [4:0]    dev_num ,
   output reg [2:0]    func_num ,
   output reg [15:0]   req_id ,
   output reg [7:0]    tag ,
   output reg [2:0]    tc ,

   output reg          reg_sel_t0 ,   
   output reg          reg_sel_pmsi , 
   output reg          reg_sel_cs ,   
   output reg          reg_sel_ec ,   
   `ifdef AER
      output reg       reg_sel_aer ,  
   `endif
   output reg          reg_sel_usp ,  
   output reg          reg_id_hit ,   
   output reg          type1_cfg ,    
   output reg          pois_cfg ,     
   output reg          cfg_hit ,
   output reg          nph_processed , 
   output reg          npd_processed , 

   output wire [5:0]   reg_addr ,     
   output wire [31:0]  reg_wdata ,    
   output wire [3:0]   reg_wdata_be , 
   output wire         reg_wr_t1 ,    
   output wire         reg_wr_pois ,  
   output wire         reg_wr ,       
   output wire         reg_rd ,       
   output reg          reg_rd_cpm ,   
   output reg          reg_wr_cpm ,   
   output reg          ecrc_ok           ) ;
reg         cfgwr_tlp ;
reg         fad0838 ;
reg [3:0]   zz841c2 ;
reg [3:0]   tw20e16 ;
reg [5:0]   oh70b2 ;
reg [31:0]  ph38595 ;
reg [3:0]   vvc2cae ;
reg         ph16576 ;
reg         zmb2bb6 ;
reg         sj95db2 ;
reg         yzaed94 ;
reg         jc76ca5 ;
reg         swb652a ;
reg         rib2951 ;
reg         hd94a8a ;
reg         pha5456 ;
reg         tlp_st_reg2 ;
reg         gb515ba ;
reg         tlp_end_reg2 ;
reg         go56eac ;
reg         jeb7561 ;
reg         zzbab0b ;
reg         vid585e ;
reg         ukac2f2 ;
reg [7:0]   fn61791 ;
reg [4:0]   jebc8f ;
reg [2:0]   al5e47a ;
reg [15:0]  off23d4 ;
reg [7:0]   nt91ea5 ;
reg [2:0]   kf8f52e ;
reg         mr7a975 ;
reg         uid4bac ;
reg         pha5d60 ;
reg         gq2eb06 ;
reg [7:0]   wj75831 ;
reg [4:0]   wyac18d ;
reg [2:0]   uv60c69 ;
reg         xl634c ;
reg         gq31a67 ;
reg         ym8d339 ;
reg         ps699c8 ;
reg         kq4ce42 ;
reg         kq67211 ;
reg         ux39088 ;
wire        jpc8444 ;
wire [9:0]  zk42226 ;
wire [9:0]  xy11133 ;
wire [9:0]  ou8899b ;
wire        sh44cd9 ;

`ifdef GEN2

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef GEN2

`else

`endif

`ifdef VC1

`endif

`ifdef VC2

`endif

`ifdef VC3

`endif

`ifdef VC4

`endif

`ifdef VC5

`endif

`ifdef VC6

`endif

`ifdef VC7

`endif

`ifdef VC8

`endif

`ifdef AER

`else

`endif

`ifdef ECRC

`else

`endif
reg [15 : 0] ux266cd;
reg wl3366c;
reg zz9b365;
reg gbd9b2e;
reg qv730f;
reg tu6cba7;
reg [9 : 0] sh65d3a;
reg [31 : 0] ec2e9d4;
reg hb74ea1;
reg hqa750f;
reg vk3a87a;
reg [3 : 0] osd43d2;
reg [3 : 0] wla1e91;
reg [5 : 0] ksf48c;
reg [31 : 0] mr7a461;
reg [3 : 0] bld230d;
reg tj9186e;
reg fc8c376;
reg vv61bb2;
reg epdd96;
reg rt6ecb5;
reg fa765af;
reg rib2d7b;
reg fc96bda;
reg dbb5ed3;
reg dbaf69f;
reg vv7b4fe;
reg tuda7f7;
reg kdd3fba;
reg qv9fdd5;
reg psfeead;
reg uvf756a;
reg jrbab55;
reg [7 : 0] xwd5aae;
reg [4 : 0] lsad572;
reg [2 : 0] kd6ab93;
reg [15 : 0] dz55c9d;
reg [7 : 0] irae4ee;
reg [2 : 0] go72774;
reg zm93ba1;
reg ec9dd0b;
reg tuee858;
reg xj742c3;
reg [7 : 0] cba161e;
reg [4 : 0] lsb0f5;
reg [2 : 0] tu587ab;
reg ofc3d5b;
reg je1eadc;
reg kqf56e3;
reg cbab718;
reg mr5b8c4;
reg kddc625;
reg vve312d;
reg ep1896e;
reg [9 : 0] suc4b74;
reg [9 : 0] tw25ba1;
reg [9 : 0] ph2dd0a;
reg nr6e856;
reg [2047:0] ux1852e;
wire [57:0] xjc2975;

`ifdef GEN2

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef GEN2

`else

`endif

`ifdef VC1

`endif

`ifdef VC2

`endif

`ifdef VC3

`endif

`ifdef VC4

`endif

`ifdef VC5

`endif

`ifdef VC6

`endif

`ifdef VC7

`endif

`ifdef VC8

`endif

`ifdef AER

`else

`endif

`ifdef ECRC

`else

`endif

localparam do14bae = 58,jra5d72 = 32'hfdffe06b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef GEN2


`else


`endif


`ifdef AER


`endif


`ifdef AER


`endif


`ifdef GEN2


`else


`endif


`ifdef VC1


`endif


`ifdef VC2


`endif


`ifdef VC3


`endif


`ifdef VC4


`endif


`ifdef VC5


`endif


`ifdef VC6


`endif


`ifdef VC7


`endif


`ifdef VC8


`endif


`ifdef AER


`else


`endif


`ifdef ECRC


`else


`endif






assign ayc17aa = (ux266cd[13:9] == 5'b0_0010) ; 
assign of5ea82 = ux266cd[14] & ayc17aa  ;
assign hb50546 = ~ux266cd[14] & ayc17aa ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      cfgwr_tlp <= 1'b0;   else if (wl3366c && of5ea82)      cfgwr_tlp <= 1'b1;   else if (zz9b365 && !wl3366c)      cfgwr_tlp <= 1'b0;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      fad0838 <= 1'b0;   else if (wl3366c && hb50546)      fad0838 <= 1'b1;   else if (zz9b365 & !wl3366c)      fad0838 <= 1'b0;
end

assign cmea462 = ((wl3366c & ayc17aa)  | cfgwr_tlp | vk3a87a) ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zz841c2 <= 4'h0;   else if (cmea462)      zz841c2 <= osd43d2 + 1'b1;   else      zz841c2 <= 4'h0;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      kf8f52e <= 3'd0;   else if (wl3366c)      kf8f52e <= ux266cd[6:4] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      off23d4   <= 16'd0 ;      nt91ea5      <= 8'd0 ;      mr7a975         <= 1'd0 ;      uid4bac         <= 1'd0 ;      pha5d60   <= 1'b0 ;      gq2eb06   <= 1'b0 ;      wj75831    <= 8'd0 ;      wyac18d    <= 5'd0 ;      uv60c69   <= 3'd0 ;      tw20e16 <= 4'hF ;      oh70b2  <= 6'h3F ;      ph38595 <= 32'd0 ;      vvc2cae    <= 4'd0 ;      zmb2bb6    <= 1'b0 ;      ph16576    <= 1'b0 ;   end   else begin      zmb2bb6 <= 1'b0 ;      ph16576 <= 1'b0 ;      case (osd43d2)         4'd1 : begin            mr7a975     <= ux266cd[15] ;            uid4bac     <= ux266cd[14] ;


`ifdef GEN2
                              pha5d60 <= ((ux266cd[13:12] == 2'b00) && (ux266cd[11:10] == 2'b00) && (ux266cd[9:0] == 'd1)) ;


`else
                              pha5d60 <= ((ux266cd[13:12] == 2'b00) && (ux266cd[9:0] == 'd1)) ;


`endif
         end         4'd2 : off23d4 <= ux266cd ;         4'd3 : begin            nt91ea5        <= ux266cd[15:8] ;            vvc2cae   <= ux266cd[3:0] ;                          gq2eb06     <= (ux266cd[7:4] == 4'b0000) ;          end         4'd4 : begin               wj75831  <= ux266cd[15:8] ;               wyac18d  <= ux266cd[7:3] ;               uv60c69 <= ux266cd[2:0] ;         end         4'd5 : begin            tw20e16 <= ux266cd[11:8] ;            oh70b2  <= ux266cd[7:2] ;                                        zmb2bb6    <= vk3a87a ;         end         4'd6 : begin            ph38595[7:0]  <= cfgwr_tlp ? ux266cd[15:8] : mr7a461[31:24] ;            ph38595[15:8] <= cfgwr_tlp ? ux266cd[7:0]  : mr7a461[23:16] ;         end         4'd7 : begin            ph38595[23:16] <= ux266cd[15:8] ;            ph38595[31:24] <= ux266cd[7:0] ;                                        ph16576           <= cfgwr_tlp ;         end      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      fn61791    <= 8'd0 ;      jebc8f    <= 5'd0 ;      al5e47a   <= 3'd0 ;   end   else if (!qv730f) begin      fn61791    <= 8'd0 ;      jebc8f    <= 5'd0 ;      al5e47a   <= 3'd0 ;   end            else if ((osd43d2 == 4'd4) && cfgwr_tlp && ecrc_ok) begin      fn61791  <= ux266cd[15:8] ;      jebc8f  <= ux266cd[7:3] ;      al5e47a <= ux266cd[2:0] ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      req_id <= 16'd0 ;      tag    <= 8'd0 ;      tc     <= 1'd0 ;   end   else if (tj9186e || fc8c376) begin      req_id <= dz55c9d ;      tag    <= irae4ee ;      tc     <= go72774 ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      bus_num    <= 8'd0 ;      dev_num    <= 5'd0 ;      func_num   <= 3'd0 ;   end   else if (tj9186e) begin      bus_num    <= xwd5aae ;      dev_num    <= lsad572 ;      func_num   <= 3'd0 ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_id_hit <= 1'b0 ;   else      reg_id_hit <= (tu587ab == func_num) ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      xl634c  <= 1'd0 ;   else if (wl3366c & (ux266cd[13:8] == 6'b0_00101))      xl634c <= 1'b1 ;   else if (tuda7f7)      xl634c  <= 1'd0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      gq31a67 <= 1'd0 ;      type1_cfg      <= 1'd0 ;      ym8d339 <= 1'd0 ;      ps699c8 <= 1'd0 ;      kq4ce42  <= 1'd0 ;      pois_cfg       <= 1'd0 ;   end   else begin      gq31a67 <= ofc3d5b ;      ym8d339 <= je1eadc ;      ps699c8 <= kqf56e3 ;      type1_cfg      <= cbab718 ;      kq4ce42  <= ec9dd0b ;      pois_cfg       <= mr5b8c4 ;   end
end










assign zk42226 = {wla1e91[3:0],ksf48c[5:4], ksf48c[3:0]} ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pha5456  <= 1'b0 ;      tlp_st_reg2  <= 1'b0 ;      gb515ba <= 1'b0 ;      tlp_end_reg2 <= 1'b0 ;      go56eac <= 1'b0 ;      jeb7561 <= 1'b0 ;      zzbab0b <= 1'b0 ;      vid585e <= 1'b0 ;      ukac2f2 <= 1'b0 ;      yzaed94  <= 1'b0 ;      sj95db2  <= 1'b0 ;   end   else begin      pha5456  <= wl3366c & ayc17aa ;      tlp_st_reg2  <= dbb5ed3 ;      gb515ba <= zz9b365 ;      tlp_end_reg2 <= vv7b4fe ;      go56eac <= tuda7f7 ;      jeb7561 <= kdd3fba ;      zzbab0b <= qv9fdd5 ;      vid585e <= psfeead ;      ukac2f2 <= uvf756a ;      yzaed94  <= fc8c376 ;      sj95db2  <= tj9186e ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      hd94a8a <= 1'b0 ;   else if (dbaf69f)      hd94a8a <= 1'b1 ;   else if (uvf756a && !cmea462)      hd94a8a <= 1'b0 ;
end
assign jpc8444 = ((wl3366c & ayc17aa) | dbb5ed3 | dbaf69f) ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_rd_cpm <= 1'b0 ;   else if (!fc96bda && ~hb74ea1 && hqa750f && !reg_rd_cpm && !rt6ecb5 && !fa765af && !rib2d7b && !ep1896e )      reg_rd_cpm <= 1'b1 ;   else      reg_rd_cpm <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_wr_cpm <= 1'b0 ;   else if (!fc96bda && hb74ea1 && hqa750f && !reg_wr_cpm && !rt6ecb5 && !fa765af && !rib2d7b && !ep1896e )      reg_wr_cpm <= 1'b1 ;   else      reg_wr_cpm <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      jc76ca5 <= 1'b0 ;      swb652a <= 1'b0 ;      rib2951 <= 1'b0 ;   end   else begin      jc76ca5 <= reg_rd_cpm | reg_wr_cpm ;      swb652a <= rt6ecb5 ;      rib2951 <= fa765af ;   end
end
assign ou8899b = fc96bda ? suc4b74 : sh65d3a[9:0] ;
assign reg_wdata     = fc96bda ? mr7a461 : ec2e9d4 ;
assign reg_wdata_be  = fc96bda ? bld230d : 4'b1111 ;
assign reg_rd        = fc96bda ? epdd96 : reg_rd_cpm ;
assign reg_wr        = fc96bda ? (vv61bb2 & ~je1eadc & ~mr5b8c4) : reg_wr_cpm ;
assign reg_wr_t1     = vv61bb2 & je1eadc ;
assign reg_wr_pois   = vv61bb2 & mr5b8c4 ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      reg_sel_t0   <= 1'd0 ;      reg_sel_pmsi <= 1'd0 ;      reg_sel_cs   <= 1'd0 ;      reg_sel_ec   <= 1'd0 ;


`ifdef AER
         reg_sel_aer <= 1'd0 ;


`endif
      reg_sel_usp <= 1'd0 ;   end   else begin      reg_sel_t0   <= 1'd0 ;      reg_sel_pmsi <= 1'd0 ;      reg_sel_cs   <= 1'd0 ;      reg_sel_ec   <= 1'd0 ;


`ifdef AER
         reg_sel_aer <= 1'd0 ;


`endif
      reg_sel_usp <= 1'd0 ;      casex (ph2dd0a[9:0])                  10'b0000_00_xxxx : reg_sel_t0   <= 1'b1 ;                  10'b0000_01_010x : reg_sel_pmsi <= 1'b1 ;                  10'b0000_01_011x ,         10'b0000_01_10xx : reg_sel_usp <= 1'b1 ;                  10'b0000_01_11xx : reg_sel_pmsi <= 1'b1 ;                  10'b0000_10_00xx : reg_sel_usp <= 1'b1 ;                  10'b0000_10_01xx ,         10'b0000_10_1000 : reg_sel_cs <= 1'b1 ;


`ifdef GEN2
                  10'b0000_10_1001 ,         10'b0000_10_101x ,         10'b0000_10_1100 : reg_sel_usp <= 1'b1 ;                  10'b0000_10_1101 ,         10'b0000_10_111x ,         10'b0000_11_0000 : reg_sel_cs <= 1'b1 ;                  10'b0000_11_0001 ,         10'b0000_11_001x ,         10'b0000_11_01xx ,         10'b0000_11_1xxx : reg_sel_usp <= 1'b1 ;


`else
                  10'b0000_10_1001 ,         10'b0000_10_101x ,         10'b0000_10_11xx ,         10'b0000_11_xxxx : reg_sel_usp <= 1'b1 ;


`endif
                  10'b0001_00_000x ,         10'b0001_00_0010 : reg_sel_ec <= 1'b1 ;


`ifdef VC1
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_xxxx ,            10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC2
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_10xx ,            10'b0001_00_1100 : reg_sel_ec <= 1'b1 ;                        10'b0001_00_1101 ,            10'b0001_00_111x ,            10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC3
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx : reg_sel_ec <= 1'b1 ;                        10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC4
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_000x ,            10'b0001_01_0010 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_0011 ,            10'b0001_01_01xx ,            10'b0001_01_1xxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC5
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_00xx ,            10'b0001_01_010x : reg_sel_ec <= 1'b1 ;                        10'b0001_01_011x ,            10'b0001_01_1xxx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC6
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_1000 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_1001 ,            10'b0001_01_101x ,            10'b0001_01_11xx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC7
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_10xx : reg_sel_ec <= 1'b1 ;                        10'b0001_01_11xx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC8
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_10xx ,            10'b0001_01_110x ,            10'b0001_01_1110 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_1111 : reg_sel_usp <= 1'b1 ;


`endif
                  10'b0001_10_0xxx : reg_sel_usp <= 1'b1 ;


`ifdef AER
                        10'b0001_10_1xxx ,            10'b0001_11_000x ,            10'b0001_11_0010 : reg_sel_aer <= 1'b1 ;


`else
                        10'b0001_10_1xxx ,            10'b0001_11_000x ,            10'b0001_11_0010 : reg_sel_usp <= 1'b1 ;


`endif

                  10'b0001_11_0011 ,         10'b0001_11_01xx ,         10'b0001_11_1xxx ,         10'bxx1x_xx_xxxx ,         10'bx1xx_xx_xxxx ,         10'b1xxx_xx_xxxx : reg_sel_usp <= 1'b1 ;                  default : reg_sel_usp <= 1'b1 ;      endcase   end
end
assign reg_addr = ph2dd0a[5:0] ;


`ifdef ECRC
   assign sh44cd9 = (ecrc_chk_enb & zm93ba1) ? tlp_ecrc_ok : 1'b1 ;

`else
   assign sh44cd9 = 1'b1 ;

`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ecrc_ok <= 1'd0 ;   else      ecrc_ok <= nr6e856 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      kq67211 <= 1'd0 ;      ux39088 <= 1'd0 ;   end   else if (!tu6cba7) begin      if (fc8c376 & ~reg_sel_usp & nr6e856) begin         kq67211 <= 1'd1 ;         ux39088 <= 1'd0 ;      end      else if (tj9186e & ~reg_sel_usp & nr6e856) begin         kq67211 <= 1'd1 ;         ux39088 <= 1'd1 ;      end      else begin         kq67211 <= 1'd0 ;         ux39088 <= 1'd0 ;      end   end   else begin      if (fc8c376 & nr6e856) begin         kq67211 <= 1'd1 ;         ux39088 <= 1'd0 ;      end      else if (tj9186e & nr6e856) begin         kq67211 <= 1'd1 ;         ux39088 <= 1'd1 ;      end      else begin         kq67211 <= 1'd0 ;         ux39088 <= 1'd0 ;      end   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      nph_processed <= 1'd0 ;      npd_processed <= 1'd0 ;   end   else begin      nph_processed <= kddc625 ;      npd_processed <= vve312d ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      cfg_hit <= 1'd0 ;   else if (!tu6cba7) begin      if (epdd96 & ~reg_sel_usp & nr6e856)         cfg_hit <= 1'd1 ;      else if (tj9186e & ~reg_sel_usp & nr6e856)         cfg_hit <= 1'd1 ;      else         cfg_hit <= 1'd0 ;   end   else begin      if (epdd96 & nr6e856)         cfg_hit <= 1'd1 ;      else if (tj9186e & nr6e856)         cfg_hit <= 1'd1 ;      else         cfg_hit <= 1'd0 ;   end
end
always@* begin ux266cd<={tlp_data>>1,xjc2975[0]};wl3366c<=xjc2975[1];zz9b365<=xjc2975[2];gbd9b2e<=xjc2975[3];qv730f<=xjc2975[4];tu6cba7<=xjc2975[5];sh65d3a<={ADR_I>>1,xjc2975[6]};ec2e9d4<={DAT_I>>1,xjc2975[7]};hb74ea1<=xjc2975[8];hqa750f<=xjc2975[9];vk3a87a<=xjc2975[10];osd43d2<={zz841c2>>1,xjc2975[11]};wla1e91<={tw20e16>>1,xjc2975[12]};ksf48c<={oh70b2>>1,xjc2975[13]};mr7a461<={ph38595>>1,xjc2975[14]};bld230d<={vvc2cae>>1,xjc2975[15]};tj9186e<=xjc2975[16];fc8c376<=xjc2975[17];vv61bb2<=xjc2975[18];epdd96<=xjc2975[19];rt6ecb5<=xjc2975[20];fa765af<=xjc2975[21];rib2d7b<=xjc2975[22];fc96bda<=xjc2975[23];dbb5ed3<=xjc2975[24];dbaf69f<=xjc2975[25];vv7b4fe<=xjc2975[26];tuda7f7<=xjc2975[27];kdd3fba<=xjc2975[28];qv9fdd5<=xjc2975[29];psfeead<=xjc2975[30];uvf756a<=xjc2975[31];jrbab55<=xjc2975[32];xwd5aae<={fn61791>>1,xjc2975[33]};lsad572<={jebc8f>>1,xjc2975[34]};kd6ab93<={al5e47a>>1,xjc2975[35]};dz55c9d<={off23d4>>1,xjc2975[36]};irae4ee<={nt91ea5>>1,xjc2975[37]};go72774<={kf8f52e>>1,xjc2975[38]};zm93ba1<=xjc2975[39];ec9dd0b<=xjc2975[40];tuee858<=xjc2975[41];xj742c3<=xjc2975[42];cba161e<={wj75831>>1,xjc2975[43]};lsb0f5<={wyac18d>>1,xjc2975[44]};tu587ab<={uv60c69>>1,xjc2975[45]};ofc3d5b<=xjc2975[46];je1eadc<=xjc2975[47];kqf56e3<=xjc2975[48];cbab718<=xjc2975[49];mr5b8c4<=xjc2975[50];kddc625<=xjc2975[51];vve312d<=xjc2975[52];ep1896e<=xjc2975[53];suc4b74<={zk42226>>1,xjc2975[54]};tw25ba1<={xy11133>>1,xjc2975[55]};ph2dd0a<={ou8899b>>1,xjc2975[56]};nr6e856<=xjc2975[57];end
always@* begin ux1852e[2047]<=tlp_st;ux1852e[2046]<=tlp_end;ux1852e[2044]<=tlp_erly_st;ux1852e[2041]<=phy_link_up;ux1852e[2034]<=term_all_cfg;ux1852e[2021]<=ADR_I[0];ux1852e[2017]<=swb652a;ux1852e[1995]<=DAT_I[0];ux1852e[1986]<=rib2951;ux1852e[1983]<=sh44cd9;ux1852e[1943]<=WE_I;ux1852e[1925]<=hd94a8a;ux1852e[1908]<=fn61791[0];ux1852e[1864]<=nt91ea5[0];ux1852e[1855]<=ph16576;ux1852e[1838]<=STB_I;ux1852e[1803]<=pha5456;ux1852e[1769]<=jebc8f[0];ux1852e[1680]<=kf8f52e[0];ux1852e[1662]<=zmb2bb6;ux1852e[1628]<=fad0838;ux1852e[1583]<=kq4ce42;ux1852e[1559]<=tlp_st_reg2;ux1852e[1519]<=xy11133[0];ux1852e[1501]<=vid585e;ux1852e[1490]<=al5e47a[0];ux1852e[1487]<=ph38595[0];ux1852e[1312]<=mr7a975;ux1852e[1276]<=sj95db2;ux1852e[1209]<=zz841c2[0];ux1852e[1155]<=pha5d60;ux1852e[1118]<=kq67211;ux1852e[1070]<=gb515ba;ux1852e[1048]<=wyac18d[0];ux1852e[1023]<=tlp_data[0];ux1852e[1008]<=jc76ca5;ux1852e[991]<=ou8899b[0];ux1852e[954]<=ukac2f2;ux1852e[932]<=off23d4[0];ux1852e[927]<=vvc2cae[0];ux1852e[791]<=ps699c8;ux1852e[759]<=zk42226[0];ux1852e[750]<=zzbab0b;ux1852e[743]<=oh70b2[0];ux1852e[577]<=uid4bac;ux1852e[524]<=wj75831[0];ux1852e[504]<=yzaed94;ux1852e[395]<=ym8d339;ux1852e[379]<=jpc8444;ux1852e[375]<=jeb7561;ux1852e[371]<=tw20e16[0];ux1852e[262]<=gq2eb06;ux1852e[197]<=gq31a67;ux1852e[189]<=ux39088;ux1852e[187]<=go56eac;ux1852e[98]<=xl634c;ux1852e[93]<=tlp_end_reg2;ux1852e[49]<=uv60c69[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_fadf11a (
   
   input wire [31:0]   czf88d2 , 
   input wire [31:0]   wwc4695 , 

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_ec ,     
   input wire [4:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          ecrc_ok ,        

   input wire          nt3d514 ,       

   output reg [31:0]   cmea8a6   ) ;
reg  [2:0]         qt54531 ;
reg  [2:0]         lsa298d ;
wire [31:0]        fc14c6b ;
wire [31:0]        wya635a ;
wire [31:0]        ks31ad0 ;

`ifdef CFG_VCC

`else

`ifdef AER

`ifdef NO_DSN

`else

`endif

`else

`ifdef NO_DSN

`else

`endif

`endif

`endif

`ifdef NO_DSN

`else

`endif

`ifdef NO_DSN

`else

`endif
reg [31 : 0] ec8d681;
reg [31 : 0] nr6b408;
reg xj5a046;
reg [4 : 0] psd0236;
reg [31 : 0] fp811b3;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg mgb3d45;
reg [2 : 0] tj9ea28;
reg [31 : 0] mef5147;
reg [31 : 0] ria8a38;
reg [31 : 0] dz451c2;
reg [2047:0] ux1852e;
wire [12:0] xjc2975;

`ifdef CFG_VCC

`else

`ifdef AER

`ifdef NO_DSN

`else

`endif

`else

`ifdef NO_DSN

`else

`endif

`endif

`endif

`ifdef NO_DSN

`else

`endif

`ifdef NO_DSN

`else

`endif

localparam do14bae = 13,jra5d72 = 32'hfdffca8b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef CFG_VCC


`else


`ifdef AER


`ifdef NO_DSN


`else


`endif


`else


`ifdef NO_DSN


`else


`endif


`endif


`endif


`ifdef NO_DSN


`else


`endif


`ifdef NO_DSN


`else


`endif



always @(psd0236, xj5a046) begin   case ({xj5a046, psd0236[4:0]})       6'b1_000_00 : qt54531 = 3'b001 ;        6'b1_000_01 : qt54531 = 3'b010 ;        6'b1_000_10 : qt54531 = 3'b100 ;        default : qt54531 = 3'b000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      lsa298d <= 3'h0;   else      lsa298d <= qt54531 ;
end


`ifdef CFG_VCC
   assign fc14c6b = {12'h10C, `DSN_CAP_VER, 16'h0003} ;


`else



`ifdef AER



`ifdef NO_DSN
                  assign fc14c6b = {12'h1A0, 4'h1, 16'h000B} ; 


`else
         assign fc14c6b = {12'h1A0, `DSN_CAP_VER, 16'h0003} ;


`endif



`else



`ifdef NO_DSN
                  assign fc14c6b = {`USR_EXT_CAP_ADDR, 4'h1, 16'h000B} ; 


`else
         assign fc14c6b = {`USR_EXT_CAP_ADDR, `DSN_CAP_VER, 16'h0003} ;


`endif



`endif



`endif




`ifdef NO_DSN
      assign wya635a = {12'h00C, 4'h0, 16'h0000} ; 

`else
   assign wya635a = ec8d681 ;


`endif




`ifdef NO_DSN
      assign ks31ad0 = 32'h0000_0000 ; 

`else
   assign ks31ad0 = nr6b408 ;


`endif


always @(*) begin   case (1'b1)       tj9ea28[0]  : cmea8a6 = mef5147 ;      tj9ea28[1]  : cmea8a6 = ria8a38 ;      tj9ea28[2]  : cmea8a6 = dz451c2 ;      default            : cmea8a6 = 32'd0 ;   endcase
end

always@* begin ec8d681<={czf88d2>>1,xjc2975[0]};nr6b408<={wwc4695>>1,xjc2975[1]};xj5a046<=xjc2975[2];psd0236<={reg_addr>>1,xjc2975[3]};fp811b3<={reg_wdata>>1,xjc2975[4]};qv8d9e<=xjc2975[5];go46cf5<=xjc2975[6];yz367a8<=xjc2975[7];mgb3d45<=xjc2975[8];tj9ea28<={lsa298d>>1,xjc2975[9]};mef5147<={fc14c6b>>1,xjc2975[10]};ria8a38<={wya635a>>1,xjc2975[11]};dz451c2<={ks31ad0>>1,xjc2975[12]};end
always@* begin ux1852e[2047]<=wwc4695[0];ux1852e[2046]<=reg_sel_ec;ux1852e[2044]<=reg_addr[0];ux1852e[2040]<=reg_wdata[0];ux1852e[2032]<=reg_wr;ux1852e[2017]<=reg_rd;ux1852e[1987]<=ecrc_ok;ux1852e[1926]<=nt3d514;ux1852e[1804]<=lsa298d[0];ux1852e[1560]<=fc14c6b[0];ux1852e[1072]<=wya635a[0];ux1852e[1023]<=czf88d2[0];ux1852e[96]<=ks31ad0[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_jpc80ea (
   
   input wire [31:0]   bl40756 , 
   input wire [31:0]   lf3ab6 , 
   input wire [31:0]   mt1d5b6 , 
   input wire [31:0]   iceadb5 , 
   `ifdef GEN2
      input wire [31:0]   kq56da9 , 
   `endif

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_cs ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          nt3d514 ,       
   `ifdef GEN2
      input wire       ir17e02 ,            
   `endif
   `ifdef AER
      input wire [31:0]   bnbf015 ,   
   `endif

   
   input wire          qtf80af ,   
   input wire          byc057c ,
   input wire [2:0]    kf2be2 ,       
   input wire          dfrm_perr ,       
   input wire          dl_active ,       

   
   input wire          rxtp_bad_tlp,    
   input wire          cb2c67b,   
   input wire          ie5434,      
   input wire          mrd9d4b,  
   input wire          ksa936e , 
   input wire          ng3aaf5 , 
   input wire          dmd57aa ,  
   input wire          mtabd53 ,     


   
   input wire          cmpln_tout ,     
   input wire          cmpltr_abort_np ,
   input wire          cmpltr_abort_p , 
   input wire          unexp_cmpln ,    
   input wire          ur_np_ext ,      
   input wire          ur_p_ext ,       
   input wire          np_req_pend ,    
   input wire  [7:0]   ww46228 ,       
   input wire          ym31141,  
   input wire          ie88a08,    
   input wire          xj45041,    

   
   input wire          tlpdec_ecrc_err , 
   input wire          tlpdec_pois_tlp , 
   input wire          tlpdec_us_req ,   
   input wire          tlpdec_malf_tlp , 
   input wire          rief25 ,        

   output wire [10:0]  kq7792a ,   
   output wire [14:0]  dev_cntl_out ,  
   output wire [7:0]   lnk_cntl_out ,  
   output reg          ftl_err_out ,  
   output reg          nftl_err_out ,  
   output reg          cor_err_out ,  
   `ifdef GEN2
      output wire [4:0] dev_cntl_2_out ,  
      output wire      initiate_flr ,  
   `endif

   output wire [2:0]   yk535f1 ,    
   output wire         ux9af88 ,      
   output wire         xjd7c45 ,    
   output wire         qvbe22f ,     
   output wire [2:0]   cfgcs_losel ,     

   output reg [31:0]   cmea8a6   ) ;
reg [12:0]           dz45f51 ;
reg [12:0]           do2fa8f ;
reg [7:0]           ww7d47b ;
reg [15:0]          wwea3d8 ;
reg [15:0]          qt51ec0 ;
reg [15:0]          ir8f604 ;
reg [5:0]           xj7b025 ;
wire [31:0]         ldd812f ;
reg  [31:0]         byc097f ;
wire [31:0]         ng4bfb ;
wire [31:0]         fc25fdb ;
wire [31:0]         fc2feda ;
wire [31:0]         of7f6d3 ;
wire [31:0]         psfb69d ;
wire [31:0]         wwdb4eb ;
wire [31:0]         hoda758 ;
wire [31:0]         shd3ac2 ;
wire [31:0]         aa9d615 ;
wire                rgeb0a9 ;
wire                by5854a ;
wire                blc2a53 ;
wire                ie1529e ;
wire                yma94f1 ;
wire                ld4a789 ;
wire                su53c4f ;

`ifdef AER

`else

`endif

`ifdef GEN2

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef ERO_HW
localparam db9e279 = 1'b0 ;

`else
localparam db9e279 = 1'b1 ;

`endif

`ifdef GEN2

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif
reg [31 : 0] je89e72;
reg [31 : 0] fn4f393;
reg [31 : 0] xw79c9f;
reg [31 : 0] icce4fb;
reg ui727d9;
reg [3 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg qv730f;
reg mgb3d45;
reg ir1d90f;
reg blec87c;
reg [2 : 0] fn643e6;
reg ie21f37;
reg cof9b8;
reg vi7cdc0;
reg vve6e03;
reg jr3701f;
reg xyb80ff;
reg fac07fa;
reg rv3fd2;
reg gq1fe96;
reg meff4b1;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg zx4f511;
reg [7 : 0] cz7a88f;
reg sud447c;
reg baa23e1;
reg zm11f0a;
reg cb8f852;
reg vi7c294;
reg pse14a2;
reg ksa513;
reg lq52899;
reg [12 : 0] zz944cb;
reg [7 : 0] fca265f;
reg [15 : 0] hd132fa;
reg [15 : 0] ng997d6;
reg [15 : 0] qgcbeb3;
reg [5 : 0] fn5f598;
reg [31 : 0] ayfacc6;
reg [31 : 0] end6630;
reg [31 : 0] oub3184;
reg [31 : 0] ks98c21;
reg [31 : 0] qtc6108;
reg [31 : 0] do30845;
reg [31 : 0] db8422b;
reg [31 : 0] ym2115e;
reg [31 : 0] gd8af1;
reg [31 : 0] hb4578d;
reg [31 : 0] ec2bc6e;
reg gb5e371;
reg jcf1b8c;
reg wy8dc63;
reg fn6e319;
reg ld718ce;
reg ng8c677;
reg fa633ba;
reg [2047:0] ux1852e;
wire [65:0] xjc2975;

`ifdef AER

`else

`endif

`ifdef GEN2

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

localparam do14bae = 66,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef AER


`else


`endif


`ifdef GEN2


`endif


`ifdef LEGACY_EP


`else


`endif


`ifdef GEN2


`else


`endif


`ifdef ERO_HW


`else


`endif


`ifdef GEN2


`endif


`ifdef ERO_HW


`else


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`ifdef SWITCH_COMP


`ifdef DWN_STRM_PORT 


`else


`endif


`else


`endif


`endif


`ifdef ENDPOINT_COMP


`else


`ifdef SWITCH_COMP


`ifdef DWN_STRM_PORT 


`else


`endif


`else


`endif


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif












`ifdef AER
      assign rgeb0a9 =                    ((jr3701f      & bnbf015[4])  |                     (gq1fe96   & bnbf015[5])  |                     (vi7c294 & bnbf015[12]) |                     (rv3fd2  & bnbf015[13]) |                     (ykfa589      & bnbf015[14]) |                     (thd2c49 & bnbf015[15]) |                     (je9624f  & bnbf015[15]) |                     (epb127a     & bnbf015[16]) |                     (meff4b1      & bnbf015[17]) |                     (ksa513 & bnbf015[18]) |                     (cb8f852 & bnbf015[19]) |                     (pse14a2   & bnbf015[20]) |                     (su49ea2        & bnbf015[20]) |                     (fc893d4       & bnbf015[20])                    ) ;
      assign blc2a53 =                     ((jr3701f      & ~bnbf015[4])  |                      (gq1fe96   & ~bnbf015[5])  |                      (rv3fd2  & ~bnbf015[13]) |                      (je9624f  & ~bnbf015[15]) |                      (meff4b1      & ~bnbf015[17]) |                      (ksa513 & ~bnbf015[18]) |                      (cb8f852 & ~bnbf015[19]) |                      (su49ea2        & ~bnbf015[20])                     ) ;
         assign ld4a789 = (pse14a2   & ~bnbf015[20]) |                        (fc893d4       & ~bnbf015[20]) |                        (thd2c49 & ~bnbf015[15]) |                        (vi7c294 & ~bnbf015[12]) |                        (ykfa589      & ~bnbf015[14]) |                        (epb127a     & ~bnbf015[16]) ;      assign yma94f1 =                    vi7cdc0 |                    vve6e03 |                    fac07fa |                    xyb80ff |                    ie21f37 |                    ng8c677 ;

`else
      assign rgeb0a9 =                    jr3701f |                    rv3fd2 |                    ksa513 ;
      assign blc2a53 =                     vi7c294 |                     ykfa589 |                     je9624f |                     epb127a |                     pse14a2 |                     cb8f852 |                     su49ea2 ;
      assign ie1529e = cb8f852 | su49ea2 ;
      assign yma94f1 =                    vi7cdc0 |                    vve6e03 |                    fac07fa |                    xyb80ff |                    ie21f37 ;

`endif





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ftl_err_out  <= 1'b0 ;      nftl_err_out <= 1'b0 ;      cor_err_out  <= 1'b0 ;   end   else begin                  if (sud447c) begin         ftl_err_out  <= gb5e371 ;         nftl_err_out <= fn6e319 ;         cor_err_out  <= ld718ce;      end      else begin         ftl_err_out  <= gb5e371 & (ng997d6[2] | lq52899) ;         nftl_err_out <= fn6e319 & (ng997d6[1] | lq52899) ;         cor_err_out  <= ld718ce & ng997d6[0] ;      end   end
end


always @(psd0236, ui727d9) begin   case ({ui727d9, psd0236[3:0]})       5'h1_4 : dz45f51 = 13'b00000_00000001 ;        5'h1_5 : dz45f51 = 13'b00000_00000010 ;        5'h1_6 : dz45f51 = 13'b00000_00000100 ;        5'h1_7 : dz45f51 = 13'b00000_00001000 ;        5'h1_8 : dz45f51 = 13'b00000_00010000 ;  






`ifdef GEN2
      5'h1_D : dz45f51 = 13'b00010_00000000 ;        5'h1_E : dz45f51 = 13'b00100_00000000 ;        5'h1_F : dz45f51 = 13'b01000_00000000 ;        5'h1_0 : dz45f51 = 13'b10000_00000000 ;  


`endif
      default: dz45f51 = 13'b00000_00000000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      do2fa8f <= 9'd0 ;   else      do2fa8f <= dz45f51 ;
end



`ifdef LEGACY_EP
   assign  ng4bfb = {2'b00, je89e72[29:25], 1'b0, 4'h1, je89e72[19:16], je89e72[15:8], 8'h10} ; 

`else
   assign  ng4bfb = {2'b00, je89e72[29:25], 1'b0, 4'h0, je89e72[19:16], je89e72[15:8], 8'h10} ;


`endif



assign  ldd812f = {fn4f393[31:3], fn4f393[2:0]}  ;


`ifdef GEN2
   assign  fc25fdb = {3'd0, fn4f393[28:18],2'b00, 1'b1, 3'b000, 3'b000, 3'b000, fn4f393[5:3], fn4f393[2:0]} ;


`else
   assign  fc25fdb = {4'd0, fn4f393[27:18],2'b00, 1'b1, 3'b000, 3'b000, 3'b000, fn4f393[5:3], fn4f393[2:0]} ;


`endif




`ifdef ERO_HW



`else



`endif

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qt51ec0 <= {8'h20, 3'b000, db9e279, 4'h0} ;


`ifdef GEN2
      else if (ir17e02) begin         qt51ec0[4:0] <= {db9e279, 4'h0} ;         qt51ec0[15:8] <= 8'h20 ;      end


`endif
   else if (!qv730f)      qt51ec0 <= {8'h20, 3'b000, db9e279, 4'h0} ;   else if (qv8d9e && yz367a8 && dz45f51[2]) begin      if (byfb25c[0]) begin         qt51ec0[3:0] <= fp811b3[3:0] ;


`ifdef ERO_HW
            qt51ec0[4] <= 1'b0 ;


`else
            qt51ec0[4] <= fp811b3[4] ;


`endif
         qt51ec0[7:5]   <= (fp811b3 [7:6]   != 2'b11) ? fp811b3[7:5]   : ng997d6[7:5] ;      end      if (byfb25c[1]) begin         qt51ec0[14:12] <= (fp811b3 [14:13] != 2'b11) ? fp811b3[14:12] : ng997d6[14:12] ;


`ifdef GEN2
            qt51ec0[15] <= (ks98c21[28] == 1'b1) ? fp811b3[15] : ng997d6[15] ;


`endif
      end   end
end

assign dev_cntl_out = {ng997d6[14:12],4'b0000,ng997d6[7:0]} ;
assign yk535f1 = ng997d6[7:5] ;

`ifdef GEN2
   assign initiate_flr = ng997d6[15] ;

`endif




always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      xj7b025 <= 6'd0 ;


`ifdef GEN2
      else if (ir17e02)         xj7b025 <= 6'd0 ;


`endif
   else if (!qv730f)      xj7b025 <= 6'd0 ;   else begin      case (1'b1)         (qv8d9e && yz367a8 && dz45f51[2] && byfb25c[2]) : begin            if (fp811b3[16]) xj7b025[0] <= 1'b0 ;            if (fp811b3[17]) xj7b025[1] <= 1'b0 ;            if (fp811b3[18]) xj7b025[2] <= 1'b0 ;         end         (ld718ce)  : xj7b025[0] <= 1'b1 ;         (wy8dc63) : xj7b025[1] <= 1'b1 ;         (gb5e371)  : xj7b025[2] <= 1'b1 ;      endcase      if (qv8d9e && yz367a8 && dz45f51[2] && fp811b3[19] && byfb25c[2])         xj7b025[3] <= 1'b0 ;      else if (pse14a2 || su49ea2 || fc893d4)         xj7b025[3] <= 1'b1 ;       xj7b025[4] <= 1'b0 ;      xj7b025[5] <= zx4f511 ;   end
end
assign  fc2feda = {10'd0, fn5f598[5:0], 1'b0, ng997d6[14:9], 1'b0, ng997d6[7:0]} ;



always @(*) begin   if (zm11f0a)      byc097f = {xw79c9f[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h01,4'h1} ;   else if (baa23e1)      byc097f = {xw79c9f[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h02,4'h1} ;   else      byc097f = {xw79c9f[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h04,4'h1} ;
end
assign  of7f6d3 = end6630 ;
assign  cfgcs_losel = end6630[14:12] ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ww7d47b[1:0] <= 2'd0 ;   else if (!qv730f)      ww7d47b[1:0] <= 2'd0 ;   else if (qv8d9e && yz367a8 && dz45f51[4] && byfb25c[0])      ww7d47b[1:0] <= fp811b3[1:0] ;   else      ww7d47b[1:0] <= fca265f[1:0] ;
end


`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ww7d47b[3] <= 1'b0 ;      else if (!qv730f)         ww7d47b[3] <= 1'b0 ;      else if (qv8d9e && yz367a8 && dz45f51[4] && byfb25c[0])         ww7d47b[3] <= fp811b3[3] ;      else         ww7d47b[3] <= fca265f[3] ;   end

`else
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ww7d47b[3] <= 1'b0 ;      else         ww7d47b[3] <= fca265f[3] ;   end

`endif




`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ww7d47b[5:4] <= 2'b00 ;      else         ww7d47b[5:4] <= fca265f[5:4] ;   end

`else



`ifdef SWITCH_COMP



`ifdef DWN_STRM_PORT 
         always @(posedge sys_clk, negedge rst_n) begin            if (!rst_n)               ww7d47b[5:4] <= 2'd0 ;            else if (!qv730f)               ww7d47b[5:4] <= 2'd0 ;            else if (qv8d9e && yz367a8 && dz45f51[4] && byfb25c[0])               ww7d47b[5:4] <= fp811b3[5:4] ;            else               ww7d47b[5:4] <= fca265f[5:4] ;         end


`else
         always @(posedge sys_clk, negedge rst_n) begin            if (!rst_n)               ww7d47b[5:4] <= 2'b00 ;            else               ww7d47b[5:4] <= fca265f[5:4] ;         end


`endif



`else
      always @(posedge sys_clk, negedge rst_n) begin         if (!rst_n)            ww7d47b[5:4] <= 2'd0 ;         else if (!qv730f)            ww7d47b[5:4] <= 2'd0 ;         else if (qv8d9e && yz367a8 && dz45f51[4] && byfb25c[0])            ww7d47b[5:4] <= fp811b3[5:4] ;         else            ww7d47b[5:4] <= fca265f[5:4] ;      end


`endif



`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ww7d47b[7:6] <= 2'd0 ;   else if (!qv730f)      ww7d47b[7:6] <= 2'd0 ;   else if (qv8d9e && yz367a8 && dz45f51[4] && byfb25c[0])      ww7d47b[7:6] <= fp811b3[7:6] ;   else      ww7d47b[7:6] <= fca265f[7:6] ;
end
assign lnk_cntl_out = fca265f ;
assign ux9af88 = fca265f[7] ;
assign qvbe22f = fca265f[5] ;
assign xjd7c45 = fca265f[4] ;

always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n ) begin      wwea3d8[3:0] <= 4'd1 ;      wwea3d8[9:4] <= 6'd1 ;   end   else begin      wwea3d8[3:0] <= 4'b0001 ;      wwea3d8[9:4] <= {3'b000, fn643e6} ;   end
end

`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         wwea3d8[11] <= 1'b0 ;      else         wwea3d8[11] <= hd132fa[11] ;   end

`else



`ifdef SWITCH_COMP



`ifdef DWN_STRM_PORT 
         always @(posedge sys_clk, negedge rst_n) begin            if ( !rst_n )               wwea3d8[11] <= 1'd0 ;            else               wwea3d8[11] <= blec87c ;         end


`else
         always @(posedge sys_clk, negedge rst_n) begin            if ( !rst_n )               wwea3d8[11] <= 1'b0 ;            else               wwea3d8[11] <= hd132fa[11] ;         end


`endif



`else
      always @(posedge sys_clk, negedge rst_n) begin         if ( !rst_n )            wwea3d8[11] <= 1'd0 ;         else            wwea3d8[11] <= blec87c ;      end


`endif



`endif


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      wwea3d8[13] <= 1'b0 ;

   else      wwea3d8[13] <= 1'b0 ;
end
assign  psfb69d = {2'b00, hd132fa[13], icce4fb[28], hd132fa[11], 1'b0, hd132fa[9:0],                    7'd0, 1'b0, fca265f[7:6], 1'b0, fca265f[4:3], 1'b0, fca265f[1:0]} ;



`ifdef GEN2
      assign  wwdb4eb = {27'd0, kq56da9[4:0]} ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ir8f604 <= {27'd0, 1'b0, 4'h0} ;      else if (ir17e02)         ir8f604[4:0] <= {1'b0, 4'h0} ;      else if (!qv730f)         ir8f604[4:0] <= {1'b0, 4'h0} ;      else if (qv8d9e && yz367a8 && dz45f51[10]) begin         if (byfb25c[0]) begin            ir8f604[4:0] <= fp811b3[4:0] ;         end      end   end   assign dev_cntl_2_out = qgcbeb3[4:0] ;   assign hoda758 = {15'd0, 11'd0, qgcbeb3[4:0]} ;
      assign shd3ac2 = 32'd0 ;
      assign aa9d615 = 32'd0 ;


`endif


always @(*) begin   case (1'b1)       zz944cb[0] : cmea8a6 = oub3184 ;      zz944cb[1] : cmea8a6 = ks98c21 ;      zz944cb[2] : cmea8a6 = qtc6108 ;      zz944cb[3] : cmea8a6 = do30845 ;      zz944cb[4] : cmea8a6 = db8422b ;






`ifdef GEN2
      zz944cb[9]  : cmea8a6 = ym2115e ;      zz944cb[10] : cmea8a6 = gd8af1 ;      zz944cb[11] : cmea8a6 = hb4578d ;      zz944cb[12] : cmea8a6 = ec2bc6e ;


`endif
      default          : cmea8a6 = 32'd0 ;   endcase
end
always@* begin je89e72<={bl40756>>1,xjc2975[0]};fn4f393<={lf3ab6>>1,xjc2975[1]};xw79c9f<={mt1d5b6>>1,xjc2975[2]};icce4fb<={iceadb5>>1,xjc2975[3]};ui727d9<=xjc2975[4];psd0236<={reg_addr>>1,xjc2975[5]};fp811b3<={reg_wdata>>1,xjc2975[6]};byfb25c<={reg_wdata_be>>1,xjc2975[7]};qv8d9e<=xjc2975[8];go46cf5<=xjc2975[9];yz367a8<=xjc2975[10];qv730f<=xjc2975[11];mgb3d45<=xjc2975[12];ir1d90f<=xjc2975[13];blec87c<=xjc2975[14];fn643e6<={kf2be2>>1,xjc2975[15]};ie21f37<=xjc2975[16];cof9b8<=xjc2975[17];vi7cdc0<=xjc2975[18];vve6e03<=xjc2975[19];jr3701f<=xjc2975[20];xyb80ff<=xjc2975[21];fac07fa<=xjc2975[22];rv3fd2<=xjc2975[23];gq1fe96<=xjc2975[24];meff4b1<=xjc2975[25];ykfa589<=xjc2975[26];thd2c49<=xjc2975[27];je9624f<=xjc2975[28];epb127a<=xjc2975[29];fc893d4<=xjc2975[30];su49ea2<=xjc2975[31];zx4f511<=xjc2975[32];cz7a88f<={ww46228>>1,xjc2975[33]};sud447c<=xjc2975[34];baa23e1<=xjc2975[35];zm11f0a<=xjc2975[36];cb8f852<=xjc2975[37];vi7c294<=xjc2975[38];pse14a2<=xjc2975[39];ksa513<=xjc2975[40];lq52899<=xjc2975[41];zz944cb<={do2fa8f>>1,xjc2975[42]};fca265f<={ww7d47b>>1,xjc2975[43]};hd132fa<={wwea3d8>>1,xjc2975[44]};ng997d6<={qt51ec0>>1,xjc2975[45]};qgcbeb3<={ir8f604>>1,xjc2975[46]};fn5f598<={xj7b025>>1,xjc2975[47]};ayfacc6<={ldd812f>>1,xjc2975[48]};end6630<={byc097f>>1,xjc2975[49]};oub3184<={ng4bfb>>1,xjc2975[50]};ks98c21<={fc25fdb>>1,xjc2975[51]};qtc6108<={fc2feda>>1,xjc2975[52]};do30845<={of7f6d3>>1,xjc2975[53]};db8422b<={psfb69d>>1,xjc2975[54]};ym2115e<={wwdb4eb>>1,xjc2975[55]};gd8af1<={hoda758>>1,xjc2975[56]};hb4578d<={shd3ac2>>1,xjc2975[57]};ec2bc6e<={aa9d615>>1,xjc2975[58]};gb5e371<=xjc2975[59];jcf1b8c<=xjc2975[60];wy8dc63<=xjc2975[61];fn6e319<=xjc2975[62];ld718ce<=xjc2975[63];ng8c677<=xjc2975[64];fa633ba<=xjc2975[65];end
always@* begin ux1852e[2047]<=lf3ab6[0];ux1852e[2046]<=mt1d5b6[0];ux1852e[2044]<=iceadb5[0];ux1852e[2041]<=reg_sel_cs;ux1852e[2035]<=reg_addr[0];ux1852e[2029]<=shd3ac2[0];ux1852e[2022]<=reg_wdata[0];ux1852e[2011]<=aa9d615[0];ux1852e[1996]<=reg_wdata_be[0];ux1852e[1974]<=rgeb0a9;ux1852e[1945]<=reg_wr;ux1852e[1943]<=byc097f[0];ux1852e[1922]<=mtabd53;ux1852e[1901]<=by5854a;ux1852e[1842]<=reg_rd;ux1852e[1839]<=ng4bfb[0];ux1852e[1797]<=cmpln_tout;ux1852e[1778]<=ir8f604[0];ux1852e[1776]<=ksa936e;ux1852e[1759]<=ld4a789;ux1852e[1755]<=blc2a53;ux1852e[1637]<=ecrc_ok;ux1852e[1631]<=fc25fdb[0];ux1852e[1622]<=byc057c;ux1852e[1546]<=cmpltr_abort_np;ux1852e[1531]<=wwdb4eb[0];ux1852e[1509]<=xj7b025[0];ux1852e[1504]<=ng3aaf5;ux1852e[1471]<=su53c4f;ux1852e[1468]<=ie5434;ux1852e[1463]<=ie1529e;ux1852e[1391]<=rxtp_bad_tlp;ux1852e[1312]<=ym31141;ux1852e[1226]<=phy_link_up;ux1852e[1215]<=fc2feda[0];ux1852e[1197]<=kf2be2[0];ux1852e[1153]<=xj45041;ux1852e[1044]<=cmpltr_abort_p;ux1852e[1037]<=tlpdec_us_req;ux1852e[1023]<=bl40756[0];ux1852e[1014]<=hoda758[0];ux1852e[971]<=ldd812f[0];ux1852e[961]<=dmd57aa;ux1852e[889]<=qt51ec0[0];ux1852e[888]<=mrd9d4b;ux1852e[879]<=yma94f1;ux1852e[811]<=qtf80af;ux1852e[765]<=psfb69d[0];ux1852e[734]<=cb2c67b;ux1852e[695]<=dl_active;ux1852e[656]<=ww46228[0];ux1852e[576]<=ie88a08;ux1852e[518]<=tlpdec_pois_tlp;ux1852e[444]<=wwea3d8[0];ux1852e[405]<=nt3d514;ux1852e[382]<=of7f6d3[0];ux1852e[347]<=dfrm_perr;ux1852e[328]<=np_req_pend;ux1852e[259]<=tlpdec_ecrc_err;ux1852e[222]<=ww7d47b[0];ux1852e[164]<=ur_p_ext;ux1852e[111]<=do2fa8f[0];ux1852e[82]<=ur_np_ext;ux1852e[55]<=rief25;ux1852e[41]<=unexp_cmpln;ux1852e[27]<=tlpdec_malf_tlp;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_jc48048 (
   
   input wire [31:0]   bl40242 , 
   input wire [31:0]   je1216 , 
   input wire [9:0]    xl90b2 , 
   input wire [9:0]    ho48596 , 
   input wire [9:0]    jc42cb2 , 
   input wire [9:0]    xl16592 , 
   input wire [9:0]    lsb2c96 , 
   input wire [9:0]    je964b2 , 
   input wire [9:0]    dob2592 , 
   input wire [9:0]    aa92c93 , 

   input wire [31:0]   ng96499 , 

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_cs ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          nt3d514 ,       
   `ifdef GEN2
      input wire       ir17e02 ,            
   `endif
   input wire          pme_status ,     

   output reg [1:0]    pm_power_state , 
   output reg          pme_en ,         
   output reg [2:0]    mm_enable ,      
   output reg          msi_enable ,     
   output reg [31:0]   mes_laddr ,      
   output reg [31:0]   mes_uaddr ,      
   output reg [15:0]   mes_data ,       

   output reg [31:0]   cmea8a6   ) ;
reg  [5:0]         ks98e29 ;
reg  [5:0]         rtc7148 ;
reg  [1:0]         nt38a47 ;
reg  [7:0]         hoc523f ;
reg  [3:0]         gd291fa ;
reg                vi48fd5 ;
reg                vi47eab ;
wire [31:0]        ng3f55a ;
wire [31:0]        gofaad3 ;
wire [31:0]        zkd5698 ;
wire [31:0]        gdab4c3 ;
wire [31:0]        th5a61c ;
wire [31:0]        kdd30e6 ;
wire [9:0]         ks98734 ;
wire [9:0]         uvc39a1 ;
wire [9:0]         hd1cd0c ;
wire [9:0]         the6866 ;
wire [9:0]         qi34337 ;
wire [9:0]         yza19b8 ;
wire [9:0]         dbcdc4 ;
wire [9:0]         ho66e27 ;
wire               bn3713b ;

`ifdef GEN2

`endif
reg [31 : 0] lsb89df;
reg [31 : 0] qgc4efb;
reg [9 : 0] fp277d9;
reg [9 : 0] ec3bece;
reg [9 : 0] jcdf670;
reg [9 : 0] hofb382;
reg [9 : 0] mrd9c13;
reg [9 : 0] eace09c;
reg [9 : 0] qt704e1;
reg [9 : 0] wy8270c;
reg [31 : 0] bn13861;
reg ui727d9;
reg [3 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg qv730f;
reg mgb3d45;
reg wlb1ee9;
reg [5 : 0] yz8f74d;
reg [1 : 0] vv7ba6d;
reg [7 : 0] rtdd36e;
reg [3 : 0] zxe9b77;
reg ne4dbbe;
reg ic6ddf3;
reg [31 : 0] jp6ef98;
reg [31 : 0] su77cc7;
reg [31 : 0] ohbe638;
reg [31 : 0] rtf31c5;
reg [31 : 0] ie98e2f;
reg [31 : 0] blc7178;
reg [9 : 0] ph38bc7;
reg [9 : 0] xwc5e3f;
reg [9 : 0] hq2f1fb;
reg [9 : 0] yk78fda;
reg [9 : 0] thc7ed1;
reg [9 : 0] xy3f68e;
reg [9 : 0] jcfb473;
reg [9 : 0] byda39b;
reg uid1cda;
reg [2047:0] ux1852e;
wire [41:0] xjc2975;

`ifdef GEN2

`endif

localparam do14bae = 42,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef GEN2


`endif



always @(psd0236, ui727d9) begin   case ({ui727d9, psd0236[3:0]})       5'h1_4  : ks98e29 = 6'b000001 ;        5'h1_5  : ks98e29 = 6'b000010 ;        5'h1_C  : ks98e29 = 6'b000100 ;        5'h1_D  : ks98e29 = 6'b001000 ;        5'h1_E  : ks98e29 = 6'b010000 ;        5'h1_F  : ks98e29 = 6'b100000 ;        default : ks98e29 = 6'b000000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rtc7148 <= 6'h0;   else      rtc7148 <= ks98e29 ;
end



assign ng3f55a =  {lsb89df[31:21], 1'b0, 1'b0, lsb89df[18:16], 8'h70, 8'h01} ; 

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pm_power_state[1:0] <= 2'd0 ;   else if (qv8d9e && yz367a8 && ks98e29[1] && byfb25c[0])      pm_power_state[1:0] <= fp811b3[1:0] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pme_en <= 1'b0 ;   else if (lsb89df[31] == 1'b0)      pme_en <= 1'b0 ;   else if (qv8d9e && yz367a8 && ks98e29[1] && byfb25c[1])      pme_en <=  fp811b3[8] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gd291fa <= 4'd0 ;   else if (lsb89df[31:27] == 5'h00)      gd291fa <= 4'd0 ;   else if (qv8d9e && yz367a8 && ks98e29[1] && byfb25c[1])      gd291fa <=  fp811b3[12:9] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vi47eab <= 1'b0 ;   else      vi47eab <= wlb1ee9 ;
end
assign bn3713b = wlb1ee9 & ~ic6ddf3 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vi48fd5 <= 1'b0 ;   else if (lsb89df[31] == 1'b0)      vi48fd5 <= 1'b0 ;   else if (uid1cda)      vi48fd5 <= 1'b1 ;   else if (qv8d9e && yz367a8 && ks98e29[1] && (fp811b3[15] == 1'b1) && byfb25c[1])      vi48fd5 <= 1'b0 ;
end
always @* begin   case (zxe9b77)      4'd0    : {nt38a47, hoc523f} = fp277d9 ;      4'd1    : {nt38a47, hoc523f} = ec3bece ;      4'd2    : {nt38a47, hoc523f} = jcdf670 ;      4'd3    : {nt38a47, hoc523f} = hofb382 ;      4'd4    : {nt38a47, hoc523f} = mrd9c13 ;      4'd5    : {nt38a47, hoc523f} = eace09c ;      4'd6    : {nt38a47, hoc523f} = qt704e1 ;      4'd7    : {nt38a47, hoc523f} = wy8270c ;      default : {nt38a47, hoc523f} = 10'd0 ;   endcase
end
assign gofaad3 = {rtdd36e[7:0], 2'b00, 6'd0,                    ne4dbbe, vv7ba6d[1:0], zxe9b77[3:0], pme_en,                    4'd0, qgc4efb[3], 1'b0, pm_power_state[1:0]} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mm_enable[2:0] <= 3'd0 ;      msi_enable     <= 1'd0 ;   end


`ifdef GEN2
      else if (ir17e02) begin         mm_enable[2:0] <= 3'd0 ;         msi_enable     <= 1'd0 ;      end


`endif
   else if (qv8d9e && yz367a8 && ks98e29[2] && byfb25c[2]) begin      mm_enable[2:0] <= fp811b3[22:20] ;      msi_enable     <= fp811b3[16] ;   end
end
assign zkd5698 = {7'd0, bn13861[24:23], mm_enable[2:0],                     bn13861[19:17],msi_enable, 8'h90, 8'h05} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mes_laddr[31:0] <= 32'd0 ;   end   else if (qv8d9e && yz367a8 && ks98e29[3]) begin      if (byfb25c[0]) mes_laddr[7:2]   <= fp811b3[7:2] ;      if (byfb25c[1]) mes_laddr[15:8]  <= fp811b3[15:8] ;      if (byfb25c[2]) mes_laddr[23:16] <= fp811b3[23:16] ;      if (byfb25c[3]) mes_laddr[31:24] <= fp811b3[31:24] ;   end
end
assign gdab4c3 = {mes_laddr[31:2], 2'b00} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mes_uaddr[31:0] <= 32'd0 ;   else if (qv8d9e && yz367a8 && ks98e29[4] && bn13861[23]) begin      if (byfb25c[0]) mes_uaddr[7:0]   <= fp811b3[7:0] ;      if (byfb25c[1]) mes_uaddr[15:8]  <= fp811b3[15:8] ;      if (byfb25c[2]) mes_uaddr[23:16] <= fp811b3[23:16] ;      if (byfb25c[3]) mes_uaddr[31:24] <= fp811b3[31:24] ;   end
end
assign th5a61c = mes_uaddr ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mes_data <= 16'd0 ;   else if (qv8d9e && yz367a8 && ks98e29[5]) begin      if (byfb25c[0]) mes_data[7:0]   <= fp811b3[7:0] ;      if (byfb25c[1]) mes_data[15:8]  <= fp811b3[15:8] ;   end
end
assign kdd30e6 = {16'd0, mes_data} ;


always @(*) begin   case (1'b1)       yz8f74d[0]  : cmea8a6 = jp6ef98 ;      yz8f74d[1]  : cmea8a6 = su77cc7 ;      yz8f74d[2]  : cmea8a6 = ohbe638 ;      yz8f74d[3]  : cmea8a6 = rtf31c5 ;      yz8f74d[4]  : cmea8a6 = ie98e2f ;      yz8f74d[5]  : cmea8a6 = blc7178 ;      default             : cmea8a6 = 32'd0 ;   endcase
end
always@* begin lsb89df<={bl40242>>1,xjc2975[0]};qgc4efb<={je1216>>1,xjc2975[1]};fp277d9<={xl90b2>>1,xjc2975[2]};ec3bece<={ho48596>>1,xjc2975[3]};jcdf670<={jc42cb2>>1,xjc2975[4]};hofb382<={xl16592>>1,xjc2975[5]};mrd9c13<={lsb2c96>>1,xjc2975[6]};eace09c<={je964b2>>1,xjc2975[7]};qt704e1<={dob2592>>1,xjc2975[8]};wy8270c<={aa92c93>>1,xjc2975[9]};bn13861<={ng96499>>1,xjc2975[10]};ui727d9<=xjc2975[11];psd0236<={reg_addr>>1,xjc2975[12]};fp811b3<={reg_wdata>>1,xjc2975[13]};byfb25c<={reg_wdata_be>>1,xjc2975[14]};qv8d9e<=xjc2975[15];go46cf5<=xjc2975[16];yz367a8<=xjc2975[17];qv730f<=xjc2975[18];mgb3d45<=xjc2975[19];wlb1ee9<=xjc2975[20];yz8f74d<={rtc7148>>1,xjc2975[21]};vv7ba6d<={nt38a47>>1,xjc2975[22]};rtdd36e<={hoc523f>>1,xjc2975[23]};zxe9b77<={gd291fa>>1,xjc2975[24]};ne4dbbe<=xjc2975[25];ic6ddf3<=xjc2975[26];jp6ef98<={ng3f55a>>1,xjc2975[27]};su77cc7<={gofaad3>>1,xjc2975[28]};ohbe638<={zkd5698>>1,xjc2975[29]};rtf31c5<={gdab4c3>>1,xjc2975[30]};ie98e2f<={th5a61c>>1,xjc2975[31]};blc7178<={kdd30e6>>1,xjc2975[32]};ph38bc7<={ks98734>>1,xjc2975[33]};xwc5e3f<={uvc39a1>>1,xjc2975[34]};hq2f1fb<={hd1cd0c>>1,xjc2975[35]};yk78fda<={the6866>>1,xjc2975[36]};thc7ed1<={qi34337>>1,xjc2975[37]};xy3f68e<={yza19b8>>1,xjc2975[38]};jcfb473<={dbcdc4>>1,xjc2975[39]};byda39b<={ho66e27>>1,xjc2975[40]};uid1cda<=xjc2975[41];end
always@* begin ux1852e[2047]<=je1216[0];ux1852e[2046]<=xl90b2[0];ux1852e[2044]<=ho48596[0];ux1852e[2040]<=jc42cb2[0];ux1852e[2033]<=xl16592[0];ux1852e[2024]<=rtc7148[0];ux1852e[2018]<=lsb2c96[0];ux1852e[2001]<=nt38a47[0];ux1852e[1988]<=je964b2[0];ux1852e[1954]<=hoc523f[0];ux1852e[1929]<=dob2592[0];ux1852e[1874]<=hd1cd0c[0];ux1852e[1860]<=gd291fa[0];ux1852e[1811]<=aa92c93[0];ux1852e[1789]<=phy_link_up;ux1852e[1700]<=the6866[0];ux1852e[1673]<=vi48fd5;ux1852e[1574]<=ng96499[0];ux1852e[1530]<=nt3d514;ux1852e[1353]<=qi34337[0];ux1852e[1317]<=dbcdc4[0];ux1852e[1299]<=vi47eab;ux1852e[1258]<=kdd30e6[0];ux1852e[1247]<=reg_wr;ux1852e[1172]<=bn3713b;ux1852e[1102]<=gofaad3[0];ux1852e[1101]<=reg_sel_cs;ux1852e[1023]<=bl40242[0];ux1852e[1012]<=pme_status;ux1852e[937]<=uvc39a1[0];ux1852e[894]<=ecrc_ok;ux1852e[658]<=yza19b8[0];ux1852e[629]<=th5a61c[0];ux1852e[623]<=reg_wdata_be[0];ux1852e[586]<=ho66e27[0];ux1852e[551]<=ng3f55a[0];ux1852e[468]<=ks98734[0];ux1852e[447]<=reg_rd;ux1852e[314]<=gdab4c3[0];ux1852e[311]<=reg_wdata[0];ux1852e[157]<=zkd5698[0];ux1852e[155]<=reg_addr[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_cfg_resp_x1 (
   input wire          sys_clk ,      
   input wire          rst_n ,        

   input wire [7:0]    bus_num ,
   input wire [4:0]    dev_num ,
   input wire [2:0]    func_num ,
   input wire [15:0]   req_id ,
   input wire [7:0]    tag ,
   input wire [2:0]    tc ,
   input wire          term_all_cfg , 
   input wire          load_id ,      
   `ifdef GEN2
      input wire       drop_resp ,    
   `endif

   input wire [31:0]   reg_rdata0 ,   
   input wire [31:0]   reg_rdata1 ,   
   input wire [31:0]   reg_rdata2 ,   
   input wire [31:0]   reg_rdata3 ,   
   input wire [31:0]   reg_rdata4 ,   
   input wire [31:0]   reg_rdata5 ,   
   input wire          reg_wr ,       
   input wire          reg_rd ,       
   input wire          reg_rd_cpm ,   
   input wire          reg_wr_cpm ,   
   input wire          reg_sel_usp ,  
   input wire          reg_id_hit ,   
   input wire          type1_cfg ,    
   input wire          pois_cfg ,     
   input wire          ecrc_ok ,      
   `ifdef ECRC
      input wire       ecrc_chk_enb , 
      input wire       ecrc_gen_enb , 
   `endif

   input wire          cfg_rmux_rd ,
   input wire [7:0]    tx_ca_cplh ,
   input wire          tx_ca_cplh_infi ,

   
   output wire [31:0]  RDAT_O ,       
   output reg          ACK_O ,        

   output wire         us_req_int ,
   output wire         cfg_rmux_req ,
   output wire [15:0]  cfg_rmux_data ,
   output wire         cfg_rmux_ae   ) ;
reg         wr_resp ;
reg         twb2222 ;
reg [2:0]   bn91113 ;
reg [7:0]   ri30425 ;
reg [7:0]   ec8212a ;
reg [7:0]   lf227cc ;
reg         db13e66 ;
reg [15:0]  mt9f337 ;
reg         hbf99bc ;
reg         mrccde7 ;
reg         by66f3d ;
reg [15:0]  fp379eb ;
reg [15:0]  mgbcf5e ;
reg         ale7af1 ;
reg         xl3d78d ;
reg         faebc6e ;
reg         of5e373 ;
reg         vif1b9c ;
wire        ou8dce3 ;
wire [1:0]  th6e719 ;
wire [9:0]  rg738ce ;
wire [2:0]  fc9c672 ;
wire [15:0] hbe3393 ;
wire [15:0] xl19c9e ;
wire [15:0] osce4f6 ;
wire [15:0] qg727b1 ;
wire [15:0] ba93d89 ;
wire [15:0] xl9ec4b ;
wire        vvf625f ;

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif
reg [7 : 0] qvb12ff;
reg [4 : 0] xy897fc;
reg [2 : 0] ip4bfe2;
reg [15 : 0] th5ff14;
reg [7 : 0] meff8a7;
reg [2 : 0] xjfc538;
reg tu6cba7;
reg ri14e35;
reg [31 : 0] pua71aa;
reg [31 : 0] jr38d52;
reg [31 : 0] czc6a97;
reg [31 : 0] ri354bc;
reg [31 : 0] hdaa5e2;
reg [31 : 0] zk52f16;
reg qv8d9e;
reg go46cf5;
reg she2cc8;
reg lf16645;
reg swb322e;
reg ri99171;
reg zxc8b8b;
reg dz45c5f;
reg yz367a8;
reg nr717f8;
reg [7 : 0] bn8bfc6;
reg pf5fe36;
reg goff1b7;
reg [2 : 0] enf8db9;
reg [7 : 0] ofc6dcd;
reg [7 : 0] kf36e6c;
reg [7 : 0] bab7364;
reg ksb9b23;
reg [15 : 0] ldcd919;
reg tu6c8cf;
reg th6467a;
reg sj233d7;
reg [15 : 0] hd19ebc;
reg [15 : 0] rgcf5e6;
reg qt7af33;
reg dzd799c;
reg ksbcce7;
reg lde6739;
reg cb339ce;
reg pu9ce74;
reg [1 : 0] ene73a2;
reg [9 : 0] yz39d14;
reg [2 : 0] qgce8a5;
reg [15 : 0] fn74528;
reg [15 : 0] nga2946;
reg [15 : 0] vk14a33;
reg [15 : 0] xla519a;
reg [15 : 0] zz28cd7;
reg [15 : 0] me466be;
reg yz335f1;
reg [2047:0] ux1852e;
wire [53:0] xjc2975;

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

localparam do14bae = 54,jra5d72 = 32'hfdffe06b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`else


`endif


`ifdef GEN2


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      wr_resp <= 1'b0;   else if (!tu6cba7) begin      if (qv8d9e && yz367a8 && !lf16645 && !swb322e && !pu9ce74)         wr_resp <= 1'b1;      else if (enf8db9 == 3'd5)         wr_resp <= 1'b0;   end   else begin      if (qv8d9e && yz367a8 && !lf16645 && !pu9ce74)         wr_resp <= 1'b1;      else if (enf8db9 == 3'd5)         wr_resp <= 1'b0;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      faebc6e <= 1'b0;      else if (((qv8d9e & !lf16645)  | (go46cf5 & !she2cc8)) && !ri99171)      faebc6e <= 1'b1;   else if (enf8db9 == 3'd5)      faebc6e <= 1'b0;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      twb2222 <= 1'b0;   else if (!tu6cba7) begin      if (go46cf5 && yz367a8 && !she2cc8 && !swb322e && !pu9ce74)         twb2222 <= 1'b1;      else if (enf8db9 == 3'd7)         twb2222 <= 1'b0;   end   else begin      if (go46cf5 && yz367a8 && !she2cc8 && !pu9ce74)         twb2222 <= 1'b1;      else if (enf8db9 == 3'd5 && (ksbcce7 || cb339ce))         twb2222 <= 1'b0;      else if (enf8db9 == 3'd7)         twb2222 <= 1'b0;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bn91113 <= 3'd0;   else if (!tu6cba7) begin      if (((qv8d9e & !lf16645)  | (go46cf5 & !she2cc8) | wr_resp | goff1b7) && !swb322e)         bn91113 <= enf8db9 + 3'd1;      else         bn91113 <= 3'd0;   end   else begin      if ((qv8d9e & !lf16645)  | (go46cf5 & !she2cc8) | wr_resp | goff1b7)         bn91113 <= enf8db9 + 3'd1;      else         bn91113 <= 3'd0;   end
end

assign vvf625f =  (zxc8b8b |                   (~ri99171 & goff1b7) |                   (~ri99171 & wr_resp) |                   (dz45c5f & wr_resp )          ) ;
assign fc9c672 = (~lde6739) ? 3'b010 : (yz335f1 ? 3'b001 : 3'b000) ;
assign th6e719 = (((go46cf5 & ri99171)  | (goff1b7 & ~ksbcce7)) & ~zxc8b8b) ? 2'b10 : 2'b00 ;
assign rg738ce = (ene73a2[1]) ? 10'h1 : 10'h0 ;
assign hbe3393 = {1'b0, ene73a2, 5'b01010, 1'b0, xjfc538, 4'b0000} ;

`ifdef ECRC
   assign xl19c9e = {ecrc_gen_enb, 1'b0, 2'b00, 2'b0, yz39d14} ;

`else
   assign xl19c9e = {1'b0, 1'b0, 2'b00, 2'b0, yz39d14} ;

`endif

assign osce4f6 = {qvb12ff, xy897fc, ip4bfe2} ;
assign qg727b1 = {qgce8a5, 1'b0, 12'h004} ;
assign ba93d89 = th5ff14 ;
assign xl9ec4b = {meff8a7, 1'b0, 7'h00} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      of5e373 <= 1'b0 ;      vif1b9c <= 1'b0 ;      mrccde7 <= 1'b0 ;      by66f3d <= 1'b0 ;   end   else begin      of5e373 <= ri14e35 ;      vif1b9c <= zxc8b8b ;      mrccde7 <= go46cf5 ;      by66f3d <= th6467a ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      fp379eb <= 16'd0;      mgbcf5e <= 16'd0;   end   else if (sj233d7 && swb322e) begin      fp379eb <= 16'd0;      mgbcf5e <= 16'd0;   end   else if (sj233d7) begin      fp379eb[15:8] <= (pua71aa[7:0]  | jr38d52[7:0] | czc6a97[7:0] |                        ri354bc[7:0]  | hdaa5e2[7:0] | zk52f16[7:0]) ;      fp379eb[7:0]  <= (pua71aa[15:8] | jr38d52[15:8] | czc6a97[15:8] |                        ri354bc[15:8] | hdaa5e2[15:8] | zk52f16[15:8]) ;      mgbcf5e[15:8] <= (pua71aa[23:16] | jr38d52[23:16] | czc6a97[23:16] |                        ri354bc[23:16] | hdaa5e2[23:16] | zk52f16[23:16]) ;      mgbcf5e[7:0]  <= (pua71aa[31:24] | jr38d52[31:24] | czc6a97[31:24] |                        ri354bc[31:24] | hdaa5e2[31:24] | zk52f16[31:24]) ;   end
end

assign  RDAT_O = {hd19ebc, rgcf5e6} ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ale7af1 <= 1'b0 ;      xl3d78d <= 1'b0 ;      ACK_O       <= 1'b0 ;   end   else begin      ale7af1 <= lf16645 | she2cc8 ;      xl3d78d <= qt7af33 ;      ACK_O       <= dzd799c ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mt9f337 <= 16'd0;   else begin      case (enf8db9)         3'd0 : mt9f337 <= fn74528 ;         3'd1 : mt9f337 <= nga2946 ;         3'd2 : mt9f337 <= vk14a33 ;         3'd3 : mt9f337 <= xla519a ;         3'd4 : mt9f337 <= zz28cd7 ;         3'd5 : mt9f337 <= me466be ;         3'd6 : mt9f337 <= hd19ebc ;         3'd7 : mt9f337 <= rgcf5e6 ;      endcase   end
end
assign us_req_int = ((enf8db9 == 3'd3) & qgce8a5[0]) ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      db13e66 <= 1'd0;


`ifdef GEN2
   else if (drop_resp)      db13e66 <= 1'd0;


`endif
   else if (!tu6cba7) begin      if (((((qv8d9e && !lf16645) || (go46cf5 && !she2cc8)) && yz367a8) || wr_resp || goff1b7) && !swb322e)         db13e66 <= 1'b1;      else         db13e66 <= 1'b0;   end   else begin      if ((((qv8d9e && !lf16645) || (go46cf5 && !she2cc8)) && yz367a8) || wr_resp || goff1b7)         db13e66 <= 1'b1;      else         db13e66 <= 1'b0;   end
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ri30425 <= 8'd0 ;   else if (ksb9b23)      ri30425 <= ofc6dcd + 8'd1 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ec8212a <= 8'd0 ;   else if (nr717f8)      ec8212a <= kf36e6c + 8'd1 ;
end

pmi_ram_dp #(   .pmi_wr_addr_depth    ( 256 ),   .pmi_wr_addr_width    ( 8 ),   .pmi_wr_data_width    ( 16 ),   .pmi_rd_addr_depth    ( 256 ),   .pmi_rd_addr_width    ( 8 ),   .pmi_rd_data_width    ( 16 ),   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ( "none" ),   .pmi_init_file_format ( "binary" ),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ( "pmi_ram_dp" )   )   do2ad52 (   .Data         ( mt9f337 ),   .WrAddress    ( ri30425 ),   .RdAddress    ( ec8212a ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( cfg_rmux_rd ),   .WE           ( db13e66 ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( cfg_rmux_data )   );


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      lf227cc <= 8'd0 ;   else if (ksb9b23 && !nr717f8)      lf227cc <= bab7364 + 8'd1 ;   else if (nr717f8 && !ksb9b23)      lf227cc <= bab7364 - 8'd1 ;
end

assign ou8dce3 = (&bab7364[7:3]) ;

always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      hbf99bc <= 1'b0 ;   else if (pf5fe36)      hbf99bc <= 1'b1 ;   else if (bn8bfc6 != 8'h00)      hbf99bc <= 1'b1 ;   else      hbf99bc <= 1'b0 ;
end

assign cfg_rmux_req = ((bab7364 >= 8'h06) && tu6c8cf) ;

assign cfg_rmux_ae = (|bab7364[7:1] == 1'b0) ;
always@* begin qvb12ff<={bus_num>>1,xjc2975[0]};xy897fc<={dev_num>>1,xjc2975[1]};ip4bfe2<={func_num>>1,xjc2975[2]};th5ff14<={req_id>>1,xjc2975[3]};meff8a7<={tag>>1,xjc2975[4]};xjfc538<={tc>>1,xjc2975[5]};tu6cba7<=xjc2975[6];ri14e35<=xjc2975[7];pua71aa<={reg_rdata0>>1,xjc2975[8]};jr38d52<={reg_rdata1>>1,xjc2975[9]};czc6a97<={reg_rdata2>>1,xjc2975[10]};ri354bc<={reg_rdata3>>1,xjc2975[11]};hdaa5e2<={reg_rdata4>>1,xjc2975[12]};zk52f16<={reg_rdata5>>1,xjc2975[13]};qv8d9e<=xjc2975[14];go46cf5<=xjc2975[15];she2cc8<=xjc2975[16];lf16645<=xjc2975[17];swb322e<=xjc2975[18];ri99171<=xjc2975[19];zxc8b8b<=xjc2975[20];dz45c5f<=xjc2975[21];yz367a8<=xjc2975[22];nr717f8<=xjc2975[23];bn8bfc6<={tx_ca_cplh>>1,xjc2975[24]};pf5fe36<=xjc2975[25];goff1b7<=xjc2975[26];enf8db9<={bn91113>>1,xjc2975[27]};ofc6dcd<={ri30425>>1,xjc2975[28]};kf36e6c<={ec8212a>>1,xjc2975[29]};bab7364<={lf227cc>>1,xjc2975[30]};ksb9b23<=xjc2975[31];ldcd919<={mt9f337>>1,xjc2975[32]};tu6c8cf<=xjc2975[33];th6467a<=xjc2975[34];sj233d7<=xjc2975[35];hd19ebc<={fp379eb>>1,xjc2975[36]};rgcf5e6<={mgbcf5e>>1,xjc2975[37]};qt7af33<=xjc2975[38];dzd799c<=xjc2975[39];ksbcce7<=xjc2975[40];lde6739<=xjc2975[41];cb339ce<=xjc2975[42];pu9ce74<=xjc2975[43];ene73a2<={th6e719>>1,xjc2975[44]};yz39d14<={rg738ce>>1,xjc2975[45]};qgce8a5<={fc9c672>>1,xjc2975[46]};fn74528<={hbe3393>>1,xjc2975[47]};nga2946<={xl19c9e>>1,xjc2975[48]};vk14a33<={osce4f6>>1,xjc2975[49]};xla519a<={qg727b1>>1,xjc2975[50]};zz28cd7<={ba93d89>>1,xjc2975[51]};me466be<={xl9ec4b>>1,xjc2975[52]};yz335f1<=xjc2975[53];end
always@* begin ux1852e[2047]<=dev_num[0];ux1852e[2046]<=func_num[0];ux1852e[2044]<=req_id[0];ux1852e[2041]<=tag[0];ux1852e[2034]<=tc[0];ux1852e[2021]<=term_all_cfg;ux1852e[2017]<=pois_cfg;ux1852e[1995]<=load_id;ux1852e[1986]<=ecrc_ok;ux1852e[1943]<=reg_rdata0[0];ux1852e[1925]<=cfg_rmux_rd;ux1852e[1908]<=hbf99bc;ux1852e[1864]<=mgbcf5e[0];ux1852e[1855]<=reg_rd_cpm;ux1852e[1838]<=reg_rdata1[0];ux1852e[1803]<=tx_ca_cplh[0];ux1852e[1769]<=mrccde7;ux1852e[1680]<=ale7af1;ux1852e[1662]<=reg_wr_cpm;ux1852e[1628]<=reg_rdata2[0];ux1852e[1583]<=qg727b1[0];ux1852e[1559]<=tx_ca_cplh_infi;ux1852e[1501]<=db13e66;ux1852e[1490]<=by66f3d;ux1852e[1487]<=reg_wr;ux1852e[1312]<=xl3d78d;ux1852e[1276]<=reg_sel_usp;ux1852e[1209]<=reg_rdata3[0];ux1852e[1155]<=of5e373;ux1852e[1118]<=ba93d89[0];ux1852e[1070]<=twb2222;ux1852e[1048]<=th6e719[0];ux1852e[1023]<=bus_num[0];ux1852e[1008]<=type1_cfg;ux1852e[954]<=mt9f337[0];ux1852e[932]<=fp379eb[0];ux1852e[927]<=reg_rd;ux1852e[791]<=osce4f6[0];ux1852e[750]<=lf227cc[0];ux1852e[743]<=reg_rdata5[0];ux1852e[577]<=faebc6e;ux1852e[524]<=ou8dce3;ux1852e[504]<=reg_id_hit;ux1852e[395]<=xl19c9e[0];ux1852e[379]<=vvf625f;ux1852e[375]<=ec8212a[0];ux1852e[371]<=reg_rdata4[0];ux1852e[262]<=vif1b9c;ux1852e[197]<=hbe3393[0];ux1852e[189]<=xl9ec4b[0];ux1852e[187]<=ri30425[0];ux1852e[98]<=fc9c672[0];ux1852e[93]<=bn91113[0];ux1852e[49]<=rg738ce[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_kf23b25 (
   
   input wire [31:0]   yz1d92d , 
   input wire [31:0]   zxec96c , 
   input wire [31:0]   pf64b66 ,
   input wire [31:0]   INIT_REG_010 , 
   input wire [31:0]   INIT_REG_014 , 
   input wire [31:0]   INIT_REG_018 , 
   input wire [31:0]   INIT_REG_01C , 
   input wire [31:0]   INIT_REG_020 , 
   input wire [31:0]   INIT_REG_024 , 
   input wire [31:0]   zm964ea , 
   input wire [31:0]   bab2752 , 
   input wire [31:0]   ls93a93 , 
   input wire [31:0]   wy9d49b , 
   input wire          load_id ,        

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_t0 ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          nt3d514 ,       
   `ifdef GEN2
      input wire       ir17e02 ,            
   `endif
   input wire [15:0]   byebf11 ,      

   
   output reg [31:0]   jp5f88b ,         
   output reg [31:0]   nrfc45f ,         
   output reg [31:0]   ene22fe ,         
   output reg [31:0]   xy117f4 ,         
   output reg [31:0]   rv8bfa3 ,         
   output reg [31:0]   nr5fd1e ,         
   output reg [31:0]   rgfe8f7 ,         
   output wire [5:0]   cmd_reg_out ,    

   output reg [31:0]   cmea8a6   ) ;
reg [15:0]          je1ee91 ;
reg [15:0]          mrf748b ;
reg                 of5e373 ;
reg [15:0]          ldd22ef ;
reg [15:0]          vx9177e ;
reg [7:0]           bn8bbf7 ;
reg [7:0]           ne5dfbe ;
reg [31:0]          meefdf2 ;
reg [31:0]          th7ef91 ;
reg [31:0]          alf7c8e ;
wire [31:0]         anbe474 ;
wire [31:0]         ipf23a5 ;
wire [31:0]         rv91d2d ;
wire [15:0]         rv8e96e ;
wire [15:0]         nr74b76 ;
wire [31:0]         fpa5bb7 ;
wire [31:0]         hd2ddbe ;
wire [31:0]         bl6edf6 ;
wire [31:0]         ho76fb7 ;
wire [31:0]         dob7dba ;
wire [31:0]         yzbedd2 ;
wire [31:0]         pff6e94 ;
wire [31:0]         pub74a6 ;
wire [31:0]         vxba533 ;
wire [31:0]         vvd299f ;
wire [31:0]         bn94cff ;
wire [31:0]         qia67fe ;
wire [31:0]         qv33ff0 ;
wire [31:0]         yz9ff84 ;
wire [31:0]         ayffc25 ;
wire [31:0]         dmfe128 ;
wire [7:0]          eaf0943 ;
wire [7:0]          lf84a19 ;

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif
reg [31 : 0] pu250cf;
reg [31 : 0] nt2867b;
reg [31 : 0] yk433df;
reg [31 : 0] rv19ef9;
reg [31 : 0] tucf7ce;
reg [31 : 0] hb7be73;
reg [31 : 0] hodf39e;
reg [31 : 0] thf9cf2;
reg [31 : 0] cmce797;
reg [31 : 0] zk73cb9;
reg [31 : 0] tj9e5ca;
reg [31 : 0] kdf2e56;
reg [31 : 0] aa972b4;
reg ri14e35;
reg pscad00;
reg [3 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg qv730f;
reg mgb3d45;
reg [15 : 0] zz38a98;
reg [15 : 0] zkc54c7;
reg lde6739;
reg [15 : 0] qg531d2;
reg [15 : 0] gq98e90;
reg [7 : 0] ldc7480;
reg [7 : 0] pu3a407;
reg [31 : 0] zxd203b;
reg [31 : 0] cb901de;
reg [31 : 0] ep80ef5;
reg [31 : 0] mt77ad;
reg [31 : 0] wy3bd6d;
reg [31 : 0] wwdeb68;
reg [15 : 0] kqf5b41;
reg [15 : 0] fcada09;
reg [31 : 0] ic6d04a;
reg [31 : 0] kq68251;
reg [31 : 0] cz41289;
reg [31 : 0] tj944c;
reg [31 : 0] dz4a266;
reg [31 : 0] ip51337;
reg [31 : 0] zm899bd;
reg [31 : 0] ay4cdeb;
reg [31 : 0] jc66f59;
reg [31 : 0] rv37acb;
reg [31 : 0] fcbd65e;
reg [31 : 0] rgeb2f2;
reg [31 : 0] ay59792;
reg [31 : 0] qgcbc91;
reg [31 : 0] en5e488;
reg [31 : 0] uvf2444;
reg [7 : 0] gq92225;
reg [7 : 0] hd91128;
reg [2047:0] ux1852e;
wire [55:0] xjc2975;

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

localparam do14bae = 56,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


always @(psd0236, pscad00) begin   case ({pscad00, psd0236[3:0]})       5'h1_0 : je1ee91 = 16'b0000_0000_0000_0001 ;        5'h1_1 : je1ee91 = 16'b0000_0000_0000_0010 ;        5'h1_2 : je1ee91 = 16'b0000_0000_0000_0100 ;        5'h1_3 : je1ee91 = 16'b0000_0000_0000_1000 ;        5'h1_4 : je1ee91 = 16'b0000_0000_0001_0000 ;        5'h1_5 : je1ee91 = 16'b0000_0000_0010_0000 ;        5'h1_6 : je1ee91 = 16'b0000_0000_0100_0000 ;        5'h1_7 : je1ee91 = 16'b0000_0000_1000_0000 ;        5'h1_8 : je1ee91 = 16'b0000_0001_0000_0000 ;        5'h1_9 : je1ee91 = 16'b0000_0010_0000_0000 ;        5'h1_A : je1ee91 = 16'b0000_0100_0000_0000 ;        5'h1_B : je1ee91 = 16'b0000_1000_0000_0000 ;        5'h1_C : je1ee91 = 16'b0001_0000_0000_0000 ;        5'h1_D : je1ee91 = 16'b0010_0000_0000_0000 ;        5'h1_E : je1ee91 = 16'b0100_0000_0000_0000 ;        5'h1_F : je1ee91 = 16'b1000_0000_0000_0000 ;        default: je1ee91 = 16'b0000_0000_0000_0000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mrf748b <= 16'h0000 ;      of5e373  <= 1'b0 ;   end   else begin      mrf748b <= je1ee91 ;      of5e373  <= ri14e35 ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      meefdf2 <= 32'd0 ;   else if (lde6739)      meefdf2 <= pu250cf ;
end
assign  fpa5bb7 = zxd203b ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      ldd22ef <= 16'd0 ;


`ifdef GEN2
      else if (ir17e02) begin         ldd22ef[0]  <= 1'b0 ;         ldd22ef[1]  <= 1'b0 ;         ldd22ef[2]  <= 1'b0 ;         ldd22ef[6]  <= 1'b0 ;         ldd22ef[8]  <= 1'b0 ;         ldd22ef[10] <= 1'b0 ;      end


`endif
   else if (!qv730f) begin      ldd22ef[0]  <= 1'b0 ;      ldd22ef[1]  <= 1'b0 ;      ldd22ef[2]  <= 1'b0 ;      ldd22ef[6]  <= 1'b0 ;      ldd22ef[8]  <= 1'b0 ;      ldd22ef[10] <= 1'b0 ;   end   else if (qv8d9e && yz367a8 && je1ee91[1] ) begin      if (byfb25c[0]) begin         ldd22ef[0]  <= fp811b3[0] ;         ldd22ef[1]  <= fp811b3[1] ;         ldd22ef[2]  <= fp811b3[2] ;         ldd22ef[6]  <= fp811b3[6] ;      end      if (byfb25c[1]) begin         ldd22ef[8]  <= fp811b3[8] ;         ldd22ef[10] <= fp811b3[10] ;      end   end
end
assign  cmd_reg_out = {qg531d2[10], qg531d2[8], qg531d2[6], qg531d2[2], qg531d2[1:0]}  ;

assign  rv8e96e = {5'd0, qg531d2[10], 1'b0, qg531d2[8],                     1'b0, qg531d2[6], 3'b000, qg531d2[2], qg531d2[1:0]}  ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      vx9177e <= 16'd0 ;


`ifdef GEN2
      else if (ir17e02)         vx9177e <= 16'd0 ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[1] && byfb25c[3]) begin      if (fp811b3[24]) vx9177e[8]  <= 1'b0 ;      if (fp811b3[27]) vx9177e[11] <= 1'b0 ;      if (fp811b3[28]) vx9177e[12] <= 1'b0 ;      if (fp811b3[29]) vx9177e[13] <= 1'b0 ;      if (fp811b3[30]) vx9177e[14] <= 1'b0 ;      if (fp811b3[31]) vx9177e[15] <= 1'b0 ;   end   else begin      if (zz38a98[3] )         vx9177e[3]  <= 1'b1 ;      else         vx9177e[3]  <= 1'b0 ;      if (zz38a98[8] )  vx9177e[8]  <= 1'b1 ;      if (zz38a98[11] ) vx9177e[11] <= 1'b1 ;      if (zz38a98[12] ) vx9177e[12] <= 1'b1 ;      if (zz38a98[13] ) vx9177e[13] <= 1'b1 ;      if (zz38a98[14] ) vx9177e[14] <= 1'b1 ;      if (zz38a98[15] ) vx9177e[15] <= 1'b1 ;   end
end
assign  nr74b76 = {gq98e90[15:11], 2'b00, gq98e90[8], 3'b000, 1'b1, gq98e90[3], 3'b000} ;
assign  hd2ddbe = {fcada09, kqf5b41} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      th7ef91 <= 32'd0 ;   else if (lde6739)      th7ef91 <= nt2867b ;
end
assign  bl6edf6 = cb901de ;


assign  anbe474 = yk433df ;
always @(posedge sys_clk or negedge rst_n) begin   if ( !rst_n )      bn8bbf7 <= 8'd0 ;   else if (mgb3d45)      bn8bbf7 <= yk433df[7:0] ;


`ifdef GEN2
      else if (ir17e02)         bn8bbf7 <= yk433df[7:0] ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[3] && byfb25c[0])      bn8bbf7[7:0]  <= fp811b3[7:0] ;
end
assign  ho76fb7 = {yk433df[31:8], ldc7480[7:0]} ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jp5f88b <= 32'd0 ;   else if (mgb3d45)      jp5f88b <= rv19ef9 ;


`ifdef GEN2
      else if (ir17e02)         jp5f88b <= rv19ef9 ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[4]) begin      if (rv19ef9[2:0] == 3'b001) begin         if (byfb25c[0]) jp5f88b[7:0]   <= {(rv19ef9[7:2] & fp811b3[7:2]), rv19ef9[1:0]} ;         if (byfb25c[1]) jp5f88b[15:8]  <= (rv19ef9[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) jp5f88b[23:16] <= (rv19ef9[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) jp5f88b[31:24] <= (rv19ef9[31:24] & fp811b3[31:24]) ;      end      else if (rv19ef9[1:0] == 2'b00) begin         if (byfb25c[0]) jp5f88b[7:0]   <= {(rv19ef9[7:4] & fp811b3[7:4]), rv19ef9[3:0]} ;         if (byfb25c[1]) jp5f88b[15:8]  <= (rv19ef9[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) jp5f88b[23:16] <= (rv19ef9[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) jp5f88b[31:24] <= (rv19ef9[31:24] & fp811b3[31:24]) ;      end   end
end
assign  dob7dba = jp5f88b ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nrfc45f <= 32'd0 ;   else if (mgb3d45)      nrfc45f <= tucf7ce ;


`ifdef GEN2
      else if (ir17e02)         nrfc45f <= tucf7ce ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[5]) begin      if (jp5f88b[2:1] == 2'b10) begin         if (byfb25c[0]) nrfc45f[7:0]   <= fp811b3[7:0] ;         if (byfb25c[1]) nrfc45f[15:8]  <= fp811b3[15:8] ;         if (byfb25c[2]) nrfc45f[23:16] <= fp811b3[23:16] ;         if (byfb25c[3]) nrfc45f[31:24] <= fp811b3[31:24] ;      end      else if (tucf7ce[2:0] == 3'b001) begin         if (byfb25c[0]) nrfc45f[7:0]   <= {(tucf7ce[7:2] & fp811b3[7:2]), tucf7ce[1:0]} ;         if (byfb25c[1]) nrfc45f[15:8]  <= (tucf7ce[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) nrfc45f[23:16] <= (tucf7ce[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) nrfc45f[31:24] <= (tucf7ce[31:24] & fp811b3[31:24]) ;      end      else if (tucf7ce[2:0] == 3'b000) begin         if (byfb25c[0]) nrfc45f[7:0]   <= {(tucf7ce[7:4] & fp811b3[7:4]), tucf7ce[3:0]} ;         if (byfb25c[1]) nrfc45f[15:8]  <= (tucf7ce[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) nrfc45f[23:16] <= (tucf7ce[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) nrfc45f[31:24] <= (tucf7ce[31:24] & fp811b3[31:24]) ;      end   end
end
assign  yzbedd2 = nrfc45f ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ene22fe <= 32'd0 ;   else if (mgb3d45)      ene22fe <= hb7be73 ;


`ifdef GEN2
      else if (ir17e02)         ene22fe <= hb7be73 ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[6]) begin      if (hb7be73[2:0] == 3'b001) begin         if (byfb25c[0]) ene22fe[7:0]   <= {(hb7be73[7:2] & fp811b3[7:2]), hb7be73[1:0]} ;         if (byfb25c[1]) ene22fe[15:8]  <= (hb7be73[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) ene22fe[23:16] <= (hb7be73[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) ene22fe[31:24] <= (hb7be73[31:24] & fp811b3[31:24]) ;      end      else if (hb7be73[1:0] == 2'b00) begin         if (byfb25c[0]) ene22fe[7:0]   <= {(hb7be73[7:4] & fp811b3[7:4]), hb7be73[3:0]} ;         if (byfb25c[1]) ene22fe[15:8]  <= (hb7be73[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) ene22fe[23:16] <= (hb7be73[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) ene22fe[31:24] <= (hb7be73[31:24] & fp811b3[31:24]) ;      end   end
end
assign  pff6e94 = ene22fe ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      xy117f4 <= 32'd0 ;   else if (mgb3d45)      xy117f4 <= hodf39e ;


`ifdef GEN2
      else if (ir17e02)         xy117f4 <= hodf39e ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[7]) begin      if (ene22fe[2:1] == 2'b10) begin         if (byfb25c[0]) xy117f4[7:0]   <= fp811b3[7:0] ;         if (byfb25c[1]) xy117f4[15:8]  <= fp811b3[15:8] ;         if (byfb25c[2]) xy117f4[23:16] <= fp811b3[23:16] ;         if (byfb25c[3]) xy117f4[31:24] <= fp811b3[31:24] ;      end      else if (hodf39e[2:0] == 3'b001) begin         if (byfb25c[0]) xy117f4[7:0]   <= {(hodf39e[7:2] & fp811b3[7:2]), hodf39e[1:0]} ;         if (byfb25c[1]) xy117f4[15:8]  <= (hodf39e[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) xy117f4[23:16] <= (hodf39e[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) xy117f4[31:24] <= (hodf39e[31:24] & fp811b3[31:24]) ;      end      else if (hodf39e[2:0] == 3'b000) begin         if (byfb25c[0]) xy117f4[7:0]   <= {(hodf39e[7:4] & fp811b3[7:4]), hodf39e[3:0]} ;         if (byfb25c[1]) xy117f4[15:8]  <= (hodf39e[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) xy117f4[23:16] <= (hodf39e[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) xy117f4[31:24] <= (hodf39e[31:24] & fp811b3[31:24]) ;      end   end
end
assign  pub74a6 = xy117f4 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rv8bfa3 <= 32'd0 ;   else if (mgb3d45)      rv8bfa3 <= thf9cf2 ;


`ifdef GEN2
      else if (ir17e02)         rv8bfa3 <= thf9cf2 ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[8]) begin      if (thf9cf2[2:0] == 3'b001) begin         if (byfb25c[0]) rv8bfa3[7:0]   <= {(thf9cf2[7:2] & fp811b3[7:2]), thf9cf2[1:0]} ;         if (byfb25c[1]) rv8bfa3[15:8]  <= (thf9cf2[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) rv8bfa3[23:16] <= (thf9cf2[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) rv8bfa3[31:24] <= (thf9cf2[31:24] & fp811b3[31:24]) ;      end      else if (thf9cf2[1:0] == 2'b00) begin         if (byfb25c[0]) rv8bfa3[7:0]   <= {(thf9cf2[7:4] & fp811b3[7:4]), thf9cf2[3:0]} ;         if (byfb25c[1]) rv8bfa3[15:8]  <= (thf9cf2[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) rv8bfa3[23:16] <= (thf9cf2[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) rv8bfa3[31:24] <= (thf9cf2[31:24] & fp811b3[31:24]) ;      end   end
end
assign  vxba533 = rv8bfa3 ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nr5fd1e <= 32'd0 ;   else if (mgb3d45)      nr5fd1e <= cmce797 ;


`ifdef GEN2
      else if (ir17e02)         nr5fd1e <= cmce797 ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[9]) begin      if (rv8bfa3[2:1] == 2'b10) begin         if (byfb25c[0]) nr5fd1e[7:0]   <= fp811b3[7:0] ;         if (byfb25c[1]) nr5fd1e[15:8]  <= fp811b3[15:8] ;         if (byfb25c[2]) nr5fd1e[23:16] <= fp811b3[23:16] ;         if (byfb25c[3]) nr5fd1e[31:24] <= fp811b3[31:24] ;      end      else if (cmce797[2:0] == 3'b001) begin         if (byfb25c[0]) nr5fd1e[7:0]   <= {(cmce797[7:2] & fp811b3[7:2]), cmce797[1:0]} ;         if (byfb25c[1]) nr5fd1e[15:8]  <= (cmce797[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) nr5fd1e[23:16] <= (cmce797[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) nr5fd1e[31:24] <= (cmce797[31:24] & fp811b3[31:24]) ;      end      else if (cmce797[2:0] == 3'b000) begin         if (byfb25c[0]) nr5fd1e[7:0]   <= {(cmce797[7:4] & fp811b3[7:4]), cmce797[3:0]} ;         if (byfb25c[1]) nr5fd1e[15:8]  <= (cmce797[15:8]  & fp811b3[15:8]) ;         if (byfb25c[2]) nr5fd1e[23:16] <= (cmce797[23:16] & fp811b3[23:16]) ;         if (byfb25c[3]) nr5fd1e[31:24] <= (cmce797[31:24] & fp811b3[31:24]) ;      end   end
end
assign  vvd299f = nr5fd1e ;


assign  rv91d2d = zk73cb9 ;
assign  bn94cff = zk73cb9 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      alf7c8e <= 32'd0 ;   else if (lde6739)      alf7c8e <= tj9e5ca ;
end
assign  qia67fe = ep80ef5 ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      rgfe8f7 <= 32'd0 ;   else if (mgb3d45)      rgfe8f7 <= {kdf2e56[31:11], 11'd0} ;


`ifdef GEN2
      else if (ir17e02)         rgfe8f7 <= {kdf2e56[31:11], 11'd0} ;


`endif
   else if (!qv730f)         rgfe8f7[0] <= 1'b0 ;   else if (qv8d9e && yz367a8 && je1ee91[12]) begin      if (byfb25c[0]) rgfe8f7[7:0]   <= {7'd0, fp811b3[0]} ;      if (byfb25c[1]) rgfe8f7[15:8]  <= {(kdf2e56[15:11] & fp811b3[15:11]), 3'b000} ;      if (byfb25c[2]) rgfe8f7[23:16] <= (kdf2e56[23:16] & fp811b3[23:16]) ;      if (byfb25c[3]) rgfe8f7[31:24] <= (kdf2e56[31:24] & fp811b3[31:24]) ;   end
end
assign  qv33ff0 = rgfe8f7 ;


assign  lf84a19  = 8'h50 ;
assign  yz9ff84 = {24'h0000_00, hd91128} ;


assign  ayffc25 = 32'h0000_0000 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ne5dfbe <= 8'd0 ;   else if (mgb3d45)      ne5dfbe <= aa972b4[7:0] ;


`ifdef GEN2
      else if (ir17e02)         ne5dfbe <= aa972b4[7:0] ;


`endif
   else if (qv8d9e && yz367a8 && je1ee91[15] && byfb25c[0])      ne5dfbe <= fp811b3[7:0] ;   else      ne5dfbe <= pu3a407 ;
end
assign  eaf0943 = aa972b4[15:8] ;
assign  dmfe128 = {16'h0000, gq92225, pu3a407} ;


always @(*) begin   case (1'b1)       zkc54c7[0]  : cmea8a6 = ic6d04a ;      zkc54c7[1]  : cmea8a6 = kq68251 ;      zkc54c7[2]  : cmea8a6 = cz41289 ;      zkc54c7[3]  : cmea8a6 = tj944c ;      zkc54c7[4]  : cmea8a6 = dz4a266 ;      zkc54c7[5]  : cmea8a6 = ip51337 ;      zkc54c7[6]  : cmea8a6 = zm899bd ;      zkc54c7[7]  : cmea8a6 = ay4cdeb ;      zkc54c7[8]  : cmea8a6 = jc66f59 ;      zkc54c7[9]  : cmea8a6 = rv37acb ;      zkc54c7[10] : cmea8a6 = fcbd65e ;      zkc54c7[11] : cmea8a6 = rgeb2f2 ;      zkc54c7[12] : cmea8a6 = ay59792 ;      zkc54c7[13] : cmea8a6 = qgcbc91 ;      zkc54c7[14] : cmea8a6 = en5e488 ;      zkc54c7[15] : cmea8a6 = uvf2444 ;      default          : cmea8a6 = 32'd0 ;   endcase
end
always@* begin pu250cf<={yz1d92d>>1,xjc2975[0]};nt2867b<={zxec96c>>1,xjc2975[1]};yk433df<={pf64b66>>1,xjc2975[2]};rv19ef9<={INIT_REG_010>>1,xjc2975[3]};tucf7ce<={INIT_REG_014>>1,xjc2975[4]};hb7be73<={INIT_REG_018>>1,xjc2975[5]};hodf39e<={INIT_REG_01C>>1,xjc2975[6]};thf9cf2<={INIT_REG_020>>1,xjc2975[7]};cmce797<={INIT_REG_024>>1,xjc2975[8]};zk73cb9<={zm964ea>>1,xjc2975[9]};tj9e5ca<={bab2752>>1,xjc2975[10]};kdf2e56<={ls93a93>>1,xjc2975[11]};aa972b4<={wy9d49b>>1,xjc2975[12]};ri14e35<=xjc2975[13];pscad00<=xjc2975[14];psd0236<={reg_addr>>1,xjc2975[15]};fp811b3<={reg_wdata>>1,xjc2975[16]};byfb25c<={reg_wdata_be>>1,xjc2975[17]};qv8d9e<=xjc2975[18];go46cf5<=xjc2975[19];yz367a8<=xjc2975[20];qv730f<=xjc2975[21];mgb3d45<=xjc2975[22];zz38a98<={byebf11>>1,xjc2975[23]};zkc54c7<={mrf748b>>1,xjc2975[24]};lde6739<=xjc2975[25];qg531d2<={ldd22ef>>1,xjc2975[26]};gq98e90<={vx9177e>>1,xjc2975[27]};ldc7480<={bn8bbf7>>1,xjc2975[28]};pu3a407<={ne5dfbe>>1,xjc2975[29]};zxd203b<={meefdf2>>1,xjc2975[30]};cb901de<={th7ef91>>1,xjc2975[31]};ep80ef5<={alf7c8e>>1,xjc2975[32]};mt77ad<={anbe474>>1,xjc2975[33]};wy3bd6d<={ipf23a5>>1,xjc2975[34]};wwdeb68<={rv91d2d>>1,xjc2975[35]};kqf5b41<={rv8e96e>>1,xjc2975[36]};fcada09<={nr74b76>>1,xjc2975[37]};ic6d04a<={fpa5bb7>>1,xjc2975[38]};kq68251<={hd2ddbe>>1,xjc2975[39]};cz41289<={bl6edf6>>1,xjc2975[40]};tj944c<={ho76fb7>>1,xjc2975[41]};dz4a266<={dob7dba>>1,xjc2975[42]};ip51337<={yzbedd2>>1,xjc2975[43]};zm899bd<={pff6e94>>1,xjc2975[44]};ay4cdeb<={pub74a6>>1,xjc2975[45]};jc66f59<={vxba533>>1,xjc2975[46]};rv37acb<={vvd299f>>1,xjc2975[47]};fcbd65e<={bn94cff>>1,xjc2975[48]};rgeb2f2<={qia67fe>>1,xjc2975[49]};ay59792<={qv33ff0>>1,xjc2975[50]};qgcbc91<={yz9ff84>>1,xjc2975[51]};en5e488<={ayffc25>>1,xjc2975[52]};uvf2444<={dmfe128>>1,xjc2975[53]};gq92225<={eaf0943>>1,xjc2975[54]};hd91128<={lf84a19>>1,xjc2975[55]};end
always@* begin ux1852e[2047]<=zxec96c[0];ux1852e[2046]<=pf64b66[0];ux1852e[2044]<=INIT_REG_010[0];ux1852e[2040]<=INIT_REG_014[0];ux1852e[2032]<=INIT_REG_018[0];ux1852e[2016]<=INIT_REG_01C[0];ux1852e[1985]<=INIT_REG_020[0];ux1852e[1950]<=reg_wdata_be[0];ux1852e[1930]<=byebf11[0];ux1852e[1923]<=INIT_REG_024[0];ux1852e[1852]<=reg_wr;ux1852e[1813]<=mrf748b[0];ux1852e[1799]<=zm964ea[0];ux1852e[1656]<=reg_rd;ux1852e[1578]<=of5e373;ux1852e[1551]<=bab2752[0];ux1852e[1493]<=eaf0943[0];ux1852e[1353]<=bl6edf6[0];ux1852e[1345]<=meefdf2[0];ux1852e[1316]<=dob7dba[0];ux1852e[1285]<=alf7c8e[0];ux1852e[1265]<=ecrc_ok;ux1852e[1169]<=pff6e94[0];ux1852e[1163]<=vvd299f[0];ux1852e[1117]<=qv33ff0[0];ux1852e[1108]<=ldd22ef[0];ux1852e[1054]<=ls93a93[0];ux1852e[1045]<=ipf23a5[0];ux1852e[1023]<=yz1d92d[0];ux1852e[975]<=reg_wdata[0];ux1852e[965]<=nt3d514;ux1852e[939]<=lf84a19[0];ux1852e[746]<=dmfe128[0];ux1852e[676]<=hd2ddbe[0];ux1852e[672]<=ne5dfbe[0];ux1852e[658]<=ho76fb7[0];ux1852e[642]<=th7ef91[0];ux1852e[584]<=yzbedd2[0];ux1852e[581]<=vxba533[0];ux1852e[558]<=qia67fe[0];ux1852e[522]<=anbe474[0];ux1852e[487]<=reg_addr[0];ux1852e[482]<=phy_link_up;ux1852e[373]<=ayffc25[0];ux1852e[338]<=fpa5bb7[0];ux1852e[336]<=bn8bbf7[0];ux1852e[290]<=pub74a6[0];ux1852e[279]<=bn94cff[0];ux1852e[243]<=reg_sel_t0;ux1852e[186]<=yz9ff84[0];ux1852e[169]<=nr74b76[0];ux1852e[168]<=vx9177e[0];ux1852e[121]<=load_id;ux1852e[84]<=rv8e96e[0];ux1852e[60]<=wy9d49b[0];ux1852e[42]<=rv91d2d[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_oseaea7 (
   
   input wire [31:0]          ho57539 , 

   input wire                 sys_clk ,        
   input wire                 rst_n ,          

   input wire                 reg_sel_ec ,     
   input wire [4:0]           reg_addr ,       
   input wire [31:0]          reg_wdata ,      
   input wire [3:0]           reg_wdata_be ,   
   input wire                 reg_wr ,         
   input wire                 reg_rd ,         
   input wire                 ecrc_ok ,        

   input wire [`NUM_VC -1:0]  vka2183 ,

   output wire [2:0]          co10c1a ,     
   output wire [2:0]          zm860d0 ,   
   output wire                xy30683 ,    
   output wire [2:0]          cfgec_vcasel ,   

   `ifdef EN_VC0
      output wire [7:0]       mg1a0d3 ,    
      output wire [2:0]       fad0698 ,    
      output wire             ba834c3 ,   
   `endif
   `ifdef EN_VC1
      output wire [7:0]       mg1a61b ,    
      output wire [2:0]       gbd30d8 ,    
      output wire             ec986c4 ,   
   `endif
   `ifdef EN_VC2
      output wire [7:0]       yxc3621 ,    
      output wire [2:0]       pu1b10d ,    
      output wire             fnd886a ,   
   `endif
   `ifdef EN_VC3
      output wire [7:0]       ayc4356 ,    
      output wire [2:0]       aa21ab0 ,    
      output wire             sjd580 ,   
   `endif
   `ifdef EN_VC4
      output wire [7:0]       uv6ac04 ,    
      output wire [2:0]       cm56025 ,    
      output wire             bnb0128 ,   
   `endif
   `ifdef EN_VC5
      output wire [7:0]       ir80946 ,    
      output wire [2:0]       ri4a35 ,    
      output wire             ls251ab ,   
   `endif
   `ifdef EN_VC6
      output wire [7:0]       hd28d5b ,    
      output wire [2:0]       yk46ade ,    
      output wire             ls356f0 ,   
   `endif
   `ifdef EN_VC7
      output wire [7:0]       kfab782 ,    
      output wire [2:0]       yx5bc14 ,    
      output wire             ayde0a5 ,   
   `endif

   output reg [31:0]          cmea8a6   ) ;
reg [27:0]          qi82940 ;
reg [27:0]          zm14a00 ;
reg [3:0]           dba5002 ;
reg                 vx28017 ;
wire                nr400bf ;
wire [2:0]          aa5fe ;
wire [31:0]         cb2ff0 ;
wire [31:0]         sj17f84 ;
wire [31:0]         dbbfc25 ;
wire [31:0]         byfe12e ;
wire [31:0]         osf0973 ;
wire [31:0]         nt84b99 ;
wire [2:0]          fc25ccf ;
wire [2:0]          ec2e67a ;
wire                by733d0 = 1'b0 ;
wire [31:0] ls99e83 = ho57539 ;

`ifdef AER

`else 

`endif 

`ifdef EN_VC0
wire [31:0] mr7a0d3 ;
wire [31:0] zkd069d ;
wire [31:0] fc834eb ;
wire [31:0] sw1a75b ;
reg  [31:0] czd3ad8 ;
reg         co9d6c5 ;

`endif

`ifdef EN_VC1
wire [31:0] hoeb629 ;
wire [31:0] al5b14a ;
wire [31:0] pfd8a54 ;
wire [31:0] dmc52a6 ;
reg  [31:0] an29532 ;
reg         bl4a995 ;

`endif

`ifdef EN_VC2
wire [31:0] of54cae ;
wire [31:0] qia6574 ;
wire [31:0] rv32ba0 ;
wire [31:0] gd95d06 ;
reg  [31:0] gdae834 ;
reg         xj741a5 ;

`endif

`ifdef EN_VC3
wire [31:0] dba0d2e ;
wire [31:0] rv6976 ;
wire [31:0] gq34bb6 ;
wire [31:0] bna5db1 ;
reg  [31:0] ym2ed8e ;
reg         jc76c71 ;

`endif

`ifdef EN_VC4
wire [31:0] swb638a ;
wire [31:0] sjb1c51 ;
wire [31:0] tj8e28d ;
wire [31:0] hb7146f ;
reg  [31:0] ep8a37e ;
reg         qt51bf5 ;

`endif

`ifdef EN_VC5
wire [31:0] gq8dfac ;
wire [31:0] gb6fd61 ;
wire [31:0] xj7eb0d ;
wire [31:0] eaf586e ;
reg  [31:0] ieac371 ;
reg         nr61b89 ;

`endif

`ifdef EN_VC6
wire [31:0] sjdc4e ;
wire [31:0] zx6e275 ;
wire [31:0] pf713ae ;
wire [31:0] pu89d76 ;
reg  [31:0] al4ebb3 ;
reg         gb75d9c ;

`endif

`ifdef EN_VC7
wire [31:0] anaece5 ;
wire [31:0] zk7672d ;
wire [31:0] ukb396b ;
wire [31:0] do9cb58 ;
reg  [31:0] kqe5ac2 ;
reg         vx2d610 ;

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif
reg [31 : 0] nr6b087;
reg xj5a046;
reg [4 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg [`NUM_VC - 1 : 0] off8074;
reg [27 : 0] lqc03a4;
reg [3 : 0] ls1d22;
reg pue913;
reg xj7489a;
reg [2 : 0] gda44d7;
reg [31 : 0] tj226bd;
reg [31 : 0] ph135ee;
reg [31 : 0] an9af76;
reg [31 : 0] thd7bb5;
reg [31 : 0] jebddaf;
reg [31 : 0] byeed7b;
reg [2 : 0] ho76bdb;
reg [2 : 0] fpb5eda;
reg tjaf6d7;
reg [31 : 0] th7b6be;
reg [2047:0] ux1852e;
wire [23:0] xjc2975;

`ifdef AER

`else 

`endif 

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

localparam do14bae = 24,jra5d72 = 32'hfdfff02b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef AER


`else 


`endif 


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif





always @(psd0236, xj5a046) begin   case ({xj5a046, psd0236[4:0]})       6'b1_00011 : qi82940 = 28'h000_0001 ;        6'b1_00100 : qi82940 = 28'h000_0002 ;        6'b1_00101 : qi82940 = 28'h000_0004 ;        6'b1_00110 : qi82940 = 28'h000_0008 ;        6'b1_00111 : qi82940 = 28'h000_0010 ;        6'b1_01000 : qi82940 = 28'h000_0020 ;        6'b1_01001 : qi82940 = 28'h000_0040 ;        6'b1_01010 : qi82940 = 28'h000_0080 ;        6'b1_01011 : qi82940 = 28'h000_0100 ;        6'b1_01100 : qi82940 = 28'h000_0200 ;        6'b1_01101 : qi82940 = 28'h000_0400 ;        6'b1_01110 : qi82940 = 28'h000_0800 ;        6'b1_01111 : qi82940 = 28'h000_1000 ;        6'b1_10000 : qi82940 = 28'h000_2000 ;        6'b1_10001 : qi82940 = 28'h000_4000 ;        6'b1_10010 : qi82940 = 28'h000_8000 ;        6'b1_10011 : qi82940 = 28'h001_0000 ;        6'b1_10100 : qi82940 = 28'h002_0000 ;        6'b1_10101 : qi82940 = 28'h004_0000 ;        6'b1_10110 : qi82940 = 28'h008_0000 ;        6'b1_10111 : qi82940 = 28'h010_0000 ;        6'b1_11000 : qi82940 = 28'h020_0000 ;        6'b1_11001 : qi82940 = 28'h040_0000 ;        6'b1_11010 : qi82940 = 28'h080_0000 ;        6'b1_11011 : qi82940 = 28'h100_0000 ;        6'b1_11100 : qi82940 = 28'h200_0000 ;        6'b1_11101 : qi82940 = 28'h400_0000 ;        6'b1_11110 : qi82940 = 28'h800_0000 ;        default    : qi82940 = 28'h000_0000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zm14a00 <= 28'h000_0000;   else      zm14a00 <= qi82940 ;
end


`ifdef AER
   assign cb2ff0 = {12'h1A0, 4'h1, 16'h0002} ;


`else 
   assign cb2ff0 = {th7b6be[31:20],4'h1, 16'h0002} ;


`endif 



assign fc25ccf = (`NUM_VC - 1) ;
assign ec2e67a = `LPEVCC ;

assign  sj17f84 = {16'd0, 4'd0, 2'b00, 2'b00, 1'b0, fpb5eda, 1'b0, ho76bdb}  ;
assign  dbbfc25 =  ph135ee ;

assign  co10c1a = ph135ee[2:0] ;
assign  zm860d0 = ph135ee[6:4] ;


assign  byfe12e = {8'h00, 16'h0000, 8'h01} ;
assign  osf0973 = thd7bb5 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      dba5002 <= 4'd0 ;   else if (qv8d9e && yz367a8 && qi82940[3] && byfb25c[0])      dba5002 <= fp811b3[3:0] ;   else      dba5002 <= ls1d22 ;
end
assign xy30683 = ls1d22[0] ;
assign cfgec_vcasel = ls1d22[3:1] ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vx28017 <= 1'b0 ;   else if (tjaf6d7 && qv8d9e && yz367a8)      vx28017 <= 1'b1 ;   else if (ls1d22[0])      vx28017 <= 1'b0 ;   else      vx28017 <= pue913 ;
end
assign  nt84b99 = {15'h0000, 1'b0, 12'h000, ls1d22[3:1], 1'b0}  ;





`ifdef EN_VC0
      assign  sw1a75b  = 32'd0  ;   assign  mr7a0d3 = 32'd0 ;
      assign  zkd069d =  {1'b1, 4'b0000, 3'b000, 4'b0000,                                        4'h0, 8'h00, 8'hFF} ;   assign  mg1a0d3 =  8'h01 ;   assign  fad0698  =  3'b000 ;   assign  ba834c3 =  1'b1 ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         co9d6c5 <= 1'b0 ;      else begin         co9d6c5 <= off8074[0] ;      end   end   assign  fc834eb =  {14'h0000, co9d6c5, 1'b0, 16'h0000} ;


`endif





`ifdef EN_VC1
      assign  dmc52a6  = 32'd0  ;   assign  hoeb629 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         an29532 <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[8]) begin         if (byfb25c[0]) an29532[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) an29532[31:24] <= fp811b3[31:24] ;      end   end   assign  al5b14a =  {an29532[31], 4'h0, an29532[26:24], 4'h0,                         4'h0, 8'h00, an29532[7:0]};   assign  mg1a61b =  an29532[7:0] ;   assign  gbd30d8  =  an29532[26:24] ;   assign  ec986c4 =  an29532[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         bl4a995 <= 2'd0 ;      else         bl4a995 <= off8074[1] ;   end   assign  pfd8a54 =  {14'h0000, bl4a995, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC2
      assign  gd95d06  = 32'd0  ;   assign  of54cae = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         gdae834 <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[11]) begin         if (byfb25c[0]) gdae834[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) gdae834[31:24] <= fp811b3[31:24] ;      end   end   assign  qia6574 =  {gdae834[31], 4'h0, gdae834[26:24], 4'h0,                         4'h0, 8'h00, gdae834[7:0]};   assign  yxc3621 =  gdae834[7:0] ;   assign  pu1b10d  =  gdae834[26:24] ;   assign  fnd886a =  gdae834[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         xj741a5 <= 2'd0 ;      else         xj741a5 <= off8074[2] ;   end   assign  rv32ba0 =  {14'h0000, xj741a5, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC3
      assign  bna5db1  = 32'd0  ;   assign  dba0d2e = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ym2ed8e <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[14]) begin         if (byfb25c[0]) ym2ed8e[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) ym2ed8e[31:24] <= fp811b3[31:24] ;      end   end   assign  rv6976 =  {ym2ed8e[31], 4'h0, ym2ed8e[26:24], 4'h0,                         4'h0, 8'h00, ym2ed8e[7:0]};   assign  ayc4356 =  ym2ed8e[7:0] ;   assign  aa21ab0  =  ym2ed8e[26:24] ;   assign  sjd580 =  ym2ed8e[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         jc76c71 <= 1'b0 ;      else         jc76c71 <= off8074[3] ;   end   assign  gq34bb6 =  {14'h0000, jc76c71, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC4
      assign  hb7146f  = 32'd0  ;   assign  swb638a = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ep8a37e <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[17]) begin         if (byfb25c[0]) ep8a37e[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) ep8a37e[31:24] <= fp811b3[31:24] ;      end   end   assign  sjb1c51 =  {ep8a37e[31], 4'h0, ep8a37e[26:24], 4'h0,                         4'h0, 8'h00, ep8a37e[7:0]};   assign  uv6ac04 =  ep8a37e[7:0] ;   assign  cm56025  =  ep8a37e[26:24] ;   assign  bnb0128 =  ep8a37e[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         qt51bf5 <= 1'b0 ;      else         qt51bf5 <= off8074[4] ;   end   assign  tj8e28d =  {14'h0000, qt51bf5, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC5
      assign  eaf586e  = 32'd0  ;   assign  gq8dfac = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ieac371 <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[20]) begin         if (byfb25c[0]) ieac371[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) ieac371[31:24] <= fp811b3[31:24] ;      end   end   assign  gb6fd61 =  {ieac371[31], 4'h0, ieac371[26:24], 4'h0,                         4'h0, 8'h00, ieac371[7:0]};   assign  ir80946 =  ieac371[7:0] ;   assign  ri4a35  =  ieac371[26:24] ;   assign  ls251ab =  ieac371[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         nr61b89 <= 1'b0 ;      else         nr61b89 <= off8074[5] ;   end   assign  xj7eb0d =  {14'h0000, nr61b89, 1'b0, 16'h0000} ;




`endif





`ifdef EN_VC6
      assign  pu89d76  = 32'd0  ;   assign  sjdc4e = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         al4ebb3 <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[23]) begin         if (byfb25c[0]) al4ebb3[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) al4ebb3[31:24] <= fp811b3[31:24] ;      end   end   assign  zx6e275 =  {al4ebb3[31], 4'h0, al4ebb3[26:24], 4'h0,                         4'h0, 8'h00, al4ebb3[7:0]};   assign  hd28d5b =  al4ebb3[7:0] ;   assign  yk46ade  =  al4ebb3[26:24] ;   assign  ls356f0 =  al4ebb3[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         gb75d9c <= 1'b0 ;      else         gb75d9c <= off8074[6] ;   end   assign  pf713ae =  {14'h0000, gb75d9c, 1'b0, 16'h0000} ;



`endif





`ifdef EN_VC7
      assign  do9cb58  = 32'd0  ;   assign  anaece5 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         kqe5ac2 <= 32'd0 ;      else if (qv8d9e && yz367a8 && qi82940[26]) begin         if (byfb25c[0]) kqe5ac2[7:0]   <= fp811b3[7:0] ;         if (byfb25c[3]) kqe5ac2[31:24] <= fp811b3[31:24] ;      end   end   assign  zk7672d =  {kqe5ac2[31], 4'h0, kqe5ac2[26:24], 4'h0,                         4'h0, 8'h00, kqe5ac2[7:0]};   assign  kfab782 =  kqe5ac2[7:0] ;   assign  yx5bc14  =  kqe5ac2[26:24] ;   assign  ayde0a5 =  kqe5ac2[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         vx2d610 <= 1'b0 ;      else         vx2d610 <= off8074[7] ;   end   assign  ukb396b =  {14'h0000, vx2d610, 1'b0, 16'h0000} ;




`endif


always @(lqc03a4,         tj226bd, an9af76, jebddaf, byeed7b


`ifdef EN_VC0
           , mr7a0d3, zkd069d, fc834eb


`endif



`ifdef EN_VC1
           , hoeb629, al5b14a, pfd8a54


`endif



`ifdef EN_VC2
           , of54cae, qia6574, rv32ba0


`endif



`ifdef EN_VC3
           , dba0d2e, rv6976, gq34bb6


`endif



`ifdef EN_VC4
           , swb638a, sjb1c51, tj8e28d


`endif



`ifdef EN_VC5
           , gq8dfac, gb6fd61, xj7eb0d


`endif



`ifdef EN_VC6
           , sjdc4e, zx6e275, pf713ae


`endif



`ifdef EN_VC7
           , anaece5, zk7672d, ukb396b


`endif
        ) begin   case (1'b1)          lqc03a4[0]  : cmea8a6 = tj226bd ;         lqc03a4[1]  : cmea8a6 = an9af76 ;         lqc03a4[2]  : cmea8a6 = jebddaf ;         lqc03a4[3]  : cmea8a6 = byeed7b ;


`ifdef EN_VC0
         lqc03a4[4]  : cmea8a6 = mr7a0d3 ;         lqc03a4[5]  : cmea8a6 = zkd069d ;         lqc03a4[6]  : cmea8a6 = fc834eb ;


`endif



`ifdef EN_VC1
         lqc03a4[7]  : cmea8a6 = hoeb629 ;         lqc03a4[8]  : cmea8a6 = al5b14a ;         lqc03a4[9]  : cmea8a6 = pfd8a54 ;


`endif



`ifdef EN_VC2
         lqc03a4[10] : cmea8a6 = of54cae ;         lqc03a4[11] : cmea8a6 = qia6574 ;         lqc03a4[12] : cmea8a6 = rv32ba0 ;


`endif



`ifdef EN_VC3
         lqc03a4[13] : cmea8a6 = dba0d2e ;         lqc03a4[14] : cmea8a6 = rv6976 ;         lqc03a4[15] : cmea8a6 = gq34bb6 ;


`endif



`ifdef EN_VC4
         lqc03a4[16] : cmea8a6 = swb638a ;         lqc03a4[17] : cmea8a6 = sjb1c51 ;         lqc03a4[18] : cmea8a6 = tj8e28d ;


`endif



`ifdef EN_VC5
         lqc03a4[19] : cmea8a6 = gq8dfac ;         lqc03a4[20] : cmea8a6 = gb6fd61 ;         lqc03a4[21] : cmea8a6 = xj7eb0d ;


`endif



`ifdef EN_VC6
         lqc03a4[22] : cmea8a6 = sjdc4e ;         lqc03a4[23] : cmea8a6 = zx6e275 ;         lqc03a4[24] : cmea8a6 = pf713ae ;


`endif



`ifdef EN_VC7
         lqc03a4[25] : cmea8a6 = anaece5 ;         lqc03a4[26] : cmea8a6 = zk7672d ;         lqc03a4[27] : cmea8a6 = ukb396b ;


`endif
      default              : cmea8a6 = 32'd0 ;   endcase
end
always@* begin nr6b087<={ho57539>>1,xjc2975[0]};xj5a046<=xjc2975[1];psd0236<={reg_addr>>1,xjc2975[2]};fp811b3<={reg_wdata>>1,xjc2975[3]};byfb25c<={reg_wdata_be>>1,xjc2975[4]};qv8d9e<=xjc2975[5];go46cf5<=xjc2975[6];yz367a8<=xjc2975[7];off8074<={vka2183>>1,xjc2975[8]};lqc03a4<={zm14a00>>1,xjc2975[9]};ls1d22<={dba5002>>1,xjc2975[10]};pue913<=xjc2975[11];xj7489a<=xjc2975[12];gda44d7<={aa5fe>>1,xjc2975[13]};tj226bd<={cb2ff0>>1,xjc2975[14]};ph135ee<={sj17f84>>1,xjc2975[15]};an9af76<={dbbfc25>>1,xjc2975[16]};thd7bb5<={byfe12e>>1,xjc2975[17]};jebddaf<={osf0973>>1,xjc2975[18]};byeed7b<={nt84b99>>1,xjc2975[19]};ho76bdb<={fc25ccf>>1,xjc2975[20]};fpb5eda<={ec2e67a>>1,xjc2975[21]};tjaf6d7<=xjc2975[22];th7b6be<={ls99e83>>1,xjc2975[23]};end
always@* begin ux1852e[2047]<=reg_sel_ec;ux1852e[2046]<=reg_addr[0];ux1852e[2044]<=reg_wdata[0];ux1852e[2041]<=reg_wdata_be[0];ux1852e[2035]<=reg_wr;ux1852e[2022]<=reg_rd;ux1852e[1996]<=ecrc_ok;ux1852e[1945]<=vka2183[0];ux1852e[1843]<=zm14a00[0];ux1852e[1746]<=osf0973[0];ux1852e[1685]<=ec2e67a[0];ux1852e[1645]<=cb2ff0[0];ux1852e[1638]<=dba5002[0];ux1852e[1445]<=nt84b99[0];ux1852e[1322]<=by733d0;ux1852e[1242]<=sj17f84[0];ux1852e[1229]<=vx28017;ux1852e[1023]<=ho57539[0];ux1852e[873]<=byfe12e[0];ux1852e[842]<=fc25ccf[0];ux1852e[822]<=aa5fe[0];ux1852e[597]<=ls99e83[0];ux1852e[436]<=dbbfc25[0];ux1852e[411]<=nr400bf;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_lfb0c77 #(
   parameter D_WIDTH  = 64 )
   (
   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_aer ,    
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          ecrc_ok ,        

   
   input wire          phy_link_up ,    
   input wire          dfrm_perr ,

   
   input wire          rxtp_bad_tlp ,   
   input wire          cb2c67b ,  
   input wire          ie5434 ,     
   input wire          mrd9d4b , 
   input wire          ksa936e , 
   input wire          ng3aaf5 , 
   input wire          dmd57aa ,  
   input wire          mtabd53 ,     

   
   input wire [D_WIDTH-1:0] tlpdec_data ,
   input wire          tlpdec_st ,
   input wire          tlpdec_end ,
   input wire          tlpdec_ecrc_err , 
   input wire          tlpdec_pois_tlp , 
   input wire          tlpdec_us_req ,   
   input wire          tlpdec_malf_tlp , 

   
   input wire          rief25 ,        
   input wire [14:0]   mg8d329 ,    

   
   input wire [127:0]  err_tlp_header ,  
   input wire          cmpln_tout ,      
   input wire          cmpltr_abort_np , 
   input wire          cmpltr_abort_p ,  
   input wire          unexp_cmpln ,     
   input wire          ur_np_ext ,       
   input wire          ur_p_ext ,        

   output reg [31:0]   bnbf015 ,
   output wire         ecrc_gen_enb ,
   output wire         ecrc_chk_enb ,
   output reg          ftl_err_out ,
   output reg          nftl_err_out ,
   output reg          cor_err_out ,

   output reg [31:0]   cmea8a6   ) ;
reg [11:0]          yk4c10b ;
reg [11:0]          qt60858 ;
reg                 pu42c4 ;
reg                 qi21622 ;
reg                 twb111 ;
reg                 fa5888b ;
reg                 ayc445a ;
reg                 db222d0 ;
reg                 pu11686 ;
reg                 fp8b433 ;
reg                 zx5a19f ;
reg                 fad0cfe ;
reg                 xy867f2 ;
reg                 ir33f93 ;
reg [31:0]          mt9fc9c ;
reg [31:0]          jcfe4e5 ;
reg [31:0]          czf272b ;
reg [31:0]          tw9395d ;
reg [4:0]           je9caeb ;
reg [31:0]          goe575a ;
reg                 qi2bad1 ;
reg                 xw5d689 ;
reg [31:0]          tueb44b;
reg [31:0]          th5a25a;
reg [31:0]          icd12d6;
reg [31:0]          zm896b1;
reg [31:0]          yx4b58a ;
reg [31:0]          vv5ac55 ;
reg [31:0]          end62af ;
reg [31:0]          qvb157c ;
reg [8:0]           yz8abe4 ;
wire [31:0]         rt55f24 ;
wire [31:0]         rvaf926 ;
wire [31:0]         fa7c937 ;
wire [31:0]         vie49bb ;
wire [31:0]         co24dda ;
wire [31:0]         ir26ed0 ;
wire [31:0]         jr37685 ;
wire [31:0]         yzbb42f ;
wire [31:0]         rgda17d ;
wire [31:0]         tud0bea ;
wire [31:0]         gd85f52 ;
wire [31:0]         ba2fa95 ;
wire [31:0]         go7d4ab ;
wire [31:0]         ykea558 ;
wire [31:0]         fa52ac0 ;
wire                ld4a789 ;
wire                epab01d ;
wire                by580ec ;
wire                zkc0763 ;
wire                vx3b1a ;
wire                oh1d8d6 ;
wire                xjec6b4 ;
wire                by635a7 ;
wire                ym1ad3a ;
wire                czd69d1 ;
wire                epb4e8d ;
wire                jea746d ;
wire                ls3a36a ;
wire                qgd1b53 ;
wire                gq8da98 ;
wire                ea6d4c1 ;
wire                gb6a609 ;
wire                qg5304c ;
wire                gq98260 ;
wire                mec1301 ;
wire                vx9808 ;
wire                ui4c047 ;
wire                kd60238 ;
wire                xy11c5 ;
wire                ep8e2a ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ECRC

`else

`endif

`ifdef X1

`else

`endif

`ifdef X1

`else

`endif
reg ps47155;
reg [3 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg qv8d9e;
reg go46cf5;
reg yz367a8;
reg qv730f;
reg ie21f37;
reg vi7cdc0;
reg vve6e03;
reg jr3701f;
reg xyb80ff;
reg fac07fa;
reg rv3fd2;
reg gq1fe96;
reg meff4b1;
reg [D_WIDTH - 1 : 0] cob906a;
reg vvc8350;
reg sh41a86;
reg cb8f852;
reg vi7c294;
reg pse14a2;
reg ksa513;
reg lq52899;
reg [14 : 0] wyac993;
reg [127 : 0] rt64c98;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg [11 : 0] ria7421;
reg xy3a10a;
reg jcd0853;
reg fp8429a;
reg ou214d6;
reg coa6b1;
reg yk53589;
reg ux9ac48;
reg wjd6245;
reg epb122c;
reg fc89164;
reg tu48b22;
reg hb45913;
reg [31 : 0] kf2c89f;
reg [31 : 0] zx644fc;
reg [31 : 0] ph227e7;
reg [31 : 0] jr13f3e;
reg [4 : 0] ir9f9f7;
reg [31 : 0] fnfcfbd;
reg wje7def;
reg ou3ef7d;
reg [31 : 0] mrf7be8;
reg [31 : 0] ribdf44;
reg [31 : 0] meefa23;
reg [31 : 0] qg7d119;
reg [31 : 0] cze88c8;
reg [31 : 0] mr44644;
reg [31 : 0] ux23224;
reg [31 : 0] xl19124;
reg [8 : 0] vvc8927;
reg [31 : 0] wj4493f;
reg [31 : 0] ym249fd;
reg [31 : 0] aa24fe8;
reg [31 : 0] tj27f40;
reg [31 : 0] ri3fa07;
reg [31 : 0] kdfd03a;
reg [31 : 0] gbe81d4;
reg [31 : 0] xj40ea5;
reg [31 : 0] ir752f;
reg [31 : 0] ri3a97d;
reg [31 : 0] icd4bea;
reg [31 : 0] xla5f50;
reg [31 : 0] tw2fa86;
reg [31 : 0] ui7d433;
reg [31 : 0] goea198;
reg ng8c677;
reg fc86606;
reg ux33033;
reg gq9819d;
reg nec0ce9;
reg hd674b;
reg kf33a5f;
reg aa9d2fc;
reg the97e1;
reg wj4bf0f;
reg bl5f87c;
reg blfc3e7;
reg lqe1f3e;
reg aaf9f2;
reg fa7cf90;
reg wje7c83;
reg ou3e41d;
reg qtf20e9;
reg cb9074d;
reg do83a6d;
reg an1d36a;
reg the9b55;
reg rg4daae;
reg os6d573;
reg ip6ab99;
reg [2047:0] ux1852e;
wire [102:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ECRC

`else

`endif

`ifdef X1

`else

`endif

`ifdef X1

`else

`endif

localparam do14bae = 103,jra5d72 = 32'hfdffd88b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ECRC


`else


`endif


`ifdef X1


`else


`endif


`ifdef X1


`else


`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pu42c4 <= 1'b0;      qi21622 <= 1'b0;      twb111 <= 1'b0;      fa5888b <= 1'b0;      ayc445a <= 1'b0;      db222d0 <= 1'b0;      pu11686 <= 1'b0;      fp8b433 <= 1'b0;      qt60858  <= 14'h0000 ;      zx5a19f   <= 1'b0;      fad0cfe  <= 1'b0;      xy867f2 <= 1'b0;      ir33f93  <= 1'b0;   end   else  begin      pu42c4 <= vvc8350;      qi21622 <= xy3a10a;      twb111 <= jcd0853;      fa5888b <= fp8429a;      ayc445a <= ou214d6;      db222d0 <= coa6b1;      pu11686 <= yk53589;      fp8b433 <= sh41a86;      qt60858  <= yk4c10b ;      zx5a19f   <= su49ea2;      fad0cfe  <= fc893d4;      xy867f2 <= thd2c49 ;      ir33f93  <= je9624f ;   end
end


`ifdef X1

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tueb44b <= 32'h0000_0000;      th5a25a <= 32'h0000_0000;      icd12d6 <= 32'h0000_0000;      zm896b1 <= 32'h0000_0000;   end   else begin      case (1'b1)         vvc8350      : tueb44b[31:16] <= cob906a;         xy3a10a : tueb44b[15:0]  <= cob906a;         jcd0853 : th5a25a[31:16] <= cob906a;         fp8429a : th5a25a[15:0]  <= cob906a;         ou214d6 : icd12d6[31:16] <= cob906a;         coa6b1 : icd12d6[15:0]  <= cob906a;         yk53589 : zm896b1[31:16] <= cob906a;         ux9ac48 : zm896b1[15:0]  <= cob906a;      endcase   end
end

`endif



`ifdef X4

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tueb44b <= 32'h0000_0000;      th5a25a <= 32'h0000_0000;      icd12d6 <= 32'h0000_0000;      zm896b1 <= 32'h0000_0000;   end   else if (vvc8350) begin      tueb44b <= cob906a[63:32];      th5a25a <= cob906a[31:0];   end   else if (xy3a10a) begin      icd12d6 <= cob906a[63:32];      zm896b1 <= cob906a[31:0];   end
end

`endif




always @(psd0236, ps47155) begin   case ({ps47155, psd0236[3:0]})       5'h1_8  : yk4c10b = 12'h001 ;        5'h1_9  : yk4c10b = 12'h002 ;        5'h1_A  : yk4c10b = 12'h004 ;        5'h1_B  : yk4c10b = 12'h008 ;        5'h1_C  : yk4c10b = 12'h010 ;        5'h1_D  : yk4c10b = 12'h020 ;        5'h1_E  : yk4c10b = 12'h040 ;        5'h1_F  : yk4c10b = 12'h080 ;        5'h1_0  : yk4c10b = 12'h100 ;        5'h1_1  : yk4c10b = 12'h200 ;        5'h1_2  : yk4c10b = 12'h400 ;        5'h1_3  : yk4c10b = 12'h800 ;        default : yk4c10b = 12'h000 ;   endcase
end



assign  rt55f24 = {`USR_EXT_CAP_ADDR, `AER_CAP_VER, 16'h0001} ; 
assign  rvaf926 = wj4493f ;


assign mec1301 = (thd2c49 && ((~jr13f3e[13] && ~qtf20e9) || qtf20e9)) ;
assign vx9808  = (je9624f && ( ~qtf20e9 || qtf20e9)) ;
assign ui4c047     = (epb127a && ((~jr13f3e[13] && ~ou3e41d) || ou3e41d)) ;
assign kd60238        = (su49ea2 && (~aaf9f2 || aaf9f2)) ;
assign xy11c5       = (fc893d4 && ((~jr13f3e[13] && ~aaf9f2) || aaf9f2)) ;
assign ep8e2a          = (pse14a2 && ((~jr13f3e[13] && ~aaf9f2) || aaf9f2)) ;
always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      mt9fc9c <= 32'd0 ;   else if (qv8d9e && yz367a8 && yk4c10b[1]) begin      if (fp811b3[4]  && byfb25c[0]) mt9fc9c[4]  <= 1'b0 ;      if (fp811b3[5]  && byfb25c[0]) mt9fc9c[5]  <= 1'b0 ;      if (fp811b3[12] && byfb25c[1]) mt9fc9c[12] <= 1'b0 ;      if (fp811b3[13] && byfb25c[1]) mt9fc9c[13] <= 1'b0 ;      if (fp811b3[14] && byfb25c[1]) mt9fc9c[14] <= 1'b0 ;      if (fp811b3[15] && byfb25c[1]) mt9fc9c[15] <= 1'b0 ;      if (fp811b3[16] && byfb25c[2]) mt9fc9c[16] <= 1'b0 ;      if (fp811b3[17] && byfb25c[2]) mt9fc9c[17] <= 1'b0 ;      if (fp811b3[18] && byfb25c[2]) mt9fc9c[18] <= 1'b0 ;      if (fp811b3[19] && byfb25c[2]) mt9fc9c[19] <= 1'b0 ;      if (fp811b3[20] && byfb25c[2]) mt9fc9c[20] <= 1'b0 ;   end   else begin      if (jr3701f)      mt9fc9c[4]  <= 1'b1 ;      if (gq1fe96)   mt9fc9c[5]  <= 1'b1 ;      if (vi7c294 && ((~jr13f3e[13] && ~fa7cf90) || fa7cf90))                           mt9fc9c[12] <= 1'b1 ;      if (rv3fd2)  mt9fc9c[13] <= 1'b1 ;      if (ykfa589 && ((~jr13f3e[13] && ~wje7c83) || wje7c83))                           mt9fc9c[14] <= 1'b1 ;      if (do83a6d ||          an1d36a )                   mt9fc9c[15] <= 1'b1 ;      if (the9b55) mt9fc9c[16] <= 1'b1 ;      if (meff4b1)      mt9fc9c[17] <= 1'b1 ;


`ifdef X1
      if (ksa513 && sh41a86) mt9fc9c[18] <= 1'b1 ;


`else
      if (ksa513) mt9fc9c[18] <= 1'b1 ;


`endif
      if (cb8f852) mt9fc9c[19] <= 1'b1 ;      if (ip6ab99  ||  rg4daae ||  os6d573 )                           mt9fc9c[20] <= 1'b1 ;   end
end
assign fa7c937 = {11'h000, kf2c89f[20:12], 6'd0, kf2c89f[5:4], 4'd0} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jcfe4e5 <= 32'd0 ;   else if (qv8d9e && yz367a8 && yk4c10b[2]) begin


`ifdef ENDPOINT_COMP
         if (byfb25c[0]) jcfe4e5[4]   <= fp811b3[4] ;


`else
         if (byfb25c[0]) jcfe4e5[5:4]   <= fp811b3[5:4] ;


`endif
      if (byfb25c[1]) jcfe4e5[15:12] <= fp811b3[15:12] ;      if (byfb25c[2]) jcfe4e5[20:16] <= fp811b3[20:16] ;   end
end
assign vie49bb = {11'h000, zx644fc[20:12], 6'd0, zx644fc[5:4], 4'd0};

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin


`ifdef ENDPOINT_COMP
         bnbf015 <= 32'h0006_2010 ;


`else
         bnbf015 <= 32'h0006_2030 ;


`endif
   end   else if (qv8d9e && yz367a8 && yk4c10b[3]) begin


`ifdef ENDPOINT_COMP
         if (byfb25c[0]) bnbf015[4]   <= fp811b3[4] ;


`else
         if (byfb25c[0]) bnbf015[5:4]   <= fp811b3[5:4] ;


`endif
      if (byfb25c[1]) bnbf015[15:12] <= fp811b3[15:12] ;      if (byfb25c[2]) bnbf015[20:16] <= fp811b3[20:16] ;   end
end
assign co24dda = {11'h000, bnbf015[20:12], 6'd0, bnbf015[5:4], 4'd0};

always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      czf272b <= 32'd0 ;   else if (!qv730f)      czf272b <= 32'd0 ;   else if (qv8d9e && yz367a8 && yk4c10b[4]) begin      if (fp811b3[0]  && byfb25c[0]) czf272b[0]  <= 1'b0 ;      if (fp811b3[6]  && byfb25c[0]) czf272b[6]  <= 1'b0 ;      if (fp811b3[7]  && byfb25c[0]) czf272b[7]  <= 1'b0 ;      if (fp811b3[8]  && byfb25c[1]) czf272b[8]  <= 1'b0 ;      if (fp811b3[12] && byfb25c[1]) czf272b[12] <= 1'b0 ;      if (fp811b3[13] && byfb25c[1]) czf272b[13] <= 1'b0 ;   end   else begin      if (ie21f37)      czf272b[0]  <= 1'b1 ;      if (vi7cdc0)   czf272b[6]  <= 1'b1 ;      if (vve6e03)  czf272b[7]  <= 1'b1 ;      if (xyb80ff) czf272b[8]  <= 1'b1 ;      if (fac07fa) czf272b[12] <= 1'b1 ;      if (ng8c677)    czf272b[13] <= 1'b1 ;   end
end
assign ir26ed0 = {18'd0, ph227e7[13:12], 3'd0, ph227e7[8:6], 5'd0, ph227e7[0]} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      tw9395d <= 32'h0000_2000 ;   else if (!qv730f)      tw9395d <= 32'h0000_2000 ;   else if (qv8d9e && yz367a8 && yk4c10b[5]) begin      if (byfb25c[0]) tw9395d[0]     <= fp811b3[0] ;      if (byfb25c[0]) tw9395d[7:6]   <= fp811b3[7:6] ;      if (byfb25c[1]) tw9395d[8]     <= fp811b3[8] ;      if (byfb25c[1]) tw9395d[13:12] <= fp811b3[13:12] ;   end
end
assign jr37685 = {18'd0, jr13f3e[13:12], 3'd0, jr13f3e[8:6], 5'd0, jr13f3e[0]} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      xw5d689 <= 1'b0 ;   else      xw5d689 <= wje7def ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      je9caeb         <= 5'd1 ;      goe575a     <= 32'd0 ;      qi2bad1 <= 1'b0 ;   end   else if (|fnfcfbd[20:4] == 1'b0 ) begin      case (1'b1)         (kf2c89f[20] & ~zx644fc[20])   : begin            je9caeb <= 5'd20 ;            goe575a[20] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[19] & ~zx644fc[19])   : begin            je9caeb <= 5'd19 ;            goe575a[19] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[18] & ~zx644fc[18])   : begin            je9caeb <= 5'd18 ;            goe575a[18] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[17] & ~zx644fc[17])   : begin            je9caeb <= 5'd17 ;            goe575a[17] <= 1'b1 ;         end         (kf2c89f[16] & ~zx644fc[16])   : begin            je9caeb <= 5'd16 ;            goe575a[16] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[15] & ~zx644fc[15])   : begin            je9caeb <= 5'd15 ;            goe575a[15] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[14] & ~zx644fc[14])   : begin            je9caeb <= 5'd14 ;            goe575a[14] <= 1'b1 ;         end         (kf2c89f[13] & ~zx644fc[13])   : begin            je9caeb <= 5'd13 ;            goe575a[13] <= 1'b1 ;         end         (kf2c89f[12] & ~zx644fc[12])   : begin            je9caeb <= 5'd12 ;            goe575a[12] <= 1'b1 ;            qi2bad1 <= 1'b1 ;         end         (kf2c89f[5] & ~zx644fc[5])   : begin            je9caeb <= 5'd5 ;            goe575a[5] <= 1'b1 ;         end         (kf2c89f[4] & ~zx644fc[4])   : begin            je9caeb <= 5'd4 ;            goe575a[4] <= 1'b1 ;         end         default            : begin            je9caeb <= 5'd1 ;            goe575a[1] <= 1'b1 ;         end      endcase   end   else if (|fnfcfbd[20:4] == 1'b1 ) begin      case (1'b1)         (!kf2c89f[20] & fnfcfbd[20])   : begin            je9caeb <= 5'd1 ;            goe575a[20] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[19] & fnfcfbd[19]) : begin            je9caeb <= 5'd1 ;            goe575a[19] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[18] & fnfcfbd[18]) : begin            je9caeb <= 5'd1 ;            goe575a[18] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[17] & fnfcfbd[17])      : begin            je9caeb <= 5'd1 ;            goe575a[17] <= 1'b0 ;         end         (!kf2c89f[16] & fnfcfbd[16])     : begin            je9caeb <= 5'd1 ;            goe575a[16] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[15] & fnfcfbd[15])    : begin            je9caeb <= 5'd1 ;            goe575a[15] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[14] & fnfcfbd[14])      : begin            je9caeb <= 5'd1 ;            goe575a[14] <= 1'b0 ;         end         (!kf2c89f[13] & fnfcfbd[13])  : begin            je9caeb <= 5'd1 ;            goe575a[13] <= 1'b0 ;         end         (!kf2c89f[12] & fnfcfbd[12]) : begin            je9caeb <= 5'd1 ;            goe575a[12] <= 1'b0 ;            qi2bad1 <= 1'b0 ;         end         (!kf2c89f[5] & fnfcfbd[5])   : begin            je9caeb <= 5'd1 ;            goe575a[5] <= 1'b0 ;         end         (!kf2c89f[4] & fnfcfbd[4])      : begin            je9caeb <= 5'd1 ;            goe575a[4] <= 1'b0 ;         end         default            : begin            je9caeb         <= ir9f9f7 ;            goe575a     <= fnfcfbd ;            qi2bad1 <= wje7def ;         end      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      yz8abe4 <= 9'd0 ;   else if (qv8d9e && yz367a8 && yk4c10b[6]) begin      yz8abe4[6] <= fp811b3[6] ;      yz8abe4[8] <= fp811b3[8] ;   end   else      yz8abe4 <= vvc8927 ;
end

`ifdef ECRC
   assign yzbb42f = {23'd0, vvc8927[8], 1'b1, vvc8927[6], 1'b1, ir9f9f7} ;

`else
   assign yzbb42f = {23'd0, vvc8927[8], 1'b0, vvc8927[6], 1'b0, ir9f9f7} ;

`endif

assign ecrc_gen_enb = vvc8927[6] ;
assign ecrc_chk_enb = vvc8927[8] ;



`ifdef X1
   assign vvf97cb = ((sh41a86 && !wje7def) || (wjd6245 && !ou3ef7d));

`else
   assign vvf97cb = (sh41a86 && !wje7def);

`endif

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      yx4b58a <= 32'd0 ;      vv5ac55 <= 32'd0 ;      end62af <= 32'd0 ;      qvb157c <= 32'd0 ;   end   else if (!wje7def &&            ((do83a6d & ~zx644fc[15]) ||             (an1d36a & ~zx644fc[15]) ||             (the9b55 & ~zx644fc[16]) ||             (rg4daae & ~zx644fc[20]) ||     (os6d573 & ~zx644fc[20]))) begin      yx4b58a <= rt64c98[127:96] ;      vv5ac55 <= rt64c98[95:64] ;      end62af <= rt64c98[63:32] ;      qvb157c <= rt64c98[31:0] ;   end   else if (vvf97cb &&    (blfc3e7 || nec0ce9  ||            (lqe1f3e && !rg4daae && !os6d573)  || bl5f87c )) begin      yx4b58a <= mrf7be8 ;      vv5ac55 <= ribdf44 ;      if (xy3a10a) begin


`ifdef X1
         end62af <= meefa23 ;         qvb157c <= qg7d119 ;


`else
         end62af <= cob906a[63:32] ;         qvb157c <= cob906a[31:0] ;


`endif
      end      else begin         end62af <= meefa23 ;         qvb157c <= qg7d119 ;      end   end
end
assign rgda17d = cze88c8 ;
assign tud0bea = mr44644 ;
assign gd85f52 = ux23224 ;
assign ba2fa95 = xl19124 ;

always @(*) begin   case (1'b1)      ria7421[0]  : cmea8a6 = ym249fd ;      ria7421[1]  : cmea8a6 = aa24fe8 ;      ria7421[2]  : cmea8a6 = tj27f40 ;      ria7421[3]  : cmea8a6 = ri3fa07 ;      ria7421[4]  : cmea8a6 = kdfd03a ;      ria7421[5]  : cmea8a6 = gbe81d4 ;      ria7421[6]  : cmea8a6 = xj40ea5 ;      ria7421[7]  : cmea8a6 = ir752f ;      ria7421[8]  : cmea8a6 = ri3a97d ;      ria7421[9]  : cmea8a6 = icd4bea ;      ria7421[10] : cmea8a6 = xla5f50 ;      ria7421[11] : cmea8a6 = tw2fa86 ;      default           : cmea8a6 = 32'd0 ;   endcase
end


assign by580ec      = jr3701f                                    & ~zx644fc[4] ;
assign zkc0763   = gq1fe96                                 & ~zx644fc[5] ;
assign vx3b1a = (vi7c294 &                     ((~jr13f3e[13] & ~fa7cf90) |      fa7cf90))                       & ~zx644fc[12] ;
assign oh1d8d6  = rv3fd2                                & ~zx644fc[13] ;
assign xjec6b4      = (ykfa589 &&                     ((~jr13f3e[13] & ~wje7c83) |      wje7c83))                            & ~zx644fc[14] ;
assign by635a7    = (do83a6d | an1d36a )   & ~zx644fc[15] ;
assign ym1ad3a     = the9b55                               & ~zx644fc[16] ;
assign czd69d1      = meff4b1                                    & ~zx644fc[17] ;
assign epb4e8d = (ksa513 & sh41a86)                & ~zx644fc[18] ;
assign jea746d = cb8f852                               & ~zx644fc[19] ;
assign ls3a36a   = (ip6ab99  | rg4daae | os6d573 ) & ~zx644fc[20] ;

assign uvfd6ea      = bnbf015[4] ;
assign al5baa2   = bnbf015[5] ;
assign gq8da98 = bnbf015[12] ;
assign baa2bcd  = bnbf015[13] ;
assign ea6d4c1      = bnbf015[14] ;
assign qg5304c    = bnbf015[15] ;
assign gb6a609     = bnbf015[16] ;
assign wl33d95      = bnbf015[17] ;
assign fnf6567 = bnbf015[18] ;
assign gd959fa = bnbf015[19] ;
assign qgd1b53   = bnbf015[20] ;


assign sufa80b      = ie21f37      & ~jr13f3e[0] ;
assign vk160f   = vi7cdc0   & ~jr13f3e[6] ;
assign kqc1e9b  = vve6e03  & ~jr13f3e[7] ;
assign end364d = xyb80ff & ~jr13f3e[8] ;
assign wjc9b35 = fac07fa & ~jr13f3e[12] ;
assign zk66b5a    = ng8c677    & ~jr13f3e[13] ;


assign ld4a789 = (pse14a2   & ~aaf9f2)   |                     (fc893d4       & ~aaf9f2)   |                     (thd2c49 & ~qtf20e9) |                     (vi7c294 & ~fa7cf90) |                     (ykfa589      & ~wje7c83)      |                     (epb127a     & ~ou3e41d)     ;
assign epab01d = (~zx644fc[20]   & (os6d573 || ip6ab99) & ~aaf9f2 & wyac993[3])   |                      (~zx644fc[15]     & do83a6d & ~qtf20e9)    |                      (nec0ce9 & ~fa7cf90) |                      (kf33a5f      & ~wje7c83)      |                      (the97e1     & ~ou3e41d)     ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ftl_err_out  <= 1'd0 ;      nftl_err_out <= 1'd0 ;      cor_err_out  <= 1'd0 ;   end   else begin      ftl_err_out <=                 (((ux33033      & uvfd6ea)      |                   (gq9819d   & al5baa2)   |                   (nec0ce9 & fa7cf90) |                   (hd674b  & baa2bcd)  |                   (kf33a5f      & wje7c83)      |                   (aa9d2fc    & qtf20e9)    |                   (the97e1     & ou3e41d)     |                   (wj4bf0f      & wl33d95)      |                   (bl5f87c & fnf6567) |                   (blfc3e7 & gd959fa) |                   (lqe1f3e   & aaf9f2 & wyac993[3])                  ) & (wyac993[2] | lq52899)                 ) ;      nftl_err_out <=                  (((ux33033      & ~uvfd6ea)      |                    (gq9819d   & ~al5baa2)   |                    (hd674b  & ~baa2bcd)  |                    (wj4bf0f      & ~wl33d95)      |                    (bl5f87c & ~fnf6567) |                    (blfc3e7 & ~gd959fa) |                    (aa9d2fc    & je9624f & ~qtf20e9) |                    (lqe1f3e   & su49ea2 & ~aaf9f2 & wyac993[3])                   ) & (wyac993[1] | lq52899)                  ) ;      cor_err_out <=                 ((sufa80b      |                   vk160f   |                   kqc1e9b  |                   end364d |                   wjc9b35 |                   (fc86606 & ~jr13f3e[13])                  ) & wyac993[0]                 ) ;   end
end


always@* begin ps47155<=xjc2975[0];psd0236<={reg_addr>>1,xjc2975[1]};fp811b3<={reg_wdata>>1,xjc2975[2]};byfb25c<={reg_wdata_be>>1,xjc2975[3]};qv8d9e<=xjc2975[4];go46cf5<=xjc2975[5];yz367a8<=xjc2975[6];qv730f<=xjc2975[7];ie21f37<=xjc2975[8];vi7cdc0<=xjc2975[9];vve6e03<=xjc2975[10];jr3701f<=xjc2975[11];xyb80ff<=xjc2975[12];fac07fa<=xjc2975[13];rv3fd2<=xjc2975[14];gq1fe96<=xjc2975[15];meff4b1<=xjc2975[16];cob906a<={tlpdec_data>>1,xjc2975[17]};vvc8350<=xjc2975[18];sh41a86<=xjc2975[19];cb8f852<=xjc2975[20];vi7c294<=xjc2975[21];pse14a2<=xjc2975[22];ksa513<=xjc2975[23];lq52899<=xjc2975[24];wyac993<={mg8d329>>1,xjc2975[25]};rt64c98<={err_tlp_header>>1,xjc2975[26]};ykfa589<=xjc2975[27];thd2c49<=xjc2975[28];je9624f<=xjc2975[29];epb127a<=xjc2975[30];fc893d4<=xjc2975[31];su49ea2<=xjc2975[32];ria7421<={qt60858>>1,xjc2975[33]};xy3a10a<=xjc2975[34];jcd0853<=xjc2975[35];fp8429a<=xjc2975[36];ou214d6<=xjc2975[37];coa6b1<=xjc2975[38];yk53589<=xjc2975[39];ux9ac48<=xjc2975[40];wjd6245<=xjc2975[41];epb122c<=xjc2975[42];fc89164<=xjc2975[43];tu48b22<=xjc2975[44];hb45913<=xjc2975[45];kf2c89f<={mt9fc9c>>1,xjc2975[46]};zx644fc<={jcfe4e5>>1,xjc2975[47]};ph227e7<={czf272b>>1,xjc2975[48]};jr13f3e<={tw9395d>>1,xjc2975[49]};ir9f9f7<={je9caeb>>1,xjc2975[50]};fnfcfbd<={goe575a>>1,xjc2975[51]};wje7def<=xjc2975[52];ou3ef7d<=xjc2975[53];mrf7be8<={tueb44b>>1,xjc2975[54]};ribdf44<={th5a25a>>1,xjc2975[55]};meefa23<={icd12d6>>1,xjc2975[56]};qg7d119<={zm896b1>>1,xjc2975[57]};cze88c8<={yx4b58a>>1,xjc2975[58]};mr44644<={vv5ac55>>1,xjc2975[59]};ux23224<={end62af>>1,xjc2975[60]};xl19124<={qvb157c>>1,xjc2975[61]};vvc8927<={yz8abe4>>1,xjc2975[62]};wj4493f<={rt55f24>>1,xjc2975[63]};ym249fd<={rvaf926>>1,xjc2975[64]};aa24fe8<={fa7c937>>1,xjc2975[65]};tj27f40<={vie49bb>>1,xjc2975[66]};ri3fa07<={co24dda>>1,xjc2975[67]};kdfd03a<={ir26ed0>>1,xjc2975[68]};gbe81d4<={jr37685>>1,xjc2975[69]};xj40ea5<={yzbb42f>>1,xjc2975[70]};ir752f<={rgda17d>>1,xjc2975[71]};ri3a97d<={tud0bea>>1,xjc2975[72]};icd4bea<={gd85f52>>1,xjc2975[73]};xla5f50<={ba2fa95>>1,xjc2975[74]};tw2fa86<={go7d4ab>>1,xjc2975[75]};ui7d433<={ykea558>>1,xjc2975[76]};goea198<={fa52ac0>>1,xjc2975[77]};ng8c677<=xjc2975[78];fc86606<=xjc2975[79];ux33033<=xjc2975[80];gq9819d<=xjc2975[81];nec0ce9<=xjc2975[82];hd674b<=xjc2975[83];kf33a5f<=xjc2975[84];aa9d2fc<=xjc2975[85];the97e1<=xjc2975[86];wj4bf0f<=xjc2975[87];bl5f87c<=xjc2975[88];blfc3e7<=xjc2975[89];lqe1f3e<=xjc2975[90];aaf9f2<=xjc2975[91];fa7cf90<=xjc2975[92];wje7c83<=xjc2975[93];ou3e41d<=xjc2975[94];qtf20e9<=xjc2975[95];cb9074d<=xjc2975[96];do83a6d<=xjc2975[97];an1d36a<=xjc2975[98];the9b55<=xjc2975[99];rg4daae<=xjc2975[100];os6d573<=xjc2975[101];ip6ab99<=xjc2975[102];end
always@* begin ux1852e[2047]<=reg_addr[0];ux1852e[2046]<=reg_wdata[0];ux1852e[2045]<=go7d4ab[0];ux1852e[2044]<=reg_wdata_be[0];ux1852e[2042]<=ykea558[0];ux1852e[2040]<=reg_wr;ux1852e[2036]<=fa52ac0[0];ux1852e[2032]<=reg_rd;ux1852e[2025]<=ld4a789;ux1852e[2017]<=ecrc_ok;ux1852e[2002]<=epab01d;ux1852e[1992]<=mtabd53;ux1852e[1987]<=phy_link_up;ux1852e[1957]<=by580ec;ux1852e[1947]<=gb6a609;ux1852e[1936]<=tlpdec_data[0];ux1852e[1927]<=dfrm_perr;ux1852e[1919]<=rgda17d[0];ux1852e[1913]<=ls3a36a;ux1852e[1873]<=twb111;ux1852e[1867]<=zkc0763;ux1852e[1851]<=vie49bb[0];ux1852e[1849]<=qvb157c[0];ux1852e[1847]<=xw5d689;ux1852e[1846]<=qg5304c;ux1852e[1825]<=tlpdec_st;ux1852e[1807]<=rxtp_bad_tlp;ux1852e[1791]<=tud0bea[0];ux1852e[1779]<=qgd1b53;ux1852e[1767]<=yx4b58a[0];ux1852e[1733]<=kd60238;ux1852e[1698]<=fa5888b;ux1852e[1687]<=vx3b1a;ux1852e[1655]<=co24dda[0];ux1852e[1651]<=yz8abe4[0];ux1852e[1646]<=tueb44b[0];ux1852e[1644]<=gq98260;ux1852e[1602]<=tlpdec_end;ux1852e[1567]<=cb2c67b;ux1852e[1535]<=gd85f52[0];ux1852e[1510]<=gq8da98;ux1852e[1502]<=epb4e8d;ux1852e[1486]<=vv5ac55[0];ux1852e[1418]<=xy11c5;ux1852e[1348]<=ayc445a;ux1852e[1326]<=oh1d8d6;ux1852e[1296]<=pu11686;ux1852e[1287]<=cmpltr_abort_np;ux1852e[1263]<=ir26ed0[0];ux1852e[1255]<=rt55f24[0];ux1852e[1244]<=th5a25a[0];ux1852e[1240]<=mec1301;ux1852e[1211]<=by635a7;ux1852e[1157]<=tlpdec_ecrc_err;ux1852e[1088]<=zx5a19f;ux1852e[1086]<=ie5434;ux1852e[1064]<=tlpdec_malf_tlp;ux1852e[1053]<=unexp_cmpln;ux1852e[1038]<=mt9fc9c[0];ux1852e[1023]<=reg_sel_aer;ux1852e[1022]<=ba2fa95[0];ux1852e[996]<=dmd57aa;ux1852e[973]<=ea6d4c1;ux1852e[959]<=yzbb42f[0];ux1852e[956]<=jea746d;ux1852e[936]<=qi21622;ux1852e[925]<=fa7c937[0];ux1852e[924]<=end62af[0];ux1852e[923]<=qi2bad1;ux1852e[883]<=zm896b1[0];ux1852e[866]<=ui4c047;ux1852e[788]<=ep8e2a;ux1852e[751]<=czd69d1;ux1852e[648]<=db222d0;ux1852e[643]<=cmpln_tout;ux1852e[605]<=xjec6b4;ux1852e[544]<=fp8b433;ux1852e[532]<=tlpdec_us_req;ux1852e[526]<=cmpltr_abort_p;ux1852e[519]<=ir33f93;ux1852e[498]<=ng3aaf5;ux1852e[479]<=jr37685[0];ux1852e[468]<=pu42c4;ux1852e[462]<=rvaf926[0];ux1852e[461]<=goe575a[0];ux1852e[441]<=icd12d6[0];ux1852e[433]<=vx9808;ux1852e[375]<=ym1ad3a;ux1852e[321]<=err_tlp_header[0];ux1852e[266]<=tlpdec_pois_tlp;ux1852e[259]<=xy867f2;ux1852e[249]<=ksa936e;ux1852e[234]<=qt60858[0];ux1852e[230]<=je9caeb[0];ux1852e[160]<=mg8d329[0];ux1852e[129]<=fad0cfe;ux1852e[124]<=mrd9d4b;ux1852e[117]<=ur_p_ext;ux1852e[115]<=tw9395d[0];ux1852e[80]<=rief25;ux1852e[58]<=ur_np_ext;ux1852e[57]<=czf272b[0];ux1852e[28]<=jcfe4e5[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_phbf984 #(
   parameter D_WIDTH  = 64 )
   (
   
   
   input wire [31:0]      yz1d92d , 
   input wire [31:0]      zxec96c , 
   input wire [31:0]      pf64b66 ,
   input wire [31:0]      INIT_REG_010 , 
   input wire [31:0]      INIT_REG_014 , 
   input wire [31:0]      INIT_REG_018 , 
   input wire [31:0]      INIT_REG_01C , 
   input wire [31:0]      INIT_REG_020 , 
   input wire [31:0]      INIT_REG_024 , 
   input wire [31:0]      zm964ea , 
   input wire [31:0]      bab2752 , 
   input wire [31:0]      ls93a93 , 
   input wire [31:0]      wy9d49b , 
   input wire             load_id ,            
   
   input wire [31:0]      bl40242 , 
   input wire [31:0]      je1216 , 
   input wire [9:0]       xl90b2 , 
   input wire [9:0]       ho48596 , 
   input wire [9:0]       jc42cb2 , 
   input wire [9:0]       xl16592 , 
   input wire [9:0]       lsb2c96 , 
   input wire [9:0]       je964b2 , 
   input wire [9:0]       dob2592 , 
   input wire [9:0]       aa92c93 , 
   
   input wire [31:0]      ng96499 , 
   
   input wire [31:0]      bl40756 , 
   input wire [31:0]      lf3ab6 , 
   input wire [31:0]      mt1d5b6 , 
   input wire [31:0]      iceadb5 ,
   `ifdef GEN2
      input wire [31:0]   kq56da9 , 
   `endif
   
   input wire [31:0]      czf88d2 , 
   input wire [31:0]      wwc4695 , 

   
   `ifdef CFG_VCC
      input wire [31:0]      ho57539 , 
   `endif

   input wire                 sys_clk ,         
   input wire                 rst_n ,           

   input wire [D_WIDTH-1:0]   tlp_data ,        
   input wire                 tlp_st ,          
   input wire                 tlp_end ,         
   input wire                 tlp_erly_st ,     
   input wire [7:0]           tx_ca_cplh ,      
   input wire                 tx_ca_cplh_infi , 

   
   input wire                 phy_link_up ,     
   input wire                 qtf80af ,   
   input wire                 byc057c ,
   input wire [2:0]           kf2be2 ,       
   input wire                 dfrm_perr ,       
   input wire                 dl_active ,       


   
   input wire                 rxtp_bad_tlp,    
   input wire                 cb2c67b,   
   input wire                 ie5434,      
   input wire                 mrd9d4b,  
   input wire                 ksa936e , 
   input wire                 ng3aaf5 , 
   input wire                 mtabd53 ,     
   input wire                 dmd57aa ,  
   `ifdef CFG_VCC
      input wire [`NUM_VC -1:0]  vka2183 ,
   `endif

   `ifdef ECRC
      input wire              tlp_ecrc_ok ,    
      `ifdef AER
         output wire          ecrc_gen_enb ,   
         output wire          ecrc_chk_enb ,   
      `else
         input wire           ecrc_gen_enb ,   
         input wire           ecrc_chk_enb ,   
      `endif
   `endif

   
   `ifdef AER
      input wire [127:0]      err_tlp_header , 
                                               
   `endif
   input wire [15:0]          byebf11 ,     
   input wire                 cmpln_tout ,     
   input wire                 cmpltr_abort_np ,
   input wire                 cmpltr_abort_p , 
   input wire                 unexp_cmpln ,    
   input wire                 ur_np_ext ,      
   input wire                 ur_p_ext ,       
   input wire                 np_req_pend ,    
   input wire                 pme_status ,     
   input wire                 ym31141,  
   input wire                 ie88a08,    
   input wire                 xj45041,    
   `ifdef GEN2
      input wire              ir17e02 ,            
      input wire              drop_resp ,      
   `endif
   
   input wire                 term_all_cfg ,   

   
   input wire                 cfg_rmux_rd ,    

   
   input wire [D_WIDTH-1:0]   tlpdec_data ,
   input wire                 tlpdec_st ,
   input wire                 tlpdec_end ,
   input wire                 tlpdec_ecrc_err , 
   input wire                 tlpdec_pois_tlp , 
   input wire                 tlpdec_us_req ,   
   input wire                 tlpdec_malf_tlp , 
   input wire                 s2e_cnt_err ,     

   
   input wire [11:0]          ADR_I ,          
   input wire [31:0]          DAT_I ,          
   input wire                 WE_I ,           
   input wire                 STB_I ,          

   output wire [31:0]         RDAT_O ,         
   output wire                ACK_O ,          

   
   output wire [31:0]         jp5f88b ,         
   output wire [31:0]         nrfc45f ,         
   output wire [31:0]         ene22fe ,         
   output wire [31:0]         xy117f4 ,         
   output wire [31:0]         rv8bfa3 ,         
   output wire [31:0]         nr5fd1e ,         
   output wire [31:0]         rgfe8f7 ,         

   output wire [31:0]         zmb72e8 ,     
   output wire [31:0]         ukb9743 ,     
   output wire [31:0]         gocba18 ,     
   output wire [31:0]         by5d0c0 ,     
   output wire [31:0]         ale8603 ,     
   output wire [31:0]         yk4301d ,     
   output wire [31:0]         qv180e9 ,     
   output wire                cfg_hit ,         
   output wire                nph_processed ,   
   output wire                npd_processed ,   

   output wire [7:0]          bus_num ,         
   output wire [4:0]          dev_num ,         
   output wire [2:0]          func_num ,        
   output wire [1:0]          pm_power_state ,  
   output wire                pme_en ,          
   output wire [2:0]          mm_enable ,       
   output wire                msi_enable ,      
   output wire [31:0]         mes_laddr ,       
   output wire [31:0]         mes_uaddr ,       
   output wire [15:0]         mes_data ,        
   output wire [5:0]          cmd_reg_out ,     
   output wire [14:0]         dev_cntl_out ,    
   output wire [7:0]          lnk_cntl_out ,    
   output wire                ftl_err_out ,     
   output wire                nftl_err_out ,    
   output wire                cor_err_out ,     
   `ifdef GEN2
      output wire [4:0]       dev_cntl_2_out ,  
      output wire             initiate_flr ,    
   `endif

   output wire [2:0]          yk535f1 ,    
   output wire                ux9af88 ,      
   output wire                xjd7c45 ,    
   output wire                qvbe22f ,     
   output wire [2:0]          cfgcs_losel ,     

   `ifdef CFG_VCC 
      output wire [2:0]          co10c1a ,   
      output wire [2:0]          zm860d0 , 
      output wire                xy30683 ,  
      output wire [2:0]          cfgec_vcasel , 
      `ifdef EN_VC0
         output wire [7:0]       mg1a0d3 ,    
         output wire [2:0]       fad0698 ,    
         output wire             ba834c3 ,   
      `endif
      `ifdef EN_VC1
         output wire [7:0]       mg1a61b ,    
         output wire [2:0]       gbd30d8 ,    
         output wire             ec986c4 ,   
      `endif
      `ifdef EN_VC2
         output wire [7:0]       yxc3621 ,    
         output wire [2:0]       pu1b10d ,    
         output wire             fnd886a ,   
      `endif
      `ifdef EN_VC3
         output wire [7:0]       ayc4356 ,    
         output wire [2:0]       aa21ab0 ,    
         output wire             sjd580 ,   
      `endif
      `ifdef EN_VC4
         output wire [7:0]       uv6ac04 ,    
         output wire [2:0]       cm56025 ,    
         output wire             bnb0128 ,   
      `endif
      `ifdef EN_VC5
         output wire [7:0]       ir80946 ,    
         output wire [2:0]       ri4a35 ,    
         output wire             ls251ab ,   
      `endif
      `ifdef EN_VC6
         output wire [7:0]       hd28d5b ,    
         output wire [2:0]       yk46ade ,    
         output wire             ls356f0 ,   
      `endif
      `ifdef EN_VC7
         output wire [7:0]       kfab782 ,    
         output wire [2:0]       yx5bc14 ,    
         output wire             ayde0a5 ,   
      `endif
   `endif

   output wire                cfg_rmux_req ,    
   output wire [D_WIDTH-1:0]  cfg_rmux_data ,   
   `ifdef X4
      output wire             cb8afa7 ,   
   `endif
   output wire                cfg_rmux_ae          ) ;
reg           anbe9e3 ;
reg           dmf4f1c ;
reg           baa78e3 ;
reg           nt3d514 ;
wire [5:0]    reg_addr ;
wire [31:0]   reg_wdata ;
wire [3:0]    reg_wdata_be ;
wire [15:0]   req_id ;
wire          reg_id_hit;
wire [7:0]    tag ;
wire [2:0]    tc ;
wire [31:0]   reg_rdata0 ;
wire [31:0]   reg_rdata1 ;
wire [31:0]   reg_rdata2 ;
wire [31:0]   reg_rdata3 ;
wire [31:0]   reg_rdata4 ;
wire [31:0]   reg_rdata5 ;
wire          tj9e451 ;
wire          us_req_int ;
wire [31:0]   bnbf015 ;
wire          sj8a3af ;
wire          yx51d7d ;
wire          vx8ebec ;
wire          sh75f66 ;
wire          tjafb35 ;
wire          ui7d9af ;

`ifdef AER

`else

`endif

`ifdef X4

`define CFG_DEC cfg_dec1

`define CFG_RESP cfg_resp

`endif

`ifdef X1

`define CFG_DEC pcie_x1_top_cfg_dec1_x1

`define CFG_RESP pcie_x1_top_cfg_resp_x1

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef AER

`else

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif 

`ifdef AER 

`endif 

`ifdef GEN2

`endif

`ifdef CFG_VCC 

`else 

`endif 

`ifdef AER 

`else 

`endif 

`ifdef ECRC

`endif

`ifdef X4 

`endif
reg [31 : 0] pu250cf;
reg [31 : 0] nt2867b;
reg [31 : 0] yk433df;
reg [31 : 0] rv19ef9;
reg [31 : 0] tucf7ce;
reg [31 : 0] hb7be73;
reg [31 : 0] hodf39e;
reg [31 : 0] thf9cf2;
reg [31 : 0] cmce797;
reg [31 : 0] zk73cb9;
reg [31 : 0] tj9e5ca;
reg [31 : 0] kdf2e56;
reg [31 : 0] aa972b4;
reg ri14e35;
reg [31 : 0] lsb89df;
reg [31 : 0] qgc4efb;
reg [9 : 0] fp277d9;
reg [9 : 0] ec3bece;
reg [9 : 0] jcdf670;
reg [9 : 0] hofb382;
reg [9 : 0] mrd9c13;
reg [9 : 0] eace09c;
reg [9 : 0] qt704e1;
reg [9 : 0] wy8270c;
reg [31 : 0] bn13861;
reg [31 : 0] je89e72;
reg [31 : 0] fn4f393;
reg [31 : 0] xw79c9f;
reg [31 : 0] icce4fb;
reg [31 : 0] ec8d681;
reg [31 : 0] nr6b408;
reg [D_WIDTH - 1 : 0] ux266cd;
reg wl3366c;
reg zz9b365;
reg gbd9b2e;
reg [7 : 0] bn8bfc6;
reg pf5fe36;
reg qv730f;
reg ir1d90f;
reg blec87c;
reg [2 : 0] fn643e6;
reg ie21f37;
reg cof9b8;
reg vi7cdc0;
reg vve6e03;
reg jr3701f;
reg xyb80ff;
reg fac07fa;
reg rv3fd2;
reg meff4b1;
reg gq1fe96;
reg [15 : 0] zz38a98;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg zx4f511;
reg wlb1ee9;
reg sud447c;
reg baa23e1;
reg zm11f0a;
reg tu6cba7;
reg nr717f8;
reg [D_WIDTH - 1 : 0] cob906a;
reg vvc8350;
reg sh41a86;
reg cb8f852;
reg vi7c294;
reg pse14a2;
reg ksa513;
reg pu9cf2a;
reg [11 : 0] sh65d3a;
reg [31 : 0] ec2e9d4;
reg hb74ea1;
reg hqa750f;
reg lq52b4a;
reg yz95a53;
reg mgb3d45;
reg [5 : 0] psd0236;
reg [31 : 0] fp811b3;
reg [3 : 0] byfb25c;
reg [15 : 0] th5ff14;
reg ri99171;
reg [7 : 0] meff8a7;
reg [2 : 0] xjfc538;
reg [31 : 0] pua71aa;
reg [31 : 0] jr38d52;
reg [31 : 0] czc6a97;
reg [31 : 0] ri354bc;
reg [31 : 0] hdaa5e2;
reg [31 : 0] zk52f16;
reg hdb09ec;
reg jr84f67;
reg [31 : 0] bn27b3f;
reg fp3d9ff;
reg xjecfff;
reg ww67ffe;
reg pu3fff1;
reg sufff8a;
reg qgffc50;
reg [2047:0] ux1852e;
wire [101:0] xjc2975;

`ifdef AER

`else

`endif

`ifdef X4

`define CFG_DEC cfg_dec1

`define CFG_RESP cfg_resp

`endif

`ifdef X1

`define CFG_DEC pcie_x1_top_cfg_dec1_x1

`define CFG_RESP pcie_x1_top_cfg_resp_x1

`endif


`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef AER

`endif


`ifdef GEN2

`endif


`ifdef GEN2

`endif


`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef AER

`else

`endif


`ifdef CFG_VCC


`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif 

`ifdef AER 


`endif 


`ifdef GEN2

`endif

`ifdef CFG_VCC 

`else 

`endif 

`ifdef AER 

`else 

`endif 

`ifdef ECRC

`endif

`ifdef X4 

`endif

localparam do14bae = 102,jra5d72 = 32'hfdfff40b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef AER


`else


`endif


`ifdef X4


`define CFG_DEC cfg_dec1


`define CFG_RESP cfg_resp


`endif


`ifdef X1


`define CFG_DEC pcie_x1_top_cfg_dec1_x1


`define CFG_RESP pcie_x1_top_cfg_resp_x1


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef AER


`else


`endif


`ifdef CFG_VCC


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif 


`ifdef AER 


`endif 


`ifdef GEN2


`endif


`ifdef CFG_VCC 


`else 


`endif 


`ifdef AER 


`else 


`endif 


`ifdef ECRC


`endif


`ifdef X4 


`endif



`ifdef AER
   assign ftl_err_out  =  pu3fff1 ;   assign nftl_err_out =  sufff8a ;   assign cor_err_out  =  qgffc50 ;

`else
   assign ftl_err_out  =  fp3d9ff ;   assign nftl_err_out =  xjecfff ;   assign cor_err_out  =  ww67ffe ;

`endif




`ifdef X4



`define CFG_DEC cfg_dec1



`define CFG_RESP cfg_resp



`endif



`ifdef X1



`define CFG_DEC pcie_x1_top_cfg_dec1_x1



`define CFG_RESP pcie_x1_top_cfg_resp_x1



`endif




`CFG_DEC yx5e1cf (   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ) ,
   .tlp_data     ( tlp_data ) ,   .tlp_st       ( tlp_st ) ,   .tlp_end      ( tlp_end ) ,   .tlp_erly_st  ( tlp_erly_st ) ,   .phy_link_up  ( phy_link_up ) ,   .term_all_cfg ( term_all_cfg ) ,



`ifdef ECRC
      .tlp_ecrc_ok  ( tlp_ecrc_ok ) ,      .ecrc_chk_enb ( ecrc_chk_enb ) ,


`endif

      .ADR_I        ( ADR_I[11:2] ) ,   .DAT_I        ( DAT_I ),   .WE_I         ( WE_I ),   .STB_I        ( STB_I ),



`ifdef X4
      .s2e_cnt_err  ( s2e_cnt_err ),


`endif

   .bus_num      ( bus_num ) ,   .dev_num      ( dev_num ) ,   .func_num     ( func_num ) ,   .req_id       ( req_id ) ,   .tag          ( tag ) ,   .tc           ( tc ) ,   .reg_sel_t0    ( reg_sel_t0 ) ,   .reg_sel_pmsi  ( reg_sel_pmsi ) ,   .reg_sel_cs    ( reg_sel_cs ) ,   .reg_sel_ec    ( reg_sel_ec ) ,


`ifdef AER
      .reg_sel_aer  ( reg_sel_aer ) ,


`endif
   .reg_sel_usp   ( reg_sel_usp ) ,   .reg_id_hit    ( reg_id_hit ) ,   .type1_cfg     ( type1_cfg ) ,   .pois_cfg      ( pois_cfg ) ,   .cfg_hit       ( cfg_hit ) ,   .nph_processed ( nph_processed ) ,   .npd_processed ( npd_processed ) ,
   .reg_addr      ( reg_addr ) ,   .reg_wdata     ( reg_wdata ) ,   .reg_wdata_be  ( reg_wdata_be ) ,   .reg_wr_t1     ( reg_wr_t1 ) ,   .reg_wr_pois   ( reg_wr_pois ) ,   .reg_wr        ( reg_wr ) ,   .reg_rd        ( reg_rd ) ,   .reg_wr_cpm    ( reg_wr_cpm ) ,   .reg_rd_cpm    ( reg_rd_cpm ) ,   .ecrc_ok       ( ecrc_ok )   ) ;



assign zmb72e8 = rv19ef9 ;
assign ukb9743 = tucf7ce ;
assign gocba18 = hb7be73 ;
assign by5d0c0 = hodf39e ;
assign ale8603 = thf9cf2 ;
assign yk4301d = cmce797 ;
assign qv180e9 = kdf2e56 ;
pcie_x1_top_kf23b25 ym109c3 (      .yz1d92d ( pu250cf )  ,   .zxec96c ( nt2867b )  ,   .pf64b66 ( yk433df )  ,   .INIT_REG_010 ( rv19ef9 )  ,   .INIT_REG_014 ( tucf7ce )  ,   .INIT_REG_018 ( hb7be73 )  ,   .INIT_REG_01C ( hodf39e )  ,   .INIT_REG_020 ( thf9cf2 )  ,   .INIT_REG_024 ( cmce797 )  ,   .zm964ea ( zk73cb9 )  ,   .bab2752 ( tj9e5ca )  ,   .ls93a93 ( kdf2e56 )  ,   .wy9d49b ( aa972b4 )  ,   .load_id      ( ri14e35 ) ,   .phy_link_up  ( qv730f ) ,   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ) ,
   .reg_sel_t0   ( reg_sel_t0 ) ,   .reg_addr     ( psd0236[3:0] ) ,   .reg_wdata    ( fp811b3 ) ,   .reg_wdata_be ( byfb25c ) ,   .reg_wr       ( (reg_wr & ~pu9cf2a) ) ,   .reg_rd       ( reg_rd ) ,   .ecrc_ok      ( ecrc_ok ) ,
   .nt3d514     ( mgb3d45 ) ,


`ifdef GEN2
      .ir17e02       ( ir17e02 ) ,


`endif
   .byebf11   ( zz38a98 ) ,      .jp5f88b       ( jp5f88b ) ,   .nrfc45f       ( nrfc45f ) ,   .ene22fe       ( ene22fe ) ,   .xy117f4       ( xy117f4 ) ,   .rv8bfa3       ( rv8bfa3 ) ,   .nr5fd1e       ( nr5fd1e ) ,   .rgfe8f7       ( rgfe8f7 ) ,   .cmd_reg_out  ( cmd_reg_out ),   .cmea8a6  ( reg_rdata0 )   ) ;



pcie_x1_top_jc48048 ho766e1 (   .bl40242      ( lsb89df )  ,   .je1216      ( qgc4efb )  ,   .xl90b2 ( fp277d9 )  ,   .ho48596 ( ec3bece )  ,   .jc42cb2 ( jcdf670 )  ,   .xl16592 ( hofb382 )  ,   .lsb2c96 ( mrd9c13 )  ,   .je964b2 ( eace09c )  ,   .dob2592 ( qt704e1 )  ,   .aa92c93 ( wy8270c )  ,   .ng96499      ( bn13861 )  ,   .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n ),   .phy_link_up    ( qv730f ) ,   .reg_sel_cs     ( reg_sel_pmsi ) ,   .reg_addr       ( psd0236[3:0] ) ,   .reg_wdata      ( fp811b3 ) ,   .reg_wdata_be   ( byfb25c ) ,   .reg_wr         ( (reg_wr & ~pu9cf2a) ) ,   .reg_rd         ( reg_rd ) ,   .ecrc_ok        ( ecrc_ok ) ,
   .nt3d514       ( mgb3d45 ) ,


`ifdef GEN2
      .ir17e02       ( ir17e02 ) ,


`endif
   .pme_status     ( wlb1ee9 ) ,
   .pm_power_state ( pm_power_state ) ,   .pme_en         ( pme_en ) ,
   .mm_enable      ( mm_enable ) ,   .msi_enable     ( msi_enable ) ,   .mes_laddr      ( mes_laddr ) ,   .mes_uaddr      ( mes_uaddr ) ,   .mes_data       ( mes_data ) ,
   .cmea8a6    ( reg_rdata1 )   ) ;




pcie_x1_top_jpc80ea kqde0ae (   .bl40756 ( je89e72 )  ,   .lf3ab6 ( fn4f393 )  ,   .mt1d5b6 ( xw79c9f )  ,   .iceadb5 ( icce4fb )  ,


`ifdef GEN2
      .kq56da9 ( kq56da9 )  ,


`endif

   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ),   .reg_sel_cs   ( reg_sel_cs ) ,   .reg_addr     ( psd0236[3:0] ) ,   .reg_wdata    ( fp811b3 ) ,   .reg_wdata_be ( byfb25c ) ,   .reg_wr       ( (reg_wr & ~pu9cf2a) ) ,   .reg_rd       ( reg_rd ) ,   .ecrc_ok      ( ecrc_ok ) ,
   .phy_link_up  ( qv730f ) ,   .nt3d514     ( mgb3d45 ) ,


`ifdef GEN2
      .ir17e02       ( ir17e02 ) ,


`endif




`ifdef AER
      .bnbf015 ( bn27b3f ) ,


`endif

      .qtf80af    ( ir1d90f ) ,   .byc057c ( blec87c ) ,   .kf2be2        ( fn643e6 ) ,   .dfrm_perr        ( ie21f37 ) ,   .dl_active        ( cof9b8 ) ,
      .rxtp_bad_tlp     ( vi7cdc0 ) ,   .cb2c67b    ( vve6e03 ) ,   .ie5434       ( jr3701f ) ,   .mrd9d4b   ( xyb80ff ) ,   .ksa936e   ( fac07fa ) ,   .ng3aaf5   ( rv3fd2 ) ,   .dmd57aa    ( gq1fe96 ) ,   .mtabd53       ( meff4b1 ) ,
      .cmpln_tout       ( ykfa589 ) ,   .cmpltr_abort_np  ( thd2c49 ) ,   .cmpltr_abort_p   ( je9624f ) ,   .unexp_cmpln      ( epb127a ) ,   .ur_np_ext        ( fc893d4 ) ,   .ur_p_ext         ( su49ea2 ) ,   .np_req_pend      ( zx4f511 ) ,   .ww46228         ( 8'h00 ) ,   .ym31141   ( sud447c ) ,   .ie88a08     ( baa23e1 ) ,   .xj45041     ( zm11f0a ) ,

      .tlpdec_ecrc_err  ( cb8f852 ),   .tlpdec_pois_tlp  ( vi7c294 ),   .tlpdec_us_req    ( hdb09ec ),   .tlpdec_malf_tlp  ( ksa513 ),   .rief25         ( cmd_reg_out[4] ),
         .kq7792a    ( ) ,   .dev_cntl_out     ( dev_cntl_out ),   .lnk_cntl_out     ( lnk_cntl_out ),   .ftl_err_out      ( sj8a3af ),   .nftl_err_out     ( yx51d7d ),   .cor_err_out      ( vx8ebec ),


`ifdef GEN2
      .dev_cntl_2_out( dev_cntl_2_out ),      .initiate_flr  ( initiate_flr ),


`endif

   .yk535f1     ( yk535f1 ) ,   .ux9af88       ( ux9af88 ) ,   .xjd7c45     ( xjd7c45 ) ,   .qvbe22f      ( qvbe22f ) ,   .cfgcs_losel      ( cfgcs_losel ) ,
   .cmea8a6      ( reg_rdata2 )   ) ;   


`ifdef AER
       assign tj9e451 = (pse14a2 | jr84f67) ;


`else
       assign tj9e451 = pse14a2 ;


`endif





pcie_x1_top_fadf11a mr7a9b6 (   .czf88d2 ( ec8d681 )  ,   .wwc4695 ( nr6b408 )  ,   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ),   .reg_sel_ec   ( reg_sel_ec ) ,   .reg_addr     ( psd0236[4:0] ) ,   .reg_wdata    ( fp811b3 ) ,   .reg_wr       ( (reg_wr & ~pu9cf2a) ) ,   .reg_rd       ( reg_rd ) ,   .ecrc_ok      ( ecrc_ok ) ,
   .nt3d514     ( mgb3d45 ) ,   .cmea8a6  ( reg_rdata3 )   ) ;





`ifdef CFG_VCC

pcie_x1_top_oseaea7 pf6e648 (      .ho57539 ( ho57539 )  ,   .sys_clk          ( sys_clk ) ,   .rst_n            ( rst_n ) ,
   .reg_sel_ec       ( reg_sel_ec ) ,   .reg_addr         ( psd0236[4:0] ) ,   .reg_wdata        ( fp811b3 ) ,   .reg_wdata_be     ( byfb25c ) ,   .reg_wr           ( (reg_wr & ~pu9cf2a) ) ,   .reg_rd           ( reg_rd ) ,   .ecrc_ok          ( ecrc_ok ) ,
   .vka2183   ( vka2183 ) ,      .co10c1a       ( co10c1a ) ,   .zm860d0     ( zm860d0 ) ,   .xy30683      ( xy30683 ) ,   .cfgec_vcasel     ( cfgec_vcasel ) ,



`ifdef EN_VC0
      .mg1a0d3 ( mg1a0d3 ) ,      .fad0698  ( fad0698 ) ,      .ba834c3 ( ba834c3 ) ,


`endif



`ifdef EN_VC1
      .mg1a61b ( mg1a61b ) ,      .gbd30d8  ( gbd30d8 ) ,      .ec986c4 ( ec986c4 ) ,


`endif



`ifdef EN_VC2
      .yxc3621 ( yxc3621 ) ,      .pu1b10d  ( pu1b10d ) ,      .fnd886a ( fnd886a ) ,


`endif



`ifdef EN_VC3
      .ayc4356 ( ayc4356 ) ,      .aa21ab0  ( aa21ab0 ) ,      .sjd580 ( sjd580 ) ,


`endif



`ifdef EN_VC4
      .uv6ac04 ( uv6ac04 ) ,      .cm56025  ( cm56025 ) ,      .bnb0128 ( bnb0128 ) ,


`endif



`ifdef EN_VC5
      .ir80946 ( ir80946 ) ,      .ri4a35  ( ri4a35 ) ,      .ls251ab ( ls251ab ) ,


`endif



`ifdef EN_VC6
      .hd28d5b ( hd28d5b ) ,      .yk46ade  ( yk46ade ) ,      .ls356f0 ( ls356f0 ) ,


`endif



`ifdef EN_VC7
      .kfab782 ( kfab782 ) ,      .yx5bc14  ( yx5bc14 ) ,      .ayde0a5 ( ayde0a5 ) ,


`endif
   .cmea8a6      ( reg_rdata4 )   ) ;

`endif 




`ifdef AER 
   pcie_x1_top_lfb0c77 #(      .D_WIDTH          ( D_WIDTH ) )      icfffe9 (      .sys_clk          ( sys_clk ) ,      .rst_n            ( rst_n ) ,
      .reg_sel_aer      ( reg_sel_aer ) ,      .reg_addr         ( psd0236[3:0] ) ,      .reg_wdata        ( fp811b3 ) ,      .reg_wdata_be     ( byfb25c ) ,      .reg_wr           ( (reg_wr & ~pu9cf2a) ) ,      .reg_rd           ( reg_rd ) ,      .ecrc_ok          ( ecrc_ok ) ,
            .phy_link_up      ( qv730f ) ,      .dfrm_perr        ( ie21f37 ) ,
            .rxtp_bad_tlp     ( vi7cdc0 ) ,      .cb2c67b    ( vve6e03 ) ,      .ie5434       ( jr3701f ) ,      .mrd9d4b   ( xyb80ff ) ,      .ksa936e   ( fac07fa ) ,      .ng3aaf5   ( rv3fd2 ) ,      .dmd57aa    ( gq1fe96 ) ,      .mtabd53       ( meff4b1 ) ,            .tlpdec_data      ( cob906a ) ,      .tlpdec_st        ( vvc8350 ) ,      .tlpdec_end       ( sh41a86 ) ,      .tlpdec_ecrc_err  ( cb8f852 ),      .tlpdec_pois_tlp  ( vi7c294 ),      .tlpdec_us_req    ( hdb09ec ),      .tlpdec_malf_tlp  ( ksa513 ),
      .rief25         ( cmd_reg_out[4] ),      .mg8d329     ( dev_cntl_out ),
            .err_tlp_header   ( err_tlp_header ) ,      .cmpln_tout       ( ykfa589 ) ,      .cmpltr_abort_np  ( thd2c49 ) ,      .cmpltr_abort_p   ( je9624f ) ,      .unexp_cmpln      ( epb127a ) ,      .ur_np_ext        ( fc893d4 ) ,      .ur_p_ext         ( su49ea2 ) ,
      .ecrc_gen_enb     ( ecrc_gen_enb ) ,      .ecrc_chk_enb     ( ecrc_chk_enb ) ,      .bnbf015        ( bnbf015 ) ,      .ftl_err_out      ( sh75f66 ) ,      .nftl_err_out     ( tjafb35 ) ,      .cor_err_out      ( ui7d9af ) ,
      .cmea8a6      ( reg_rdata5 )      ) ;


`endif 




`CFG_RESP aabce98 (   .sys_clk         ( sys_clk ) ,   .rst_n           ( rst_n ) ,
   .bus_num         ( bus_num ) ,   .dev_num         ( dev_num ) ,   .func_num        ( func_num ) ,   .req_id          ( req_id ) ,   .tag             ( tag ) ,   .tc              ( tc ) ,   .term_all_cfg    ( term_all_cfg ) ,   .load_id         ( load_id ) ,


`ifdef GEN2
      .drop_resp    ( drop_resp ),


`endif

   .reg_rdata0      ( reg_rdata0 ) ,   .reg_rdata1      ( reg_rdata1 ) ,   .reg_rdata2      ( reg_rdata2 ) ,   .reg_rdata3      ( reg_rdata3 ) ,


`ifdef CFG_VCC 
      .reg_rdata4   ( reg_rdata4 ) ,


`else 
      .reg_rdata4   ( 32'd0 ) ,


`endif 



`ifdef AER 
      .reg_rdata5   ( reg_rdata5 ) ,


`else 
      .reg_rdata5   ( 32'd0 ) ,


`endif 
   .reg_wr          ( ((reg_wr | reg_wr_t1 | reg_wr_pois) & ~s2e_cnt_err) ) ,   .reg_rd          ( (reg_rd & ~s2e_cnt_err) ) ,   .reg_wr_cpm      ( reg_wr_cpm ) ,   .reg_rd_cpm      ( reg_rd_cpm ) ,   .reg_sel_usp     ( reg_sel_usp ) ,   .reg_id_hit      ( reg_id_hit ) ,   .type1_cfg       ( type1_cfg ) ,   .pois_cfg        ( pois_cfg ) ,   .ecrc_ok         ( ecrc_ok ) ,



`ifdef ECRC
      .ecrc_gen_enb ( ecrc_gen_enb ) ,      .ecrc_chk_enb ( ecrc_chk_enb ) ,


`endif

   .cfg_rmux_rd     ( cfg_rmux_rd ) ,   .tx_ca_cplh      ( tx_ca_cplh ) ,   .tx_ca_cplh_infi ( tx_ca_cplh_infi ),         .RDAT_O          ( RDAT_O ),   .ACK_O           ( ACK_O ),
   .us_req_int      ( us_req_int ) ,   .cfg_rmux_req    ( cfg_rmux_req ) ,   .cfg_rmux_data   ( cfg_rmux_data ) ,


`ifdef X4 
      .cfg_rmux_dwen   ( cb8afa7 ) ,


`endif
   .cfg_rmux_ae     ( cfg_rmux_ae )   ) ;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      anbe9e3 <= 1'b0;      dmf4f1c <= 1'b0;      baa78e3 <= 1'b0;      nt3d514  <= 1'b0;   end   else begin      anbe9e3 <= 1'b1;      dmf4f1c <= anbe9e3;      baa78e3 <= lq52b4a;      nt3d514  <= anbe9e3 & ~yz95a53;   end
end

always@* begin pu250cf<={yz1d92d>>1,xjc2975[0]};nt2867b<={zxec96c>>1,xjc2975[1]};yk433df<={pf64b66>>1,xjc2975[2]};rv19ef9<={INIT_REG_010>>1,xjc2975[3]};tucf7ce<={INIT_REG_014>>1,xjc2975[4]};hb7be73<={INIT_REG_018>>1,xjc2975[5]};hodf39e<={INIT_REG_01C>>1,xjc2975[6]};thf9cf2<={INIT_REG_020>>1,xjc2975[7]};cmce797<={INIT_REG_024>>1,xjc2975[8]};zk73cb9<={zm964ea>>1,xjc2975[9]};tj9e5ca<={bab2752>>1,xjc2975[10]};kdf2e56<={ls93a93>>1,xjc2975[11]};aa972b4<={wy9d49b>>1,xjc2975[12]};ri14e35<=xjc2975[13];lsb89df<={bl40242>>1,xjc2975[14]};qgc4efb<={je1216>>1,xjc2975[15]};fp277d9<={xl90b2>>1,xjc2975[16]};ec3bece<={ho48596>>1,xjc2975[17]};jcdf670<={jc42cb2>>1,xjc2975[18]};hofb382<={xl16592>>1,xjc2975[19]};mrd9c13<={lsb2c96>>1,xjc2975[20]};eace09c<={je964b2>>1,xjc2975[21]};qt704e1<={dob2592>>1,xjc2975[22]};wy8270c<={aa92c93>>1,xjc2975[23]};bn13861<={ng96499>>1,xjc2975[24]};je89e72<={bl40756>>1,xjc2975[25]};fn4f393<={lf3ab6>>1,xjc2975[26]};xw79c9f<={mt1d5b6>>1,xjc2975[27]};icce4fb<={iceadb5>>1,xjc2975[28]};ec8d681<={czf88d2>>1,xjc2975[29]};nr6b408<={wwc4695>>1,xjc2975[30]};ux266cd<={tlp_data>>1,xjc2975[31]};wl3366c<=xjc2975[32];zz9b365<=xjc2975[33];gbd9b2e<=xjc2975[34];bn8bfc6<={tx_ca_cplh>>1,xjc2975[35]};pf5fe36<=xjc2975[36];qv730f<=xjc2975[37];ir1d90f<=xjc2975[38];blec87c<=xjc2975[39];fn643e6<={kf2be2>>1,xjc2975[40]};ie21f37<=xjc2975[41];cof9b8<=xjc2975[42];vi7cdc0<=xjc2975[43];vve6e03<=xjc2975[44];jr3701f<=xjc2975[45];xyb80ff<=xjc2975[46];fac07fa<=xjc2975[47];rv3fd2<=xjc2975[48];meff4b1<=xjc2975[49];gq1fe96<=xjc2975[50];zz38a98<={byebf11>>1,xjc2975[51]};ykfa589<=xjc2975[52];thd2c49<=xjc2975[53];je9624f<=xjc2975[54];epb127a<=xjc2975[55];fc893d4<=xjc2975[56];su49ea2<=xjc2975[57];zx4f511<=xjc2975[58];wlb1ee9<=xjc2975[59];sud447c<=xjc2975[60];baa23e1<=xjc2975[61];zm11f0a<=xjc2975[62];tu6cba7<=xjc2975[63];nr717f8<=xjc2975[64];cob906a<={tlpdec_data>>1,xjc2975[65]};vvc8350<=xjc2975[66];sh41a86<=xjc2975[67];cb8f852<=xjc2975[68];vi7c294<=xjc2975[69];pse14a2<=xjc2975[70];ksa513<=xjc2975[71];pu9cf2a<=xjc2975[72];sh65d3a<={ADR_I>>1,xjc2975[73]};ec2e9d4<={DAT_I>>1,xjc2975[74]};hb74ea1<=xjc2975[75];hqa750f<=xjc2975[76];lq52b4a<=xjc2975[77];yz95a53<=xjc2975[78];mgb3d45<=xjc2975[79];psd0236<={reg_addr>>1,xjc2975[80]};fp811b3<={reg_wdata>>1,xjc2975[81]};byfb25c<={reg_wdata_be>>1,xjc2975[82]};th5ff14<={req_id>>1,xjc2975[83]};ri99171<=xjc2975[84];meff8a7<={tag>>1,xjc2975[85]};xjfc538<={tc>>1,xjc2975[86]};pua71aa<={reg_rdata0>>1,xjc2975[87]};jr38d52<={reg_rdata1>>1,xjc2975[88]};czc6a97<={reg_rdata2>>1,xjc2975[89]};ri354bc<={reg_rdata3>>1,xjc2975[90]};hdaa5e2<={reg_rdata4>>1,xjc2975[91]};zk52f16<={reg_rdata5>>1,xjc2975[92]};hdb09ec<=xjc2975[93];jr84f67<=xjc2975[94];bn27b3f<={bnbf015>>1,xjc2975[95]};fp3d9ff<=xjc2975[96];xjecfff<=xjc2975[97];ww67ffe<=xjc2975[98];pu3fff1<=xjc2975[99];sufff8a<=xjc2975[100];qgffc50<=xjc2975[101];end
always@* begin ux1852e[2047]<=zxec96c[0];ux1852e[2046]<=pf64b66[0];ux1852e[2044]<=INIT_REG_010[0];ux1852e[2040]<=INIT_REG_014[0];ux1852e[2032]<=INIT_REG_018[0];ux1852e[2016]<=INIT_REG_01C[0];ux1852e[2011]<=tx_ca_cplh_infi;ux1852e[1984]<=INIT_REG_020[0];ux1852e[1974]<=phy_link_up;ux1852e[1959]<=s2e_cnt_err;ux1852e[1941]<=lf3ab6[0];ux1852e[1921]<=reg_addr[0];ux1852e[1920]<=INIT_REG_024[0];ux1852e[1914]<=tlpdec_ecrc_err;ux1852e[1901]<=qtf80af;ux1852e[1871]<=ADR_I[0];ux1852e[1868]<=reg_rdata3[0];ux1852e[1835]<=mt1d5b6[0];ux1852e[1834]<=ur_p_ext;ux1852e[1795]<=reg_wdata[0];ux1852e[1793]<=zm964ea[0];ux1852e[1780]<=tlpdec_pois_tlp;ux1852e[1754]<=byc057c;ux1852e[1749]<=dl_active;ux1852e[1721]<=cmpln_tout;ux1852e[1709]<=ie5434;ux1852e[1694]<=DAT_I[0];ux1852e[1688]<=reg_rdata4[0];ux1852e[1679]<=xl16592[0];ux1852e[1623]<=iceadb5[0];ux1852e[1621]<=np_req_pend;ux1852e[1543]<=reg_wdata_be[0];ux1852e[1539]<=bab2752[0];ux1852e[1538]<=yx51d7d;ux1852e[1526]<=tlp_erly_st;ux1852e[1513]<=tlpdec_us_req;ux1852e[1502]<=tlpdec_st;ux1852e[1482]<=unexp_cmpln;ux1852e[1461]<=kf2be2[0];ux1852e[1454]<=dmd57aa;ux1852e[1451]<=rxtp_bad_tlp;ux1852e[1405]<=tlp_st;ux1852e[1399]<=cfg_rmux_rd;ux1852e[1394]<=cmpltr_abort_np;ux1852e[1387]<=ng3aaf5;ux1852e[1373]<=xj45041;ux1852e[1370]<=mrd9d4b;ux1852e[1340]<=WE_I;ux1852e[1328]<=reg_rdata5[0];ux1852e[1310]<=lsb2c96[0];ux1852e[1264]<=dmf4f1c;ux1852e[1216]<=us_req_int;ux1852e[1199]<=czf88d2[0];ux1852e[1195]<=pme_status;ux1852e[1145]<=dob2592[0];ux1852e[1038]<=req_id[0];ux1852e[1030]<=ls93a93[0];ux1852e[1028]<=vx8ebec;ux1852e[1023]<=yz1d92d[0];ux1852e[1005]<=tx_ca_cplh[0];ux1852e[979]<=tlpdec_malf_tlp;ux1852e[970]<=bl40756[0];ux1852e[960]<=nt3d514;ux1852e[957]<=tlpdec_end;ux1852e[934]<=reg_rdata2[0];ux1852e[917]<=ur_np_ext;ux1852e[874]<=dfrm_perr;ux1852e[860]<=byebf11[0];ux1852e[854]<=cb2c67b;ux1852e[839]<=jc42cb2[0];ux1852e[769]<=sj8a3af;ux1852e[763]<=tlp_end;ux1852e[751]<=tlpdec_data[0];ux1852e[741]<=cmpltr_abort_p;ux1852e[727]<=mtabd53;ux1852e[702]<=tlp_data[0];ux1852e[699]<=term_all_cfg;ux1852e[693]<=ksa936e;ux1852e[686]<=ie88a08;ux1852e[632]<=STB_I;ux1852e[608]<=tj9e451;ux1852e[572]<=je964b2[0];ux1852e[485]<=ng96499[0];ux1852e[480]<=baa78e3;ux1852e[467]<=reg_rdata1[0];ux1852e[419]<=ho48596[0];ux1852e[384]<=bnbf015[0];ux1852e[351]<=wwc4695[0];ux1852e[343]<=ym31141;ux1852e[242]<=aa92c93[0];ux1852e[233]<=reg_rdata0[0];ux1852e[209]<=xl90b2[0];ux1852e[116]<=tc[0];ux1852e[104]<=je1216[0];ux1852e[58]<=tag[0];ux1852e[52]<=bl40242[0];ux1852e[36]<=ui7d9af;ux1852e[29]<=reg_id_hit;ux1852e[26]<=load_id;ux1852e[18]<=tjafb35;ux1852e[13]<=wy9d49b[0];ux1852e[9]<=sh75f66;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

































`timescale 1 ns / 100 ps
module  pcie_x1_top_ba20bf6(
   
   input wire sys_clk,              
   input wire rst_n,                

   
   input wire hq111f2,           
   input wire qi88f93,           

   
   input wire [`NUM_VC-1:0] ngb22f7,            
   input wire [`NUM_VC-1:0] fp917bb,           
   input wire [`NUM_VC-1:0] db8bddf,          

   input wire [`NUM_VC-1:0] en5eefe,           
   input wire [`NUM_VC-1:0] yxf77f5,          
   input wire [`NUM_VC-1:0] ohbbfad,         

   input wire [`NUM_VC-1:0] lqdfd6c,             
   input wire [`NUM_VC-1:0] byfeb63,            
   input wire [`NUM_VC-1:0] kqf5b1a,           

   
   
   output wire [`NUM_VC-1:0] fcad8d1,           
   output wire [`NUM_VC-1:0] jc6c68a,          
   output wire [`NUM_VC-1:0] tu63453,         

   
   output reg                ntba23f,           
   output reg [2:0]          god11ff,             
   output reg [1:0]          ie88ff9,             

   output reg                vi47fc9,           
   output reg [2:0]          ng3fe4a,             
   output reg [1:0]          cmff252                 );
parameter nt81a23 = 3*`NUM_VC;
reg   [`NUM_VC-1:0]       gdd11f;
reg   [`NUM_VC-1:0]       ay688fc;
reg   [`NUM_VC-1:0]       wj447e0;
reg   [4:0]               wl23f04;
reg   [4:0]               ou1f825;
reg   [1:0]               blfc129;

`ifdef VC1
reg                       kqe094e;

`else

`ifdef VC2
reg                          kqe094e;

`else 

`ifdef VC3 
reg  [1:0]                         kqe094e;

`else

`ifdef VC4
reg  [1:0]                         kqe094e;

`else   // 5 - 8
reg  [2:0]                         kqe094e;

`endif

`endif

`endif

`endif
reg   [nt81a23-1:0]       zm8372c;
wire  [nt81a23-1:0]       uvdcb1b;
wire  [nt81a23-1:0]       qv2c6e0;
reg xw63705;
reg tw1b82a;
reg [`NUM_VC - 1 : 0] ofdc153;
reg [`NUM_VC - 1 : 0] yke0a9d;
reg [`NUM_VC - 1 : 0] aa54e8;
reg [`NUM_VC - 1 : 0] ba2a740;
reg [`NUM_VC - 1 : 0] cm53a02;
reg [`NUM_VC - 1 : 0] co9d011;
reg [`NUM_VC - 1 : 0] ipe8089;
reg [`NUM_VC - 1 : 0] nr4044d;
reg [`NUM_VC - 1 : 0] cb226e;
reg [`NUM_VC - 1 : 0] vk11375;
reg [`NUM_VC - 1 : 0] zm89bab;
reg [`NUM_VC - 1 : 0] by4dd5b;
reg [4 : 0] th6eadb;
reg [4 : 0] wj756df;
reg [1 : 0] uxab6fc;
reg [nt81a23 - 1 : 0] medbf24;
reg [nt81a23 - 1 : 0] nrfc90b;
reg [nt81a23 - 1 : 0] uk242fa;
reg [2047:0] ux1852e;
wire [19:0] xjc2975;

`ifdef VC1

`else

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else   // 5 - 8

`endif

`endif

`endif

`endif

localparam do14bae = 20,jra5d72 = 32'hfdffd30b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef VC1


`else


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else   // 5 - 8


`endif


`endif


`endif


`endif






`ifdef VC1
   

`else



`ifdef VC2



`else 



`ifdef VC3 



`else



`ifdef VC4



`else   // 5 - 8



`endif



`endif



`endif



`endif






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gdd11f   <= 0;      ay688fc  <= 0;      wj447e0 <= 0;   end   else begin      gdd11f   <= ofdc153 | ba2a740;      ay688fc  <= yke0a9d | cm53a02;      wj447e0 <= aa54e8 | co9d011;   end
end






assign uvdcb1b = {by4dd5b, zm89bab, vk11375};
assign {tu63453, jc6c68a, fcad8d1} = medbf24;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      zm8372c       <= 0;      ntba23f  <= 1'b0;      god11ff    <= 3'b000;      ie88ff9    <= 2'b00;   end   else begin            god11ff    <= 3'b000;      ntba23f  <= 1'b0;      zm8372c       <= 0;      if(!xw63705) begin         ntba23f  <= nrfc90b[th6eadb];         god11ff    <= kqe094e;         ie88ff9    <= uxab6fc;         zm8372c[wj756df] <= ntba23f;         end   end
end




assign qv2c6e0 = {cb226e, nr4044d, ipe8089};
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      vi47fc9  <= 1'b0;      ng3fe4a    <= 3'b000;      cmff252    <= 2'b00;   end   else begin            ng3fe4a    <= 3'b000;      vi47fc9  <= 1'b0;      if(!tw1b82a) begin         vi47fc9  <= uk242fa[th6eadb];         ng3fe4a    <= kqe094e;         cmff252    <= uxab6fc;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wl23f04     <= 0;      ou1f825 <= 0;      kqe094e     <= 0;      blfc129     <= 2'b00;   end   else begin      if(!xw63705) begin                  wl23f04 <= (th6eadb == (nt81a23 - 1)) ? 0 : (th6eadb + 1);         ou1f825 <= th6eadb;                  kqe094e <= (kqe094e == (`NUM_VC-1)) ? 0 : (kqe094e + 1);                  if(kqe094e == (`NUM_VC-1))            blfc129 <= (uxab6fc == 2'b10) ? 2'b00 : (uxab6fc + 2'b01);      end   end
end
always@* begin xw63705<=xjc2975[0];tw1b82a<=xjc2975[1];ofdc153<={ngb22f7>>1,xjc2975[2]};yke0a9d<={fp917bb>>1,xjc2975[3]};aa54e8<={db8bddf>>1,xjc2975[4]};ba2a740<={en5eefe>>1,xjc2975[5]};cm53a02<={yxf77f5>>1,xjc2975[6]};co9d011<={ohbbfad>>1,xjc2975[7]};ipe8089<={lqdfd6c>>1,xjc2975[8]};nr4044d<={byfeb63>>1,xjc2975[9]};cb226e<={kqf5b1a>>1,xjc2975[10]};vk11375<={gdd11f>>1,xjc2975[11]};zm89bab<={ay688fc>>1,xjc2975[12]};by4dd5b<={wj447e0>>1,xjc2975[13]};th6eadb<={wl23f04>>1,xjc2975[14]};wj756df<={ou1f825>>1,xjc2975[15]};uxab6fc<={blfc129>>1,xjc2975[16]};medbf24<={zm8372c>>1,xjc2975[17]};nrfc90b<={uvdcb1b>>1,xjc2975[18]};uk242fa<={qv2c6e0>>1,xjc2975[19]};end
always@* begin ux1852e[2047]<=qi88f93;ux1852e[2046]<=ngb22f7[0];ux1852e[2044]<=fp917bb[0];ux1852e[2040]<=db8bddf[0];ux1852e[2032]<=en5eefe[0];ux1852e[2016]<=yxf77f5[0];ux1852e[1985]<=ohbbfad[0];ux1852e[1922]<=lqdfd6c[0];ux1852e[1796]<=byfeb63[0];ux1852e[1544]<=kqf5b1a[0];ux1852e[1105]<=zm8372c[0];ux1852e[1041]<=gdd11f[0];ux1852e[1023]<=hq111f2;ux1852e[552]<=blfc129[0];ux1852e[325]<=qv2c6e0[0];ux1852e[276]<=ou1f825[0];ux1852e[162]<=uvdcb1b[0];ux1852e[138]<=wl23f04[0];ux1852e[69]<=wj447e0[0];ux1852e[34]<=ay688fc[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module  pcie_x1_top_ux957ae(
   
   input wire sys_clk,              
   input wire rst_n,                


   
   input wire [7:0] ykf5d6d,           
   input wire [7:0] ohaeb69,          
   input wire [7:0] ip75b4d,         
   input wire [11:0] puada6d,           
   input wire [11:0] kq6d36a,          
   input wire [11:0] by69b51,         

   input wire [6:0] dm4da8a,       
   input wire [10:0] go6d453,       
   input wire [6:0] wj6a299,      
   input wire [10:0] qt514cc,      
   input wire [6:0] mt8a665,     
   input wire [10:0] ay5332d,     

   
   input wire je99968,              
   input wire ipccb42,          

   
   input wire phy_l0_l0s,           

   
   input wire epa437e,          
   input wire aa21bf5,         
   input wire sjdfa8,        

   
   input wire fcad8d1,           
   input wire jc6c68a,          
   input wire tu63453,         

   
   input wire kf39400,        
   input wire faca004,        
   input wire zx50023,       
   input wire gd8011f,       
   input wire wy8fc,      
   input wire zm47e1,      
   input wire ux23f0a,         
   input wire ym1f855,         
   input wire nph_processed,        
   input wire npd_processed,        
   input wire coaa73,       
   input wire xj55398,       

   input wire [7:0] oua9cc7,               
   input wire  [7:0]en4e638,              
   input wire  [7:0]ps731c5,             

   input wire sw98e2b,    
   input wire dzc7158,    
   input wire fp38ac7,     

`ifdef AER
   
   input wire vc_rcvd,              
   input wire ph_rcvd,              
   input wire pd_rcvd,              
   input wire nph_rcvd,             
   input wire npd_rcvd ,            
   input wire [8:0] credits_rcvd,         

   input wire malf_pkt_ph,          
   input wire malf_pkt_pd,          
   input wire malf_pkt_nph,         
   input wire malf_pkt_npd,         
`endif

   
   
   output reg ngb22f7,            
   output reg fp917bb,           
   output reg db8bddf,          

   output reg en5eefe,           
   output reg yxf77f5,          
   output reg ohbbfad,         

   output reg lqdfd6c,             
   output reg byfeb63,            
   output reg kqf5b1a,           

   output reg zxf9291,        
   output reg wjc948e,       
   output reg bl4a474,      

   `ifdef AER
      output reg zkcae9c,          
   `endif
   output wire [23:0] xw574e2,         
   output wire [23:0] ntba712,        
   output wire [23:0] ipd3897           );
parameter zm9c4bd = 3'b111;
parameter ne4231a   = 2'b00;
parameter fc118d3  = 2'b01;
parameter xy8c69a = 2'b10;

`ifdef CUMULATIVE_CREDIT_CHECK
reg  [7:0]                lsbd729, neeb94a, yk5ca53;
reg  [11:0]               wwe5298,   qv294c1,   zx4a60d,   ay5306f,   ie98378;
reg  [11:0]               cmc1bc1,  wlde09,  en6f04d,  ay7826c,  cmc1360;
reg  [11:0]               tj9b00, fa4d807, xw6c03b, cz601db, ksedd;

`endif
reg  [11:0]               ir76e9;
reg  [7:0]                qi3b74d;
reg  [11:0]               eadba69;
reg  [7:0]                zxdd349;
reg  [11:0]               lde9a4f;
reg  [7:0]                fa4d27e;
reg                       tu693f2;
reg                       ui49f93;
reg                       pf4fc99;
reg  [2:0]                xj7e4ce;
reg  [2:0]                kdf2677;
reg  [13:0]               fc933bd;
reg  [13:0]               xy99dea;
reg  [13:0]               oscef52;
reg  [6:0]                me77a90;
reg  [11:0]               ribd480;
reg  [6:0]                icea402;
reg  [11:0]               ho52010;
reg  [6:0]                oh90082;
reg  [11:0]               wl80415;
reg  [7:0]                wl20ac;
reg  [11:0]               ym10565;
reg  [7:0]                wy82b29;
reg  [11:0]               uk15948;
reg  [7:0]                mgaca40;
reg  [11:0]               of65200;
reg  [7:0]                ep29005;
reg  [11:0]               fa4802d;
wire [7:0]                vv4016a;
wire [11:0]               mgb56;
wire [7:0]                wy5ab1;
wire [11:0]               bn2d589;
reg                       ip6ac4f;
reg                       kq5627d;
reg                       mtb13e8;
reg                       ri89f44;
wire                      rt4fa23;
wire                      kq7d11e;
wire                      gbe88f0;
wire                      sh44784;
wire                      qv23c24;
wire                      tw1e125;
wire                      icf092a;
wire                      rv84951;
wire                      ks24a8f;
wire                      tw25478;
wire                      ri2a3c3;
wire                      cz51e1a;
wire                      an8f0d4;
wire                      ic786a5;
wire                      qtc3528;
wire                      co1a945;
wire                      god4a29;
wire                      hda5148;
wire [5:0]                bn28a47;

`ifdef CUMULATIVE_CREDIT_CHECK

`else

`endif

`ifdef AER

`endif
reg [7 : 0] fn4523e;
reg [7 : 0] qv291f6;
reg [7 : 0] xw48fb5;
reg [11 : 0] lq47dab;
reg [11 : 0] ks3ed5a;
reg [11 : 0] hbf6ad0;
reg [6 : 0] fpb5686;
reg [10 : 0] ohab436;
reg [6 : 0] fn5a1b4;
reg [10 : 0] byd0da6;
reg [6 : 0] ri86d32;
reg [10 : 0] ir36992;
reg mtb4c94;
reg uka64a5;
reg xl32528;
reg ec92947;
reg vx94a39;
reg xla51ce;
reg zz28e77;
reg ne473be;
reg gd39df3;
reg cmcef9d;
reg ui77ce8;
reg epbe740;
reg pff3a05;
reg ou9d02e;
reg ale8171;
reg bl40b8d;
reg mg5c6f;
reg wy2e379;
reg rt71bc8;
reg ie8de47;
reg wj6f239;
reg [7 : 0] ps791cc;
reg [7 : 0] vvc8e62;
reg [7 : 0] vi47317;
reg sj398bb;
reg wjcc5dd;
reg yk62eec;
reg [11 : 0] gd17761;
reg [7 : 0] gdbbb0c;
reg [11 : 0] bldd864;
reg [7 : 0] xjec326;
reg [11 : 0] dz61937;
reg [7 : 0] rvc9be;
reg rt64df7;
reg yz26fbe;
reg hd37df5;
reg [2 : 0] epbefae;
reg [2 : 0] kdf7d74;
reg [13 : 0] cbbeba4;
reg [13 : 0] suf5d24;
reg [13 : 0] sjae921;
reg [6 : 0] pf7490d;
reg [11 : 0] uxa486f;
reg [6 : 0] uk2437c;
reg [11 : 0] ym21be1;
reg [6 : 0] cbdf08;
reg [11 : 0] al6f845;
reg [7 : 0] zk7c22d;
reg [11 : 0] vie116a;
reg [7 : 0] ir8b53;
reg [11 : 0] xj45a9d;
reg [7 : 0] jr2d4ef;
reg [11 : 0] uv6a77f;
reg [7 : 0] yk53bfc;
reg [11 : 0] wy9dfe1;
reg [7 : 0] goeff08;
reg [11 : 0] wj7f841;
reg [7 : 0] zxfc20c;
reg [11 : 0] vie1066;
reg ir8333;
reg sh4199c;
reg vxcce5;
reg vi6672f;
reg ep3397a;
reg fc9cbd4;
reg aye5ea2;
reg ri2f510;
reg cz7a882;
reg sud4414;
reg baa20a1;
reg ym1050a;
reg wy82851;
reg vk14288;
reg ana1443;
reg uka21d;
reg of510e9;
reg uk8874d;
reg ic43a68;
reg oh1d340;
reg ble9a05;
reg dm4d02e;
reg [5 : 0] cm68172;
reg [2047:0] ux1852e;
wire [93:0] xjc2975;

`ifdef CUMULATIVE_CREDIT_CHECK

`endif

`ifdef CUMULATIVE_CREDIT_CHECK

`else

`endif

`ifdef AER

`endif

localparam do14bae = 94,jra5d72 = 32'hfdfff02b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef CUMULATIVE_CREDIT_CHECK


`endif


`ifdef CUMULATIVE_CREDIT_CHECK


`else


`endif


`ifdef AER


`endif






`ifdef CUMULATIVE_CREDIT_CHECK



`endif











assign xw574e2   = {2'b00, gdbbb0c, 2'b00, gd17761};
assign ntba712  = {2'b00, xjec326, 2'b00, bldd864};
assign ipd3897 = {2'b00, rvc9be, 2'b00, dz61937};
assign icf092a   = (fn4523e == 0);
assign rv84951   = (lq47dab == 0);
assign ks24a8f  = (qv291f6 == 0);
assign tw25478  = (ks3ed5a == 0);
assign ri2a3c3 = (xw48fb5 == 0);
assign cz51e1a = (hbf6ad0 == 0);
assign sh44784 = wy2e379 | sj398bb;
assign qv23c24 = rt71bc8 | wjcc5dd;
assign tw1e125 = bl40b8d | yk62eec;








assign bn28a47 = (wjcc5dd) ? (vvc8e62 + 1'b1) : vvc8e62;


`ifdef CUMULATIVE_CREDIT_CHECK

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wwe5298            <= 12'd0;      qv294c1            <= 12'd0;      zx4a60d            <= 12'd0;      ay5306f         <= 12'd0;      ie98378   <= 12'd0;      cmc1bc1           <= 12'd0;      wlde09           <= 12'd0;      en6f04d           <= 12'd0;      ay7826c        <= 12'd0;      cmc1360  <= 12'd0;      tj9b00          <= 12'd0;      fa4d807          <= 12'd0;      xw6c03b          <= 12'd0;      cz601db       <= 12'd0;      ksedd <= 12'd0;      lsbd729            <= 8'd0;      neeb94a           <= 8'd0;      yk5ca53          <= 8'd0;   end   else begin                  if(mtb4c94) begin            qv294c1  <= 12'd0;         zx4a60d  <= 12'd0;      end      else begin                  qv294c1 <= (mg5c6f) ? (qv294c1 + ps791cc) : qv294c1;
                  zx4a60d  <= (ec92947) ? wwe5298 : zx4a60d;       end                  ay5306f       <= qv294c1 - zx4a60d;                  ie98378 <= wwe5298 - zx4a60d;                  if(ay5306f <= 12'd2047)                      wwe5298 <= qv294c1;      else if(ie98378 <= 12'd2047)           wwe5298 <= zx4a60d + 12'd2047;            if(mtb4c94) begin            wlde09  <= 12'd0;         en6f04d  <= 12'd0;      end      else begin         case({rt71bc8, wjcc5dd})            2'b01   : wlde09  <= wlde09 + 1'b1;            2'b10,            2'b11   : wlde09  <= wlde09 + cm68172;            default : wlde09  <= wlde09;         endcase         en6f04d  <= (vx94a39) ? cmc1bc1 : en6f04d;      end      ay7826c       <= wlde09 - en6f04d;      cmc1360 <= cmc1bc1 - en6f04d;      if(ay7826c <= 12'd2047)         cmc1bc1 <= wlde09;      else if(cmc1360 <= 12'd2047)         cmc1bc1 <= en6f04d + 12'd2047;            if(mtb4c94) begin            fa4d807  <= 12'd0;         xw6c03b  <= 12'd0;      end      else begin         fa4d807  <= (wj6f239) ? (fa4d807 + vi47317) : fa4d807;         xw6c03b  <= (xla51ce) ? tj9b00 : xw6c03b;      end      cz601db       <= fa4d807 - xw6c03b;      ksedd <= tj9b00 - xw6c03b;      if(cz601db <= 12'd2047)         tj9b00 <= fa4d807;      else if(ksedd <= 12'd2047)         tj9b00 <= xw6c03b + 12'd2047;                  if(mtb4c94) begin            lsbd729   <= 8'd0;         neeb94a  <= 8'd0;         yk5ca53 <= 8'd0;      end      else begin         lsbd729   <= (bl40b8d) ? (lsbd729 + 1'b1) : lsbd729;         neeb94a  <= (wy2e379) ? (neeb94a + 1'b1) : neeb94a;         yk5ca53 <= (ie8de47) ? (yk5ca53 + 1'b1) : yk5ca53;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      qi3b74d    <= 8'd0;      zxdd349   <= 8'd0;      fa4d27e  <= 8'd0;      ir76e9   <= 12'd0;      eadba69  <= 12'd0;      lde9a4f <= 12'd0;   end   else begin            qi3b74d     <= (!baa20a1) ? (fn4523e + lsbd729) : fn4523e;      ir76e9    <= (!ym1050a) ? (lq47dab + wwe5298) : lq47dab;            zxdd349    <= (!wy82851) ? (qv291f6 + neeb94a) : qv291f6;      eadba69   <= (!vk14288) ? (ks3ed5a + cmc1bc1) : ks3ed5a;            fa4d27e   <= (!ana1443) ? (xw48fb5 + yk5ca53) : xw48fb5;      lde9a4f  <= (!uka21d) ? (hbf6ad0 + tj9b00) : hbf6ad0;   end
end


`else




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin         qi3b74d    <= 8'd0;         zxdd349   <= 8'd0;         fa4d27e  <= 8'd0;         ir76e9   <= 12'd0;         eadba69  <= 12'd0;         lde9a4f <= 12'd0;   end   else begin      if(mtb4c94) begin            qi3b74d    <= fn4523e;         zxdd349   <= qv291f6;         fa4d27e  <= xw48fb5;         ir76e9   <= lq47dab;         eadba69  <= ks3ed5a;         lde9a4f <= hbf6ad0;      end      else begin                  if (!baa20a1 && bl40b8d && yk62eec)            qi3b74d <= (gdbbb0c + 2) ;         else if (!baa20a1 && sud4414)            qi3b74d <= (gdbbb0c + 1) ;         ir76e9   <= (!ym1050a && mg5c6f) ? (gd17761 + ps791cc) : gd17761;                  if (!wy82851 && wy2e379 && sj398bb)            zxdd349 <= (xjec326 + 2) ;         else if (!wy82851 && ri2f510)            zxdd349 <= (xjec326 + 1) ;         if (!vk14288) begin            case({rt71bc8, wjcc5dd})               2'b01   : eadba69  <= bldd864 + 1'b1;               2'b10,               2'b11   : eadba69  <= bldd864 + cm68172;               default : eadba69  <= bldd864;            endcase         end                  fa4d27e  <= (!ana1443 && ie8de47) ? (rvc9be + 1) : rvc9be;         lde9a4f <= (!uka21d && wj6f239) ? (dz61937 + vi47317) : dz61937;      end   end
end

`endif










`ifdef AER
      
assign vv4016a   = gdbbb0c   - zk7c22d;
assign mgb56   = gd17761  - vie116a;
assign wy5ab1  = xjec326  - ir8b53;
assign bn2d589  = bldd864 - xj45a9d;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wl20ac        <= 8'd0;      ym10565       <= 12'd0;      wy82b29       <= 8'd0;      uk15948      <= 12'd0;      mgaca40   <= 8'd0;      of65200  <= 12'd0;      ep29005  <= 8'd0;      fa4802d <= 12'd0;            ip6ac4f     <= 1'b0;      kq5627d     <= 1'b0;      mtb13e8    <= 1'b0;      ri89f44    <= 1'b0;      zkcae9c        <= 1'b0;   end   else begin            if(vc_rcvd) begin            mgaca40   <= (!baa20a1  && ph_rcvd)  ? zk7c22d   : jr2d4ef;         of65200  <= (!ym1050a  && pd_rcvd)  ? vie116a  : uv6a77f;         ep29005  <= (!wy82851 && nph_rcvd) ? ir8b53  : yk53bfc;         fa4802d <= (!vk14288 && npd_rcvd) ? xj45a9d : wy9dfe1;      end                  ip6ac4f  <= (goeff08  >= 'd128)  ? 1'b1 : 1'b0;      kq5627d  <= (wj7f841  >= 'd2048) ? 1'b1 : 1'b0;      mtb13e8 <= (zxfc20c >= 'd128)  ? 1'b1 : 1'b0;      ri89f44 <= (vie1066 >= 'd2048) ? 1'b1 : 1'b0;      zkcae9c     <= ir8333 | sh4199c | vxcce5 | vi6672f;            if(mtb4c94)          wl20ac      <= 8'd0;      else if(!baa20a1 && vc_rcvd) begin            if(ph_rcvd)            wl20ac      <= zk7c22d + 1;         else if(ir8333 || sh4199c || malf_pkt_ph)            wl20ac      <= jr2d4ef;      end      if(mtb4c94)          ym10565     <= 12'd0;      else if(!ym1050a && vc_rcvd) begin            if(pd_rcvd)            ym10565     <= vie116a + credits_rcvd;         else if(ir8333 || sh4199c || malf_pkt_pd)            ym10565     <= uv6a77f;      end      if(mtb4c94)          wy82b29     <= 8'd0;      else if(!wy82851 && vc_rcvd) begin            if(nph_rcvd)            wy82b29     <= ir8b53 + 1;         else if(vxcce5 || vi6672f || malf_pkt_nph)            wy82b29     <= yk53bfc;      end      if(mtb4c94)          uk15948     <= 12'd0;      else if(!vk14288 && vc_rcvd) begin            if(npd_rcvd)            uk15948    <= xj45a9d + credits_rcvd;         else if(vxcce5 || vi6672f || malf_pkt_npd)            uk15948    <= wy9dfe1;      end   end
end

`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tu693f2      <= 1'b0;      ui49f93     <= 1'b0;      pf4fc99    <= 1'b0;      zxf9291   <= 1'b0;      wjc948e  <= 1'b0;      bl4a474 <= 1'b0;   end   else begin                        tu693f2    <= ec92947 | zxf9291 | mtb4c94 | !xl32528;      ui49f93   <= vx94a39 | wjc948e | mtb4c94 | !xl32528;      pf4fc99  <= xla51ce | bl4a474 | mtb4c94 | !xl32528;            zxf9291   <= ((fn4523e == 0)   && (lq47dab == 0))   ? 1'b1 : 1'b0;      wjc948e  <= ((qv291f6 == 0)  && (ks3ed5a == 0))  ? 1'b1 : 1'b0;      bl4a474 <= ((xw48fb5 == 0) && (hbf6ad0 == 0)) ? 1'b1 : 1'b0;   end
end



















assign rt4fa23   = zz28e77 | rt64df7;
assign kq7d11e  = ne473be | yz26fbe;
assign gbe88f0 = gd39df3 | hd37df5;

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      xj7e4ce    <= 0;      kdf2677  <= 0;      ngb22f7       <= 1'b0;      fp917bb      <= 1'b0;      db8bddf     <= 1'b0;   end   else begin                              if(ngb22f7) begin         if(ep3397a)            ngb22f7  <= 1'b0;      end      else         ngb22f7   <= (cmcef9d & sud4414) | (ui77ce8 & mg5c6f);      if(fp917bb) begin         if(fc9cbd4)            fp917bb  <= 1'b0;      end      else         fp917bb  <= (epbe740 & ri2f510) | (pff3a05 & cz7a882) ;      if(db8bddf) begin         if(aye5ea2)            db8bddf  <= 1'b0;      end      else         db8bddf <= (ou9d02e & ie8de47) | (ale8171 & wj6f239);   end
end






assign an8f0d4   = (pf7490d == (fpb5686 - 1)) ? 1'b1 : 1'b0;
assign qtc3528  = (uk2437c == (fn5a1b4 - 1)) ? 1'b1 : 1'b0;
assign god4a29 = (cbdf08 == (ri86d32 - 1)) ? 1'b1 : 1'b0;

assign ic786a5   = (uxa486f >= ohab436) ? 1'b1 : 1'b0;
assign co1a945  = (ym21be1 >= byd0da6) ? 1'b1 : 1'b0;
assign hda5148 = (al6f845 >= ir36992) ? 1'b1 : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      me77a90    <= 0;      ribd480    <= 0;      icea402   <= 0;      ho52010   <= 0;      oh90082  <= 0;      wl80415  <= 0;      fc933bd           <= 0;      xy99dea          <= 0;      oscef52         <= 0;      en5eefe      <= 1'b0;      yxf77f5     <= 1'b0;      ohbbfad    <= 1'b0;   end   else begin                              if(cmcef9d || rt64df7 || (of510e9 && sud4414))         me77a90  <= 0;      else         me77a90  <= (sud4414) ? (pf7490d + 1) : pf7490d;
      if(ui77ce8 || rt64df7 || uk8874d)         ribd480  <= 0;      else if (mg5c6f)         ribd480  <= uxa486f + ps791cc;            if(epbe740 || yz26fbe || (ic43a68 && ri2f510))         icea402  <= 0;      else         icea402  <= (ri2f510) ? (uk2437c + 1) : uk2437c;
      if(pff3a05 || yz26fbe || oh1d340)         ho52010  <= 0;      else if (rt71bc8)         ho52010  <= ym21be1 + vvc8e62;
            if(ou9d02e || hd37df5 || (ble9a05 && ie8de47))         oh90082  <= 0;      else        oh90082  <= (ie8de47) ? (cbdf08 + 1) : cbdf08;
      if(ale8171 || hd37df5 || dm4d02e)         wl80415  <= 0;      else if (wj6f239)         wl80415  <= al6f845 + vi47317;            if(en5eefe) begin         if(ep3397a)            en5eefe  <= 1'b0;      end      else         en5eefe   <= (sud4414 && of510e9) | (uk8874d) |                         (!rt64df7 && uka64a5);      if(yxf77f5) begin         if(fc9cbd4)            yxf77f5  <= 1'b0;      end      else         yxf77f5  <= (ri2f510 && ic43a68) | (oh1d340) |                         (!yz26fbe && uka64a5);      if(ohbbfad) begin         if(aye5ea2)            ohbbfad  <= 1'b0;      end      else         ohbbfad <= (ie8de47 && ble9a05) | (dm4d02e) |                         (!hd37df5 && uka64a5);   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      lqdfd6c       <= 1'b0;      byfeb63      <= 1'b0;      kqf5b1a     <= 1'b0;   end   else begin      if(lqdfd6c) begin         if(ep3397a)            lqdfd6c  <= 1'b0;      end      else         lqdfd6c   <=  !rt64df7 && (sud4414 | mg5c6f);      if(byfeb63) begin         if(fc9cbd4)            byfeb63  <= 1'b0;      end      else         byfeb63   <=  !yz26fbe && ((ri2f510) | (cz7a882));      if(kqf5b1a) begin         if(aye5ea2)            kqf5b1a  <= 1'b0;      end      else         kqf5b1a <=  !hd37df5 && (ie8de47 | wj6f239);   end
end

always@* begin fn4523e<={ykf5d6d>>1,xjc2975[0]};qv291f6<={ohaeb69>>1,xjc2975[1]};xw48fb5<={ip75b4d>>1,xjc2975[2]};lq47dab<={puada6d>>1,xjc2975[3]};ks3ed5a<={kq6d36a>>1,xjc2975[4]};hbf6ad0<={by69b51>>1,xjc2975[5]};fpb5686<={dm4da8a>>1,xjc2975[6]};ohab436<={go6d453>>1,xjc2975[7]};fn5a1b4<={wj6a299>>1,xjc2975[8]};byd0da6<={qt514cc>>1,xjc2975[9]};ri86d32<={mt8a665>>1,xjc2975[10]};ir36992<={ay5332d>>1,xjc2975[11]};mtb4c94<=xjc2975[12];uka64a5<=xjc2975[13];xl32528<=xjc2975[14];ec92947<=xjc2975[15];vx94a39<=xjc2975[16];xla51ce<=xjc2975[17];zz28e77<=xjc2975[18];ne473be<=xjc2975[19];gd39df3<=xjc2975[20];cmcef9d<=xjc2975[21];ui77ce8<=xjc2975[22];epbe740<=xjc2975[23];pff3a05<=xjc2975[24];ou9d02e<=xjc2975[25];ale8171<=xjc2975[26];bl40b8d<=xjc2975[27];mg5c6f<=xjc2975[28];wy2e379<=xjc2975[29];rt71bc8<=xjc2975[30];ie8de47<=xjc2975[31];wj6f239<=xjc2975[32];ps791cc<={oua9cc7>>1,xjc2975[33]};vvc8e62<={en4e638>>1,xjc2975[34]};vi47317<={ps731c5>>1,xjc2975[35]};sj398bb<=xjc2975[36];wjcc5dd<=xjc2975[37];yk62eec<=xjc2975[38];gd17761<={ir76e9>>1,xjc2975[39]};gdbbb0c<={qi3b74d>>1,xjc2975[40]};bldd864<={eadba69>>1,xjc2975[41]};xjec326<={zxdd349>>1,xjc2975[42]};dz61937<={lde9a4f>>1,xjc2975[43]};rvc9be<={fa4d27e>>1,xjc2975[44]};rt64df7<=xjc2975[45];yz26fbe<=xjc2975[46];hd37df5<=xjc2975[47];epbefae<={xj7e4ce>>1,xjc2975[48]};kdf7d74<={kdf2677>>1,xjc2975[49]};cbbeba4<={fc933bd>>1,xjc2975[50]};suf5d24<={xy99dea>>1,xjc2975[51]};sjae921<={oscef52>>1,xjc2975[52]};pf7490d<={me77a90>>1,xjc2975[53]};uxa486f<={ribd480>>1,xjc2975[54]};uk2437c<={icea402>>1,xjc2975[55]};ym21be1<={ho52010>>1,xjc2975[56]};cbdf08<={oh90082>>1,xjc2975[57]};al6f845<={wl80415>>1,xjc2975[58]};zk7c22d<={wl20ac>>1,xjc2975[59]};vie116a<={ym10565>>1,xjc2975[60]};ir8b53<={wy82b29>>1,xjc2975[61]};xj45a9d<={uk15948>>1,xjc2975[62]};jr2d4ef<={mgaca40>>1,xjc2975[63]};uv6a77f<={of65200>>1,xjc2975[64]};yk53bfc<={ep29005>>1,xjc2975[65]};wy9dfe1<={fa4802d>>1,xjc2975[66]};goeff08<={vv4016a>>1,xjc2975[67]};wj7f841<={mgb56>>1,xjc2975[68]};zxfc20c<={wy5ab1>>1,xjc2975[69]};vie1066<={bn2d589>>1,xjc2975[70]};ir8333<=xjc2975[71];sh4199c<=xjc2975[72];vxcce5<=xjc2975[73];vi6672f<=xjc2975[74];ep3397a<=xjc2975[75];fc9cbd4<=xjc2975[76];aye5ea2<=xjc2975[77];ri2f510<=xjc2975[78];cz7a882<=xjc2975[79];sud4414<=xjc2975[80];baa20a1<=xjc2975[81];ym1050a<=xjc2975[82];wy82851<=xjc2975[83];vk14288<=xjc2975[84];ana1443<=xjc2975[85];uka21d<=xjc2975[86];of510e9<=xjc2975[87];uk8874d<=xjc2975[88];ic43a68<=xjc2975[89];oh1d340<=xjc2975[90];ble9a05<=xjc2975[91];dm4d02e<=xjc2975[92];cm68172<={bn28a47>>1,xjc2975[93]};end
always@* begin ux1852e[2047]<=ohaeb69[0];ux1852e[2046]<=ip75b4d[0];ux1852e[2044]<=puada6d[0];ux1852e[2041]<=kq6d36a[0];ux1852e[2037]<=qv23c24;ux1852e[2035]<=by69b51[0];ux1852e[2027]<=tw1e125;ux1852e[2022]<=dm4da8a[0];ux1852e[2006]<=icf092a;ux1852e[1996]<=go6d453[0];ux1852e[1965]<=bn28a47[0];ux1852e[1964]<=rv84951;ux1852e[1945]<=wj6a299[0];ux1852e[1919]<=rt4fa23;ux1852e[1881]<=ks24a8f;ux1852e[1843]<=qt514cc[0];ux1852e[1790]<=kq7d11e;ux1852e[1775]<=kq5627d;ux1852e[1752]<=ui49f93;ux1852e[1746]<=fcad8d1;ux1852e[1728]<=kdf2677[0];ux1852e[1715]<=tw25478;ux1852e[1685]<=kf39400;ux1852e[1658]<=qtc3528;ux1852e[1645]<=phy_l0_l0s;ux1852e[1638]<=mt8a665[0];ux1852e[1605]<=oua9cc7[0];ux1852e[1536]<=oscef52[0];ux1852e[1533]<=gbe88f0;ux1852e[1503]<=mtb13e8;ux1852e[1467]<=bn2d589[0];ux1852e[1456]<=pf4fc99;ux1852e[1445]<=jc6c68a;ux1852e[1438]<=an8f0d4;ux1852e[1425]<=coaa73;ux1852e[1408]<=fc933bd[0];ux1852e[1390]<=mgb56[0];ux1852e[1383]<=ri2a3c3;ux1852e[1380]<=nph_processed;ux1852e[1371]<=fa4802d[0];ux1852e[1369]<=ux23f0a;ux1852e[1366]<=of65200[0];ux1852e[1334]<=eadba69[0];ux1852e[1322]<=faca004;ux1852e[1269]<=co1a945;ux1852e[1243]<=lde9a4f[0];ux1852e[1242]<=epa437e;ux1852e[1229]<=ay5332d[0];ux1852e[1195]<=gd8011f;ux1852e[1162]<=en4e638[0];ux1852e[1107]<=dzc7158;ux1852e[1024]<=me77a90[0];ux1852e[1023]<=ykf5d6d[0];ux1852e[1018]<=sh44784;ux1852e[982]<=hda5148;ux1852e[959]<=ri89f44;ux1852e[887]<=ip6ac4f;ux1852e[876]<=tu693f2;ux1852e[873]<=sjdfa8;ux1852e[864]<=xj7e4ce[0];ux1852e[842]<=tu63453;ux1852e[829]<=ic786a5;ux1852e[822]<=ipccb42;ux1852e[802]<=xj55398;ux1852e[768]<=xy99dea[0];ux1852e[733]<=wy5ab1[0];ux1852e[719]<=cz51e1a;ux1852e[712]<=npd_processed;ux1852e[695]<=vv4016a[0];ux1852e[690]<=ym1f855;ux1852e[685]<=ep29005[0];ux1852e[684]<=zm47e1;ux1852e[683]<=mgaca40[0];ux1852e[667]<=qi3b74d[0];ux1852e[621]<=zxdd349[0];ux1852e[597]<=zx50023;ux1852e[553]<=sw98e2b;ux1852e[491]<=god4a29;ux1852e[438]<=fa4d27e[0];ux1852e[436]<=aa21bf5;ux1852e[411]<=je99968;ux1852e[342]<=wy8fc;ux1852e[341]<=uk15948[0];ux1852e[333]<=ir76e9[0];ux1852e[276]<=ps731c5[0];ux1852e[170]<=wy82b29[0];ux1852e[166]<=fp38ac7;ux1852e[85]<=ym10565[0];ux1852e[42]<=wl20ac[0];ux1852e[21]<=wl80415[0];ux1852e[10]<=oh90082[0];ux1852e[5]<=ho52010[0];ux1852e[2]<=icea402[0];ux1852e[1]<=ribd480[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module  pcie_x1_top_ip4e993(
   input wire               sys_clk,              
   input wire               rst_n,                

   
   input wire [(8*`NUM_VC)-1:0]  ykf5d6d,      
   input wire [(8*`NUM_VC)-1:0]  ohaeb69,     
   input wire [(8*`NUM_VC)-1:0]  ip75b4d,    
   input wire [(12*`NUM_VC)-1:0] puada6d,      
   input wire [(12*`NUM_VC)-1:0] kq6d36a,     
   input wire [(12*`NUM_VC)-1:0] by69b51,    

   input wire [6:0]         dm4da8a,       
   input wire [10:0]        go6d453,       
   input wire [6:0]         wj6a299,      
   input wire [10:0]        qt514cc,      
   input wire [6:0]         mt8a665,     
   input wire [10:0]        ay5332d,     
   input wire [11:0]        wwcb0de,
   
   input wire [`NUM_VC-1:0] vcneg_pend,           
   input wire               qtc378b,         

   
   input wire               phy_l0_l0s,           

   
   input wire               hq111f2,           
   input wire               qi88f93,           
   input wire [`NUM_VC-1:0] epa437e,          
   input wire [`NUM_VC-1:0] aa21bf5,         
   input wire [`NUM_VC-1:0] sjdfa8,        

   
   input wire [`NUM_VC-1:0] kf39400,        
   input wire [`NUM_VC-1:0] faca004,        
   input wire [`NUM_VC-1:0] zx50023,       
   input wire [`NUM_VC-1:0] gd8011f,       
   input wire [`NUM_VC-1:0] wy8fc,      
   input wire [`NUM_VC-1:0] zm47e1,      
   input wire [`NUM_VC-1:0] ux23f0a,         
   input wire [`NUM_VC-1:0] ym1f855,         
   input wire [`NUM_VC-1:0] nph_processed,        
   input wire [`NUM_VC-1:0] npd_processed,        
   input wire [`NUM_VC-1:0] coaa73,       
   input wire [`NUM_VC-1:0] xj55398,       
   input wire               sw98e2b,    
   input wire               dzc7158,    
   input wire               fp38ac7,     

   input wire [7:0]         oua9cc7,               
   input wire [7:0]         en4e638,              
   input wire [7:0]         ps731c5,             

`ifdef AER
   
   input wire               vc_rcvd,              
   input wire               ph_rcvd,              
   input wire               pd_rcvd,              
   input wire               nph_rcvd,             
   input wire               npd_rcvd ,            
   input wire [8:0]         credits_rcvd,         

   input wire               malf_pkt_ph,          
   input wire               malf_pkt_pd,          
   input wire               malf_pkt_nph,         
   input wire               malf_pkt_npd,         
`endif

   
   output wire       ntba23f,              
   output wire [2:0] god11ff,                
   output wire [1:0] ie88ff9,                

   output wire       vi47fc9,              
   output wire [2:0] ng3fe4a,                
   output wire [1:0] cmff252,                

   output wire [`NUM_VC-1:0] zxf9291,   
   output wire [`NUM_VC-1:0] wjc948e,  
   output wire [`NUM_VC-1:0] bl4a474, 

   `ifdef AER
      output wire    fc_overflow,             
   `endif
   output wire [(24*`NUM_VC)-1:0] xw574e2,       
   output wire [(24*`NUM_VC)-1:0] ntba712,      
   output wire [(24*`NUM_VC)-1:0] ipd3897      
   );
parameter ne4231a   = 2'b00;
parameter fc118d3  = 2'b01;
parameter xy8c69a = 2'b10;
integer                     endc2dd;
wire  [`NUM_VC-1:0]         ngb22f7;
wire  [`NUM_VC-1:0]         fp917bb;
wire  [`NUM_VC-1:0]         db8bddf;
wire  [`NUM_VC-1:0]         en5eefe;
wire  [`NUM_VC-1:0]         yxf77f5;
wire  [`NUM_VC-1:0]         ohbbfad;
wire  [`NUM_VC-1:0]         lqdfd6c;
wire  [`NUM_VC-1:0]         byfeb63;
wire  [`NUM_VC-1:0]         kqf5b1a;
wire  [`NUM_VC-1:0]         fcad8d1;
wire  [`NUM_VC-1:0]         jc6c68a;
wire  [`NUM_VC-1:0]         tu63453;
wire                        ipccb42;
wire  [13:0]                rt5a8ac;
reg   [13:0]                wwd4567;
wire  [`NUM_VC -1:0]        hqa2b39;
wire  [`NUM_VC -1:0]        ym159cb;
wire  [`NUM_VC -1:0]        swace58;
wire  [`NUM_VC -1:0]        ic672c0;

`ifdef VC1

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif
reg [(8 * `NUM_VC) - 1 : 0] fn4523e;
reg [(8 * `NUM_VC) - 1 : 0] qv291f6;
reg [(8 * `NUM_VC) - 1 : 0] xw48fb5;
reg [(12 * `NUM_VC) - 1 : 0] lq47dab;
reg [(12 * `NUM_VC) - 1 : 0] ks3ed5a;
reg [(12 * `NUM_VC) - 1 : 0] hbf6ad0;
reg [6 : 0] fpb5686;
reg [10 : 0] ohab436;
reg [6 : 0] fn5a1b4;
reg [10 : 0] byd0da6;
reg [6 : 0] ri86d32;
reg [10 : 0] ir36992;
reg [11 : 0] fp8bc6d;
reg [`NUM_VC - 1 : 0] psd00bd;
reg rgf1b74;
reg xl32528;
reg xw63705;
reg tw1b82a;
reg [`NUM_VC - 1 : 0] ec92947;
reg [`NUM_VC - 1 : 0] vx94a39;
reg [`NUM_VC - 1 : 0] xla51ce;
reg [`NUM_VC - 1 : 0] cmcef9d;
reg [`NUM_VC - 1 : 0] ui77ce8;
reg [`NUM_VC - 1 : 0] epbe740;
reg [`NUM_VC - 1 : 0] pff3a05;
reg [`NUM_VC - 1 : 0] ou9d02e;
reg [`NUM_VC - 1 : 0] ale8171;
reg [`NUM_VC - 1 : 0] bl40b8d;
reg [`NUM_VC - 1 : 0] mg5c6f;
reg [`NUM_VC - 1 : 0] wy2e379;
reg [`NUM_VC - 1 : 0] rt71bc8;
reg [`NUM_VC - 1 : 0] ie8de47;
reg [`NUM_VC - 1 : 0] wj6f239;
reg sj398bb;
reg wjcc5dd;
reg yk62eec;
reg [7 : 0] ps791cc;
reg [7 : 0] vvc8e62;
reg [7 : 0] vi47317;
reg [`NUM_VC - 1 : 0] ofdc153;
reg [`NUM_VC - 1 : 0] yke0a9d;
reg [`NUM_VC - 1 : 0] aa54e8;
reg [`NUM_VC - 1 : 0] ba2a740;
reg [`NUM_VC - 1 : 0] cm53a02;
reg [`NUM_VC - 1 : 0] co9d011;
reg [`NUM_VC - 1 : 0] ipe8089;
reg [`NUM_VC - 1 : 0] nr4044d;
reg [`NUM_VC - 1 : 0] cb226e;
reg [`NUM_VC - 1 : 0] zz28e77;
reg [`NUM_VC - 1 : 0] ne473be;
reg [`NUM_VC - 1 : 0] gd39df3;
reg uka64a5;
reg [13 : 0] qt41c05;
reg [13 : 0] doe02d;
reg [`NUM_VC - 1 : 0] ip7016b;
reg [`NUM_VC - 1 : 0] mt80b5c;
reg [`NUM_VC - 1 : 0] wy5ae5;
reg [`NUM_VC - 1 : 0] bn2d729;
reg [2047:0] ux1852e;
wire [57:0] xjc2975;

`ifdef VC1

`else

`endif



`ifdef AER

`endif

`ifdef AER

`endif

localparam do14bae = 58,jra5d72 = 32'hfdffda0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef VC1


`else


`endif


`ifdef AER


`endif


`ifdef AER


`endif







`ifdef VC1
   assign hqa2b39 = sj398bb;   assign ym159cb = wjcc5dd;   assign swace58  = yk62eec;


`else
   assign hqa2b39 = {{`NUM_VC -1{1'b0}},sj398bb};   assign ym159cb = {{`NUM_VC -1{1'b0}},wjcc5dd};   assign swace58  = {{`NUM_VC -1{1'b0}},yk62eec};


`endif


assign fc_overflow = |bn2d729;



assign rt5a8ac = (rgf1b74) ? {fp8bc6d, 2'b00} : {2'b00, fp8bc6d};
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0)      wwd4567 <= 14'h0;   else if (uka64a5)      wwd4567 <= 14'h0;   else      wwd4567 <= doe02d + 14'h1;
end
assign ipccb42 = (doe02d == qt41c05) ? 1'b1  : 1'b0;


   pcie_x1_top_ba20bf6 tj9e3c2(            .sys_clk                  (sys_clk),      .rst_n                    (rst_n),      .hq111f2               (xw63705),      .qi88f93               (tw1b82a),      .ngb22f7                (ofdc153),      .fp917bb               (yke0a9d),      .db8bddf              (aa54e8),      .en5eefe               (ba2a740),      .yxf77f5              (cm53a02),      .ohbbfad             (co9d011),      .lqdfd6c                 (ipe8089),      .byfeb63                (nr4044d),      .kqf5b1a               (cb226e),            .ntba23f               (ntba23f),      .god11ff                 (god11ff),      .ie88ff9                 (ie88ff9),      .vi47fc9               (vi47fc9),      .ng3fe4a                 (ng3fe4a),      .cmff252                 (cmff252),      .fcad8d1               (fcad8d1),      .jc6c68a              (jc6c68a),      .tu63453             (tu63453)      );



pcie_x1_top_ux957ae xy11f9 [`NUM_VC-1:0] (            .sys_clk                  (sys_clk),      .rst_n                    (rst_n),            .ykf5d6d               (fn4523e),      .ohaeb69              (qv291f6),      .ip75b4d             (xw48fb5),      .puada6d               (lq47dab),      .kq6d36a              (ks3ed5a),      .by69b51             (hbf6ad0),      .dm4da8a           (fpb5686),      .go6d453           (ohab436),      .wj6a299          (fn5a1b4),      .qt514cc          (byd0da6),      .mt8a665         (ri86d32),      .ay5332d         (ir36992),      .je99968                  (psd00bd),      .ipccb42              (uka64a5),      .phy_l0_l0s               (xl32528),      .epa437e              (ec92947),      .aa21bf5             (vx94a39),      .sjdfa8            (xla51ce),      .fcad8d1               (zz28e77),      .jc6c68a              (ne473be),      .tu63453             (gd39df3),      .kf39400            (cmcef9d),      .faca004            (ui77ce8),      .zx50023           (epbe740),      .gd8011f           (pff3a05),      .wy8fc          (ou9d02e),      .zm47e1          (ale8171),      .ux23f0a             (bl40b8d),      .ym1f855             (mg5c6f),      .nph_processed            (wy2e379),      .npd_processed            (rt71bc8),      .coaa73           (ie8de47),      .xj55398           (wj6f239),      .sw98e2b        (ip7016b),      .dzc7158        (mt80b5c),      .fp38ac7         (wy5ae5),      .oua9cc7                   (ps791cc),      .en4e638                  (vvc8e62),      .ps731c5                 (vi47317),


`ifdef AER
            .vc_rcvd                  (vc_rcvd),      .ph_rcvd                  (ph_rcvd),      .pd_rcvd                  (pd_rcvd),      .nph_rcvd                 (nph_rcvd),      .npd_rcvd                 (npd_rcvd),      .credits_rcvd             (credits_rcvd),      .malf_pkt_ph              (malf_pkt_ph),      .malf_pkt_pd              (malf_pkt_pd),      .malf_pkt_nph             (malf_pkt_nph),      .malf_pkt_npd             (malf_pkt_npd),


`endif

            .ngb22f7                (ngb22f7),      .fp917bb               (fp917bb),      .db8bddf              (db8bddf),      .en5eefe               (en5eefe),      .yxf77f5              (yxf77f5),      .ohbbfad             (ohbbfad),      .lqdfd6c                 (lqdfd6c),      .byfeb63                (byfeb63),      .kqf5b1a               (kqf5b1a),
      .zxf9291            (zxf9291),      .wjc948e           (wjc948e),      .bl4a474          (bl4a474),


`ifdef AER
      .zkcae9c                 (ic672c0),


`endif
      .xw574e2                     (xw574e2),      .ntba712                    (ntba712),      .ipd3897                   (ipd3897)
      );
always@* begin fn4523e<={ykf5d6d>>1,xjc2975[0]};qv291f6<={ohaeb69>>1,xjc2975[1]};xw48fb5<={ip75b4d>>1,xjc2975[2]};lq47dab<={puada6d>>1,xjc2975[3]};ks3ed5a<={kq6d36a>>1,xjc2975[4]};hbf6ad0<={by69b51>>1,xjc2975[5]};fpb5686<={dm4da8a>>1,xjc2975[6]};ohab436<={go6d453>>1,xjc2975[7]};fn5a1b4<={wj6a299>>1,xjc2975[8]};byd0da6<={qt514cc>>1,xjc2975[9]};ri86d32<={mt8a665>>1,xjc2975[10]};ir36992<={ay5332d>>1,xjc2975[11]};fp8bc6d<={wwcb0de>>1,xjc2975[12]};psd00bd<={vcneg_pend>>1,xjc2975[13]};rgf1b74<=xjc2975[14];xl32528<=xjc2975[15];xw63705<=xjc2975[16];tw1b82a<=xjc2975[17];ec92947<={epa437e>>1,xjc2975[18]};vx94a39<={aa21bf5>>1,xjc2975[19]};xla51ce<={sjdfa8>>1,xjc2975[20]};cmcef9d<={kf39400>>1,xjc2975[21]};ui77ce8<={faca004>>1,xjc2975[22]};epbe740<={zx50023>>1,xjc2975[23]};pff3a05<={gd8011f>>1,xjc2975[24]};ou9d02e<={wy8fc>>1,xjc2975[25]};ale8171<={zm47e1>>1,xjc2975[26]};bl40b8d<={ux23f0a>>1,xjc2975[27]};mg5c6f<={ym1f855>>1,xjc2975[28]};wy2e379<={nph_processed>>1,xjc2975[29]};rt71bc8<={npd_processed>>1,xjc2975[30]};ie8de47<={coaa73>>1,xjc2975[31]};wj6f239<={xj55398>>1,xjc2975[32]};sj398bb<=xjc2975[33];wjcc5dd<=xjc2975[34];yk62eec<=xjc2975[35];ps791cc<={oua9cc7>>1,xjc2975[36]};vvc8e62<={en4e638>>1,xjc2975[37]};vi47317<={ps731c5>>1,xjc2975[38]};ofdc153<={ngb22f7>>1,xjc2975[39]};yke0a9d<={fp917bb>>1,xjc2975[40]};aa54e8<={db8bddf>>1,xjc2975[41]};ba2a740<={en5eefe>>1,xjc2975[42]};cm53a02<={yxf77f5>>1,xjc2975[43]};co9d011<={ohbbfad>>1,xjc2975[44]};ipe8089<={lqdfd6c>>1,xjc2975[45]};nr4044d<={byfeb63>>1,xjc2975[46]};cb226e<={kqf5b1a>>1,xjc2975[47]};zz28e77<={fcad8d1>>1,xjc2975[48]};ne473be<={jc6c68a>>1,xjc2975[49]};gd39df3<={tu63453>>1,xjc2975[50]};uka64a5<=xjc2975[51];qt41c05<={rt5a8ac>>1,xjc2975[52]};doe02d<={wwd4567>>1,xjc2975[53]};ip7016b<={hqa2b39>>1,xjc2975[54]};mt80b5c<={ym159cb>>1,xjc2975[55]};wy5ae5<={swace58>>1,xjc2975[56]};bn2d729<={ic672c0>>1,xjc2975[57]};end
always@* begin ux1852e[2047]<=ohaeb69[0];ux1852e[2046]<=ip75b4d[0];ux1852e[2044]<=puada6d[0];ux1852e[2040]<=kq6d36a[0];ux1852e[2032]<=by69b51[0];ux1852e[2016]<=dm4da8a[0];ux1852e[1984]<=go6d453[0];ux1852e[1934]<=yxf77f5[0];ux1852e[1924]<=gd8011f[0];ux1852e[1921]<=wj6a299[0];ux1852e[1857]<=tu63453[0];ux1852e[1821]<=ohbbfad[0];ux1852e[1801]<=wy8fc[0];ux1852e[1795]<=qt514cc[0];ux1852e[1776]<=kf39400[0];ux1852e[1758]<=epa437e[0];ux1852e[1666]<=ipccb42;ux1852e[1594]<=lqdfd6c[0];ux1852e[1554]<=zm47e1[0];ux1852e[1542]<=mt8a665[0];ux1852e[1505]<=faca004[0];ux1852e[1468]<=aa21bf5[0];ux1852e[1319]<=fp38ac7;ux1852e[1284]<=rt5a8ac[0];ux1852e[1265]<=fp917bb[0];ux1852e[1188]<=xj55398[0];ux1852e[1182]<=en4e638[0];ux1852e[1140]<=byfeb63[0];ux1852e[1061]<=ux23f0a[0];ux1852e[1040]<=hqa2b39[0];ux1852e[1037]<=ay5332d[0];ux1852e[1023]<=ykf5d6d[0];ux1852e[967]<=en5eefe[0];ux1852e[962]<=zx50023[0];ux1852e[928]<=jc6c68a[0];ux1852e[888]<=sjdfa8[0];ux1852e[879]<=qi88f93;ux1852e[659]<=dzc7158;ux1852e[632]<=ngb22f7[0];ux1852e[594]<=coaa73[0];ux1852e[591]<=oua9cc7[0];ux1852e[520]<=wwd4567[0];ux1852e[483]<=db8bddf[0];ux1852e[464]<=fcad8d1[0];ux1852e[439]<=hq111f2;ux1852e[329]<=sw98e2b;ux1852e[316]<=ps731c5[0];ux1852e[297]<=npd_processed[0];ux1852e[232]<=kqf5b1a[0];ux1852e[219]<=phy_l0_l0s;ux1852e[148]<=nph_processed[0];ux1852e[134]<=ic672c0[0];ux1852e[109]<=qtc378b;ux1852e[74]<=ym1f855[0];ux1852e[67]<=swace58[0];ux1852e[54]<=vcneg_pend[0];ux1852e[33]<=ym159cb[0];ux1852e[27]<=wwcb0de[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module  pcie_x1_top_zx7ecf5(
   input wire                    sys_clk,      
   input wire                    rst_n,        
   
   input wire                    dl_inactive,   
   input wire [`NUM_VC-1:0]      swa09d,         
   input wire [`NUM_VC*3-1:0]    iraee39,          
   input wire                    os62849, 
   input wire                    do14249, 
   input wire                    mta124b,  
   input wire [1:0]              coac509, 
   input wire [2:0]              vvcd2fd, 
   input wire [19:0]             rg697ee, 


   input wire [`NUM_VC -1:0]     tx_st,         
   input wire [`NUM_VC -1:0]     tx_end,        
   input wire [`NUM_VC -1:0]     tx_nlfy,       
   `ifdef X4
      input wire [(`NUM_VC*64)-1:0] tx_data,    
      input wire                 jc739ea,    
   `endif
   `ifdef X1
      input wire [(`NUM_VC*16)-1:0] tx_data,    
   `endif

   input wire                    cfg_ph_cc,     
   input wire                    cfg_pd_cc,     
   input wire                    cfg_cplh_cc,   
   input wire                    cfg_cpld_cc,   

   output wire                   aa92b82, 
   
   output reg [(`NUM_VC*9)-1:0]  tx_ca_ph,        
   output reg [(`NUM_VC*13)-1:0] tx_ca_pd,        
   output reg [(`NUM_VC*9)-1:0]  kd70464,       
   output reg [(`NUM_VC*13)-1:0] aa82324,       
   output reg [(`NUM_VC*9)-1:0]  tx_ca_cplh,      
   output reg [(`NUM_VC*13)-1:0] xy8c90a       
   );
parameter nr64853    = 3'b000;
parameter qi2429e   = 3'b001;
parameter sw214f1  = 3'b010;
parameter iea789    = 3'b011;
parameter ui53c49   = 3'b100;
parameter tj9e249  = 3'b101;
parameter ne4231a   = 2'b00;
parameter fc118d3  = 2'b01;
parameter xy8c69a = 2'b10;
reg  [11:0]               ea49c90;
reg  [7:0]                qt4e481;
reg                       rv84951;
reg                       icf092a;
reg  [11:0]               ux90348;
reg  [7:0]                tj81a45;
reg                       tw25478;
reg                       ks24a8f;
reg  [11:0]               lq48be3;
reg  [7:0]                vv45f1b;
reg                       cz51e1a;
reg                       ri2a3c3;
reg                       the37da;
reg                       ng1bed6;
reg                       rgdf6b3;
reg  [11:0]               tufb59a;
reg  [7:0]                dmdacd3;
reg  [11:0]               qtd669b;
reg  [7:0]                gqb34dc;
reg  [11:0]               an9a6e1;
reg  [7:0]                ofd370c;
reg                       tj9b864;
reg                       ofdc327;
reg                       zke193d;
reg                       lfc9ea;
reg  [8:0]                vv64f57;
reg                       fp27abe;
reg                       lf3d5f7;
reg                       meeafbe;
reg                       rg57df1;
reg                       uxbef8b;
reg                       ipf7c5c;
reg                       mtbe2e4;
reg                       zkf1725;
reg                       tj8b92a;
reg                       ay5c956;
reg                       nee4ab0;
reg                       ri25582;
reg                       ba2ac13;
reg                       go5609b;
reg  [11:0]               hdb04d8;
reg  [7:0]                co826c6;
reg  [11:0]               xl13631;
reg  [7:0]                nt9b18e;
reg                       pfd8c76;
reg                       enc63b6;
reg                       ks31db5;
reg                       hd8eda9;
reg                       jc76d4e;
reg                       swb6a72;

`ifdef X1
reg [1:0]              phb5390;
reg [4:0]              oua9c86;

`endif

`ifdef X4
wire [1:0]             phb5390;
wire [4:0]             oua9c86;

`endif
wire                      mt90c29;
wire                      ba8614c;
wire [11:0]               ng30a63;
wire [7:0]                ep8531b;
wire                      ir298dc;
wire                      go4c6e4;
wire                      by63720;
wire                      zm1b902;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg kddc813;
reg [`NUM_VC - 1 : 0] ofedf39;
reg [`NUM_VC * 3 - 1 : 0] ls204e3;
reg ofcc3ed;
reg pf61f6c;
reg gqfb66;
reg [1 : 0] ay7db30;
reg [2 : 0] pu1bbde;
reg [19 : 0] jpddef3;
reg [`NUM_VC - 1 : 0] goef79e;
reg [`NUM_VC - 1 : 0] th7bcf0;
reg [`NUM_VC - 1 : 0] ykde786;
reg zxf3c30;
reg tj9e186;
reg icf0c36;
reg pu861b1;
reg [11 : 0] vk30d8b;
reg [7 : 0] pu86c5b;
reg ym1050a;
reg baa20a1;
reg [11 : 0] ph8b6ac;
reg [7 : 0] al5b567;
reg vk14288;
reg wy82851;
reg [11 : 0] ouacf1a;
reg [7 : 0] cm678d0;
reg uka21d;
reg ana1443;
reg sw1a066;
reg byd0330;
reg xl81983;
reg [11 : 0] jrcc1f;
reg [7 : 0] dm660ff;
reg [11 : 0] pu307fa;
reg [7 : 0] pu83fd2;
reg [11 : 0] qi1fe92;
reg [7 : 0] osff491;
reg osfa489;
reg rtd2449;
reg ou9224e;
reg tj91270;
reg [8 : 0] je89387;
reg yk49c3a;
reg uv4e1d1;
reg of70e8d;
reg ks8746d;
reg hq3a369;
reg kqd1b4b;
reg ks8da58;
reg kq6d2c1;
reg by69609;
reg ip4b04b;
reg vi5825d;
reg cmc12eb;
reg tj9758;
reg cz4bac6;
reg [11 : 0] vi5d634;
reg [7 : 0] dmeb1a3;
reg [11 : 0] tu58d1a;
reg [7 : 0] kdc68d2;
reg co34694;
reg oua34a0;
reg ym1a500;
reg zxd2800;
reg hd94007;
reg tja003f;
reg qi1ff;
reg ymff8;
reg [11 : 0] qv7fc1;
reg [7 : 0] zm3fe0c;
reg uiff062;
reg mrf8311;
reg uic188c;
reg lfc461;
reg [2047:0] ux1852e;
wire [73:0] xjc2975;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 74,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif









`ifdef X1



`endif



`ifdef X4



`endif





assign aa92b82 = tj9758 | cz4bac6;
assign ng30a63 = jpddef3[11:0];
assign ep8531b  = jpddef3[19:12];






always @ (*) begin   hdb04d8 = 0;   co826c6  = 0;   case(ay7db30)      ne4231a   : begin         hdb04d8 = vk30d8b;         co826c6  = pu86c5b;      end      fc118d3  :  begin         hdb04d8 = ph8b6ac;         co826c6  = al5b567;      end      xy8c69a :  begin         hdb04d8 = ouacf1a;         co826c6  = cm678d0;      end   endcase
end
assign ir298dc  = (zm3fe0c != 0) ? 1'b1 : 1'b0;
assign go4c6e4 = (qv7fc1 != 0) ? 1'b1 : 1'b0;
assign zm1b902 = co34694 | ym1a500 | hd94007;
assign by63720  = oua34a0 | zxd2800 | tja003f;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ba2ac13  <= 1'b0;      go5609b  <= 1'b0;      xl13631         <= 0;      nt9b18e          <= 0;      pfd8c76            <= 1'b0;      enc63b6            <= 1'b0;      ks31db5           <= 1'b0;      hd8eda9           <= 1'b0;      jc76d4e          <= 1'b0;      swb6a72          <= 1'b0;   end   else begin      ba2ac13  <= 1'b0;      go5609b  <= 1'b0;      pfd8c76            <= 1'b0;      enc63b6            <= 1'b0;      ks31db5           <= 1'b0;      hd8eda9           <= 1'b0;      jc76d4e          <= 1'b0;      swb6a72          <= 1'b0;            if(pu1bbde == ls204e3) begin         case(ay7db30)            ne4231a : begin               if(gqfb66 && sw1a066) begin                  pfd8c76 <= !ym1050a;                  enc63b6 <= !baa20a1;                  if((ym1050a && mrf8311) || (baa20a1 && uiff062))                     ba2ac13  <= 1'b1;               end            end            fc118d3 : begin               if(gqfb66 && byd0330) begin                  ks31db5 <= !vk14288;                  hd8eda9 <= !wy82851;                  if((vk14288 && mrf8311) || (wy82851 && uiff062))                     ba2ac13  <= 1'b1;               end            end            xy8c69a : begin               if(gqfb66 && xl81983) begin                  jc76d4e <= !uka21d;                  swb6a72 <= !ana1443;                  if((uka21d && mrf8311) || (ana1443 && uiff062))                     ba2ac13  <= 1'b1;               end            end         endcase      end            xl13631 <= qv7fc1 - vi5d634;      nt9b18e  <= zm3fe0c  - dmeb1a3;      if(((tu58d1a > 2047) && lfc461) || ((kdc68d2 > 127) && uic188c))         go5609b  <= 1'b1;      else         go5609b  <= 1'b0;   end
end









assign mt90c29  = ofcc3ed | pf61f6c | gqfb66;
assign ba8614c     = ofcc3ed | pf61f6c;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ea49c90      <= 12'h000;      qt4e481       <= 8'h00;      ux90348     <= 12'h000;      tj81a45      <= 8'h00;      lq48be3    <= 12'h000;      vv45f1b     <= 8'h00;      rv84951        <= 1'b0;      icf092a        <= 1'b0;      tw25478       <= 1'b0;      ks24a8f       <= 1'b0;      cz51e1a      <= 1'b0;      ri2a3c3      <= 1'b0;      the37da          <= 1'b0;      ng1bed6         <= 1'b0;      rgdf6b3        <= 1'b0;   end   else begin                                    if(pu1bbde == ls204e3) begin         case(ay7db30)            ne4231a : begin               if(qi1ff) begin                  ea49c90    <= qv7fc1;                  qt4e481     <= zm3fe0c;               end               if(ymff8) begin                  if(sw1a066 == 1'b0) begin                     rv84951      <= (mrf8311) ? 1'b0 : 1'b1;                     icf092a      <= (uiff062) ? 1'b0 : 1'b1;                  end               end            end            fc118d3 : begin               if(qi1ff) begin                  ux90348   <= qv7fc1;                  tj81a45    <= zm3fe0c;               end               if(ymff8) begin                  if(byd0330 == 1'b0) begin                     tw25478     <= (mrf8311) ? 1'b0 : 1'b1;                     ks24a8f     <= (uiff062) ? 1'b0 : 1'b1;                  end               end            end            xy8c69a : begin               if(qi1ff) begin                  lq48be3  <= qv7fc1;                  vv45f1b   <= zm3fe0c;               end               if(ymff8) begin                  if(xl81983 == 1'b0) begin                     cz51e1a    <= (mrf8311) ? 1'b0 : 1'b1;                     ri2a3c3    <= (uiff062) ? 1'b0 : 1'b1;                  end               end            end         endcase      end                        if(kddc813 || !ofedf39) begin         the37da   <= 1'b0;         ng1bed6  <= 1'b0;         rgdf6b3 <= 1'b0;      end      else if((pu1bbde == ls204e3) && ymff8) begin         case(ay7db30)            ne4231a   : the37da   <= 1'b1;            fc118d3  : ng1bed6  <= 1'b1;            xy8c69a : rgdf6b3 <= 1'b1;         endcase      end   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tj9b864     <= 1'b0;      lfc9ea      <= 1'b0;      ofdc327  <= 1'b0;      zke193d  <= 1'b0;   end   else begin


`ifdef X1
      tj9b864     <= goef79e;      lfc9ea      <= ykde786;      ofdc327  <= osfa489 | icf0c36 | zxf3c30;      zke193d  <= icf0c36 | zxf3c30;


`endif



`ifdef X4
      tj9b864     <= (goef79e | icf0c36 | zxf3c30)  & jc739ea;      lfc9ea      <= ykde786 & jc739ea;      ofdc327  <= osfa489;      if(jc739ea)         zke193d <= icf0c36 | zxf3c30;


`endif
   end
end













`ifdef X1

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      phb5390   <= 2'b00;      oua9c86 <= 5'b00000;   end   else if (goef79e) begin      phb5390   <= tx_data[14:13];      oua9c86 <= tx_data[12:8];   end
end

`endif



`ifdef X4
   assign phb5390      = tx_data[62:61];   assign oua9c86 = tx_data[60:56];

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fp27abe     <= 1'b0 ;      lf3d5f7     <= 1'b0 ;      meeafbe    <= 1'b0 ;      rg57df1    <= 1'b0 ;      uxbef8b   <= 1'b0;      ipf7c5c   <= 1'b0;      vv64f57 <= 9'h000;      mtbe2e4   <= 1'b0 ;      zkf1725   <= 1'b0 ;      tj8b92a  <= 1'b0 ;      ay5c956  <= 1'b0 ;      nee4ab0 <= 1'b0;      ri25582 <= 1'b0;   end   else begin            


`ifdef X1
      if(pu861b1 || tj9e186)         vv64f57 <= 9'h001;      else if(osfa489) begin         if(tx_data[1:0] == 2'b00)               vv64f57 <= {(~(|tx_data[9:2])), tx_data[9:2]};         else              vv64f57 <= tx_data[9:2] + 1;      end


`endif



`ifdef X4
      if((pu861b1 || tj9e186) & jc739ea)         vv64f57 <= 9'h001;      else if(goef79e & jc739ea) begin         if(tx_data[33:32] == 2'b00)               vv64f57 <= {(~(|tx_data[41:34])), tx_data[41:34]};         else              vv64f57 <= tx_data[41:34] + 1;      end


`endif




`ifdef X1
      if(icf0c36 || zxf3c30) begin         if(icf0c36) begin              if(!ana1443) uxbef8b <= 1'b1;            if(!uka21d) ipf7c5c <= pu861b1;         end         else begin              if(!baa20a1) fp27abe <= 1'b1;            if(!ym1050a) lf3d5f7 <= tj9e186;         end      end      else if(osfa489) begin         if(!ym1050a)   lf3d5f7   <= (((oua9c86[4:3] == 2'b10) || (oua9c86[2:0] == 3'b000)) && phb5390[1]) ? 1'b1 : 1'b0;         if(!baa20a1)   fp27abe   <= ((oua9c86[4:3] == 2'b10) || ((oua9c86[2:0] == 3'b000) && phb5390[1])) ? 1'b1 : 1'b0;         if(!vk14288)  rg57df1  <= ((oua9c86[4:3] == 2'b00) && phb5390[1] && (oua9c86[2:0] != 3'b000)) ? 1'b1 : 1'b0;         if(!wy82851)  meeafbe  <= ((oua9c86[4:3] == 2'b00) && !((oua9c86[2:0] == 3'b000) && phb5390[1])) ? 1'b1 : 1'b0;         if(!ana1443) uxbef8b <= (oua9c86 == 5'b0_1010) ? 1'b1 : 1'b0;         if(!uka21d) ipf7c5c <= ((oua9c86 == 5'b0_1010) && phb5390[1]) ? 1'b1 : 1'b0;      end      else if (th7bcf0 || ykde786 || ou9224e) begin         fp27abe   <= 1'b0; lf3d5f7   <= 1'b0;         meeafbe  <= 1'b0; rg57df1  <= 1'b0;         uxbef8b <= 1'b0; ipf7c5c <= 1'b0;      end


`endif



`ifdef X4
      if((icf0c36 || zxf3c30) & jc739ea) begin         if(icf0c36) begin              if(!ana1443) uxbef8b <= 1'b1;            if(!uka21d) ipf7c5c <= pu861b1;         end         else begin              if(!baa20a1) fp27abe <= 1'b1;            if(!ym1050a) lf3d5f7 <= tj9e186;         end      end      else if(goef79e & jc739ea) begin         if(!ym1050a)   lf3d5f7   <= (((oua9c86[4:3] == 2'b10) || (oua9c86[2:0] == 3'b000)) && phb5390[1]) ? 1'b1 : 1'b0;         if(!baa20a1)   fp27abe   <= ((oua9c86[4:3] == 2'b10) || ((oua9c86[2:0] == 3'b000) && phb5390[1])) ? 1'b1 : 1'b0;         if(!vk14288)  rg57df1  <= ((oua9c86[4:3] == 2'b00) && phb5390[1] && (oua9c86[2:0] != 3'b000)) ? 1'b1 : 1'b0;         if(!wy82851)  meeafbe  <= ((oua9c86[4:3] == 2'b00) && !((oua9c86[2:0] == 3'b000) && phb5390[1])) ? 1'b1 : 1'b0;         if(!ana1443) uxbef8b <= (oua9c86 == 5'b0_1010) ? 1'b1 : 1'b0;         if(!uka21d) ipf7c5c <= ((oua9c86 == 5'b0_1010) && phb5390[1]) ? 1'b1 : 1'b0;      end      else if ((th7bcf0 || ykde786 || ou9224e) & jc739ea) begin         fp27abe   <= 1'b0; lf3d5f7   <= 1'b0;         meeafbe  <= 1'b0; rg57df1  <= 1'b0;         uxbef8b <= 1'b0; ipf7c5c <= 1'b0;      end


`endif

      mtbe2e4   <= yk49c3a;      zkf1725   <= uv4e1d1;      tj8b92a  <= of70e8d;      ay5c956  <= ks8746d;      nee4ab0 <= hq3a369;      ri25582 <= kqd1b4b;   end
end







`ifdef X1
   assign jcc5031 = rtd2449 ;

`endif



`ifdef X4
   assign jcc5031 = osfa489 ;

`endif

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      dmdacd3    <= 8'h00;      gqb34dc   <= 8'h00;      ofd370c  <= 8'h00;      tufb59a   <= 12'h000;      an9a6e1 <= 12'h000;      qtd669b  <= 12'h000;   end   else begin      if(kddc813 || !ofedf39) begin         dmdacd3    <= 8'h00;         gqb34dc   <= 8'h00;         ofd370c  <= 8'h00;         tufb59a   <= 12'h000;         an9a6e1 <= 12'h000;         qtd669b  <= 12'h000;      end      else if(jcc5031) begin         dmdacd3   <= (yk49c3a) ? (dm660ff + 1'b1) : dm660ff;         gqb34dc  <= (of70e8d) ? (pu83fd2 + 1'b1) : pu83fd2;         ofd370c <= (hq3a369) ? (osff491 + 1'b1) : osff491;         tufb59a   <= (uv4e1d1) ? (jrcc1f + je89387) : jrcc1f;         qtd669b  <= (ks8746d) ? (pu307fa + 1'b1) : pu307fa;         an9a6e1 <= (kqd1b4b) ? (qi1fe92 + je89387) : qi1fe92;      end      else if(tj91270) begin         dmdacd3   <= (ks8da58) ? (dm660ff - 1'b1) : dm660ff;         gqb34dc  <= (by69609) ? (pu83fd2 - 1'b1) : pu83fd2;         ofd370c <= (vi5825d) ? (osff491 - 1'b1) : osff491;         tufb59a   <= (kq6d2c1) ? (jrcc1f - je89387) : jrcc1f;         qtd669b  <= (ip4b04b) ? (pu307fa - 1'b1) : pu307fa;         an9a6e1 <= (cmc12eb) ? (qi1fe92 - je89387) : qi1fe92;      end   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tx_ca_ph    <= 9'h00;      kd70464   <= 9'h00;      tx_ca_cplh  <= 9'h00;      tx_ca_pd    <= 13'h000;      aa82324   <= 13'h000;      xy8c90a  <= 13'h000;   end   else begin      tx_ca_ph[7:0]    <= pu86c5b - dm660ff;      kd70464[7:0]   <= al5b567 - pu83fd2;      tx_ca_cplh[7:0]  <= cm678d0 - osff491;
      tx_ca_pd[11:0]   <= vk30d8b - jrcc1f;      aa82324[11:0]  <= ph8b6ac - pu307fa;      xy8c90a[11:0] <= ouacf1a - qi1fe92;            tx_ca_ph[8]      <= baa20a1;      kd70464[8]     <= wy82851;      tx_ca_cplh[8]    <= ana1443;      tx_ca_pd[12]     <= ym1050a;      aa82324[12]    <= vk14288;      xy8c90a[12]   <= uka21d;   end
end
always@* begin kddc813<=xjc2975[0];ofedf39<={swa09d>>1,xjc2975[1]};ls204e3<={iraee39>>1,xjc2975[2]};ofcc3ed<=xjc2975[3];pf61f6c<=xjc2975[4];gqfb66<=xjc2975[5];ay7db30<={coac509>>1,xjc2975[6]};pu1bbde<={vvcd2fd>>1,xjc2975[7]};jpddef3<={rg697ee>>1,xjc2975[8]};goef79e<={tx_st>>1,xjc2975[9]};th7bcf0<={tx_end>>1,xjc2975[10]};ykde786<={tx_nlfy>>1,xjc2975[11]};zxf3c30<=xjc2975[12];tj9e186<=xjc2975[13];icf0c36<=xjc2975[14];pu861b1<=xjc2975[15];vk30d8b<={ea49c90>>1,xjc2975[16]};pu86c5b<={qt4e481>>1,xjc2975[17]};ym1050a<=xjc2975[18];baa20a1<=xjc2975[19];ph8b6ac<={ux90348>>1,xjc2975[20]};al5b567<={tj81a45>>1,xjc2975[21]};vk14288<=xjc2975[22];wy82851<=xjc2975[23];ouacf1a<={lq48be3>>1,xjc2975[24]};cm678d0<={vv45f1b>>1,xjc2975[25]};uka21d<=xjc2975[26];ana1443<=xjc2975[27];sw1a066<=xjc2975[28];byd0330<=xjc2975[29];xl81983<=xjc2975[30];jrcc1f<={tufb59a>>1,xjc2975[31]};dm660ff<={dmdacd3>>1,xjc2975[32]};pu307fa<={qtd669b>>1,xjc2975[33]};pu83fd2<={gqb34dc>>1,xjc2975[34]};qi1fe92<={an9a6e1>>1,xjc2975[35]};osff491<={ofd370c>>1,xjc2975[36]};osfa489<=xjc2975[37];rtd2449<=xjc2975[38];ou9224e<=xjc2975[39];tj91270<=xjc2975[40];je89387<={vv64f57>>1,xjc2975[41]};yk49c3a<=xjc2975[42];uv4e1d1<=xjc2975[43];of70e8d<=xjc2975[44];ks8746d<=xjc2975[45];hq3a369<=xjc2975[46];kqd1b4b<=xjc2975[47];ks8da58<=xjc2975[48];kq6d2c1<=xjc2975[49];by69609<=xjc2975[50];ip4b04b<=xjc2975[51];vi5825d<=xjc2975[52];cmc12eb<=xjc2975[53];tj9758<=xjc2975[54];cz4bac6<=xjc2975[55];vi5d634<={hdb04d8>>1,xjc2975[56]};dmeb1a3<={co826c6>>1,xjc2975[57]};tu58d1a<={xl13631>>1,xjc2975[58]};kdc68d2<={nt9b18e>>1,xjc2975[59]};co34694<=xjc2975[60];oua34a0<=xjc2975[61];ym1a500<=xjc2975[62];zxd2800<=xjc2975[63];hd94007<=xjc2975[64];tja003f<=xjc2975[65];qi1ff<=xjc2975[66];ymff8<=xjc2975[67];qv7fc1<={ng30a63>>1,xjc2975[68]};zm3fe0c<={ep8531b>>1,xjc2975[69]};uiff062<=xjc2975[70];mrf8311<=xjc2975[71];uic188c<=xjc2975[72];lfc461<=xjc2975[73];end
always@* begin ux1852e[2047]<=swa09d[0];ux1852e[2046]<=iraee39[0];ux1852e[2044]<=os62849;ux1852e[2041]<=ri25582;ux1852e[2040]<=do14249;ux1852e[2035]<=ba2ac13;ux1852e[2033]<=mta124b;ux1852e[2024]<=tj81a45[0];ux1852e[2022]<=go5609b;ux1852e[2018]<=coac509[0];ux1852e[2001]<=tw25478;ux1852e[1997]<=hdb04d8[0];ux1852e[1988]<=vvcd2fd[0];ux1852e[1954]<=ks24a8f;ux1852e[1946]<=co826c6[0];ux1852e[1929]<=rg697ee[0];ux1852e[1917]<=zm1b902;ux1852e[1874]<=an9a6e1[0];ux1852e[1860]<=lq48be3[0];ux1852e[1851]<=ng30a63[0];ux1852e[1845]<=xl13631[0];ux1852e[1811]<=tx_st[0];ux1852e[1789]<=rv84951;ux1852e[1721]<=hd8eda9;ux1852e[1700]<=ofd370c[0];ux1852e[1673]<=vv45f1b[0];ux1852e[1655]<=ep8531b[0];ux1852e[1643]<=nt9b18e[0];ux1852e[1574]<=tx_end[0];ux1852e[1530]<=icf092a;ux1852e[1486]<=mt90c29;ux1852e[1395]<=jc76d4e;ux1852e[1353]<=tj9b864;ux1852e[1317]<=zke193d;ux1852e[1311]<=ipf7c5c;ux1852e[1299]<=cz51e1a;ux1852e[1263]<=ir298dc;ux1852e[1258]<=dmdacd3[0];ux1852e[1247]<=cfg_cpld_cc;ux1852e[1239]<=pfd8c76;ux1852e[1187]<=meeafbe;ux1852e[1172]<=vv64f57[0];ux1852e[1151]<=zkf1725;ux1852e[1102]<=the37da;ux1852e[1101]<=tx_nlfy[0];ux1852e[1023]<=dl_inactive;ux1852e[1020]<=nee4ab0;ux1852e[1012]<=ux90348[0];ux1852e[958]<=by63720;ux1852e[937]<=gqb34dc[0];ux1852e[925]<=ba8614c;ux1852e[894]<=qt4e481[0];ux1852e[860]<=ks31db5;ux1852e[743]<=swb6a72;ux1852e[658]<=ofdc327;ux1852e[655]<=uxbef8b;ux1852e[629]<=tufb59a[0];ux1852e[623]<=cfg_cplh_cc;ux1852e[593]<=lf3d5f7;ux1852e[586]<=lfc9ea;ux1852e[575]<=mtbe2e4;ux1852e[551]<=ri2a3c3;ux1852e[510]<=ay5c956;ux1852e[479]<=go4c6e4;ux1852e[468]<=qtd669b[0];ux1852e[447]<=ea49c90[0];ux1852e[430]<=enc63b6;ux1852e[327]<=rg57df1;ux1852e[314]<=rgdf6b3;ux1852e[311]<=cfg_pd_cc;ux1852e[296]<=fp27abe;ux1852e[255]<=tj8b92a;ux1852e[157]<=ng1bed6;ux1852e[155]<=cfg_ph_cc;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































































`timescale 1 ns / 100 ps
module  pcie_x1_top_ip51b71(
   input wire                    sys_clk,      
   input wire                    rst_n,        
   
   input wire                    dl_inactive,   
   input wire [`NUM_VC-1:0]      swa09d,         
   input wire [`NUM_VC*3-1:0]    iraee39,          
   input wire                    os62849, 
   input wire                    do14249, 
   input wire                    mta124b,  
   input wire [1:0]              coac509, 
   input wire [2:0]              vvcd2fd, 
   input wire [19:0]             rg697ee, 
   input wire                    cfg_ph_cc,     
   input wire                    cfg_pd_cc,     
   input wire                    cfg_cplh_cc,   
   input wire                    cfg_cpld_cc,   

   input wire [`NUM_VC -1:0]     tx_st,         
   input wire [`NUM_VC -1:0]     tx_end,        
   input wire [`NUM_VC -1:0]     tx_nlfy,       
   `ifdef X4
      input wire [(`NUM_VC*64)-1:0] tx_data,    
      input wire                 jc739ea,    
   `endif
   `ifdef X1
      input wire [(`NUM_VC*16)-1:0] tx_data,    
   `endif

   output reg                     aa92b82, 
   
   output wire [(`NUM_VC*9)-1:0]  tx_ca_ph,        
   output wire [(`NUM_VC*13)-1:0] tx_ca_pd,        
   output wire [(`NUM_VC*9)-1:0]  kd70464,       
   output wire [(`NUM_VC*13)-1:0] aa82324,       
   output wire [(`NUM_VC*9)-1:0]  tx_ca_cplh,      
   output wire [(`NUM_VC*13)-1:0] xy8c90a       

   );
reg  [`NUM_VC -1:0]           pu35d30;
reg  [`NUM_VC -1:0]           uxae983;
reg  [`NUM_VC -1:0]           fn74c1d;
reg  [`NUM_VC -1:0]           qia60ef;
wire   [`NUM_VC -1:0]         pu30778;

`ifdef X4

`endif
reg kddc813;
reg [`NUM_VC - 1 : 0] ofedf39;
reg [`NUM_VC * 3 - 1 : 0] ls204e3;
reg ofcc3ed;
reg pf61f6c;
reg gqfb66;
reg [1 : 0] ay7db30;
reg [2 : 0] pu1bbde;
reg [19 : 0] jpddef3;
reg zxf3c30;
reg tj9e186;
reg icf0c36;
reg pu861b1;
reg [`NUM_VC - 1 : 0] goef79e;
reg [`NUM_VC - 1 : 0] th7bcf0;
reg [`NUM_VC - 1 : 0] ykde786;
reg [`NUM_VC - 1 : 0] ux39be8;
reg [`NUM_VC - 1 : 0] nrcdf45;
reg [`NUM_VC - 1 : 0] kd6fa2f;
reg [`NUM_VC - 1 : 0] ay7d17d;
reg [2047:0] ux1852e;
wire [19:0] xjc2975;


`ifdef X4

`endif

localparam do14bae = 20,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif





always@(*) begin   pu35d30   = 0;   uxae983   = 0;   fn74c1d = 0;   qia60ef = 0;   pu35d30[0]   = zxf3c30;      uxae983[0]   = tj9e186;   fn74c1d[0] = icf0c36;   qia60ef[0] = pu861b1;
end
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      aa92b82 <= 1'b0;   end   else begin      aa92b82 <= |ay7d17d;   end
end



pcie_x1_top_zx7ecf5 ba2f422 [`NUM_VC -1:0] (         .sys_clk         (sys_clk),    .rst_n           (rst_n),    .dl_inactive     (kddc813),    .swa09d           (ofedf39),    .iraee39            (ls204e3),    .os62849   (ofcc3ed),    .do14249   (pf61f6c),    .mta124b    (gqfb66),    .coac509   (ay7db30),    .vvcd2fd   (pu1bbde),    .rg697ee   (jpddef3),    .cfg_ph_cc       (pu35d30),    .cfg_pd_cc       (ux39be8),    .cfg_cplh_cc     (nrcdf45),    .cfg_cpld_cc     (kd6fa2f),    .tx_st           (goef79e),    .tx_end          (th7bcf0),    .tx_nlfy         (ykde786),    .tx_data         (tx_data),


`ifdef X4
       .jc739ea   (jc739ea),


`endif

        .aa92b82 (pu30778),    .tx_ca_ph        (tx_ca_ph),    .tx_ca_pd        (tx_ca_pd),    .kd70464       (kd70464),    .aa82324       (aa82324),    .tx_ca_cplh      (tx_ca_cplh),    .xy8c90a      (xy8c90a)
    );


always@* begin kddc813<=xjc2975[0];ofedf39<={swa09d>>1,xjc2975[1]};ls204e3<={iraee39>>1,xjc2975[2]};ofcc3ed<=xjc2975[3];pf61f6c<=xjc2975[4];gqfb66<=xjc2975[5];ay7db30<={coac509>>1,xjc2975[6]};pu1bbde<={vvcd2fd>>1,xjc2975[7]};jpddef3<={rg697ee>>1,xjc2975[8]};zxf3c30<=xjc2975[9];tj9e186<=xjc2975[10];icf0c36<=xjc2975[11];pu861b1<=xjc2975[12];goef79e<={tx_st>>1,xjc2975[13]};th7bcf0<={tx_end>>1,xjc2975[14]};ykde786<={tx_nlfy>>1,xjc2975[15]};ux39be8<={uxae983>>1,xjc2975[16]};nrcdf45<={fn74c1d>>1,xjc2975[17]};kd6fa2f<={qia60ef>>1,xjc2975[18]};ay7d17d<={pu30778>>1,xjc2975[19]};end
always@* begin ux1852e[2047]<=swa09d[0];ux1852e[2046]<=iraee39[0];ux1852e[2044]<=os62849;ux1852e[2040]<=do14249;ux1852e[2032]<=mta124b;ux1852e[2016]<=coac509[0];ux1852e[1985]<=vvcd2fd[0];ux1852e[1950]<=fn74c1d[0];ux1852e[1923]<=rg697ee[0];ux1852e[1852]<=qia60ef[0];ux1852e[1799]<=cfg_ph_cc;ux1852e[1656]<=pu30778[0];ux1852e[1551]<=cfg_pd_cc;ux1852e[1054]<=cfg_cplh_cc;ux1852e[1023]<=dl_inactive;ux1852e[975]<=uxae983[0];ux1852e[487]<=tx_nlfy[0];ux1852e[243]<=tx_end[0];ux1852e[121]<=tx_st[0];ux1852e[60]<=cfg_cpld_cc;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule












































`timescale 1 ns / 100 ps
module pcie_x1_top_jp7b69b (
   
   input wire                sys_clk ,           
   input wire                rst_n ,             

   `ifdef EN_BAR0
   input wire [31:0]               ofd37c2 , 
   input wire [31:0]               tj9be14 , 
   `endif
   `ifdef EN_BAR1
   input wire [31:0]               nedf0a7 , 
   input wire [31:0]               off853a , 
   `endif
   `ifdef EN_BAR2
   input wire [31:0]               nrc29d4 , 
   input wire [31:0]               ba14ea6 , 
   `endif
   `ifdef EN_BAR3
   input wire [31:0]               ria7532 , 
   input wire [31:0]               xy3a992 , 
   `endif
   `ifdef EN_BAR4
   input wire [31:0]               ead4c92 , 
   input wire [31:0]               oua6490 , 
   `endif
   `ifdef EN_BAR5
   input wire [31:0]               bn32480 , 
   input wire [31:0]               ks92407 , 
   `endif
   `ifdef EN_ER_BAR
   input wire [31:0]               ks92038 , 
   input wire [31:0]               mt901c0 ,  
   `endif

   `ifdef X4
      output wire [6:0]            bar_hit , 
      output wire                  cb702d , 
   `endif
   `ifdef X1
      output reg [6:0]             bar_hit , 
      output wire                  bar_fail ,
   `endif

   
   input wire                   tlpdec_memrw ,
   input wire                   tlpdec_iorw ,
   input wire [31:0]            tlpdec_addr_l32 ,
   input wire [31:0]            tlpdec_addr_h32 ,
   input wire                   tlpdec_addr64   );
reg                   je99c33 ;
reg                   goce19a ;
reg [6:0]             gb70cd1 ;
reg                   zm8668d ;
wire[6:0]             yz3346b ;
wire                  oh9a35d ;
wire [31:0]           uid1aec ;
wire [31:0]           mg8d760 ;
wire                  zx6bb00 ;
wire                  rg5d807 ;
wire                  vvec03a ;

`ifdef EN_BAR0
reg [3:0]   mr601d7 ;
reg         mgebd ;
wire        yz75e9 ;
wire        pu3af4d ;
wire        vvd7a6a ;
wire        zmbd357 ;
wire        xje9aba ;
wire [31:0] xw4d5d6 ;

`else
wire        mgebd ;

`endif

`ifdef EN_BAR1
reg [3:0]   lq57595 ;
reg         vxbacaa ;
wire        qtd6556 ;
wire        hqb2ab4 ;
wire        ep955a2 ;
wire        vxaad15 ;
wire        kq568af ;
wire [31:0] qvb4579 ;

`else
wire        vxbacaa ;
wire [31:0] qvb4579 ;
wire [31:0] nedf0a7 ;

`endif

`ifdef EN_BAR2
reg [3:0]   jc798c6 ;
reg         czcc633 ;
wire        vi6319c ;
wire        ep18ce2 ;
wire        uvc6714 ;
wire        kf338a5 ;
wire        ba9c52c ;
wire [31:0] ale2963 ;

`else
wire        czcc633 ;

`endif

`ifdef EN_BAR3
reg [3:0]   xla58ea ;
reg         ux2c756 ;
wire        dm63ab5 ;
wire        ux1d5ab ;
wire        uiead5d ;
wire        cm56ae9 ;
wire        fpb5749 ;
wire [31:0] ohaba4e ;

`else
wire        ux2c756 ;
wire [31:0] ohaba4e ;
wire [31:0] ria7532 ;

`endif

`ifdef EN_BAR4
reg [3:0]   kd4eaf9 ;
reg         ip757cc ;
wire        mtabe64 ;
wire        th5f325 ;
wire        ldf992e ;
wire        shcc977 ;
wire        zx64bbd ;
wire [31:0] je25dee ;

`else
wire        ip757cc ;

`endif

`ifdef EN_BAR5
reg [3:0]   ay77b91 ;
reg         zmbdc88 ;
wire        zkee443 ;
wire        me7221a ;
wire        xl910d1 ;
wire        ou8868f ;
wire        me43478 ;
wire [31:0] wy1a3c1 ;

`else
wire        zmbdc88 ;
wire [31:0] wy1a3c1 ;
wire [31:0] bn32480 ;

`endif

`ifdef EN_ER_BAR
reg         icc1028 ;
wire [31:0] oh8140 ;
wire        pf40a04 ;

`else
wire        icc1028 ;

`endif
wire        hd28138 ;
wire        fn409c7 ;
wire        tw4e3f ;

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_BAR0

`ifdef EN_BAR1

`else

`endif

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`ifdef EN_BAR3

`else

`endif

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`ifdef EN_BAR5

`else

`endif

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef X1
reg  cb702d ;

`endif

`ifdef X4

`endif
reg rv38fde;
reg pfc7ef7;
reg [31 : 0] ri3f7be;
reg [31 : 0] nefbdf3;
reg cmdef9a;
reg ipf7cd1;
reg mtbe68c;
reg [6 : 0] blf3465;
reg mt9a32f;
reg [6 : 0] ead197c;
reg pu8cbe0;
reg [31 : 0] al65f03;
reg [31 : 0] ri2f81c;
reg fa7c0e3;
reg qge071a;
reg vx38d1;
reg ph1c68e;
reg jpe3477;
reg ks1a3be;
reg [2047:0] ux1852e;
wire [18:0] xjc2975;

`ifdef EN_BAR0

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_BAR0

`ifdef EN_BAR1

`else

`endif

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`ifdef EN_BAR3

`else

`endif

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`ifdef EN_BAR5

`else

`endif

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 19,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef EN_BAR0


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR2


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR4


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_ER_BAR


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_BAR0


`ifdef EN_BAR1


`else


`endif


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR2


`ifdef EN_BAR3


`else


`endif


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR4


`ifdef EN_BAR5


`else


`endif


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_ER_BAR


`else


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef EN_BAR0



`else



`endif




`ifdef EN_BAR1



`else



`endif




`ifdef EN_BAR2



`else



`endif




`ifdef EN_BAR3



`else



`endif




`ifdef EN_BAR4



`else



`endif




`ifdef EN_BAR5



`else



`endif




`ifdef EN_ER_BAR



`else



`endif



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      goce19a  <= 1'b0 ;      je99c33 <= 1'b0 ;   end   else begin      je99c33 <= rv38fde ;      goce19a  <= pfc7ef7 ;   end
end


assign uid1aec  = ri3f7be ;
assign mg8d760 = nefbdf3 ;


`ifdef EN_BAR1
   assign zx6bb00  = 1'b0 ;

`else
   assign zx6bb00  = 1'b1 ;

`endif



`ifdef EN_BAR3
   assign rg5d807  = 1'b0 ;

`else
   assign rg5d807  = 1'b1 ;

`endif



`ifdef EN_BAR5
   assign vvec03a  = 1'b0 ;

`else
   assign vvec03a  = 1'b1 ;

`endif





`ifdef EN_BAR0



`ifdef EN_BAR1
      assign hd28138  = ~tj9be14[0] & tj9be14[2];


`else
      assign hd28138  = 1'b0 ;


`endif
         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         mr601d7 <= 4'b0000;      else if ( tj9be14[0] )         mr601d7 <= {tj9be14[3:2], 2'b00} ;      else         mr601d7 <= 4'b0000 ;   end   assign xw4d5d6 = { tj9be14[31:4], mr601d7 };   assign yz75e9 = (tj9be14[2:1] == 2'b00) & ~tj9be14[0] ;   assign pu3af4d = (tj9be14[2:1] == 2'b10) & ~tj9be14[0] ;   assign vvd7a6a    = tj9be14[0] ;   assign zmbd357 = (tj9be14 == 32'd0) ;   assign xje9aba = ((rv38fde & yz75e9 && ~cmdef9a) |                      (rv38fde & pu3af4d )  |                      (pfc7ef7 & vvd7a6a)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         mgebd <= 1'b0;      else if ( xje9aba && !zmbd357 && !(ph1c68e && fa7c0e3) )         if ( ph1c68e )            mgebd <= ((((al65f03  ^ ofd37c2) & xw4d5d6) == 32'd0) &                         (((ri2f81c ^ nedf0a7) & qvb4579) == 32'd0)) ;         else            mgebd <= (((al65f03  ^ ofd37c2) & xw4d5d6) == 32'd0) ;      else         mgebd <= 1'b0 ;   end



`else
   assign mgebd = 1'b0 ;

`endif



`ifdef EN_BAR1

            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         lq57595 <= 4'b0000;      else if ( ph1c68e )         lq57595 <= off853a[3:0];      else if ( off853a[0] )         lq57595 <= {off853a[3:2], 2'b00} ;      else         lq57595 <=  4'b0000;   end   assign qvb4579 = { off853a[31:4], lq57595 };   assign qtd6556 = (off853a[2:1] == 2'b00) & ~off853a[0] ;   assign hqb2ab4 = (off853a[2:1] == 2'b10) & ~off853a[0] ;   assign ep955a2    = off853a[0] ;   assign vxaad15 = (off853a == 32'd0) ;   assign kq568af = ((rv38fde & qtd6556 && ~cmdef9a) |                      (rv38fde & hqb2ab4 )  |                      (pfc7ef7 & ep955a2)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         vxbacaa <= 1'b0;      else if ( kq568af && !vxaad15 )         vxbacaa <= (((al65f03  ^ nedf0a7) & qvb4579) == 32'd0) ;      else         vxbacaa <= 1'b0 ;   end



`else
   assign vxbacaa = 1'b0 ;   assign qvb4579 = 32'd0 ;   assign nedf0a7 = 32'd0 ;

`endif



`ifdef EN_BAR2



`ifdef EN_BAR3
      assign fn409c7  = ~ba14ea6[0] & ba14ea6[2];


`else
      assign fn409c7  = 1'b0 ;


`endif

         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         jc798c6 <= 4'b0000;      else if ( ba14ea6[0] )         jc798c6 <= {ba14ea6[3:2], 2'b00} ;      else         jc798c6 <=  4'b0000;   end   assign ale2963 = { ba14ea6[31:4], jc798c6 };   assign vi6319c = (ba14ea6[2:1] == 2'b00) & ~ba14ea6[0] ;   assign ep18ce2 = (ba14ea6[2:1] == 2'b10) & ~ba14ea6[0] ;   assign uvc6714    = ba14ea6[0] ;   assign kf338a5 = (ba14ea6 == 32'd0) ;   assign ba9c52c = ((rv38fde & vi6319c && ~cmdef9a) |                      (rv38fde & ep18ce2 )  |                      (pfc7ef7 & uvc6714)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         czcc633 <= 1'b0;      else if ( ba9c52c && !kf338a5 && !(jpe3477 && qge071a))         if ( jpe3477 )            czcc633 <= ((((al65f03  ^ nrc29d4) & ale2963) == 32'd0) &                         (((ri2f81c ^ ria7532) & ohaba4e) == 32'd0)) ;         else            czcc633 <= (((al65f03  ^ nrc29d4) & ale2963) == 32'd0) ;      else         czcc633 <= 1'b0 ;   end



`else
   assign czcc633 = 1'b0 ;


`endif



`ifdef EN_BAR3

            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         xla58ea <= 4'b0000;      else if ( jpe3477 )         xla58ea <= xy3a992[3:0];      else if ( xy3a992[0] )         xla58ea <= {xy3a992[3:2], 2'b00} ;      else         xla58ea <=  4'b0000;   end   assign ohaba4e = { xy3a992[31:4], xla58ea };   assign dm63ab5 = (xy3a992[2:1] == 2'b00) & ~xy3a992[0] ;   assign ux1d5ab = jpe3477 ;   assign uiead5d    = xy3a992[0] ;   assign cm56ae9 = (xy3a992 == 32'd0) ;   assign fpb5749 = ((rv38fde & dm63ab5 && ~cmdef9a) |                      (rv38fde & ux1d5ab )  |                      (pfc7ef7 & uiead5d)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ux2c756 <= 1'b0;      else if ( fpb5749 && !cm56ae9 )         ux2c756 <= (((al65f03  ^ ria7532) & ohaba4e) == 32'd0) ;      else         ux2c756 <= 1'b0 ;   end



`else
   assign ux2c756  = 1'b0 ;   assign ohaba4e = 32'd0 ;   assign ria7532 = 32'd0 ;

`endif



`ifdef EN_BAR4



`ifdef EN_BAR5
      assign tw4e3f  = ~oua6490[0] & oua6490[2];


`else
      assign tw4e3f  = 1'b0 ;


`endif

         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         kd4eaf9 <= 4'b0000;      else if ( oua6490[0] )         kd4eaf9 <= {oua6490[3:2], 2'b00} ;      else         kd4eaf9 <=  4'b0000;   end   assign je25dee = { oua6490[31:4], kd4eaf9 };   assign mtabe64 = (oua6490[2:1] == 2'b00) & ~oua6490[0] ;   assign th5f325 = (oua6490[2:1] == 2'b10) & ~oua6490[0] ;   assign ldf992e    = oua6490[0] ;   assign shcc977 = (oua6490 == 32'd0) ;   assign zx64bbd = ((rv38fde & mtabe64 && ~cmdef9a) |                      (rv38fde & th5f325 )  |                      (pfc7ef7 & ldf992e)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ip757cc <= 1'b0;      else if ( zx64bbd && !shcc977 && !(ks1a3be && vx38d1))         if ( ks1a3be )            ip757cc <= ((((al65f03  ^ ead4c92) & je25dee) == 32'd0) &                         (((ri2f81c ^ bn32480) & wy1a3c1) == 32'd0)) ;         else            ip757cc <= (((al65f03  ^ ead4c92) & je25dee) == 32'd0) ;      else         ip757cc <= 1'b0 ;   end



`else
   assign ip757cc = 1'b0 ;

`endif



`ifdef EN_BAR5
            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ay77b91 <= 4'b0000;      else if ( ks1a3be )         ay77b91 <= ks92407[3:0];      else if ( ks92407[0] )         ay77b91 <= {ks92407[3:2], 2'b00} ;      else         ay77b91 <=  4'b0000;   end   assign wy1a3c1 = { ks92407[31:4], ay77b91 };   assign zkee443 = (ks92407[2:1] == 2'b00) & ~ks92407[0] ;   assign me7221a = ks1a3be ;   assign xl910d1    = ks92407[0] ;   assign ou8868f = (ks92407 == 32'd0) ;   assign me43478 = ((rv38fde & zkee443 && ~cmdef9a) |                      (rv38fde & me7221a )  |                      (pfc7ef7 & xl910d1)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         zmbdc88 <= 1'b0;      else if ( me43478 && !ou8868f )         zmbdc88 <= (((al65f03  ^ bn32480) & wy1a3c1) == 32'd0) ;      else         zmbdc88 <= 1'b0 ;   end



`else
   assign zmbdc88  = 1'b0 ;   assign wy1a3c1 = 32'd0 ;   assign bn32480 = 32'd0 ;

`endif



`ifdef EN_ER_BAR

   assign oh8140 = {mt901c0[31:11],11'h000} ;   assign pf40a04 = (rv38fde & mt901c0[0]) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         icc1028 <= 1'b0;      else if (pf40a04)         icc1028 <= (((al65f03 ^ ks92038) & oh8140) == 32'd0) ;      else         icc1028 <= 1'b0;   end


`else
   assign icc1028 = 1'b0 ;

`endif


assign  yz3346b     = {icc1028, zmbdc88, ip757cc, ux2c756,                                      czcc633, vxbacaa, mgebd} ;
assign  oh9a35d = (ipf7cd1 | mtbe68c) ;



`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         gb70cd1     <= 7'h00 ;         zm8668d <= 1'b0 ;         bar_hit         <= 7'h00 ;         cb702d     <= 1'b0 ;      end      else begin         gb70cd1     <= ead197c;         zm8668d <=  pu8cbe0;         bar_hit          <= blf3465 ;         cb702d      <= mt9a32f ;
      end   end   assign bar_fail = (cb702d & ~(|bar_hit));

`endif




`ifdef X4
   assign  bar_hit     = ead197c ;   assign  cb702d = pu8cbe0 ;


`endif


always@* begin rv38fde<=xjc2975[0];pfc7ef7<=xjc2975[1];ri3f7be<={tlpdec_addr_l32>>1,xjc2975[2]};nefbdf3<={tlpdec_addr_h32>>1,xjc2975[3]};cmdef9a<=xjc2975[4];ipf7cd1<=xjc2975[5];mtbe68c<=xjc2975[6];blf3465<={gb70cd1>>1,xjc2975[7]};mt9a32f<=xjc2975[8];ead197c<={yz3346b>>1,xjc2975[9]};pu8cbe0<=xjc2975[10];al65f03<={uid1aec>>1,xjc2975[11]};ri2f81c<={mg8d760>>1,xjc2975[12]};fa7c0e3<=xjc2975[13];qge071a<=xjc2975[14];vx38d1<=xjc2975[15];ph1c68e<=xjc2975[16];jpe3477<=xjc2975[17];ks1a3be<=xjc2975[18];end
always@* begin ux1852e[2047]<=tlpdec_iorw;ux1852e[2046]<=tlpdec_addr_l32[0];ux1852e[2044]<=tlpdec_addr_h32[0];ux1852e[2040]<=tlpdec_addr64;ux1852e[2033]<=je99c33;ux1852e[2018]<=goce19a;ux1852e[1988]<=gb70cd1[0];ux1852e[1929]<=zm8668d;ux1852e[1811]<=yz3346b[0];ux1852e[1789]<=tw4e3f;ux1852e[1574]<=oh9a35d;ux1852e[1247]<=vvec03a;ux1852e[1101]<=uid1aec[0];ux1852e[1023]<=tlpdec_memrw;ux1852e[894]<=fn409c7;ux1852e[623]<=rg5d807;ux1852e[447]<=hd28138;ux1852e[311]<=zx6bb00;ux1852e[155]<=mg8d760[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_ecrc_crc32#(
   parameter D_WIDTH  = 64 )
   (
   
   input wire                 sys_clk ,
   input wire                 rst_n ,

   
   input wire [D_WIDTH -1:0]  data_in ,
   input wire                 enable_crc ,
   input wire                 half_data ,
   input wire                 rst_crc ,

   output wire [31:0]         crc_out64 ,
   output wire [31:0]         crc_out32   ) ;
reg  [31:0]            crc_reg64 ;
reg  [31:0]            bl61325 ;
reg  [31:0]            vk3a595 ;
reg  [31:0]            ww4c97f ;

`ifdef X4
wire [31:0]         fn64bf9 ;

`endif

`ifdef X1
reg [31:0]          fn64bf9 ;

`endif
reg  [63:0]            zm9655f ;
reg  [63:0]            ir957d2 ;
reg  [31:0]            bab2afa ;
reg  [31:0]            mece4ef ;
reg  [31:0]            ay72779 ;
reg  [31:0]            do93bc9 ;
reg                    os4359d ;
wire [7:0]             osef258 ;
wire [7:0]             dm792c0 ;
wire [7:0]             czc9602 ;
wire [7:0]             wj4b014 ;
wire [7:0]             dm580a5 ;
wire [7:0]             psc052b ;
wire [7:0]             sj295a ;
wire [7:0]             pu14ad4 ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] mtb4467;
reg su595f0;
reg qgd45c7;
reg lsa2e39;
reg [31 : 0] gd171cb;
reg [31 : 0] fcb8e5c;
reg [31 : 0] xjc72e3;
reg [63 : 0] ir3971f;
reg [63 : 0] oscb8fc;
reg [31 : 0] me5c7e0;
reg [31 : 0] lde3f01;
reg [31 : 0] ec1f80f;
reg [31 : 0] zxfc079;
reg uie03ce;
reg [7 : 0] zm1e71;
reg [7 : 0] wyf38b;
reg [7 : 0] dm79c59;
reg [7 : 0] eace2cb;
reg [7 : 0] rt71659;
reg [7 : 0] hd8b2ce;
reg [7 : 0] me59677;
reg [7 : 0] iccb3b9;
reg [2047:0] ux1852e;
wire [21:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam do14bae = 22,jra5d72 = 32'hfdffe81b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef X4



`endif



`ifdef X1



`endif






always @(mtb4467 or crc_reg64) begin   zm9655f = mtb4467;   ir957d2 = {          ir3971f[56], ir3971f[57], ir3971f[58], ir3971f[59], ir3971f[60], ir3971f[61], ir3971f[62], ir3971f[63],          ir3971f[48], ir3971f[49], ir3971f[50], ir3971f[51], ir3971f[52], ir3971f[53], ir3971f[54], ir3971f[55],          ir3971f[40], ir3971f[41], ir3971f[42], ir3971f[43], ir3971f[44], ir3971f[45], ir3971f[46], ir3971f[47],          ir3971f[32], ir3971f[33], ir3971f[34], ir3971f[35], ir3971f[36], ir3971f[37], ir3971f[38], ir3971f[39],          ir3971f[24], ir3971f[25], ir3971f[26], ir3971f[27], ir3971f[28], ir3971f[29], ir3971f[30], ir3971f[31],          ir3971f[16], ir3971f[17], ir3971f[18], ir3971f[19], ir3971f[20], ir3971f[21], ir3971f[22], ir3971f[23],          ir3971f[8], ir3971f[9], ir3971f[10], ir3971f[11], ir3971f[12], ir3971f[13], ir3971f[14], ir3971f[15],          ir3971f[0], ir3971f[1], ir3971f[2], ir3971f[3], ir3971f[4], ir3971f[5], ir3971f[6], ir3971f[7]         } ;   bab2afa = crc_reg64;   vk3a595[0] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[53] ^                  oscb8fc[50] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[37] ^ oscb8fc[34] ^                  oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[26] ^ oscb8fc[25] ^                  oscb8fc[24] ^ oscb8fc[16] ^ oscb8fc[12] ^ oscb8fc[10] ^ oscb8fc[9] ^ oscb8fc[6] ^ oscb8fc[0] ^                  me5c7e0[0] ^ me5c7e0[2] ^ me5c7e0[5] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[15] ^ me5c7e0[16] ^                  me5c7e0[18] ^ me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[23] ^ me5c7e0[26] ^ me5c7e0[28] ^ me5c7e0[29] ^                  me5c7e0[31];   vk3a595[1] = oscb8fc[63] ^ oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[53] ^                  oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[44] ^ oscb8fc[38] ^                  oscb8fc[37] ^ oscb8fc[35] ^ oscb8fc[34] ^ oscb8fc[33] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[24] ^                  oscb8fc[17] ^ oscb8fc[16] ^ oscb8fc[13] ^ oscb8fc[12] ^ oscb8fc[11] ^ oscb8fc[9] ^ oscb8fc[7] ^                  oscb8fc[6] ^ oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[1] ^ me5c7e0[2] ^ me5c7e0[3] ^ me5c7e0[5] ^ me5c7e0[6] ^                  me5c7e0[12] ^ me5c7e0[14] ^ me5c7e0[15] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[21] ^                  me5c7e0[24] ^ me5c7e0[26] ^ me5c7e0[27] ^ me5c7e0[28] ^ me5c7e0[30] ^ me5c7e0[31];   vk3a595[2] = oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[55] ^ oscb8fc[53] ^ oscb8fc[52] ^ oscb8fc[51] ^                  oscb8fc[44] ^ oscb8fc[39] ^ oscb8fc[38] ^ oscb8fc[37] ^ oscb8fc[36] ^ oscb8fc[35] ^ oscb8fc[32] ^                  oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[26] ^ oscb8fc[24] ^ oscb8fc[18] ^ oscb8fc[17] ^ oscb8fc[16] ^                  oscb8fc[14] ^ oscb8fc[13] ^ oscb8fc[9] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[6] ^ oscb8fc[2] ^                  oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[0] ^ me5c7e0[3] ^ me5c7e0[4] ^ me5c7e0[5] ^ me5c7e0[6] ^ me5c7e0[7] ^                  me5c7e0[12] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[23] ^ me5c7e0[25] ^ me5c7e0[26] ^                  me5c7e0[27];   vk3a595[3] = oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[54] ^ oscb8fc[53] ^ oscb8fc[52] ^                  oscb8fc[45] ^ oscb8fc[40] ^ oscb8fc[39] ^ oscb8fc[38] ^ oscb8fc[37] ^ oscb8fc[36] ^ oscb8fc[33] ^                  oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[27] ^ oscb8fc[25] ^ oscb8fc[19] ^ oscb8fc[18] ^ oscb8fc[17] ^                  oscb8fc[15] ^ oscb8fc[14] ^ oscb8fc[10] ^ oscb8fc[9] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[3] ^                  oscb8fc[2] ^ oscb8fc[1] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[4] ^ me5c7e0[5] ^ me5c7e0[6] ^ me5c7e0[7] ^                  me5c7e0[8] ^ me5c7e0[13] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[24] ^ me5c7e0[26] ^                  me5c7e0[27] ^ me5c7e0[28];   vk3a595[4] = oscb8fc[63] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[50] ^ oscb8fc[48] ^ oscb8fc[47] ^                  oscb8fc[46] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[41] ^ oscb8fc[40] ^ oscb8fc[39] ^ oscb8fc[38] ^                  oscb8fc[33] ^ oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[25] ^ oscb8fc[24] ^ oscb8fc[20] ^                  oscb8fc[19] ^ oscb8fc[18] ^ oscb8fc[15] ^ oscb8fc[12] ^ oscb8fc[11] ^ oscb8fc[8] ^ oscb8fc[6] ^                  oscb8fc[4] ^ oscb8fc[3] ^ oscb8fc[2] ^ oscb8fc[0] ^ me5c7e0[1] ^ me5c7e0[6] ^ me5c7e0[7] ^ me5c7e0[8] ^                  me5c7e0[9] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[14] ^ me5c7e0[15] ^ me5c7e0[16] ^ me5c7e0[18] ^                  me5c7e0[25] ^ me5c7e0[26] ^ me5c7e0[27] ^ me5c7e0[31];   vk3a595[5] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[59] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[53] ^ oscb8fc[51] ^                  oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[46] ^ oscb8fc[44] ^ oscb8fc[42] ^ oscb8fc[41] ^ oscb8fc[40] ^                  oscb8fc[39] ^ oscb8fc[37] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[24] ^ oscb8fc[21] ^ oscb8fc[20] ^                  oscb8fc[19] ^ oscb8fc[13] ^ oscb8fc[10] ^ oscb8fc[7] ^ oscb8fc[6] ^ oscb8fc[5] ^ oscb8fc[4] ^                  oscb8fc[3] ^ oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[5] ^ me5c7e0[7] ^ me5c7e0[8] ^ me5c7e0[9] ^ me5c7e0[10] ^                  me5c7e0[12] ^ me5c7e0[14] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[21] ^ me5c7e0[22] ^                  me5c7e0[23] ^ me5c7e0[27] ^ me5c7e0[29] ^ me5c7e0[31];   vk3a595[6] = oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[52] ^ oscb8fc[51] ^                  oscb8fc[50] ^ oscb8fc[47] ^ oscb8fc[45] ^ oscb8fc[43] ^ oscb8fc[42] ^ oscb8fc[41] ^ oscb8fc[40] ^                  oscb8fc[38] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[25] ^ oscb8fc[22] ^ oscb8fc[21] ^ oscb8fc[20] ^                  oscb8fc[14] ^ oscb8fc[11] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[6] ^ oscb8fc[5] ^ oscb8fc[4] ^                  oscb8fc[2] ^ oscb8fc[1] ^ me5c7e0[6] ^ me5c7e0[8] ^ me5c7e0[9] ^ me5c7e0[10] ^ me5c7e0[11] ^                  me5c7e0[13] ^ me5c7e0[15] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[22] ^ me5c7e0[23] ^                  me5c7e0[24] ^ me5c7e0[28] ^ me5c7e0[30];   vk3a595[7] = oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[54] ^ oscb8fc[52] ^ oscb8fc[51] ^                  oscb8fc[50] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[45] ^ oscb8fc[43] ^ oscb8fc[42] ^ oscb8fc[41] ^                  oscb8fc[39] ^ oscb8fc[37] ^ oscb8fc[34] ^ oscb8fc[32] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[25] ^                  oscb8fc[24] ^ oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[21] ^ oscb8fc[16] ^ oscb8fc[15] ^ oscb8fc[10] ^                  oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[5] ^ oscb8fc[3] ^ oscb8fc[2] ^ oscb8fc[0] ^ me5c7e0[0] ^ me5c7e0[2] ^                  me5c7e0[5] ^ me5c7e0[7] ^ me5c7e0[9] ^ me5c7e0[10] ^ me5c7e0[11] ^ me5c7e0[13] ^ me5c7e0[14] ^                  me5c7e0[15] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[22] ^ me5c7e0[24] ^ me5c7e0[25] ^                  me5c7e0[26] ^ me5c7e0[28];   vk3a595[8] = oscb8fc[63] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[54] ^ oscb8fc[52] ^ oscb8fc[51] ^                  oscb8fc[50] ^ oscb8fc[46] ^ oscb8fc[45] ^ oscb8fc[43] ^ oscb8fc[42] ^ oscb8fc[40] ^ oscb8fc[38] ^                  oscb8fc[37] ^ oscb8fc[35] ^ oscb8fc[34] ^ oscb8fc[33] ^ oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[28] ^                  oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[17] ^ oscb8fc[12] ^ oscb8fc[11] ^ oscb8fc[10] ^ oscb8fc[8] ^                  oscb8fc[4] ^ oscb8fc[3] ^ oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[2] ^ me5c7e0[3] ^                  me5c7e0[5] ^ me5c7e0[6] ^ me5c7e0[8] ^ me5c7e0[10] ^ me5c7e0[11] ^ me5c7e0[13] ^ me5c7e0[14] ^                  me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[22] ^ me5c7e0[25] ^ me5c7e0[27] ^ me5c7e0[28] ^                  me5c7e0[31];   vk3a595[9] = oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[55] ^ oscb8fc[53] ^ oscb8fc[52] ^ oscb8fc[51] ^                  oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[44] ^ oscb8fc[43] ^ oscb8fc[41] ^ oscb8fc[39] ^ oscb8fc[38] ^                  oscb8fc[36] ^ oscb8fc[35] ^ oscb8fc[34] ^ 
oscb8fc[33] ^ oscb8fc[32] ^ oscb8fc[29] ^ oscb8fc[24] ^                  oscb8fc[23] ^ oscb8fc[18] ^ oscb8fc[13] ^ oscb8fc[12] ^ oscb8fc[11] ^ oscb8fc[9] ^ oscb8fc[5] ^                  oscb8fc[4] ^ oscb8fc[2] ^ oscb8fc[1] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[2] ^ me5c7e0[3] ^ me5c7e0[4] ^                  me5c7e0[6] ^ me5c7e0[7] ^ me5c7e0[9] ^ me5c7e0[11] ^ me5c7e0[12] ^ me5c7e0[14] ^ me5c7e0[15] ^                  me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[23] ^ me5c7e0[26] ^ me5c7e0[28] ^ me5c7e0[29];   vk3a595[10] = oscb8fc[63] ^ oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[55] ^                   oscb8fc[52] ^ oscb8fc[50] ^ oscb8fc[42] ^ oscb8fc[40] ^ oscb8fc[39] ^ oscb8fc[36] ^ oscb8fc[35] ^                   oscb8fc[33] ^ oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[26] ^ oscb8fc[19] ^                   oscb8fc[16] ^ oscb8fc[14] ^ oscb8fc[13] ^ oscb8fc[9] ^ oscb8fc[5] ^ oscb8fc[3] ^ oscb8fc[2] ^                   oscb8fc[0] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[3] ^ me5c7e0[4] ^ me5c7e0[7] ^ me5c7e0[8] ^ me5c7e0[10] ^                   me5c7e0[18] ^ me5c7e0[20] ^ me5c7e0[23] ^ me5c7e0[24] ^ me5c7e0[26] ^ me5c7e0[27] ^ me5c7e0[28] ^                   me5c7e0[30] ^ me5c7e0[31];   vk3a595[11] = oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[51] ^                   oscb8fc[50] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[43] ^ oscb8fc[41] ^                   oscb8fc[40] ^ oscb8fc[36] ^ oscb8fc[33] ^ oscb8fc[31] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[26] ^                   oscb8fc[25] ^ oscb8fc[24] ^ oscb8fc[20] ^ oscb8fc[17] ^ oscb8fc[16] ^ oscb8fc[15] ^ oscb8fc[14] ^                   oscb8fc[12] ^ oscb8fc[9] ^ oscb8fc[4] ^ oscb8fc[3] ^ oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[1] ^ me5c7e0[4] ^                   me5c7e0[8] ^ me5c7e0[9] ^ me5c7e0[11] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[15] ^ me5c7e0[16] ^                   me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[22] ^ me5c7e0[23] ^ me5c7e0[24] ^ me5c7e0[25] ^ me5c7e0[26] ^                   me5c7e0[27];   vk3a595[12] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[54] ^ oscb8fc[53] ^                   oscb8fc[52] ^ oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[42] ^                   oscb8fc[41] ^ oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[27] ^ oscb8fc[24] ^ oscb8fc[21] ^ oscb8fc[18] ^                   oscb8fc[17] ^ oscb8fc[15] ^ oscb8fc[13] ^ oscb8fc[12] ^ oscb8fc[9] ^ oscb8fc[6] ^ oscb8fc[5] ^                   oscb8fc[4] ^ oscb8fc[2] ^ oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[9] ^ me5c7e0[10] ^ me5c7e0[14] ^                   me5c7e0[15] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[22] ^                   me5c7e0[24] ^ me5c7e0[25] ^ me5c7e0[27] ^ me5c7e0[29] ^ me5c7e0[31];   vk3a595[13] = oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[53] ^                   oscb8fc[52] ^ oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[43] ^ oscb8fc[42] ^                   oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[28] ^ oscb8fc[25] ^ oscb8fc[22] ^ oscb8fc[19] ^ oscb8fc[18] ^                   oscb8fc[16] ^ oscb8fc[14] ^ oscb8fc[13] ^ oscb8fc[10] ^ oscb8fc[7] ^ oscb8fc[6] ^ oscb8fc[5] ^                   oscb8fc[3] ^ oscb8fc[2] ^ oscb8fc[1] ^ me5c7e0[0] ^ me5c7e0[10] ^ me5c7e0[11] ^ me5c7e0[15] ^                   me5c7e0[16] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[23] ^                   me5c7e0[25] ^ me5c7e0[26] ^ me5c7e0[28] ^ me5c7e0[30];   vk3a595[14] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[54] ^                   oscb8fc[53] ^ oscb8fc[52] ^ oscb8fc[51] ^ oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[44] ^ oscb8fc[43] ^                   oscb8fc[33] ^ oscb8fc[32] ^ oscb8fc[29] ^ oscb8fc[26] ^ oscb8fc[23] ^ oscb8fc[20] ^ oscb8fc[19] ^                   oscb8fc[17] ^ oscb8fc[15] ^ oscb8fc[14] ^ oscb8fc[11] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[6] ^                   oscb8fc[4] ^ oscb8fc[3] ^ oscb8fc[2] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[11] ^ me5c7e0[12] ^                   me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[23] ^                   me5c7e0[24] ^ me5c7e0[26] ^ me5c7e0[27] ^ me5c7e0[29] ^ me5c7e0[31];   vk3a595[15] = oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[54] ^                   oscb8fc[53] ^ oscb8fc[52] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[34] ^                   oscb8fc[33] ^ oscb8fc[30] ^ oscb8fc[27] ^ oscb8fc[24] ^ oscb8fc[21] ^ oscb8fc[20] ^ oscb8fc[18] ^                   oscb8fc[16] ^ oscb8fc[15] ^ oscb8fc[12] ^ oscb8fc[9] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[5] ^                   oscb8fc[4] ^ oscb8fc[3] ^ me5c7e0[1] ^ me5c7e0[2] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[17] ^                   me5c7e0[18] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[23] ^ me5c7e0[24] ^ me5c7e0[25] ^                   me5c7e0[27] ^ me5c7e0[28] ^ me5c7e0[30];   vk3a595[16] = oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[51] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[44] ^                   oscb8fc[37] ^ oscb8fc[35] ^ oscb8fc[32] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[26] ^ oscb8fc[24] ^                   oscb8fc[22] ^ oscb8fc[21] ^ oscb8fc[19] ^ oscb8fc[17] ^ oscb8fc[13] ^ oscb8fc[12] ^ oscb8fc[8] ^                   oscb8fc[5] ^ oscb8fc[4] ^ oscb8fc[0] ^ me5c7e0[0] ^ me5c7e0[3] ^ me5c7e0[5] ^ me5c7e0[12] ^ me5c7e0[14] ^                   me5c7e0[15] ^ me5c7e0[16] ^ me5c7e0[19] ^ me5c7e0[24] ^ me5c7e0[25];   vk3a595[17] = oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[52] ^ oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[45] ^                   oscb8fc[38] ^ oscb8fc[36] ^ oscb8fc[33] ^ oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[27] ^ oscb8fc[25] ^                   oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[20] ^ oscb8fc[18] ^ oscb8fc[14] ^ oscb8fc[13] ^ oscb8fc[9] ^                   oscb8fc[6] ^ oscb8fc[5] ^ oscb8fc[1] ^ me5c7e0[1] ^ me5c7e0[4] ^ me5c7e0[6] ^ me5c7e0[13] ^ me5c7e0[15] ^                   me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[20] ^ me5c7e0[25] ^ me5c7e0[26];   vk3a595[18] = oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[53] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[46] ^                   oscb8fc[39] ^ oscb8fc[37] ^ oscb8fc[34] ^ oscb8fc[32] ^ oscb8fc[31] ^ oscb8fc[28] ^ oscb8fc[26] ^                   oscb8fc[24] ^ oscb8fc[23] ^ oscb8fc[21] ^ oscb8fc[19] ^ oscb8fc[15] ^ oscb8fc[14] ^ oscb8fc[10] ^                   oscb8fc[7] ^ oscb8fc[6] ^ oscb8fc[2] ^ me5c7e0[0] ^ me5c7e0[2] ^ me5c7e0[5] ^ me5c7e0[7] ^ me5c7e0[14] ^                   me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[21] ^ me5c7e0[26] ^ me5c7e0[27];   vk3a595[19] = oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[54] ^ oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[47] ^                   oscb8fc[40] ^ oscb8fc[38] ^ oscb8fc[35] ^ oscb8fc[33] ^ oscb8fc[32] ^ oscb8fc[29] ^ oscb8fc[27] ^                   oscb8fc[25] ^ oscb8fc[24] ^ oscb8fc[22] ^ oscb8fc[20] ^ oscb8fc[16] ^ oscb8fc[15] ^ oscb8fc[11] ^                   oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[3] ^ me5c7e0[0] ^ me5c7e0[1] ^ me5c7e0[3] ^ me5c7e0[6] ^ me5c7e0[8] ^                   me5c7e0[15] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[22] ^ me5c7e0[27] ^ me5c7e0[28];   vk3a595[20] = oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[55] ^ oscb8fc[52] ^ oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[48] ^                   oscb8fc[41] ^ oscb8fc[39] ^ oscb8fc[36] ^ oscb8fc[34] ^ oscb8fc[33] ^ oscb8fc[30] ^ oscb8fc[28] ^                   oscb8fc[26] ^ oscb8fc[25] ^ oscb8fc[23] ^ oscb8fc[21] ^ oscb8fc[17] ^ oscb8fc[16] ^ oscb8fc[12] ^                   oscb8fc[9] ^ oscb8fc[8] ^ oscb8fc[4] ^ me5c7e0[1] ^ me5c7e0[2] ^ me5c7e0[4] ^ me5c7e0[7] ^ me5c7e0[9] ^                   me5c7e0[16] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[23] ^ me5c7e0[28] ^ me5c7e0[29];   vk3a595[21] = oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[56] ^ oscb8fc[53] ^ oscb8fc[52] ^ oscb8fc[51] ^ oscb8fc[49] ^                   oscb8fc[42] ^ oscb8fc[40] ^ oscb8fc[37] ^ oscb8fc[35] ^ 
oscb8fc[34] ^ oscb8fc[31] ^ oscb8fc[29] ^                   oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[24] ^ oscb8fc[22] ^ oscb8fc[18] ^ oscb8fc[17] ^ oscb8fc[13] ^                   oscb8fc[10] ^ oscb8fc[9] ^ oscb8fc[5] ^ me5c7e0[2] ^ me5c7e0[3] ^ me5c7e0[5] ^ me5c7e0[8] ^ me5c7e0[10] ^                   me5c7e0[17] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[24] ^ me5c7e0[29] ^ me5c7e0[30];   vk3a595[22] = oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[55] ^ oscb8fc[52] ^                   oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[43] ^ oscb8fc[41] ^ oscb8fc[38] ^                   oscb8fc[37] ^ oscb8fc[36] ^ oscb8fc[35] ^ oscb8fc[34] ^ oscb8fc[31] ^ oscb8fc[29] ^ oscb8fc[27] ^                   oscb8fc[26] ^ oscb8fc[24] ^ oscb8fc[23] ^ oscb8fc[19] ^ oscb8fc[18] ^ oscb8fc[16] ^ oscb8fc[14] ^                   oscb8fc[12] ^ oscb8fc[11] ^ oscb8fc[9] ^ oscb8fc[0] ^ me5c7e0[2] ^ me5c7e0[3] ^ me5c7e0[4] ^                   me5c7e0[5] ^ me5c7e0[6] ^ me5c7e0[9] ^ me5c7e0[11] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[15] ^                   me5c7e0[16] ^ me5c7e0[20] ^ me5c7e0[23] ^ me5c7e0[25] ^ me5c7e0[26] ^ me5c7e0[28] ^ me5c7e0[29] ^                   me5c7e0[30];   vk3a595[23] = oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[54] ^ oscb8fc[50] ^                   oscb8fc[49] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[42] ^ oscb8fc[39] ^ oscb8fc[38] ^ oscb8fc[36] ^                   oscb8fc[35] ^ oscb8fc[34] ^ oscb8fc[31] ^ oscb8fc[29] ^ oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[20] ^                   oscb8fc[19] ^ oscb8fc[17] ^ oscb8fc[16] ^ oscb8fc[15] ^ oscb8fc[13] ^ oscb8fc[9] ^ oscb8fc[6] ^                   oscb8fc[1] ^ oscb8fc[0] ^ me5c7e0[2] ^ me5c7e0[3] ^ me5c7e0[4] ^ me5c7e0[6] ^ me5c7e0[7] ^ me5c7e0[10] ^                   me5c7e0[14] ^ me5c7e0[15] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[22] ^ me5c7e0[23] ^ me5c7e0[24] ^                   me5c7e0[27] ^ me5c7e0[28] ^ me5c7e0[30];   vk3a595[24] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[55] ^ oscb8fc[51] ^                   oscb8fc[50] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[43] ^ oscb8fc[40] ^ oscb8fc[39] ^ oscb8fc[37] ^                   oscb8fc[36] ^ oscb8fc[35] ^ oscb8fc[32] ^ oscb8fc[30] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[21] ^                   oscb8fc[20] ^ oscb8fc[18] ^ oscb8fc[17] ^ oscb8fc[16] ^ oscb8fc[14] ^ oscb8fc[10] ^ oscb8fc[7] ^                   oscb8fc[2] ^ oscb8fc[1] ^ me5c7e0[0] ^ me5c7e0[3] ^ me5c7e0[4] ^ me5c7e0[5] ^ me5c7e0[7] ^ me5c7e0[8] ^                   me5c7e0[11] ^ me5c7e0[15] ^ me5c7e0[16] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[23] ^ me5c7e0[24] ^                   me5c7e0[25] ^ me5c7e0[28] ^ me5c7e0[29] ^ me5c7e0[31];   vk3a595[25] = oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[52] ^ oscb8fc[51] ^                   oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[44] ^ oscb8fc[41] ^ oscb8fc[40] ^ oscb8fc[38] ^ oscb8fc[37] ^                   oscb8fc[36] ^ oscb8fc[33] ^ oscb8fc[31] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[22] ^ oscb8fc[21] ^                   oscb8fc[19] ^ oscb8fc[18] ^ oscb8fc[17] ^ oscb8fc[15] ^ oscb8fc[11] ^ oscb8fc[8] ^ oscb8fc[3] ^                   oscb8fc[2] ^ me5c7e0[1] ^ me5c7e0[4] ^ me5c7e0[5] ^ me5c7e0[6] ^ me5c7e0[8] ^ me5c7e0[9] ^ me5c7e0[12] ^                   me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[24] ^ me5c7e0[25] ^ me5c7e0[26] ^                   me5c7e0[29] ^ me5c7e0[30];   vk3a595[26] = oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[55] ^ oscb8fc[54] ^                   oscb8fc[52] ^ oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[47] ^ oscb8fc[44] ^ oscb8fc[42] ^ oscb8fc[41] ^                   oscb8fc[39] ^ oscb8fc[38] ^ oscb8fc[31] ^ oscb8fc[28] ^ oscb8fc[26] ^ oscb8fc[25] ^ oscb8fc[24] ^                   oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[20] ^ oscb8fc[19] ^ oscb8fc[18] ^ oscb8fc[10] ^ oscb8fc[6] ^                   oscb8fc[4] ^ oscb8fc[3] ^ oscb8fc[0] ^ me5c7e0[6] ^ me5c7e0[7] ^ me5c7e0[9] ^ me5c7e0[10] ^ me5c7e0[12] ^                   me5c7e0[15] ^ me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[20] ^ me5c7e0[22] ^ me5c7e0[23] ^ me5c7e0[25] ^                   me5c7e0[27] ^ me5c7e0[28] ^ me5c7e0[29] ^ me5c7e0[30];   vk3a595[27] = oscb8fc[63] ^ oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[55] ^                   oscb8fc[53] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[48] ^ oscb8fc[45] ^ oscb8fc[43] ^ oscb8fc[42] ^                   oscb8fc[40] ^ oscb8fc[39] ^ oscb8fc[32] ^ oscb8fc[29] ^ oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[25] ^                   oscb8fc[24] ^ oscb8fc[23] ^ oscb8fc[21] ^ oscb8fc[20] ^ oscb8fc[19] ^ oscb8fc[11] ^ oscb8fc[7] ^                   oscb8fc[5] ^ oscb8fc[4] ^ oscb8fc[1] ^ me5c7e0[0] ^ me5c7e0[7] ^ me5c7e0[8] ^ me5c7e0[10] ^ me5c7e0[11] ^                   me5c7e0[13] ^ me5c7e0[16] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[21] ^ me5c7e0[23] ^ me5c7e0[24] ^                   me5c7e0[26] ^ me5c7e0[28] ^ me5c7e0[29] ^ me5c7e0[30] ^ me5c7e0[31];   vk3a595[28] = oscb8fc[63] ^ oscb8fc[62] ^ oscb8fc[61] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[56] ^ oscb8fc[54] ^                   oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[49] ^ oscb8fc[46] ^ oscb8fc[44] ^ oscb8fc[43] ^ oscb8fc[41] ^                   oscb8fc[40] ^ oscb8fc[33] ^ oscb8fc[30] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[25] ^                   oscb8fc[24] ^ oscb8fc[22] ^ oscb8fc[21] ^ oscb8fc[20] ^ oscb8fc[12] ^ oscb8fc[8] ^ oscb8fc[6] ^                   oscb8fc[5] ^ oscb8fc[2] ^ me5c7e0[1] ^ me5c7e0[8] ^ me5c7e0[9] ^ me5c7e0[11] ^ me5c7e0[12] ^                   me5c7e0[14] ^ me5c7e0[17] ^ me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[22] ^ me5c7e0[24] ^ me5c7e0[25] ^                   me5c7e0[27] ^ me5c7e0[29] ^ me5c7e0[30] ^ me5c7e0[31];   vk3a595[29] = oscb8fc[63] ^ oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[58] ^ oscb8fc[57] ^ oscb8fc[55] ^ oscb8fc[52] ^                   oscb8fc[51] ^ oscb8fc[50] ^ oscb8fc[47] ^ oscb8fc[45] ^ oscb8fc[44] ^ oscb8fc[42] ^ oscb8fc[41] ^                   oscb8fc[34] ^ oscb8fc[31] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[25] ^                   oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[21] ^ oscb8fc[13] ^ oscb8fc[9] ^ oscb8fc[7] ^ oscb8fc[6] ^                   oscb8fc[3] ^ me5c7e0[2] ^ me5c7e0[9] ^ me5c7e0[10] ^ me5c7e0[12] ^ me5c7e0[13] ^ me5c7e0[15] ^                   me5c7e0[18] ^ me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[23] ^ me5c7e0[25] ^ me5c7e0[26] ^ me5c7e0[28] ^                   me5c7e0[30] ^ me5c7e0[31];   vk3a595[30] = oscb8fc[63] ^ oscb8fc[61] ^ oscb8fc[59] ^ oscb8fc[58] ^ oscb8fc[56] ^ oscb8fc[53] ^ oscb8fc[52] ^                   oscb8fc[51] ^ oscb8fc[48] ^ oscb8fc[46] ^ oscb8fc[45] ^ oscb8fc[43] ^ oscb8fc[42] ^ oscb8fc[35] ^                   oscb8fc[32] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[26] ^ oscb8fc[24] ^                   oscb8fc[23] ^ oscb8fc[22] ^ oscb8fc[14] ^ oscb8fc[10] ^ oscb8fc[8] ^ oscb8fc[7] ^ oscb8fc[4] ^                   me5c7e0[0] ^ me5c7e0[3] ^ me5c7e0[10] ^ me5c7e0[11] ^ me5c7e0[13] ^ me5c7e0[14] ^ me5c7e0[16] ^                   me5c7e0[19] ^ me5c7e0[20] ^ me5c7e0[21] ^ me5c7e0[24] ^ me5c7e0[26] ^ me5c7e0[27] ^ me5c7e0[29] ^                   me5c7e0[31];   vk3a595[31] = oscb8fc[62] ^ oscb8fc[60] ^ oscb8fc[59] ^ oscb8fc[57] ^ oscb8fc[54] ^ oscb8fc[53] ^ oscb8fc[52] ^                   oscb8fc[49] ^ oscb8fc[47] ^ oscb8fc[46] ^ oscb8fc[44] ^ oscb8fc[43] ^ oscb8fc[36] ^ oscb8fc[33] ^                   oscb8fc[31] ^ oscb8fc[30] ^ oscb8fc[29] ^ oscb8fc[28] ^ oscb8fc[27] ^ oscb8fc[25] ^ oscb8fc[24] ^                   oscb8fc[23] ^ oscb8fc[15] ^ oscb8fc[11] ^ oscb8fc[9] ^ oscb8fc[8] ^ oscb8fc[5] ^ me5c7e0[1] ^                   me5c7e0[4] ^ me5c7e0[11] ^ me5c7e0[12] ^ me5c7e0[14] ^ me5c7e0[15] ^ me5c7e0[17] ^ me5c7e0[20] ^                   me5c7e0[21] ^ me5c7e0[22] ^ me5c7e0[25] ^ me5c7e0[27] ^ me5c7e0[28] ^ me5c7e0[30];
end

always @(*) begin   mece4ef = fn64bf9;   ay72779 = {          lde3f01[24], lde3f01[25], lde3f01[26], lde3f01[27], lde3f01[28], lde3f01[29], lde3f01[30], lde3f01[31],          lde3f01[16], lde3f01[17], lde3f01[18], lde3f01[19], lde3f01[20], lde3f01[21], lde3f01[22], lde3f01[23],          lde3f01[8], lde3f01[9], lde3f01[10], lde3f01[11], lde3f01[12], lde3f01[13], lde3f01[14], lde3f01[15],          lde3f01[0], lde3f01[1], lde3f01[2], lde3f01[3], lde3f01[4], lde3f01[5], lde3f01[6], lde3f01[7]         } ;


`ifdef X1
      do93bc9 = gd171cb;


`endif



`ifdef X4
      do93bc9 = crc_reg64;


`endif

   ww4c97f[0] = ec1f80f[31] ^ ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[24] ^                  ec1f80f[16] ^ ec1f80f[12] ^ ec1f80f[10] ^ ec1f80f[9] ^ ec1f80f[6] ^ ec1f80f[0] ^ zxfc079[0] ^                  zxfc079[6] ^ zxfc079[9] ^ zxfc079[10] ^ zxfc079[12] ^ zxfc079[16] ^ zxfc079[24] ^ zxfc079[25] ^                  zxfc079[26] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[30] ^ zxfc079[31];   ww4c97f[1] = ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[24] ^ ec1f80f[17] ^ ec1f80f[16] ^ ec1f80f[13] ^ ec1f80f[12] ^                  ec1f80f[11] ^ ec1f80f[9] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[1] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[1] ^                  zxfc079[6] ^ zxfc079[7] ^ zxfc079[9] ^ zxfc079[11] ^ zxfc079[12] ^ zxfc079[13] ^ zxfc079[16] ^                  zxfc079[17] ^ zxfc079[24] ^ zxfc079[27] ^ zxfc079[28];   ww4c97f[2] = ec1f80f[31] ^ ec1f80f[30] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[18] ^ ec1f80f[17] ^ ec1f80f[16] ^                  ec1f80f[14] ^ ec1f80f[13] ^ ec1f80f[9] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[2] ^                  ec1f80f[1] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[1] ^ zxfc079[2] ^ zxfc079[6] ^ zxfc079[7] ^ zxfc079[8] ^                  zxfc079[9] ^ zxfc079[13] ^ zxfc079[14] ^ zxfc079[16] ^ zxfc079[17] ^ zxfc079[18] ^ zxfc079[24] ^                  zxfc079[26] ^ zxfc079[30] ^ zxfc079[31];   ww4c97f[3] = ec1f80f[31] ^ ec1f80f[27] ^ ec1f80f[25] ^ ec1f80f[19] ^ ec1f80f[18] ^ ec1f80f[17] ^ ec1f80f[15] ^                  ec1f80f[14] ^ ec1f80f[10] ^ ec1f80f[9] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[3] ^ ec1f80f[2] ^                  ec1f80f[1] ^ zxfc079[1] ^ zxfc079[2] ^ zxfc079[3] ^ zxfc079[7] ^ zxfc079[8] ^ zxfc079[9] ^ zxfc079[10] ^                  zxfc079[14] ^ zxfc079[15] ^ zxfc079[17] ^ zxfc079[18] ^ zxfc079[19] ^ zxfc079[25] ^ zxfc079[27] ^                  zxfc079[31];   ww4c97f[4] = ec1f80f[31] ^ ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[20] ^ ec1f80f[19] ^                  ec1f80f[18] ^ ec1f80f[15] ^ ec1f80f[12] ^ ec1f80f[11] ^ ec1f80f[8] ^ ec1f80f[6] ^ ec1f80f[4] ^                  ec1f80f[3] ^ ec1f80f[2] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[2] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[6] ^                  zxfc079[8] ^ zxfc079[11] ^ zxfc079[12] ^ zxfc079[15] ^ zxfc079[18] ^ zxfc079[19] ^ zxfc079[20] ^                  zxfc079[24] ^ zxfc079[25] ^ zxfc079[29] ^ zxfc079[30] ^ zxfc079[31];   ww4c97f[5] = ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[24] ^ ec1f80f[21] ^ ec1f80f[20] ^ ec1f80f[19] ^ ec1f80f[13] ^                  ec1f80f[10] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[4] ^ ec1f80f[3] ^ ec1f80f[1] ^ ec1f80f[0] ^                  zxfc079[0] ^ zxfc079[1] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[5] ^ zxfc079[6] ^ zxfc079[7] ^ zxfc079[10] ^                  zxfc079[13] ^ zxfc079[19] ^ zxfc079[20] ^ zxfc079[21] ^ zxfc079[24] ^ zxfc079[28] ^ zxfc079[29];   ww4c97f[6] = ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[25] ^ ec1f80f[22] ^ ec1f80f[21] ^ ec1f80f[20] ^ ec1f80f[14] ^                  ec1f80f[11] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[4] ^ ec1f80f[2] ^ ec1f80f[1] ^                  zxfc079[1] ^ zxfc079[2] ^ zxfc079[4] ^ zxfc079[5] ^ zxfc079[6] ^ zxfc079[7] ^ zxfc079[8] ^ zxfc079[11] ^                  zxfc079[14] ^ zxfc079[20] ^ zxfc079[21] ^ zxfc079[22] ^ zxfc079[25] ^ zxfc079[29] ^ zxfc079[30];   ww4c97f[7] = ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[22] ^ ec1f80f[21] ^                  ec1f80f[16] ^ ec1f80f[15] ^ ec1f80f[10] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[5] ^ ec1f80f[3] ^                  ec1f80f[2] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[2] ^ zxfc079[3] ^ zxfc079[5] ^ zxfc079[7] ^ zxfc079[8] ^                  zxfc079[10] ^ zxfc079[15] ^ zxfc079[16] ^ zxfc079[21] ^ zxfc079[22] ^ zxfc079[23] ^ zxfc079[24] ^                  zxfc079[25] ^ zxfc079[28] ^ zxfc079[29];   ww4c97f[8] = ec1f80f[31] ^ ec1f80f[28] ^ ec1f80f[23] ^ ec1f80f[22] ^ ec1f80f[17] ^ ec1f80f[12] ^ ec1f80f[11] ^                  ec1f80f[10] ^ ec1f80f[8] ^ ec1f80f[4] ^ ec1f80f[3] ^ ec1f80f[1] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[1] ^                  zxfc079[3] ^ zxfc079[4] ^ zxfc079[8] ^ zxfc079[10] ^ zxfc079[11] ^ zxfc079[12] ^ zxfc079[17] ^                  zxfc079[22] ^ zxfc079[23] ^ zxfc079[28] ^ zxfc079[31];   ww4c97f[9] = ec1f80f[29] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[18] ^ ec1f80f[13] ^ ec1f80f[12] ^ ec1f80f[11] ^                  ec1f80f[9] ^ ec1f80f[5] ^ ec1f80f[4] ^ ec1f80f[2] ^ ec1f80f[1] ^ zxfc079[1] ^ zxfc079[2] ^ zxfc079[4] ^                  zxfc079[5] ^ zxfc079[9] ^ zxfc079[11] ^ zxfc079[12] ^ zxfc079[13] ^ zxfc079[18] ^ zxfc079[23] ^                  zxfc079[24] ^ zxfc079[29];   ww4c97f[10] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[26] ^ ec1f80f[19] ^ ec1f80f[16] ^ ec1f80f[14] ^                   ec1f80f[13] ^ ec1f80f[9] ^ ec1f80f[5] ^ ec1f80f[3] ^ ec1f80f[2] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[2] ^                   zxfc079[3] ^ zxfc079[5] ^ zxfc079[9] ^ zxfc079[13] ^ zxfc079[14] ^ zxfc079[16] ^ zxfc079[19] ^                   zxfc079[26] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[11] = ec1f80f[31] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[20] ^                   ec1f80f[17] ^ ec1f80f[16] ^ ec1f80f[15] ^ ec1f80f[14] ^ ec1f80f[12] ^ ec1f80f[9] ^ ec1f80f[4] ^                   ec1f80f[3] ^ ec1f80f[1] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[1] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[9] ^                   zxfc079[12] ^ zxfc079[14] ^ zxfc079[15] ^ zxfc079[16] ^ zxfc079[17] ^ zxfc079[20] ^ zxfc079[24] ^                   zxfc079[25] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[28] ^ zxfc079[31];   ww4c97f[12] = ec1f80f[31] ^ ec1f80f[30] ^ ec1f80f[27] ^ ec1f80f[24] ^ ec1f80f[21] ^ ec1f80f[18] ^ ec1f80f[17] ^                   ec1f80f[15] ^ ec1f80f[13] ^ ec1f80f[12] ^ ec1f80f[9] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[4] ^                   ec1f80f[2] ^ ec1f80f[1] ^ ec1f80f[0] ^ zxfc079[0] ^ zxfc079[1] ^ zxfc079[2] ^ zxfc079[4] ^ zxfc079[5] ^                   zxfc079[6] ^ zxfc079[9] ^ zxfc079[12] ^ zxfc079[13] ^ zxfc079[15] ^ zxfc079[17] ^ zxfc079[18] ^                   zxfc079[21] ^ zxfc079[24] ^ zxfc079[27] ^ zxfc079[30] ^ zxfc079[31];   ww4c97f[13] = ec1f80f[31] ^ ec1f80f[28] ^ ec1f80f[25] ^ ec1f80f[22] ^ ec1f80f[19] ^ ec1f80f[18] ^ ec1f80f[16] ^                   ec1f80f[14] ^ ec1f80f[13] ^ ec1f80f[10] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[3] ^                   ec1f80f[2] ^ ec1f80f[1] ^ zxfc079[1] ^ zxfc079[2] ^ zxfc079[3] ^ zxfc079[5] ^ zxfc079[6] ^ zxfc079[7] ^                   zxfc079[10] ^ zxfc079[13] ^ zxfc079[14] ^ zxfc079[16] ^ zxfc079[18] ^ zxfc079[19] ^ zxfc079[22] ^                   zxfc079[25] ^ zxfc079[28] ^ zxfc079[31];   ww4c97f[14] = ec1f80f[29] ^ ec1f80f[26] ^ ec1f80f[23] ^ ec1f80f[20] ^ ec1f80f[19] ^ ec1f80f[17] ^ ec1f80f[15] ^                   ec1f80f[14] ^ ec1f80f[11] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[4] ^ ec1f80f[3] ^                   ec1f80f[2] ^ zxfc079[2] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[6] ^ zxfc079[7] ^ zxfc079[8] ^ zxfc079[11] ^                   zxfc079[14] ^ zxfc079[15] ^ zxfc079[17] ^ zxfc079[19] ^ zxfc079[20] ^ zxfc079[23] ^ zxfc079[26] ^                   zxfc079[29];   ww4c97f[15] = ec1f80f[30] ^ ec1f80f[27] ^ ec1f80f[24] ^ ec1f80f[21] ^ ec1f80f[20] ^ ec1f80f[18] ^ ec1f80f[16] ^                   ec1f80f[15] ^ ec1f80f[12] ^ ec1f80f[9] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[5] ^ ec1f80f[4] ^                   ec1f80f[3] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[5] ^ zxfc079[7] ^ zxfc079[8] ^ zxfc079[9] ^ zxfc079[12] ^                   zxfc079[15] ^ zxfc079[16] ^ zxfc079[18] ^ zxfc079[20] ^ zxfc079[21] ^ zxfc079[24] ^ zxfc079[27] ^                   zxfc079[30];   ww4c97f[16] = ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[22] ^ ec1f80f[21] ^ ec1f80f[19] ^                   ec1f80f[17] ^ ec1f80f[13] ^ ec1f80f[12] ^ ec1f80f[8] ^ ec1f80f[5] ^ ec1f80f[4] ^ ec1f80f[0] ^                   zxfc079[0] ^ zxfc079[4] ^ zxfc079[5] ^ zxfc079[8] ^ zxfc079[12] ^ zxfc079[13] ^ zxfc079[17] ^                   zxfc079[19] ^ zxfc079[21] ^ zxfc079[22] ^ zxfc079[24] ^ zxfc079[26] ^ zxfc079[29] ^ zxfc079[30];   ww4c97f[17] = ec1f80f[31] ^ 
ec1f80f[30] ^ ec1f80f[27] ^ ec1f80f[25] ^ ec1f80f[23] ^ ec1f80f[22] ^ ec1f80f[20] ^                   ec1f80f[18] ^ ec1f80f[14] ^ ec1f80f[13] ^ ec1f80f[9] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[1] ^                   zxfc079[1] ^ zxfc079[5] ^ zxfc079[6] ^ zxfc079[9] ^ zxfc079[13] ^ zxfc079[14] ^ zxfc079[18] ^                   zxfc079[20] ^ zxfc079[22] ^ zxfc079[23] ^ zxfc079[25] ^ zxfc079[27] ^ zxfc079[30] ^ zxfc079[31];   ww4c97f[18] = ec1f80f[31] ^ ec1f80f[28] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[21] ^ ec1f80f[19] ^                   ec1f80f[15] ^ ec1f80f[14] ^ ec1f80f[10] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[2] ^ zxfc079[2] ^                   zxfc079[6] ^ zxfc079[7] ^ zxfc079[10] ^ zxfc079[14] ^ zxfc079[15] ^ zxfc079[19] ^ zxfc079[21] ^                   zxfc079[23] ^ zxfc079[24] ^ zxfc079[26] ^ zxfc079[28] ^ zxfc079[31];   ww4c97f[19] = ec1f80f[29] ^ ec1f80f[27] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[22] ^ ec1f80f[20] ^ ec1f80f[16] ^                   ec1f80f[15] ^ ec1f80f[11] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[3] ^ zxfc079[3] ^ zxfc079[7] ^                   zxfc079[8] ^ zxfc079[11] ^ zxfc079[15] ^ zxfc079[16] ^ zxfc079[20] ^ zxfc079[22] ^ zxfc079[24] ^                   zxfc079[25] ^ zxfc079[27] ^ zxfc079[29];   ww4c97f[20] = ec1f80f[30] ^ ec1f80f[28] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[23] ^ ec1f80f[21] ^ ec1f80f[17] ^                   ec1f80f[16] ^ ec1f80f[12] ^ ec1f80f[9] ^ ec1f80f[8] ^ ec1f80f[4] ^ zxfc079[4] ^ zxfc079[8] ^                   zxfc079[9] ^ zxfc079[12] ^ zxfc079[16] ^ zxfc079[17] ^ zxfc079[21] ^ zxfc079[23] ^ zxfc079[25] ^                   zxfc079[26] ^ zxfc079[28] ^ zxfc079[30];   ww4c97f[21] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[22] ^ ec1f80f[18] ^                   ec1f80f[17] ^ ec1f80f[13] ^ ec1f80f[10] ^ ec1f80f[9] ^ ec1f80f[5] ^ zxfc079[5] ^ zxfc079[9] ^                   zxfc079[10] ^ zxfc079[13] ^ zxfc079[17] ^ zxfc079[18] ^ zxfc079[22] ^ zxfc079[24] ^ zxfc079[26] ^                   zxfc079[27] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[22] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[19] ^                   ec1f80f[18] ^ ec1f80f[16] ^ ec1f80f[14] ^ ec1f80f[12] ^ ec1f80f[11] ^ ec1f80f[9] ^ ec1f80f[0] ^                   zxfc079[0] ^ zxfc079[9] ^ zxfc079[11] ^ zxfc079[12] ^ zxfc079[14] ^ zxfc079[16] ^ zxfc079[18] ^                   zxfc079[19] ^ zxfc079[23] ^ zxfc079[24] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[23] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[20] ^ ec1f80f[19] ^ ec1f80f[17] ^                   ec1f80f[16] ^ ec1f80f[15] ^ ec1f80f[13] ^ ec1f80f[9] ^ ec1f80f[6] ^ ec1f80f[1] ^ ec1f80f[0] ^                   zxfc079[0] ^ zxfc079[1] ^ zxfc079[6] ^ zxfc079[9] ^ zxfc079[13] ^ zxfc079[15] ^ zxfc079[16] ^                   zxfc079[17] ^ zxfc079[19] ^ zxfc079[20] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[24] = ec1f80f[30] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[21] ^ ec1f80f[20] ^ ec1f80f[18] ^ ec1f80f[17] ^                   ec1f80f[16] ^ ec1f80f[14] ^ ec1f80f[10] ^ ec1f80f[7] ^ ec1f80f[2] ^ ec1f80f[1] ^ zxfc079[1] ^                   zxfc079[2] ^ zxfc079[7] ^ zxfc079[10] ^ zxfc079[14] ^ zxfc079[16] ^ zxfc079[17] ^ zxfc079[18] ^                   zxfc079[20] ^ zxfc079[21] ^ zxfc079[27] ^ zxfc079[28] ^ zxfc079[30];   ww4c97f[25] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[22] ^ ec1f80f[21] ^ ec1f80f[19] ^ ec1f80f[18] ^                   ec1f80f[17] ^ ec1f80f[15] ^ ec1f80f[11] ^ ec1f80f[8] ^ ec1f80f[3] ^ ec1f80f[2] ^ zxfc079[2] ^                   zxfc079[3] ^ zxfc079[8] ^ zxfc079[11] ^ zxfc079[15] ^ zxfc079[17] ^ zxfc079[18] ^ zxfc079[19] ^                   zxfc079[21] ^ zxfc079[22] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[26] = ec1f80f[31] ^ ec1f80f[28] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[22] ^                   ec1f80f[20] ^ ec1f80f[19] ^ ec1f80f[18] ^ ec1f80f[10] ^ ec1f80f[6] ^ ec1f80f[4] ^ ec1f80f[3] ^                   ec1f80f[0] ^ zxfc079[0] ^ zxfc079[3] ^ zxfc079[4] ^ zxfc079[6] ^ zxfc079[10] ^ zxfc079[18] ^                   zxfc079[19] ^ zxfc079[20] ^ zxfc079[22] ^ zxfc079[23] ^ zxfc079[24] ^ zxfc079[25] ^ zxfc079[26] ^                   zxfc079[28] ^ zxfc079[31];   ww4c97f[27] = ec1f80f[29] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[23] ^ ec1f80f[21] ^                   ec1f80f[20] ^ ec1f80f[19] ^ ec1f80f[11] ^ ec1f80f[7] ^ ec1f80f[5] ^ ec1f80f[4] ^ ec1f80f[1] ^                   zxfc079[1] ^ zxfc079[4] ^ zxfc079[5] ^ zxfc079[7] ^ zxfc079[11] ^ zxfc079[19] ^ zxfc079[20] ^                   zxfc079[21] ^ zxfc079[23] ^ zxfc079[24] ^ zxfc079[25] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[29];   ww4c97f[28] = ec1f80f[30] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[24] ^ ec1f80f[22] ^                   ec1f80f[21] ^ ec1f80f[20] ^ ec1f80f[12] ^ ec1f80f[8] ^ ec1f80f[6] ^ ec1f80f[5] ^ ec1f80f[2] ^                   zxfc079[2] ^ zxfc079[5] ^ zxfc079[6] ^ zxfc079[8] ^ zxfc079[12] ^ zxfc079[20] ^ zxfc079[21] ^                   zxfc079[22] ^ zxfc079[24] ^ zxfc079[25] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[28] ^ zxfc079[30];   ww4c97f[29] = ec1f80f[31] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[25] ^ ec1f80f[23] ^                   ec1f80f[22] ^ ec1f80f[21] ^ ec1f80f[13] ^ ec1f80f[9] ^ ec1f80f[7] ^ ec1f80f[6] ^ ec1f80f[3] ^                   zxfc079[3] ^ zxfc079[6] ^ zxfc079[7] ^ zxfc079[9] ^ zxfc079[13] ^ zxfc079[21] ^ zxfc079[22] ^                   zxfc079[23] ^ zxfc079[25] ^ zxfc079[26] ^ zxfc079[27] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[31];   ww4c97f[30] = ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[26] ^ ec1f80f[24] ^ ec1f80f[23] ^                   ec1f80f[22] ^ ec1f80f[14] ^ ec1f80f[10] ^ ec1f80f[8] ^ ec1f80f[7] ^ ec1f80f[4] ^ zxfc079[4] ^                   zxfc079[7] ^ zxfc079[8] ^ zxfc079[10] ^ zxfc079[14] ^ zxfc079[22] ^ zxfc079[23] ^ zxfc079[24] ^                   zxfc079[26] ^ zxfc079[27] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[30];   ww4c97f[31] = ec1f80f[31] ^ ec1f80f[30] ^ ec1f80f[29] ^ ec1f80f[28] ^ ec1f80f[27] ^ ec1f80f[25] ^ ec1f80f[24] ^                   ec1f80f[23] ^ ec1f80f[15] ^ ec1f80f[11] ^ ec1f80f[9] ^ ec1f80f[8] ^ ec1f80f[5] ^ zxfc079[5] ^                   zxfc079[8] ^ zxfc079[9] ^ zxfc079[11] ^ zxfc079[15] ^ zxfc079[23] ^ zxfc079[24] ^ zxfc079[25] ^                   zxfc079[27] ^ zxfc079[28] ^ zxfc079[29] ^ zxfc079[30] ^ zxfc079[31];
end


`ifdef X1



always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      crc_reg64 <= 32'hFFFF_FFFF ;   else if (lsa2e39)      crc_reg64 <= 32'hFFFF_FFFF ;   else if (su595f0)      crc_reg64 <= fcb8e5c ;   else      crc_reg64 <= crc_reg64 ;
end


always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      bl61325 <= 32'h0000_0000 ;   else if (qgd45c7)      bl61325 <= crc_reg64 ;   else if (uie03ce)      bl61325 <= xjc72e3 ;   else            bl61325 <= gd171cb ;
end

`endif




`ifdef X4

always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n) begin      crc_reg64 <= 32'hFFFF_FFFF ;      bl61325 <= 32'hFFFF_FFFF ;   end   else if (lsa2e39) begin      crc_reg64 <= 32'hFFFF_FFFF ;      bl61325 <= 32'hFFFF_FFFF ;   end   else if (su595f0)  begin      crc_reg64 <= fcb8e5c ;      bl61325 <= xjc72e3 ;   end   else  begin      crc_reg64 <= crc_reg64 ;      bl61325 <= gd171cb ;   end
end

`endif




`ifdef X1


always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      fn64bf9 <= 32'h0000_0000 ;   else if (qgd45c7)      fn64bf9 <= mtb4467[63:32] ;   else      fn64bf9 <= 32'h0000_0000 ;
end

`endif



`ifdef X4
   assign fn64bf9 = mtb4467[63:32] ;

`endif



always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      os4359d  <= 1'b0 ;   else      os4359d  <= qgd45c7 ;
end


assign osef258 = { ~crc_reg64[24], ~crc_reg64[25], ~crc_reg64[26], ~crc_reg64[27],                        ~crc_reg64[28], ~crc_reg64[29], ~crc_reg64[30], ~crc_reg64[31] } ;
assign dm792c0 = { ~crc_reg64[16], ~crc_reg64[17], ~crc_reg64[18], ~crc_reg64[19],                        ~crc_reg64[20], ~crc_reg64[21], ~crc_reg64[22], ~crc_reg64[23] } ;
assign czc9602 = { ~crc_reg64[8], ~crc_reg64[9], ~crc_reg64[10], ~crc_reg64[11],                        ~crc_reg64[12], ~crc_reg64[13], ~crc_reg64[14], ~crc_reg64[15] } ;
assign wj4b014 = { ~crc_reg64[0], ~crc_reg64[1], ~crc_reg64[2], ~crc_reg64[3],                        ~crc_reg64[4], ~crc_reg64[5], ~crc_reg64[6], ~crc_reg64[7] } ;
assign dm580a5 = { ~gd171cb[24], ~gd171cb[25], ~gd171cb[26], ~gd171cb[27],                        ~gd171cb[28], ~gd171cb[29], ~gd171cb[30], ~gd171cb[31] } ;
assign psc052b = { ~gd171cb[16], ~gd171cb[17], ~gd171cb[18], ~gd171cb[19],                        ~gd171cb[20], ~gd171cb[21], ~gd171cb[22], ~gd171cb[23] } ;
assign sj295a = { ~gd171cb[8], ~gd171cb[9], ~gd171cb[10], ~gd171cb[11],                        ~gd171cb[12], ~gd171cb[13], ~gd171cb[14], ~gd171cb[15] } ;
assign pu14ad4 = { ~gd171cb[0], ~gd171cb[1], ~gd171cb[2], ~gd171cb[3],                        ~gd171cb[4], ~gd171cb[5], ~gd171cb[6], ~gd171cb[7] } ;

assign crc_out64 = {zm1e71, wyf38b, dm79c59, eace2cb} ;
assign crc_out32 = {rt71659, hd8b2ce, me59677, iccb3b9} ;
always@* begin mtb4467<={data_in>>1,xjc2975[0]};su595f0<=xjc2975[1];qgd45c7<=xjc2975[2];lsa2e39<=xjc2975[3];gd171cb<={bl61325>>1,xjc2975[4]};fcb8e5c<={vk3a595>>1,xjc2975[5]};xjc72e3<={ww4c97f>>1,xjc2975[6]};ir3971f<={zm9655f>>1,xjc2975[7]};oscb8fc<={ir957d2>>1,xjc2975[8]};me5c7e0<={bab2afa>>1,xjc2975[9]};lde3f01<={mece4ef>>1,xjc2975[10]};ec1f80f<={ay72779>>1,xjc2975[11]};zxfc079<={do93bc9>>1,xjc2975[12]};uie03ce<=xjc2975[13];zm1e71<={osef258>>1,xjc2975[14]};wyf38b<={dm792c0>>1,xjc2975[15]};dm79c59<={czc9602>>1,xjc2975[16]};eace2cb<={wj4b014>>1,xjc2975[17]};rt71659<={dm580a5>>1,xjc2975[18]};hd8b2ce<={psc052b>>1,xjc2975[19]};me59677<={sj295a>>1,xjc2975[20]};iccb3b9<={pu14ad4>>1,xjc2975[21]};end
always@* begin ux1852e[2047]<=enable_crc;ux1852e[2046]<=half_data;ux1852e[2045]<=rst_crc;ux1852e[2042]<=bl61325[0];ux1852e[2037]<=vk3a595[0];ux1852e[2026]<=ww4c97f[0];ux1852e[2005]<=zm9655f[0];ux1852e[1962]<=ir957d2[0];ux1852e[1877]<=bab2afa[0];ux1852e[1742]<=psc052b[0];ux1852e[1707]<=mece4ef[0];ux1852e[1459]<=wj4b014[0];ux1852e[1437]<=sj295a[0];ux1852e[1388]<=dm792c0[0];ux1852e[1371]<=os4359d;ux1852e[1366]<=ay72779[0];ux1852e[1023]<=data_in[0];ux1852e[871]<=dm580a5[0];ux1852e[827]<=pu14ad4[0];ux1852e[729]<=czc9602[0];ux1852e[694]<=osef258[0];ux1852e[685]<=do93bc9[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_top_rxintf_x1 (
   input wire                    sys_clk ,         
   input wire                    rst_n ,           

   input wire [(`NUM_VC*8)-1:0]  cfgec_tvmap ,    

   input wire [15:0]             tlpdec_data ,     
   input wire                    tlpdec_st ,       
   input wire                    tlpdec_end ,      
   input wire                    tlpdec_cfgrd ,    

   `ifdef ECRC
      input wire                 tlpdec_ecrc_err , 
   `endif
   input wire                    tlpdec_us_req ,   
   input wire                    tlpdec_malf_tlp , 

   input wire [`NUM_VC-1:0]      dl_up ,    
   input wire                    cfg_hit ,
   input wire [6:0]              bar_hit ,
   input wire                    bar_fail ,
   input wire                    fc_overflow ,

   output reg [6:0]              rx_bar_hit ,
   output reg [`NUM_VC-1:0]      trnc_st ,  
   output wire                   vc_dl_up_fail ,  
   output reg [(`NUM_VC*16)-1:0] rx_data , 
   output reg [`NUM_VC-1:0]      rx_st ,  
   output reg [`NUM_VC-1:0]      rx_end ,
   `ifdef ECRC
      output reg [`NUM_VC-1:0]   rx_ecrc_err , 
   `endif
   output reg [`NUM_VC-1:0]      rx_us_req ,   
   output reg [`NUM_VC-1:0]      rx_malf_tlp , 

   
   output wire [`NUM_VC-1:0]     vc_rcvd,              
   output reg                    ph_rcvd,              
   output reg                    pd_rcvd,              
   output reg                    nph_rcvd,             
   output reg                    npd_rcvd ,            
   output reg [8:0]              credits_rcvd,         

   output reg                    malf_pkt_ph,          
   output reg                    malf_pkt_pd,          
   output reg                    malf_pkt_nph,         
   output reg                    malf_pkt_npd          
);
parameter PKT_WAIT    = 2'b00;
parameter OFLOW_CHECK = 2'b01;
parameter MALF_CHECK  = 2'b10;
reg   [15:0]                   tu57fbf ;
reg   [15:0]                   lfbfdfb ;
reg   [15:0]                   nefefde ;
reg   [15:0]                   enf7ef2 ;
reg                            hdbf794 ;
reg                            pu42c4 ;
reg                            qi21622 ;
reg                            twb111 ;
reg                            fa5888b ;
reg                            lsa7426 ;
reg                            ba3a132 ;
reg                            psd0993 ;
reg                            bn84c9a ;

`ifdef ECRC
reg                         oh264d7 ;
reg                         bn326bc ;
reg                         ls935e7 ;
reg                         ux9af3a ;

`endif
reg                            xjd79d5 ;
reg                            oubceaf ;
reg                            qte7579 ;
reg                            pu3abcc ;
reg                            tud5e62 ;
reg                            hdaf312 ;
reg                            zk79896 ;
reg                            alcc4b3 ;
reg    [2:0]                   tc ;
reg    [7:0]                   yz12ce0 ;
reg                            xy96705 ;
reg                            ksb382a ;
reg    [1:0]                   phb5390;
reg    [4:0]                   oua9c86;
reg    [8:0]                   aa5418;
reg    [1:0]                   ba2a0c0;
reg    [3:0]                   fn50602;
wire                           ba83017           ;
wire [15:0]                    oh180bb ;
wire                           zkc05dd ;
wire                           ux2eea ;

`ifdef ECRC
wire                        gd17754 ;

`endif
wire                           gdbbaa4 ;
wire                           bldd524 ;
wire   [7:0]                   ykea927 ;
wire   [7:0]                   kd54939 ;
wire   [7:0]                   mta49cc ;
wire   [7:0]                   ie24e64 ;
wire   [7:0]                   fp27320 ;
wire   [7:0]                   gd39906 ;
wire   [7:0]                   encc835 ;
wire   [7:0]                   rt641ad ;
wire                           tj9b864;
wire                           bn6b7a;
wire                           je35bd6;
wire                           xyadeb3;
wire                           yx6f59a;
wire                           gb7acd4;
wire                           ald66a4;
wire  [31:0]                   ieb3524;
wire                           qv9a921;
wire                           osd490d;
wire                           sja4868;
wire                           ec24344;
wire                           aa21a21;
wire                           sjd108;
wire                           su68844;
wire                           kd44220;
wire                           co21104;
wire                           mt8821;
wire                           cz4410d;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef VC1

`else

`endif  

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef ECRC

`endif

`endif

`ifdef EN_VC1

`ifdef ECRC

`endif

`endif

`ifdef EN_VC2

`ifdef ECRC

`endif

`endif

`ifdef EN_VC3

`ifdef ECRC

`endif

`endif

`ifdef EN_VC4

`ifdef ECRC

`endif

`endif

`ifdef EN_VC5

`ifdef ECRC

`endif

`endif

`ifdef EN_VC6

`ifdef ECRC

`endif

`endif

`ifdef EN_VC7

`ifdef ECRC

`endif

`endif
reg [(`NUM_VC * 8) - 1 : 0] ri2086c;
reg [15 : 0] cob906a;
reg vvc8350;
reg sh41a86;
reg vi6c485;
reg pse14a2;
reg ksa513;
reg [`NUM_VC - 1 : 0] lsbdc57;
reg sj85624;
reg [6 : 0] ou2b124;
reg dm58920;
reg kqc4902;
reg [15 : 0] gq24811;
reg [15 : 0] mg24088;
reg [15 : 0] ng20441;
reg [15 : 0] wl220b;
reg zm1105d;
reg xy3a10a;
reg jcd0853;
reg fp8429a;
reg ou214d6;
reg zkeb113;
reg ne5889a;
reg mec44d2;
reg vx22690;
reg fp13486;
reg yz9a436;
reg zxd21b4;
reg cb90da6;
reg zm86d34;
reg ux369a2;
reg epb4d14;
reg iea68a5;
reg [2 : 0] xjfc538;
reg [7 : 0] vka2948;
reg hq14a43;
reg pha521a;
reg [1 : 0] mt290d7;
reg [4 : 0] rg486bd;
reg [8 : 0] kq435ea;
reg [1 : 0] gq1af51;
reg [3 : 0] pfd7a89;
reg dobd44f;
reg [15 : 0] ayea27a;
reg wj513d0;
reg hq89e85;
reg pf4f42b;
reg al7a15f;
reg [7 : 0] hod0afd;
reg [7 : 0] oh857ea;
reg [7 : 0] ie2bf54;
reg [7 : 0] nr5faa1;
reg [7 : 0] shfd50f;
reg [7 : 0] qgea87c;
reg [7 : 0] yx543e1;
reg [7 : 0] yza1f0d;
reg osfa489;
reg fa7c360;
reg rge1b02;
reg yzd812;
reg tu6c095;
reg wj604ab;
reg qv255d;
reg [31 : 0] ep12aed;
reg ux9576d;
reg sjabb6d;
reg ne5db6d;
reg ofedb6a;
reg cm6db54;
reg kq6daa0;
reg ww6d500;
reg uv6a801;
reg en5400d;
reg vxa006d;
reg gq36f;
reg [2047:0] ux1852e;
wire [74:0] xjc2975;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef VC1

`else

`endif  

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef ECRC

`endif

`endif

`ifdef EN_VC1

`ifdef ECRC

`endif

`endif

`ifdef EN_VC2

`ifdef ECRC

`endif

`endif

`ifdef EN_VC3

`ifdef ECRC

`endif

`endif

`ifdef EN_VC4

`ifdef ECRC

`endif

`endif

`ifdef EN_VC5

`ifdef ECRC

`endif

`endif

`ifdef EN_VC6

`ifdef ECRC

`endif

`endif

`ifdef EN_VC7

`ifdef ECRC

`endif

`endif

localparam do14bae = 75,jra5d72 = 32'hfdffd42b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef EN_VC0


`ifdef VC1


`else


`endif  


`else


`endif


`ifdef EN_VC1


`else


`endif


`ifdef EN_VC2


`else


`endif


`ifdef EN_VC3


`else


`endif


`ifdef EN_VC4


`else


`endif


`ifdef EN_VC5


`else


`endif


`ifdef EN_VC6


`else


`endif


`ifdef EN_VC7


`else


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef EN_VC0


`ifdef ECRC


`endif


`endif


`ifdef EN_VC1


`ifdef ECRC


`endif


`endif


`ifdef EN_VC2


`ifdef ECRC


`endif


`endif


`ifdef EN_VC3


`ifdef ECRC


`endif


`endif


`ifdef EN_VC4


`ifdef ECRC


`endif


`endif


`ifdef EN_VC5


`ifdef ECRC


`endif


`endif


`ifdef EN_VC6


`ifdef ECRC


`endif


`endif


`ifdef EN_VC7


`ifdef ECRC


`endif


`endif




`ifdef ECRC



`endif




`ifdef ECRC



`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tu57fbf  <= 16'd0 ;      hdbf794    <= 1'b0 ;      lsa7426   <= 1'b0 ;      lfbfdfb  <= 16'd0 ;      pu42c4    <= 1'b0 ;      ba3a132   <= 1'b0 ;      nefefde  <= 16'd0 ;      qi21622    <= 1'b0 ;      psd0993   <= 1'b0 ;      bn84c9a   <= 1'b0 ;      twb111    <= 1'b0 ;      fa5888b    <= 1'b0 ;   end   else begin      tu57fbf  <= cob906a ;      hdbf794    <= vvc8350 ;      lsa7426   <= sh41a86 ;      lfbfdfb  <= gq24811 ;      pu42c4    <= zm1105d ;      ba3a132   <= zkeb113 ;      nefefde  <= mg24088 ;      qi21622    <= xy3a10a ;      psd0993   <= ne5889a ;      bn84c9a   <= mec44d2 ;      twb111    <= jcd0853 ;      fa5888b    <= fp8429a ;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin


`ifdef ECRC
         oh264d7 <= 1'b0 ;         bn326bc <= 1'b0 ;         ls935e7 <= 1'b0 ;


`endif
      xjd79d5   <= 1'b0 ;      oubceaf   <= 1'b0 ;      qte7579   <= 1'b0 ;      tud5e62 <= 1'b0 ;      hdaf312 <= 1'b0 ;      zk79896 <= 1'b0 ;   end   else begin


`ifdef ECRC
         oh264d7 <= tlpdec_ecrc_err ;         bn326bc <= oh264d7 ;         ls935e7 <= bn326bc ;


`endif
      xjd79d5   <= pse14a2 ;      oubceaf   <= fp13486 ;      qte7579   <= yz9a436 ;
      tud5e62 <= ksa513 ;      hdaf312 <= zm86d34 ;      zk79896 <= ux369a2 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     xy96705 <= 1'b0 ;   else if (sj85624)     xy96705 <= 1'b1 ;   else if (mec44d2)     xy96705 <= 1'b0 ;   else     xy96705 <= hq14a43;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     rx_bar_hit <= 7'h0 ;   else if (jcd0853 && dobd44f )     rx_bar_hit <= ou2b124 ;   else if (!dobd44f || vx22690 )     rx_bar_hit <= 7'h0 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     ksb382a <= 1'b0 ;   else if (jcd0853)     ksb382a <= 1'b0;   else if (vi6c485)     ksb382a <= 1'b1;   else     ksb382a <= pha521a;
end
assign ba83017 = ~((sj85624 & ~pha521a) | hq14a43) ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     tc <= 3'b000 ;   else if (zm1105d)     tc <= gq24811[6:4] ;   else     tc <= xjfc538 ;
end


`ifdef EN_VC0



`ifdef VC1
      assign ykea927 = 8'hff;


`else
      assign ykea927 = ri2086c[7:0] ;


`endif  



`else
   assign ykea927 = 8'b0000_0000 ;


`endif



`ifdef EN_VC1
   assign kd54939 = ri2086c[15:8] ;


`else
   assign kd54939 = 8'b0000_0000 ;


`endif



`ifdef EN_VC2
   assign mta49cc = ri2086c[23:16] ;


`else
   assign mta49cc = 8'b0000_0000 ;


`endif



`ifdef EN_VC3
   assign ie24e64 = ri2086c[31:24] ;


`else
   assign ie24e64 = 8'b0000_0000 ;


`endif



`ifdef EN_VC4
   assign fp27320 = ri2086c[39:32] ;


`else
   assign fp27320 = 8'b0000_0000 ;


`endif



`ifdef EN_VC5
   assign gd39906 = ri2086c[47:40] ;


`else
   assign gd39906 = 8'b0000_0000 ;


`endif



`ifdef EN_VC6
   assign encc835 = ri2086c[55:48] ;


`else
   assign encc835 = 8'b0000_0000 ;


`endif



`ifdef EN_VC7
   assign rt641ad = ri2086c[63:56] ;


`else
   assign rt641ad = 8'b0000_0000 ;


`endif




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      yz12ce0 <= 8'b0000_0000 ;   else      case (xjfc538)         3'b000 :            case ( 1'b1 )               hod0afd[0] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[0] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[0] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[0] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[0] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[0] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[0] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[0] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b001 :            case ( 1'b1 )               hod0afd[1] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[1] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[1] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[1] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[1] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[1] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[1] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[1] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b010 :            case ( 1'b1 )               hod0afd[2] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[2] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[2] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[2] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[2] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[2] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[2] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[2] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b011 :            case ( 1'b1 )               hod0afd[3] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[3] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[3] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[3] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[3] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[3] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[3] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[3] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b100 :            case ( 1'b1 )               hod0afd[4] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[4] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[4] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[4] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[4] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[4] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[4] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[4] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b101 :            case ( 1'b1 )               hod0afd[5] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[5] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[5] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[5] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[5] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[5] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[5] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[5] :                  yz12ce0 <= 8'b1000_0000 ;            endcase         3'b110 :            case ( 1'b1 )               hod0afd[6] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[6] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[6] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[6] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[6] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[6] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[6] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[6] :                  yz12ce0 <= 8'b1000_0000 ;            endcase                  default :            case ( 1'b1 )               hod0afd[7] :                  yz12ce0 <= 8'b0000_0001 ;               oh857ea[7] :                  yz12ce0 <= 8'b0000_0010 ;               ie2bf54[7] :                  yz12ce0 <= 8'b0000_0100 ;               nr5faa1[7] :                  yz12ce0 <= 8'b0000_1000 ;               shfd50f[7] :                  yz12ce0 <= 8'b0001_0000 ;               qgea87c[7] :                  yz12ce0 <= 8'b0010_0000 ;               yx543e1[7] :                  yz12ce0 <= 8'b0100_0000 ;               yza1f0d[7] :                  yz12ce0 <= 8'b1000_0000 ;            endcase      endcase
end

assign oh180bb = ng20441 ;
assign zkc05dd   = jcd0853 & dobd44f ;
assign ux2eea  = mec44d2 & dobd44f ;


`ifdef ECRC
   assign gd17754 = ls935e7 & dobd44f ;

`endif

assign gdbbaa4   = zxd21b4 & dobd44f ;
assign bldd524 = epb4d14 & dobd44f ;
assign vc_dl_up_fail = ~(|(vka2948 & lsbdc57));

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rx_data <= {(`NUM_VC*16){1'b0}} ;      rx_st   <= {(`NUM_VC){1'b0}};      rx_end  <= {(`NUM_VC){1'b0}};      trnc_st <= {(`NUM_VC){1'b0}};


`ifdef ECRC
         rx_ecrc_err <= {(`NUM_VC){1'b0}};


`endif
      rx_us_req   <= {(`NUM_VC){1'b0}};      rx_malf_tlp <= {(`NUM_VC){1'b0}};   end   else begin      case (1'b1)


`ifdef EN_VC0
         vka2948[0] : begin            rx_data[15:0]     <= ayea27a ;            rx_st[0]          <= wj513d0 ;            rx_end[0]         <= hq89e85 ;            trnc_st[0]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[0] <= gd17754 ;


`endif
            rx_us_req[0]      <= pf4f42b ;            rx_malf_tlp[0]    <= al7a15f ;         end


`endif



`ifdef EN_VC1
         vka2948[1] : begin            rx_data[ 31:16]   <= ayea27a ;            rx_st[1]          <= wj513d0 ;            rx_end[1]         <= hq89e85 ;            trnc_st[1]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[1] <= gd17754 ;


`endif
            rx_us_req[1]      <= pf4f42b ;            rx_malf_tlp[1]    <= al7a15f ;         end


`endif



`ifdef EN_VC2
         vka2948[2] : begin            rx_data[ 47:32]   <= ayea27a ;            rx_st[2]          <= wj513d0 ;            rx_end[2]         <= hq89e85 ;            trnc_st[2]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[2] <= gd17754 ;


`endif
            rx_us_req[2]      <= pf4f42b ;            rx_malf_tlp[2]    <= al7a15f ;         end


`endif



`ifdef EN_VC3
         vka2948[3] : begin            rx_data[ 63:48]   <= ayea27a ;            rx_st[3]          <= wj513d0 ;            rx_end[3]         <= hq89e85 ;            trnc_st[3]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[3] <= gd17754 ;


`endif
            rx_us_req[3]      <= pf4f42b ;            rx_malf_tlp[3]    <= al7a15f ;         end


`endif



`ifdef EN_VC4
         vka2948[4] : begin            rx_data[ 79:64]   <= ayea27a ;            rx_st[4]          <= wj513d0 ;            rx_end[4]         <= hq89e85 ;            trnc_st[4]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[4] <= gd17754 ;


`endif
            rx_us_req[4]      <= pf4f42b ;            rx_malf_tlp[4]    <= al7a15f ;         end


`endif



`ifdef EN_VC5
         vka2948[5] : begin            rx_data[ 95:80]   <= ayea27a ;            rx_st[5]          <= wj513d0 ;            rx_end[5]         <= hq89e85 ;            trnc_st[5]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[5] <= gd17754 ;


`endif
            rx_us_req[5]      <= pf4f42b ;            rx_malf_tlp[5]    <= al7a15f ;         end


`endif



`ifdef EN_VC6
         vka2948[6] : begin            rx_data[111:96]   <= ayea27a ;            rx_st[6]          <= wj513d0 ;            rx_end[6]         <= hq89e85 ;            trnc_st[6]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[6] <= gd17754 ;


`endif
            rx_us_req[6]      <= pf4f42b ;            rx_malf_tlp[6]    <= al7a15f ;         end


`endif



`ifdef EN_VC7
         vka2948[7] : begin            rx_data[127:112]  <= ayea27a ;            rx_st[7]          <= wj513d0 ;            rx_end[7]         <= hq89e85 ;            trnc_st[7]        <= wj513d0 ;



`ifdef ECRC
               rx_ecrc_err[7] <= gd17754 ;


`endif
            rx_us_req[7]      <= pf4f42b ;            rx_malf_tlp[7]    <= al7a15f ;         end


`endif
      endcase   end
end



assign tj9b864      = vvc8350;
assign bn6b7a = zm1105d;
assign je35bd6 = xy3a10a;
assign xyadeb3 = jcd0853;
assign yx6f59a = fp8429a;
assign gb7acd4 = ou214d6;
assign ieb3524        = {gq24811, cob906a};
assign ald66a4        = sh41a86;
assign cz4410d  = ksa513 & sh41a86;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      phb5390        <= 2'b00;      oua9c86       <= 5'b00000;      aa5418 <=  9'd0;   end   else begin      if (fa7c360) begin         phb5390    <=  ep12aed[30:29];         oua9c86   <=  ep12aed[28:24];                           if(ep12aed[1:0] == 2'b00)            aa5418 <= {(~(|ep12aed[9:2])), ep12aed[9:2]};         else            aa5418 <= ep12aed[9:2] + 1;      end   end
end
assign qv9a921  = (mt290d7[1] == 1'b0) & (rg486bd[4:1] == 4'b0000);  
assign osd490d  = (mt290d7[1] == 1'b1) & (rg486bd == 5'b00000);
assign sja4868   = (mt290d7[0] == 1'b0) & (rg486bd == 5'b00010);
assign ec24344 = (mt290d7[0] == 1'b0) & (rg486bd == 5'b00100);
assign aa21a21 = (mt290d7[0] == 1'b0) & (rg486bd == 5'b00101);
assign sjd108  = (mt290d7 == 2'b01) & (rg486bd[4:3] == 2'b10);
assign su68844 = (mt290d7 == 2'b11) & (rg486bd[4:3] == 2'b10);
assign kd44220 = (mt290d7 == 2'b10) & (ne5db6d | ofedb6a | cm6db54);  
assign co21104   = sjabb6d | kq6daa0 | ww6d500;
assign mt8821  = ux9576d | ne5db6d | ofedb6a | cm6db54;
assign vc_rcvd = vka2948[`NUM_VC-1:0];
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ph_rcvd      <= 1'b0;      pd_rcvd      <= 1'b0;      nph_rcvd     <= 1'b0;      npd_rcvd     <= 1'b0;      credits_rcvd <= 9'd0;      fn50602  <= 4'h0;   end   else begin      ph_rcvd      <= 1'b0;      pd_rcvd      <= 1'b0;      nph_rcvd     <= 1'b0;      npd_rcvd     <= 1'b0;      if(rge1b02) begin         fn50602  <= {uv6a801, vxa006d, (sjabb6d | ww6d500), en5400d};                  ph_rcvd    <= en5400d;         pd_rcvd    <= sjabb6d | ww6d500;                  nph_rcvd   <= vxa006d;         npd_rcvd   <= uv6a801;                  if(sjabb6d || ww6d500)            credits_rcvd <=  kq435ea;         else if(uv6a801)            credits_rcvd <=  'd1;         else            credits_rcvd <=  'd0;      end   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ba2a0c0  <= PKT_WAIT;      malf_pkt_ph  <= 1'b0;      malf_pkt_pd  <= 1'b0;      malf_pkt_nph <= 1'b0;      malf_pkt_npd <= 1'b0;   end   else begin      malf_pkt_ph  <= 1'b0;      malf_pkt_pd  <= 1'b0;      malf_pkt_nph <= 1'b0;      malf_pkt_npd <= 1'b0;      if((gq1af51 == MALF_CHECK) && gq36f) begin         malf_pkt_ph  <= pfd7a89[0];         malf_pkt_pd  <= pfd7a89[1];         malf_pkt_nph <= pfd7a89[2];         malf_pkt_npd <= pfd7a89[3];      end      case(gq1af51)         PKT_WAIT    : ba2a0c0  <= (wj604ab) ? OFLOW_CHECK : gq1af51;         OFLOW_CHECK : ba2a0c0  <= (kqc4902) ? PKT_WAIT : MALF_CHECK;         MALF_CHECK  : ba2a0c0  <= (qv255d) ? PKT_WAIT : gq1af51;         default     : ba2a0c0  <= gq1af51;      endcase   end
end

always@* begin ri2086c<={cfgec_tvmap>>1,xjc2975[0]};cob906a<={tlpdec_data>>1,xjc2975[1]};vvc8350<=xjc2975[2];sh41a86<=xjc2975[3];vi6c485<=xjc2975[4];pse14a2<=xjc2975[5];ksa513<=xjc2975[6];lsbdc57<={dl_up>>1,xjc2975[7]};sj85624<=xjc2975[8];ou2b124<={bar_hit>>1,xjc2975[9]};dm58920<=xjc2975[10];kqc4902<=xjc2975[11];gq24811<={tu57fbf>>1,xjc2975[12]};mg24088<={lfbfdfb>>1,xjc2975[13]};ng20441<={nefefde>>1,xjc2975[14]};wl220b<={enf7ef2>>1,xjc2975[15]};zm1105d<=xjc2975[16];xy3a10a<=xjc2975[17];jcd0853<=xjc2975[18];fp8429a<=xjc2975[19];ou214d6<=xjc2975[20];zkeb113<=xjc2975[21];ne5889a<=xjc2975[22];mec44d2<=xjc2975[23];vx22690<=xjc2975[24];fp13486<=xjc2975[25];yz9a436<=xjc2975[26];zxd21b4<=xjc2975[27];cb90da6<=xjc2975[28];zm86d34<=xjc2975[29];ux369a2<=xjc2975[30];epb4d14<=xjc2975[31];iea68a5<=xjc2975[32];xjfc538<={tc>>1,xjc2975[33]};vka2948<={yz12ce0>>1,xjc2975[34]};hq14a43<=xjc2975[35];pha521a<=xjc2975[36];mt290d7<={phb5390>>1,xjc2975[37]};rg486bd<={oua9c86>>1,xjc2975[38]};kq435ea<={aa5418>>1,xjc2975[39]};gq1af51<={ba2a0c0>>1,xjc2975[40]};pfd7a89<={fn50602>>1,xjc2975[41]};dobd44f<=xjc2975[42];ayea27a<={oh180bb>>1,xjc2975[43]};wj513d0<=xjc2975[44];hq89e85<=xjc2975[45];pf4f42b<=xjc2975[46];al7a15f<=xjc2975[47];hod0afd<={ykea927>>1,xjc2975[48]};oh857ea<={kd54939>>1,xjc2975[49]};ie2bf54<={mta49cc>>1,xjc2975[50]};nr5faa1<={ie24e64>>1,xjc2975[51]};shfd50f<={fp27320>>1,xjc2975[52]};qgea87c<={gd39906>>1,xjc2975[53]};yx543e1<={encc835>>1,xjc2975[54]};yza1f0d<={rt641ad>>1,xjc2975[55]};osfa489<=xjc2975[56];fa7c360<=xjc2975[57];rge1b02<=xjc2975[58];yzd812<=xjc2975[59];tu6c095<=xjc2975[60];wj604ab<=xjc2975[61];qv255d<=xjc2975[62];ep12aed<={ieb3524>>1,xjc2975[63]};ux9576d<=xjc2975[64];sjabb6d<=xjc2975[65];ne5db6d<=xjc2975[66];ofedb6a<=xjc2975[67];cm6db54<=xjc2975[68];kq6daa0<=xjc2975[69];ww6d500<=xjc2975[70];uv6a801<=xjc2975[71];en5400d<=xjc2975[72];vxa006d<=xjc2975[73];gq36f<=xjc2975[74];end
always@* begin ux1852e[2047]<=tlpdec_data[0];ux1852e[2046]<=tlpdec_st;ux1852e[2045]<=su68844;ux1852e[2044]<=tlpdec_end;ux1852e[2043]<=kd44220;ux1852e[2041]<=tlpdec_cfgrd;ux1852e[2038]<=co21104;ux1852e[2035]<=tlpdec_us_req;ux1852e[2029]<=bn6b7a;ux1852e[2028]<=mt8821;ux1852e[2022]<=tlpdec_malf_tlp;ux1852e[2011]<=je35bd6;ux1852e[2009]<=cz4410d;ux1852e[1996]<=dl_up[0];ux1852e[1974]<=xyadeb3;ux1852e[1945]<=cfg_hit;ux1852e[1943]<=kd54939[0];ux1852e[1922]<=xjd79d5;ux1852e[1901]<=yx6f59a;ux1852e[1842]<=bar_hit[0];ux1852e[1839]<=mta49cc[0];ux1852e[1797]<=oubceaf;ux1852e[1791]<=ec24344;ux1852e[1778]<=gdbbaa4;ux1852e[1776]<=ba3a132;ux1852e[1759]<=qv9a921;ux1852e[1755]<=gb7acd4;ux1852e[1637]<=bar_fail;ux1852e[1631]<=ie24e64[0];ux1852e[1622]<=nefefde[0];ux1852e[1546]<=qte7579;ux1852e[1535]<=aa21a21;ux1852e[1531]<=rt641ad[0];ux1852e[1509]<=bldd524;ux1852e[1504]<=psd0993;ux1852e[1471]<=osd490d;ux1852e[1468]<=fa5888b;ux1852e[1463]<=ald66a4;ux1852e[1391]<=qi21622;ux1852e[1312]<=yz12ce0[0];ux1852e[1226]<=fc_overflow;ux1852e[1215]<=fp27320[0];ux1852e[1197]<=enf7ef2[0];ux1852e[1153]<=ksb382a;ux1852e[1044]<=pu3abcc;ux1852e[1037]<=aa5418[0];ux1852e[1023]<=cfgec_tvmap[0];ux1852e[1022]<=sjd108;ux1852e[1014]<=tj9b864;ux1852e[971]<=ykea927[0];ux1852e[961]<=bn84c9a;ux1852e[895]<=sja4868;ux1852e[889]<=ux2eea;ux1852e[888]<=lsa7426;ux1852e[879]<=ieb3524[0];ux1852e[811]<=lfbfdfb[0];ux1852e[765]<=encc835[0];ux1852e[734]<=twb111;ux1852e[695]<=pu42c4;ux1852e[656]<=tc[0];ux1852e[576]<=xy96705;ux1852e[518]<=oua9c86[0];ux1852e[444]<=zkc05dd;ux1852e[405]<=tu57fbf[0];ux1852e[382]<=gd39906[0];ux1852e[347]<=hdbf794;ux1852e[328]<=alcc4b3;ux1852e[259]<=phb5390[0];ux1852e[222]<=oh180bb[0];ux1852e[164]<=zk79896;ux1852e[111]<=ba83017;ux1852e[82]<=hdaf312;ux1852e[55]<=fn50602[0];ux1852e[41]<=tud5e62;ux1852e[27]<=ba2a0c0[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_top_tlpdec_x1 (
   
   input wire           sys_clk ,       
   input wire           rst_n ,         

   
   input wire [15:0]   rxtp_data ,     
   input wire          rxtp_st ,       
   input wire          rxtp_end ,      
   input wire [2:0]    max_pl_size ,   
   `ifdef ECRC
      input wire       ecrc_enb ,      
   `endif

   input wire          vc_dl_up_fail ,  

   output reg [15:0]   tlpdec_data ,    
   output reg          tlpdec_st ,      
   output reg          tlpdec_end ,     
   output wire [2:0]   tlpdec_tc ,      

   output reg          tlpdec_cfgrd ,   
   output reg          tlpdec_cfgwr ,   
   output reg          tlpdec_memrw ,   
   output reg          tlpdec_iorw ,    
   output reg          tlpdec_rvcd_sts_ur , 
   output reg          tlpdec_rvcd_sts_ca , 
   output reg [31:0]   tlpdec_addr_l32 ,
   output reg [31:0]   tlpdec_addr_h32 ,
   output reg          tlpdec_addr64 ,  
   output reg          s2e_cnt_err ,    

   `ifdef ECRC
      output reg       tlpdec_ecrc_err , 
      output reg       crc_ok_out ,      
   `endif
   output reg          tlpdec_pois_tlp , 
   output reg          tlpdec_us_req ,   
   output reg          tlpdec_malf_tlp , 

   output reg          tlp_st_reg2 ,     
   output reg          tlp_end_reg2 ,    
   output wire [15:0]  tlp_data_reg2     
) ;

`ifdef ECRC
reg                 ecrc_int_reg0 ;

`endif
reg [15:0]             mt26eb7 ;
reg [15:0]             ph375bd ;
reg [15:0]             vxbadef ;
reg [15:0]             qtd6f7e ;
reg                    lsb7bf5 ;
reg                    jebdfaa ;
reg                    pha5456 ;
reg                    bl7ea99 ;
reg                    kqf54ce ;
reg                    dbaa670 ;
reg                    su53386 ;
reg                    xy99c30 ;
reg                    gb515ba ;
reg                    go56eac ;
reg                    jeb7561 ;
reg                    zzbab0b ;
reg                    vid585e ;
reg                    ukac2f2 ;
reg [15:0]             ou8d68a ;
reg [15:0]             pf6b450 ;
reg [15:0]             nr5a286 ;
reg [15:0]             med1436 ;
reg [15:0]             gd8a1b1 ;
reg [15:0]             hb50d8d ;
reg [15:0]             ng86c6e ;
reg [10:0]             cb36372 ;
reg                    uxb1b95 ;
reg                    gq8dcad ;
reg                    hb6e569 ;
reg [2:0]              yk72b4e ;
reg                    kf95a70 ;
reg                    lsad384;
reg                    jc69c23;
reg [10:0]             vv64f57 ;
reg                    ip708d5 ;
wire [31:0]            ieb3524 ;
wire [31:0]            ir2356e ;
wire [1:0]             phb5390 ;
wire [4:0]             oua9c86 ;
wire [2:0]             tc ;
wire                   mr7a975 ;
wire                   uid4bac ;
wire [1:0]             yza14be ;
wire [1:0]             eca5f5 ;
wire [15:0]            req_id ;
wire [7:0]             tag ;
wire [2:0]             epbea59 ;
wire [3:0]             icf52cc ;
wire [3:0]             ksa9660 ;
wire [7:0]             cz4b301 ;

`ifdef ECRC
wire [15:0]         yk5980d ;
wire                yxcc068 ;
wire                qt60344 ;
wire [31:0]         tw1a25 ;
wire [31:0]         vv5f6d4 ;
wire [31:0]         fp9143a ;
wire                half_data ;
wire                zkfb6a6 ;
wire                ie2b82b ;

`endif 
wire                   kq5c159 ;
wire [15:0]            sue0ac9 ;
wire                   ec5648 ;
wire                   gq2b240 ;
wire                   qg59200 ;
wire                   qtc9001 ;
wire                   dm4800c ;
wire                   fn40062 ;
wire                   ou316 ;
wire                   je18b0 ;
wire                   bnc583 ;
wire                   me62c1e ;
wire                   ph160f1 ;
wire                   bnb078e ;
wire                   hq83c76 ;
wire                   fc1e3b2 ;
wire                   byf1d92 ;
wire                   nt8ec93 ;
wire                   fa7649e  ;
wire                   rib24f3  ;
wire                   ie9279b ;
wire                   vk93cd8 ;
wire                   bn9e6c3  ;
wire                   xjf361e ;
wire                   hd9b0f7  ;
wire                   thd87be ;
wire                   ofc3df7 ;
wire                   je1efbc ;
wire                   mrf7de3 ;
wire                   sjbef1c ;
wire                   shf78e4 ;
wire                   mgbc724;
wire                   xje3920;
wire                   zz1c907 ;
wire                   fae483e ;
wire                   ec241f2 ;
wire                   ba20f91 ;
wire                   an7c8a ;
wire                   aa3e454 ;
wire                   ipf22a1 ;
wire                   rv9150d ;
wire                   ux8a86f ;
wire                   kd5437c ;

`ifdef GEN2

`endif
reg        qva1be5;
reg [10:0] qvdf2c;
reg [10:0] ip6f965;

`ifdef MITSU

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef ECRC

`endif

`ifdef ENDPOINT_COMP

`ifdef ECRC

`else     

`endif

`else     

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef GEN2

`else 

`endif
reg [15 : 0] lq7cb2d;
reg qge596b;
reg qv2cb58;
reg [2 : 0] ri20490;
reg xl2d624;
reg [15 : 0] dz6b127;
reg [15 : 0] tu5893e;
reg [15 : 0] icc49f2;
reg [15 : 0] qi24f91;
reg rv27c88;
reg aa3e447;
reg dbb5ed3;
reg rv911cd;
reg sw88e6f;
reg xw47379;
reg ir39bcb;
reg vvcde5d;
reg vv7b4fe;
reg kdd3fba;
reg qv9fdd5;
reg psfeead;
reg uvf756a;
reg jrbab55;
reg [15 : 0] ofe208a;
reg [15 : 0] ym10454;
reg [15 : 0] wy822a1;
reg [15 : 0] zm11509;
reg [15 : 0] gd8a84b;
reg [15 : 0] cz5425c;
reg [15 : 0] epa12e5;
reg [10 : 0] db972d;
reg en4b96e;
reg kq5cb74;
reg ose5ba0;
reg [2 : 0] bn2dd00;
reg fn6e806;
reg pf74037;
reg rva01be;
reg [10 : 0] je89387;
reg hd6fb9;
reg [31 : 0] ep12aed;
reg [31 : 0] epbee76;
reg [1 : 0] mt290d7;
reg [4 : 0] rg486bd;
reg [2 : 0] xjfc538;
reg zm93ba1;
reg ec9dd0b;
reg [1 : 0] vxa5215;
reg [1 : 0] ir290af;
reg [15 : 0] th5ff14;
reg [7 : 0] meff8a7;
reg [2 : 0] qi15f52;
reg [3 : 0] jrafa90;
reg [3 : 0] su7d487;
reg [7 : 0] qgea438;
reg tu521c0;
reg [15 : 0] gd90e02;
reg ec87014;
reg nt380a1;
reg dmc050e;
reg an2872;
reg ba14394;
reg wla1ca3;
reg lse51c;
reg su728e3;
reg ph94718;
reg coa38c7;
reg nt1c639;
reg the31cf;
reg oh18e7e;
reg xjc73f4;
reg ir39fa7;
reg tucfd3d;
reg dz7e9ea;
reg byf4f56;
reg lsa7ab3;
reg hd3d59b;
reg goeacde;
reg ui566f1;
reg mgb3788;
reg xl9bc41;
reg sude20f;
reg byf1078;
reg gq883c2;
reg cz41e10;
reg ukf085;
reg me78429;
reg xjc2148;
reg gq10a47;
reg gd85238;
reg yz291c4;
reg jc48e25;
reg dm4712b;
reg fp3895b;
reg uic4adf;
reg je256f9;
reg ou2b7cb;
reg en5be58;
reg xwdf2c5;
reg [10 : 0] rtf962a;
reg [10 : 0] iccb156;
reg [2047:0] ux1852e;
wire [100:0] xjc2975;

`ifdef ECRC

`endif

`ifdef ECRC

`endif 

`ifdef GEN2

`endif

`ifdef MITSU

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef ECRC

`endif

`ifdef ENDPOINT_COMP

`ifdef ECRC

`else     

`endif

`else     

`endif

`ifdef ECRC

`endif

`ifdef ECRC


`endif

`ifdef GEN2

`else 

`endif

localparam do14bae = 101,jra5d72 = 32'hfdffc70b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`endif


`ifdef ECRC


`endif 


`ifdef GEN2


`endif


`ifdef MITSU


`else


`endif


`ifdef GEN2


`else


`endif


`ifdef LEGACY_EP


`else


`endif


`ifdef ECRC


`endif


`ifdef ENDPOINT_COMP


`ifdef ECRC


`else     


`endif


`else     


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef GEN2


`else 


`endif




`ifdef ECRC



`endif




`ifdef ECRC



`endif 




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     pha5456  <= 1'b0 ;     tlp_st_reg2  <= 1'b0 ;     bl7ea99  <= 1'b0 ;     kqf54ce  <= 1'b0 ;     dbaa670  <= 1'b0 ;     su53386  <= 1'b0 ;     xy99c30  <= 1'b0 ;
     gb515ba <= 1'b0 ;     tlp_end_reg2 <= 1'b0 ;     go56eac <= 1'b0 ;     jeb7561 <= 1'b0 ;     zzbab0b <= 1'b0 ;     vid585e <= 1'b0 ;     ukac2f2 <= 1'b0 ;
     ou8d68a  <= 16'd0 ;     pf6b450  <= 16'd0 ;     nr5a286  <= 16'd0 ;     med1436  <= 16'd0 ;     gd8a1b1  <= 16'd0 ;     hb50d8d  <= 16'd0 ;     ng86c6e  <= 16'd0 ;
     yk72b4e <= 3'b000 ;   end   else begin     pha5456 <= qge596b ;     tlp_st_reg2 <= dbb5ed3 ;     bl7ea99 <= tlp_st_reg2 ;     kqf54ce <= rv911cd ;     dbaa670 <= sw88e6f ;     su53386 <= xw47379 ;     xy99c30 <= ir39bcb ;     gb515ba <= qv2cb58 ;     tlp_end_reg2 <= vv7b4fe ;     go56eac <= tlp_end_reg2 ;     jeb7561 <= kdd3fba ;     zzbab0b <= qv9fdd5 ;     vid585e <= psfeead ;     ukac2f2 <= uvf756a ;
     ou8d68a  <= lq7cb2d ;     pf6b450  <= ofe208a ;     nr5a286  <= ym10454 ;     med1436  <= wy822a1 ;     gd8a1b1  <= zm11509 ;     hb50d8d  <= gd8a84b ;     ng86c6e  <= cz5425c ;
     yk72b4e <= ri20490 ;   end
end
assign tlp_data_reg2 = ym10454;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      lsad384   <= 1'b0 ;   else if (qge596b)      lsad384   <= 1'b1 ;   else      lsad384  <= ~pf74037 ;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     tlpdec_st   <= 1'b0 ;     tlpdec_data <= 16'd0 ;   end   else begin     tlpdec_st   <= vvcde5d ;     tlpdec_data <= epa12e5 ;   end
end
assign kd5437c = (zm93ba1) ? qv9fdd5 : uvf756a;
assign tlpdec_tc   = (ir39bcb) ? cz5425c[6:4] : dz6b127[6:4] ;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ip708d5 <= 1'b0 ;      tlpdec_end     <= 1'b0 ;   end   else begin      ip708d5 <= en5be58 ;      tlpdec_end     <= hd6fb9 ;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     mt26eb7 <= 16'hFF00 ;     ph375bd <= 16'h0000 ;     vxbadef <= 16'hFF00 ;     qtd6f7e <= 16'h0000 ;   end   else if (sw88e6f) begin     mt26eb7 <= zm11509[15: 0] ;     ph375bd <= wy822a1[15: 0] ;     vxbadef <= ym10454[15: 0] ;     qtd6f7e <= ofe208a[15: 0] ;   end   else if (uvf756a) begin     mt26eb7 <= 16'hFF00 ;     ph375bd <= 16'h0000 ;     vxbadef <= 16'hFF00 ;     qtd6f7e <= 16'h0000 ;   end   else begin     mt26eb7 <= dz6b127 ;     ph375bd <= tu5893e ;     vxbadef <= icc49f2 ;     qtd6f7e <= qi24f91 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     jc69c23 <= 1'b0 ;   else if (tlp_st_reg2 )     jc69c23 <= (ym10454[12:8] ==5'b0_0100) ? 1'b1 : 1'b0 ;   else if (qv2cb58 )     jc69c23 <= 1'b0 ;   else     jc69c23 <= rva01be ;
end
assign  ieb3524 = {dz6b127,tu5893e};
assign  ir2356e = {icc49f2,qi24f91};

assign phb5390    =  ep12aed[30:29] ;
assign oua9c86   =  ep12aed[28:24] ;
assign tc     =  ep12aed[22:20] ;
assign mr7a975     =  ep12aed[15] ;
assign uid4bac     =  ep12aed[14] ;
assign yza14be   =  ep12aed[13:12] ;
assign eca5f5     =  ep12aed[11:10] ;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     vv64f57 <= 11'h0 ;   else if (xw47379)     vv64f57 <= {~(|zm11509[9:0]), zm11509[9:0]} ;
end

assign fn40062  = (rg486bd ==  5'b0_0000) ;
assign ou316 = (rg486bd ==  5'b0_0010) ;
assign je18b0 = (rg486bd ==  5'b0_0100) ;
assign bnc583 = (rg486bd ==  5'b0_0101) ;

`ifdef GEN2
   assign me62c1e = (rg486bd ==  5'b1_1011) ;

`endif

assign ph160f1     = (rg486bd[4:3] ==  2'b10) & ~(rg486bd[2:1] ==  2'b11) ;
assign bnb078e     = (rg486bd ==  5'b0_1010) ;

assign hq83c76 = (mt290d7 ==  2'b00) ;
assign fc1e3b2 = (mt290d7 ==  2'b01) ;
assign byf1d92 = (mt290d7 ==  2'b10) ;
assign nt8ec93 = (mt290d7 ==  2'b11) ;


assign fa7649e  = (oh18e7e | xjc73f4) & wla1ca3 ;
assign rib24f3  = (ir39fa7 | tucfd3d) & wla1ca3 ;
assign ie9279b = oh18e7e & su728e3 ;
assign vk93cd8 = ir39fa7 & su728e3 ;
assign bn9e6c3  = xjc73f4 & nt1c639 ;
assign xjf361e = tucfd3d & nt1c639 ;
assign hd9b0f7  = oh18e7e & the31cf ;
assign thd87be = ir39fa7 & the31cf ;



assign ofc3df7 = (oh18e7e | ir39fa7)  & ph94718 ;                                                     
assign je1efbc = (oh18e7e | ir39fa7)  & lse51c ;
assign mrf7de3 = (oh18e7e | xjc73f4)  & (rg486bd ==  5'b0_0001) ;
assign fae483e = (oh18e7e)  & (rg486bd ==  5'b0_1011) ;
assign ec241f2 = (ir39fa7)  & (rg486bd ==  5'b0_1011) ;

assign req_id   =  epbee76[31:16] ;
assign tag      =  epbee76[15:8] ;
assign icf52cc      =  epbee76[7:4] ;
assign ksa9660      =  epbee76[3:0] ;
assign cz4b301 =  epbee76[7:0] ;
assign sjbef1c   =  (qgea438[7:4] == 4'b0001) & ((qgea438[3:0] == 4'b0100) |                                                 (qgea438[3:0] == 4'b1000) |                                                 (qgea438[3:0] == 4'b1001) |                                                 (qgea438[3:0] == 4'b1011)) ;
assign shf78e4  =  (qgea438[7:4] == 4'b0011) & ((qgea438[3:0] == 4'b0000) |                                                 (qgea438[3:0] == 4'b0001) |                                                 (qgea438[3:0] == 4'b0011)) ;

assign mgbc724    =  (qgea438[7:4] == 4'b0111) ? 1'b1 : 1'b0;
assign zz1c907    =  (qgea438[7:4] == 4'b0100) ? 1'b1 : 1'b0;
assign xje3920 =  me78429 & (qgea438[3:0] == 4'b1110) ;


assign epbea59 = epbee76[15:13] ;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      lsb7bf5 <= 1'b0 ;   else if ( dbb5ed3 )      lsb7bf5 <= 1'b1 ;   else if (vv7b4fe )      lsb7bf5 <= 1'b0 ;   else      lsb7bf5 <= rv27c88 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      jebdfaa <= 1'b0 ;   else if ( ir39bcb )      jebdfaa <= 1'b1 ;   else if (hd6fb9 )      jebdfaa <= 1'b0 ;   else      jebdfaa <= aa3e447 ;
end



assign ux8a86f = dbb5ed3 | tlp_st_reg2 | rv911cd | sw88e6f |                   xw47379 | ir39bcb | vvcde5d ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      qva1be5 <= 1'b0 ;   else if (qge596b)      qva1be5 <= 1'b1 ;   else if (vv7b4fe)      qva1be5 <= 1'b0 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      qvdf2c <= 11'h000 ;   else if (qge596b)      qvdf2c <= 11'h000 ;   else if (xwdf2c5)      qvdf2c <= rtf962a + 1 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ip6f965 <= 11'h000 ;   else if (qv2cb58) begin      if ((mt290d7 == 2'b00) && !zm93ba1) ip6f965 <= 'd5 ;      if ((mt290d7 == 2'b00) && zm93ba1) ip6f965 <= 'd7 ;      if ((mt290d7 == 2'b01) && !zm93ba1) ip6f965 <= 'd7 ;      if ((mt290d7 == 2'b01) && zm93ba1) ip6f965 <= 'd9 ;      if ((mt290d7 == 2'b10) && !zm93ba1 && (lse51c || su728e3 || ph94718)) ip6f965 <= 'd7 ;      if ((mt290d7 == 2'b10) && zm93ba1 && (lse51c || su728e3 || ph94718)) ip6f965 <= 'd9 ;      if ((mt290d7 == 2'b11) && !zm93ba1 && nt1c639) ip6f965 <= 'd9 ;      if ((mt290d7 == 2'b11) && zm93ba1 && nt1c639) ip6f965 <= 'd11 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      s2e_cnt_err <= 1'b0 ;


`ifdef MITSU



`else
      else if (vv7b4fe && (rtf962a != iccb156) && !byf4f56 && !xl9bc41 & !yz291c4)         s2e_cnt_err <= 1'b1 ;


`endif
   else if (psfeead)      s2e_cnt_err <= 1'b0 ;
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      cb36372 <= 11'h000 ;   else if (vv7b4fe)      cb36372 <= 11'h000 ;   else if (rv27c88 && pf74037 && !fn6e806)      if (vvcde5d && ir39fa7)         cb36372 <=  db972d + 11'h001 ;      else if (qv2cb58 && (!zm93ba1 || (zm93ba1 && rva01be)))         cb36372 <=  db972d + 11'h001 ;      else if (!ou2b7cb && !qv2cb58 )         cb36372 <=  db972d + 11'h001 ;   else      cb36372 <= db972d ;
end



always @(bn2dd00 or db972d) begin   case (bn2dd00)      3'b000 :         kf95a70 = db972d[5] & db972d[0] ;      3'b001 :         kf95a70 = db972d[6] & db972d[0] ;      3'b010 :         kf95a70 = db972d[7] & db972d[0] ;      3'b011 :         kf95a70 = db972d[8] & db972d[0] ;      3'b100 :         kf95a70 = db972d[9] & db972d[0] ;      3'b101 :         kf95a70 = db972d[10] & db972d[0] ;      default :         kf95a70 = db972d[10] & db972d[0] ;   endcase
end




assign dm4800c = (byf4f56 | xl9bc41 | yz291c4) ;

assign gq2b240 = (db972d > je89387) ;

assign qg59200 = (vv7b4fe & ~tlp_end_reg2) & ((db972d ^ je89387) != 11'd0) ;

assign qtc9001 = ((nt380a1 | dmc050e) & ba14394)  ;

assign ba20f91 = aa3e447 & (~dz7e9ea & ~gq883c2 &                 ~byf4f56 &                                 ~byf1078  &         ~lsa7ab3 & ~hd3d59b & ~sude20f & ~goeacde & ~ui566f1 & ~mgb3788 & ~xl9bc41 &                 ~gd85238 & ~yz291c4        ) ;

assign an7c8a = (aa3e447 & (xjc73f4 | tucfd3d) & rg486bd[4] & ~me78429 & ~gq10a47 & (xjfc538 != 3'b00)) ;


assign rv9150d = aa3e447 & xl2d624;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      uxb1b95 <= 1'b0 ;   else if (hd6fb9)      uxb1b95 <= 1'b0 ;


`ifdef GEN2
      else if (fn6e806 | an2872 | jc48e25 | coa38c7 | dm4712b | je256f9 | s2e_cnt_err)         uxb1b95 <= 1'b1 ;


`else
      else if (fn6e806 | an2872 | jc48e25 | dm4712b | je256f9 | s2e_cnt_err)         uxb1b95 <= 1'b1 ;


`endif
   else      uxb1b95 <= en4b96e ;
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      gq8dcad <= 1'b0 ;   else if (hd6fb9)      gq8dcad <= 1'b0 ;


`ifdef LEGACY_EP
      else if (aa3e447 & sude20f)         gq8dcad <= 1'b1 ;


`else
      else if (aa3e447 & (sude20f | gq883c2))         gq8dcad <= 1'b1 ;


`endif
   else      gq8dcad <= kq5cb74 ;
end




`ifdef ECRC
   assign ie2b82b = ecrc_enb & zm93ba1 & ~zkfb6a6 & yxcc068 ;   always @(posedge sys_clk or negedge rst_n) begin
      if (!rst_n)         ecrc_int_reg0 <= 1'b0 ;      else if (hd6fb9)         ecrc_int_reg0 <= 1'b0 ;      else if (ie2b82b)         ecrc_int_reg0 <= 1'b1 ;      else         ecrc_int_reg0 <= ecrc_int_reg0 ;   end

`endif





assign aa3e454 = ec9dd0b & qv2cb58  & (mt290d7[1] & ~jc48e25) ;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      hb6e569 <= 1'b0 ;   else if (hd6fb9)      hb6e569 <= 1'b0 ;   else if (fp3895b)      hb6e569 <= 1'b1 ;   else      hb6e569 <= ose5ba0 ;
end





`ifdef ENDPOINT_COMP



`ifdef ECRC
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req   <= 1'b0 ;      else         tlpdec_us_req   <= kq5cb74 & ~en4b96e & ~ecrc_int_reg0 & hd6fb9 ;   end

`else     
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req   <= 1'b0 ;      else         tlpdec_us_req   <= kq5cb74 & ~en4b96e & hd6fb9 ;   end

`endif




`else     

   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req  <= 1'b0 ;      else         tlpdec_us_req  <= 1'b0 ;   end


`endif




`ifdef ECRC
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_ecrc_err <= 1'b0 ;      else if (!zm93ba1)         tlpdec_ecrc_err <= 1'b0 ;      else         tlpdec_ecrc_err <= ecrc_int_reg0 & ~en4b96e & hd6fb9 ;   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)       tlpdec_malf_tlp <= 1'b0 ;   else       tlpdec_malf_tlp <= en4b96e & hd6fb9 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)       tlpdec_pois_tlp <= 1'b0 ;   else       tlpdec_pois_tlp <= ose5ba0 & hd6fb9 ;
end


`ifdef ECRC
                  assign yk5980d =  dbb5ed3 ? {ofe208a[15:9], 1'b1, ofe208a[7:0]} :                     tlp_st_reg2 ? {ofe208a[15],1'b1, ofe208a[13:0]} : ofe208a ;      assign yxcc068 = qv2cb58 ;      assign qt60344 = (dbb5ed3 | rv27c88) & ~qge596b ;   pcie_x1_top_al705a0 #(      .D_WIDTH     ( 16 ) )      neebbfb(            .sys_clk     ( sys_clk ) ,      .rst_n       ( rst_n ),            .data_in    ( yk5980d ),      .enable_crc ( qt60344 ),      .hd2d21d  ( fp9143a )      ) ;      assign vv5f6d4[15: 0] = (fp9143a[15:0] ^ lq7cb2d) ;   assign vv5f6d4[31:16] = (fp9143a[31:16] ^ ofe208a) ;   assign zkfb6a6 = (vv5f6d4 == 32'h0000_0000) ;   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         crc_ok_out <= 1'b0;      else         crc_ok_out <= ecrc_enb & zm93ba1 & zkfb6a6;   end

`endif





`ifdef GEN2
   assign kq5c159 = (xjfc538 == 3'b000) & (vxa5215 == 2'b00) & (ir290af == 2'b00) &                       (je89387 == 11'h01) & (jrafa90 == 4'h0) ;

`else 
   assign kq5c159 = (xjfc538 == 3'b000) & (vxa5215 == 2'b0) &                       (je89387 == 11'h01) & (jrafa90 == 4'h0) ;

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_cfgrd  <= 1'b0 ;      tlpdec_cfgwr  <= 1'b0 ;   end   else begin                              tlpdec_cfgrd  <= lsa7ab3 & vvcde5d  ;      tlpdec_cfgwr  <= hd3d59b & vvcde5d ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_memrw  <= 1'b0 ;   else if (vvcde5d && wla1ca3)      tlpdec_memrw  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_memrw  <= 1'b0 ;   else      tlpdec_memrw  <= tlpdec_memrw ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_iorw  <= 1'b0 ;   else if (vvcde5d && lse51c)      tlpdec_iorw  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_iorw  <= 1'b0 ;   else      tlpdec_iorw  <= tlpdec_iorw ;
end
assign ipf22a1 = (wla1ca3 && (xjc73f4 | tucfd3d)) ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_rvcd_sts_ur  <= 1'b0 ;      tlpdec_rvcd_sts_ca  <= 1'b0 ;   end   else if (vvcde5d && (mgb3788 || xl9bc41)) begin      tlpdec_rvcd_sts_ur <= (qi15f52 == 3'b001) ;      tlpdec_rvcd_sts_ca <= (qi15f52 == 3'b100) ;   end   else begin      tlpdec_rvcd_sts_ur  <= 1'b0 ;      tlpdec_rvcd_sts_ca  <= 1'b0 ;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_addr_l32  <= 32'h0000_0000;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else if (vvcde5d && !uic4adf ) begin      tlpdec_addr_l32 <= {wy822a1[15: 0] ,ym10454[15: 0]} ;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else if (vvcde5d && uic4adf ) begin      tlpdec_addr_l32 <= {ofe208a[15: 0] ,lq7cb2d[15: 0]};      tlpdec_addr_h32 <= {wy822a1[15: 0] ,ym10454[15: 0]} ;   end   else if (tlpdec_end ) begin      tlpdec_addr_l32  <= 32'h0000_0000;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else begin      tlpdec_addr_l32  <= tlpdec_addr_l32 ;      tlpdec_addr_h32 <= tlpdec_addr_h32 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_addr64  <= 1'b0 ;   else if (vvcde5d && uic4adf )      tlpdec_addr64  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_addr64  <= 1'b0 ;   else      tlpdec_addr64  <= tlpdec_addr64 ;
end
always@* begin lq7cb2d<={rxtp_data>>1,xjc2975[0]};qge596b<=xjc2975[1];qv2cb58<=xjc2975[2];ri20490<={max_pl_size>>1,xjc2975[3]};xl2d624<=xjc2975[4];dz6b127<={mt26eb7>>1,xjc2975[5]};tu5893e<={ph375bd>>1,xjc2975[6]};icc49f2<={vxbadef>>1,xjc2975[7]};qi24f91<={qtd6f7e>>1,xjc2975[8]};rv27c88<=xjc2975[9];aa3e447<=xjc2975[10];dbb5ed3<=xjc2975[11];rv911cd<=xjc2975[12];sw88e6f<=xjc2975[13];xw47379<=xjc2975[14];ir39bcb<=xjc2975[15];vvcde5d<=xjc2975[16];vv7b4fe<=xjc2975[17];kdd3fba<=xjc2975[18];qv9fdd5<=xjc2975[19];psfeead<=xjc2975[20];uvf756a<=xjc2975[21];jrbab55<=xjc2975[22];ofe208a<={ou8d68a>>1,xjc2975[23]};ym10454<={pf6b450>>1,xjc2975[24]};wy822a1<={nr5a286>>1,xjc2975[25]};zm11509<={med1436>>1,xjc2975[26]};gd8a84b<={gd8a1b1>>1,xjc2975[27]};cz5425c<={hb50d8d>>1,xjc2975[28]};epa12e5<={ng86c6e>>1,xjc2975[29]};db972d<={cb36372>>1,xjc2975[30]};en4b96e<=xjc2975[31];kq5cb74<=xjc2975[32];ose5ba0<=xjc2975[33];bn2dd00<={yk72b4e>>1,xjc2975[34]};fn6e806<=xjc2975[35];pf74037<=xjc2975[36];rva01be<=xjc2975[37];je89387<={vv64f57>>1,xjc2975[38]};hd6fb9<=xjc2975[39];ep12aed<={ieb3524>>1,xjc2975[40]};epbee76<={ir2356e>>1,xjc2975[41]};mt290d7<={phb5390>>1,xjc2975[42]};rg486bd<={oua9c86>>1,xjc2975[43]};xjfc538<={tc>>1,xjc2975[44]};zm93ba1<=xjc2975[45];ec9dd0b<=xjc2975[46];vxa5215<={yza14be>>1,xjc2975[47]};ir290af<={eca5f5>>1,xjc2975[48]};th5ff14<={req_id>>1,xjc2975[49]};meff8a7<={tag>>1,xjc2975[50]};qi15f52<={epbea59>>1,xjc2975[51]};jrafa90<={icf52cc>>1,xjc2975[52]};su7d487<={ksa9660>>1,xjc2975[53]};qgea438<={cz4b301>>1,xjc2975[54]};tu521c0<=xjc2975[55];gd90e02<={sue0ac9>>1,xjc2975[56]};ec87014<=xjc2975[57];nt380a1<=xjc2975[58];dmc050e<=xjc2975[59];an2872<=xjc2975[60];ba14394<=xjc2975[61];wla1ca3<=xjc2975[62];lse51c<=xjc2975[63];su728e3<=xjc2975[64];ph94718<=xjc2975[65];coa38c7<=xjc2975[66];nt1c639<=xjc2975[67];the31cf<=xjc2975[68];oh18e7e<=xjc2975[69];xjc73f4<=xjc2975[70];ir39fa7<=xjc2975[71];tucfd3d<=xjc2975[72];dz7e9ea<=xjc2975[73];byf4f56<=xjc2975[74];lsa7ab3<=xjc2975[75];hd3d59b<=xjc2975[76];goeacde<=xjc2975[77];ui566f1<=xjc2975[78];mgb3788<=xjc2975[79];xl9bc41<=xjc2975[80];sude20f<=xjc2975[81];byf1078<=xjc2975[82];gq883c2<=xjc2975[83];cz41e10<=xjc2975[84];ukf085<=xjc2975[85];me78429<=xjc2975[86];xjc2148<=xjc2975[87];gq10a47<=xjc2975[88];gd85238<=xjc2975[89];yz291c4<=xjc2975[90];jc48e25<=xjc2975[91];dm4712b<=xjc2975[92];fp3895b<=xjc2975[93];uic4adf<=xjc2975[94];je256f9<=xjc2975[95];ou2b7cb<=xjc2975[96];en5be58<=xjc2975[97];xwdf2c5<=xjc2975[98];rtf962a<={qvdf2c>>1,xjc2975[99]};iccb156<={ip6f965>>1,xjc2975[100]};end
always@* begin ux1852e[2047]<=rxtp_st;ux1852e[2046]<=rxtp_end;ux1852e[2044]<=max_pl_size[0];ux1852e[2040]<=vc_dl_up_fail;ux1852e[2032]<=mt26eb7[0];ux1852e[2016]<=ph375bd[0];ux1852e[2014]<=fc1e3b2;ux1852e[1985]<=vxbadef[0];ux1852e[1981]<=byf1d92;ux1852e[1970]<=vk93cd8;ux1852e[1927]<=fn40062;ux1852e[1922]<=qtd6f7e[0];ux1852e[1915]<=nt8ec93;ux1852e[1893]<=bn9e6c3;ux1852e[1867]<=jeb7561;ux1852e[1861]<=ba20f91;ux1852e[1807]<=ou316;ux1852e[1804]<=yza14be[0];ux1852e[1797]<=lsb7bf5;ux1852e[1782]<=fa7649e;ux1852e[1761]<=tc[0];ux1852e[1739]<=xjf361e;ux1852e[1686]<=zzbab0b;ux1852e[1674]<=an7c8a;ux1852e[1652]<=xje3920;ux1852e[1625]<=ofc3df7;ux1852e[1623]<=cz4b301[0];ux1852e[1567]<=je18b0;ux1852e[1561]<=eca5f5[0];ux1852e[1558]<=hb50d8d[0];ux1852e[1547]<=jebdfaa;ux1852e[1542]<=lsad384;ux1852e[1516]<=rib24f3;ux1852e[1505]<=qtc9001;ux1852e[1490]<=gb515ba;ux1852e[1475]<=mr7a975;ux1852e[1437]<=shf78e4;ux1852e[1430]<=hd9b0f7;ux1852e[1413]<=med1436[0];ux1852e[1409]<=yk72b4e[0];ux1852e[1400]<=gq2b240;ux1852e[1373]<=qvdf2c[0];ux1852e[1324]<=vid585e;ux1852e[1301]<=aa3e454;ux1852e[1256]<=zz1c907;ux1852e[1203]<=je1efbc;ux1852e[1200]<=ou8d68a[0];ux1852e[1199]<=kq5c159;ux1852e[1109]<=rv9150d;ux1852e[1086]<=bnc583;ux1852e[1074]<=req_id[0];ux1852e[1068]<=ng86c6e[0];ux1852e[1047]<=pha5456;ux1852e[1037]<=jc69c23;ux1852e[1023]<=rxtp_data[0];ux1852e[1007]<=hq83c76;ux1852e[985]<=ie9279b;ux1852e[963]<=dm4800c;ux1852e[933]<=go56eac;ux1852e[930]<=ec241f2;ux1852e[902]<=uid4bac;ux1852e[880]<=oua9c86[0];ux1852e[826]<=mgbc724;ux1852e[812]<=thd87be;ux1852e[811]<=ksa9660[0];ux1852e[779]<=gd8a1b1[0];ux1852e[771]<=kf95a70;ux1852e[752]<=qg59200;ux1852e[745]<=xy99c30;ux1852e[718]<=sjbef1c;ux1852e[706]<=nr5a286[0];ux1852e[704]<=hb6e569;ux1852e[700]<=ec5648;ux1852e[699]<=ip6f965[0];ux1852e[686]<=qva1be5;ux1852e[600]<=ukac2f2;ux1852e[554]<=ipf22a1;ux1852e[503]<=bnb078e;ux1852e[465]<=fae483e;ux1852e[440]<=phb5390[0];ux1852e[405]<=icf52cc[0];ux1852e[372]<=su53386;ux1852e[359]<=mrf7de3;ux1852e[353]<=pf6b450[0];ux1852e[352]<=gq8dcad;ux1852e[350]<=sue0ac9[0];ux1852e[343]<=kd5437c;ux1852e[251]<=ph160f1;ux1852e[220]<=ir2356e[0];ux1852e[202]<=epbea59[0];ux1852e[186]<=dbaa670;ux1852e[176]<=uxb1b95;ux1852e[171]<=ux8a86f;ux1852e[125]<=me62c1e;ux1852e[110]<=ieb3524[0];ux1852e[101]<=tag[0];ux1852e[93]<=kqf54ce;ux1852e[88]<=cb36372[0];ux1852e[55]<=ip708d5;ux1852e[46]<=bl7ea99;ux1852e[27]<=vv64f57[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_top_tlpgen_x1 (
   
   sys_clk ,
   rst_n ,

   
   txintf_data ,
   txintf_st ,
   txintf_end ,
   txintf_nlfy ,
   txintf_rdy_ack ,
   `ifdef ECRC
      ecrc_enb ,
   `endif

   
   tlpgen_data ,
   tlpgen_st ,
   tlpgen_end ,
   tlpgen_nlfy , 
   tlpgen_rdy_ack  
   ) ;
input                  sys_clk ;
input                  rst_n ;
input [15:0]           txintf_data ;
input                  txintf_st ;
input                  txintf_end ;
input                  txintf_nlfy ;
input                  txintf_rdy_ack ;

`ifdef ECRC
input               ecrc_enb ;

`endif
output [15:0]          tlpgen_data ;
output                 tlpgen_st ;
output                 tlpgen_end ;
output                 tlpgen_nlfy ;
output                 tlpgen_rdy_ack ;
wire [31:0]          fp9143a;
wire [15:0]          yk5980d ;

`ifdef ECRC
reg [15:0]           tj376b ;
reg                  ba1bb5f ;
reg                  blddafb ;
reg                  wjed7de ;
reg                  vv6bef5 ;
reg                  nr5f7af ;
reg                  nefbd7e ;
reg                  cmdebf2 ;
reg                  gof5f91 ;
reg                  bnafc89 ;
reg                  jp7e44f ;
reg                  czf227f ;
reg [31:0]           vx913fd ;
reg                  enable_crc ;

`endif
reg [15:0]           tlpgen_data ;
reg                  tlpgen_st ;
reg                  tlpgen_end ;
reg                  tlpgen_nlfy ;
reg                  tlpgen_rdy_ack ;

`ifdef ECRC
reg wwde946 ;

`else

`endif
reg [15 : 0] lqf4a31;
reg pha518b;
reg nt28c5f;
reg ui462fe;
reg ie317f1;
reg [31 : 0] zz37e68;
reg [15 : 0] hb5fc46;
reg [2047:0] ux1852e;
wire [6:0] xjc2975;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC


`else

`endif

localparam do14bae = 7,jra5d72 = 32'hfdffca4b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`else


`endif












`ifdef ECRC
   

`endif













`ifdef ECRC



`endif












`ifdef ECRC

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tj376b    <= 16'd0 ;      ba1bb5f      <= 1'b0 ;      blddafb     <= 1'b0 ;      wjed7de    <= 1'b0 ;      vv6bef5 <= 1'b0 ;      nr5f7af      <= 1'b0 ;      nefbd7e     <= 1'b0 ;      cmdebf2    <= 1'b0 ;      gof5f91 <= 1'b0 ;
      bnafc89     <= 1'b0 ;      jp7e44f    <= 1'b0 ;      czf227f <= 1'b0 ;      vx913fd         <= 32'h0000 ;   end   else begin      tj376b    <= lqf4a31 ;      ba1bb5f      <= pha518b ;      blddafb     <= nt28c5f ;      wjed7de    <= ui462fe ;      vv6bef5 <= ie317f1 ;
      nr5f7af      <= ba1bb5f ;      nefbd7e     <= blddafb ;      cmdebf2    <= wjed7de ;      gof5f91 <= vv6bef5 ;      bnafc89     <= nefbd7e ;      jp7e44f    <= cmdebf2 ;      czf227f <= gof5f91 ;      vx913fd         <= zz37e68 ;   end
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      enable_crc <= 1'b0 ;   else if (pha518b)      enable_crc <= 1'b1 ;   else if (blddafb)      enable_crc <= 1'b0 ;   else      enable_crc <= enable_crc ;
end






assign yk5980d =  ba1bb5f ? {tj376b[15:9], 1'b1, tj376b[7:0]} :                  nr5f7af ? {tj376b[15],1'b1, tj376b[13:0]} : tj376b ;
pcie_x1_top_al705a0 #(   .D_WIDTH     ( 16 ) )   xj7b213(      .sys_clk     ( sys_clk ) ,   .rst_n       ( rst_n ),      .data_in    ( hb5fc46 ),   .enable_crc ( enable_crc ),   .hd2d21d  ( fp9143a )   ) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      tlpgen_data <= 16'h00 ;   else if (nefbd7e)      tlpgen_data <= zz37e68[31:16] ;   else if (bnafc89)      tlpgen_data <= vx913fd[15:0] ;   else      tlpgen_data <= tj376b ;
end




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      wwde946 <= 1'b0 ;   else if (ba1bb5f)      wwde946 <= lqf4a31[15] & ecrc_enb ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tlpgen_st       <= 1'b0 ;      tlpgen_end      <= 1'b0 ;      tlpgen_nlfy     <= 1'b0 ;      tlpgen_rdy_ack  <= 1'b0 ;   end   else begin      tlpgen_st       <= ba1bb5f ;      tlpgen_end      <= (wwde946) ? bnafc89     :  blddafb ;      tlpgen_nlfy     <= (wwde946) ? jp7e44f    :  wjed7de ;      tlpgen_rdy_ack  <= (wwde946) ? czf227f :  vv6bef5;   end
end

`else




always @(*) begin      tlpgen_data     <= lqf4a31 ;      tlpgen_st       <= pha518b ;      tlpgen_end      <= nt28c5f;      tlpgen_nlfy     <= ui462fe;      tlpgen_rdy_ack  <= ie317f1;
end

`endif


always@* begin lqf4a31<={txintf_data>>1,xjc2975[0]};pha518b<=xjc2975[1];nt28c5f<=xjc2975[2];ui462fe<=xjc2975[3];ie317f1<=xjc2975[4];zz37e68<={fp9143a>>1,xjc2975[5]};hb5fc46<={yk5980d>>1,xjc2975[6]};end
always@* begin ux1852e[2047]<=txintf_st;ux1852e[2046]<=txintf_end;ux1852e[2044]<=txintf_nlfy;ux1852e[2040]<=txintf_rdy_ack;ux1852e[2033]<=fp9143a[0];ux1852e[2019]<=yk5980d[0];ux1852e[1023]<=txintf_data[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule








































`timescale 1 ns / 100 ps
module pcie_x1_top_hod072e 
   (
    input wire       sys_clk,            
    input wire       rst_n,              
    
    input wire       goe5cd6,       
    input wire [2:0] cfgec_vcasel,       
    input wire [7:0] ne73580,          
    input wire       tx_eop_early,       
    input wire       yxd601d,       
    input wire       vxb00ec,         
    `ifdef X4
       input wire       jc739ea,
    `endif

    
    output reg       vx3b34,       
    output reg [7:0] oh1d9a6            );
parameter xjecd34  = `LPEVCC;
wire                      xw669a6;
reg   [7:0]               wy34d33;
reg   [7:0]               wya6999;
reg   [7:0]               ou34cc9;
reg   [7:0]               ksa6649;
reg                       ux33248;
reg  [2:0]                hq99245;
reg  [4:0]                wjc922b;
reg  [4:0]                yk4915c;
reg  [4:0]                ps48ae0;
reg  [4:0]                bl45703;
reg  [4:0]                ie2b81e;
reg                       kq5c0f1;
reg                       sue0789;
reg                       lf3c49;
reg                       ls1e24e;
reg                       xwf1272;
reg                       ba89392;

`ifdef X4

`endif

`ifdef X1

`endif
reg me49c92;
reg [2 : 0] cz4e491;
reg [7 : 0] yk7248d;
reg mg92469;
reg aa92348;
reg lf91a40;
reg sw8d206;
reg [7 : 0] tu69030;
reg [7 : 0] vi48183;
reg [7 : 0] th40c1a;
reg [7 : 0] db60d7;
reg do306bf;
reg [2 : 0] xy835fa;
reg [4 : 0] gq1afd3;
reg [4 : 0] pfd7e99;
reg [4 : 0] fpbf4cf;
reg [4 : 0] uifa67f;
reg [4 : 0] mrd33f9;
reg ba99fcc;
reg vicfe62;
reg sh7f312;
reg xjf9895;
reg kdcc4af;
reg go6257c;
reg [2047:0] ux1852e;
wire [23:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

localparam do14bae = 24,jra5d72 = 32'hfdffd28b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif







`ifdef X4
   assign aydb477 = jc739ea;

`endif



`ifdef X1
   assign aydb477 = 1'b1;

`endif




















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kq5c0f1      <= 1'b0;      ba89392<= 1'b0;   end   else begin      kq5c0f1      <= (cz4e491 == 3'b000) ? 1'b1 : 1'b0;      ba89392<= me49c92;   end
end









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      oh1d9a6  <= 8'd0;      ux33248 <= 1'b0;   end   else if (lf91a40) begin      case(xy835fa)         3'd7: begin            if (tu69030[7] || db60d7[7] || yk7248d[7]) begin              oh1d9a6[7]   <= 1'b1;              oh1d9a6[6:0] <= 7'd0;              ux33248     <= 1'b0;            end            else if (tu69030[7] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd6: begin            if (tu69030[6] || db60d7[6] || yk7248d[6]) begin              oh1d9a6[7]   <= 1'b0;      oh1d9a6[6]   <= 1'b1;              oh1d9a6[5:0] <= 6'd0;              ux33248     <= 1'b0;            end            else if (tu69030[6] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd5: begin            if (tu69030[5] || db60d7[5] || yk7248d[5]) begin              oh1d9a6[7:6] <= 2'd0;      oh1d9a6[5]   <= 1'b1;              oh1d9a6[4:0] <= 5'd0;              ux33248     <= 1'b0;            end            else if (tu69030[5] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd4: begin            if (tu69030[4] || db60d7[4] || yk7248d[4]) begin              oh1d9a6[7:5] <= 3'd0;      oh1d9a6[4]   <= 1'b1;              oh1d9a6[3:0] <= 4'd0;              ux33248     <= 1'b0;            end            else if (tu69030[4] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd3: begin            if (tu69030[3] || db60d7[3] || yk7248d[3]) begin              oh1d9a6[7:4] <= 4'd0;      oh1d9a6[3]   <= 1'b1;              oh1d9a6[2:0] <= 3'd0;              ux33248     <= 1'b0;            end            else if (tu69030[3] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd2: begin            if (tu69030[2] || db60d7[2] || yk7248d[2]) begin              oh1d9a6[7:3] <= 5'd0;      oh1d9a6[2]   <= 1'b1;              oh1d9a6[1:0] <= 2'd0;              ux33248     <= 1'b0;            end            else if (tu69030[2] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         3'd1: begin            if (tu69030[1] || db60d7[1] || yk7248d[1]) begin              oh1d9a6[7:2] <= 6'd0;      oh1d9a6[1]   <= 1'b1;              oh1d9a6[0]   <= 1'd0;              ux33248     <= 1'b0;            end            else if (tu69030[1] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end         default: begin            if (tu69030[0] || db60d7[0] || yk7248d[0]) begin              oh1d9a6[7:1] <= 7'd0;      oh1d9a6[0]   <= 1'b1;              ux33248     <= 1'b0;            end            else if (tu69030[0] == 1'b0 && go6257c == 1'b0) begin              oh1d9a6      <= 8'd0;              ux33248     <= 1'b1;            end         end      endcase   end   else begin      oh1d9a6      <= 8'd0;      ux33248     <= 1'b0;   end
end






assign xw669a6 = mg92469 | do306bf;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wjc922b <= 5'd0;   end   else if (lf91a40 && sw8d206 && aydb477) begin      if ((ba99fcc     && uifa67f == xjecd34)) begin         wjc922b <= 5'd0;      end      else if (gq1afd3 == uifa67f && aydb477) begin         wjc922b <= gq1afd3 + 1;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yk4915c <= 5'd0;      ps48ae0 <= 5'd0;      bl45703 <= 5'd0;      ie2b81e <= 5'd0;      sue0789 <= 1'b0;      lf3c49 <= 1'b0;      ls1e24e <= 1'b0;      xwf1272 <= 1'b0;
      wy34d33     <= 'd0;      wya6999  <= 'd0;      ou34cc9  <= 'd0;      ksa6649  <= 'd0;   end   else if (aydb477) begin      yk4915c <= gq1afd3;      ps48ae0 <= pfd7e99;      bl45703 <= fpbf4cf;      ie2b81e <= uifa67f;      sue0789 <= (lf91a40 && mg92469) ? 1'b1: 1'b0;      lf3c49 <= vicfe62;      ls1e24e <= sh7f312;      xwf1272 <= xjf9895;      wya6999  <= tu69030;      ou34cc9  <= vi48183;      ksa6649  <= th40c1a;                        case(mrd33f9)         'd7: wy34d33[7] <= yk7248d[7];         'd6: wy34d33[6] <= yk7248d[6];         'd5: wy34d33[5] <= yk7248d[5];         'd4: wy34d33[4] <= yk7248d[4];         'd3: wy34d33[3] <= yk7248d[3];         'd2: wy34d33[2] <= yk7248d[2];         'd1: wy34d33[1] <= yk7248d[1];         'd0: wy34d33[0] <= yk7248d[0];      endcase   end
end





always @(*) begin   if (lf91a40 && (mg92469 || vicfe62 || sh7f312  || xjf9895 || (aa92348 && kdcc4af))) begin      vx3b34 = 1'b0;   end   else if (lf91a40) begin      vx3b34 = 1'b1;   end   else begin      vx3b34 = 1'b0;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hq99245 <= 5'd0;   end   else if (ba99fcc && aydb477) begin      hq99245 <= gq1afd3[2:0];   end
end
always@* begin me49c92<=xjc2975[0];cz4e491<={cfgec_vcasel>>1,xjc2975[1]};yk7248d<={ne73580>>1,xjc2975[2]};mg92469<=xjc2975[3];aa92348<=xjc2975[4];lf91a40<=xjc2975[5];sw8d206<=xjc2975[6];tu69030<={wy34d33>>1,xjc2975[7]};vi48183<={wya6999>>1,xjc2975[8]};th40c1a<={ou34cc9>>1,xjc2975[9]};db60d7<={ksa6649>>1,xjc2975[10]};do306bf<=xjc2975[11];xy835fa<={hq99245>>1,xjc2975[12]};gq1afd3<={wjc922b>>1,xjc2975[13]};pfd7e99<={yk4915c>>1,xjc2975[14]};fpbf4cf<={ps48ae0>>1,xjc2975[15]};uifa67f<={bl45703>>1,xjc2975[16]};mrd33f9<={ie2b81e>>1,xjc2975[17]};ba99fcc<=xjc2975[18];vicfe62<=xjc2975[19];sh7f312<=xjc2975[20];xjf9895<=xjc2975[21];kdcc4af<=xjc2975[22];go6257c<=xjc2975[23];end
always@* begin ux1852e[2047]<=cfgec_vcasel[0];ux1852e[2046]<=ne73580[0];ux1852e[2044]<=tx_eop_early;ux1852e[2040]<=yxd601d;ux1852e[2032]<=vxb00ec;ux1852e[2017]<=xw669a6;ux1852e[1987]<=wy34d33[0];ux1852e[1926]<=wya6999[0];ux1852e[1818]<=ba89392;ux1852e[1804]<=ou34cc9[0];ux1852e[1614]<=bl45703[0];ux1852e[1561]<=ksa6649[0];ux1852e[1251]<=lf3c49;ux1852e[1180]<=ie2b81e[0];ux1852e[1074]<=ux33248;ux1852e[1023]<=goe5cd6;ux1852e[909]<=xwf1272;ux1852e[807]<=ps48ae0[0];ux1852e[625]<=sue0789;ux1852e[454]<=ls1e24e;ux1852e[403]<=yk4915c[0];ux1852e[312]<=kq5c0f1;ux1852e[201]<=wjc922b[0];ux1852e[100]<=hq99245[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


































































`timescale 1 ns / 100 ps
module pcie_x1_top_kf2ca9a 
   (
    input wire       sys_clk,            
    input wire       rst_n,              
    input wire [7:0] ic5352a,          
    input wire       wl9a950,         
    input wire       tx_eop_early,       
    input wire       yxd601d,       

    `ifdef X4
       input wire    jc739ea,
    `endif

    output reg       jp50a3a,       
    output reg [7:0] ep851d6            );
reg                       jr28eb4;
reg                       ps475a6;
reg                       vk3ad33;
reg                       qtd699a;
reg    [1:0]              mtb4cd5;
parameter uka66ad = 2'd0;
parameter wl33568  = 2'd1;

`ifdef X4

`endif

`ifdef X1

`endif
reg [7 : 0] yz9ab45;
reg byd5a2d;
reg mg92469;
reg aa92348;
reg dz45a98;
reg fp2d4c7;
reg of6a63f;
reg [1 : 0] cm531fc;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

`ifdef X4

`endif

`ifdef X1

`endif

localparam do14bae = 8,jra5d72 = 32'hfdffd14b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif





`ifdef X4
   assign aydb477 = jc739ea;

`endif



`ifdef X1
   assign aydb477 = 1'b1;

`endif



















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ep851d6 <= 8'd0;      mtb4cd5    <= uka66ad;   end   else if (aydb477) begin      case(cm531fc)         uka66ad:            if (byd5a2d) begin               casex(yz9ab45)                  8'b1xxx_xxxx: begin                     ep851d6 <= 8'b1000_0000;                     mtb4cd5    <= wl33568;                  end                  8'bx1xx_xxxx: begin                     ep851d6 <= 8'b0100_0000;                     mtb4cd5    <= wl33568;                  end                  8'bxx1x_xxxx: begin                     ep851d6 <= 8'b0010_0000;                     mtb4cd5    <= wl33568;                  end                  8'bxxx1_xxxx: begin                     ep851d6 <= 8'b0001_0000;                     mtb4cd5    <= wl33568;                  end                  8'bxxxx_1xxx: begin                     ep851d6 <= 8'b0000_1000;                     mtb4cd5    <= wl33568;                  end                  8'bxxxx_x1xx: begin                     ep851d6 <= 8'b0000_0100;                     mtb4cd5    <= wl33568;                  end                  8'bxxxx_xx1x: begin                     ep851d6 <= 8'b0000_0010;                     mtb4cd5    <= wl33568;                  end                  8'bxxxx_xxx1: begin                     ep851d6 <= 8'b0000_0001;                     mtb4cd5    <= wl33568;                  end                  default: begin                     ep851d6 <= 8'b0000_0000;                     mtb4cd5    <= uka66ad;                  end               endcase            end            else begin               ep851d6 <= 8'd0;               mtb4cd5    <= uka66ad;            end         wl33568: begin            if (mg92469) begin               mtb4cd5    <= uka66ad;               ep851d6 <= 8'd0;            end            else begin               mtb4cd5    <= wl33568;            end         end         default: begin            mtb4cd5    <= uka66ad;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jr28eb4 <= 1'b0;      ps475a6 <= 1'b0;      vk3ad33 <= 1'b0;      qtd699a <= 1'b0;   end   else if (aydb477) begin      jr28eb4 <= mg92469;      ps475a6 <= jr28eb4;      vk3ad33 <= dz45a98;      qtd699a <= fp2d4c7;   end
end





always @(*) begin   if (byd5a2d && (mg92469 || jr28eb4 || dz45a98 || fp2d4c7 || (aa92348 && of6a63f))) begin      jp50a3a = 1'b0;   end   else if (byd5a2d) begin      jp50a3a = 1'b1;   end   else begin      jp50a3a = 1'b0;   end
end

always@* begin yz9ab45<={ic5352a>>1,xjc2975[0]};byd5a2d<=xjc2975[1];mg92469<=xjc2975[2];aa92348<=xjc2975[3];dz45a98<=xjc2975[4];fp2d4c7<=xjc2975[5];of6a63f<=xjc2975[6];cm531fc<={mtb4cd5>>1,xjc2975[7]};end
always@* begin ux1852e[2047]<=wl9a950;ux1852e[2046]<=tx_eop_early;ux1852e[2044]<=yxd601d;ux1852e[2040]<=ps475a6;ux1852e[2033]<=vk3ad33;ux1852e[2019]<=qtd699a;ux1852e[1990]<=mtb4cd5[0];ux1852e[1023]<=ic5352a[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule

















































`timescale 1 ns / 100 ps
module pcie_x1_top_txrdy_x1
   (
    
    sys_clk,           
    rst_n,             
    tx_req,            
    tx_data,           
    tx_st,             
    tx_nlfy,           
    txtp_rdy,          
    `ifdef CFG_REG
       cfg_rmux_req,   
    `endif
    vcarb_grant_val,   
    vcarb_grant,       
    pause_enable,      
    vcneg_pend,        

    
    txrdy_clear_rdy,   
    tx_eop_early,      
    tx_rdy             
    );
input                       sys_clk;
input                       rst_n;
input                       tx_req;
input [15:0]                tx_data;
input                       tx_st;
input                       tx_nlfy;
input                       txtp_rdy;

`ifdef CFG_REG
input                    cfg_rmux_req;

`endif
input                       vcarb_grant_val;
input                       vcarb_grant;
input                       pause_enable;
input                       vcneg_pend;
output                      txrdy_clear_rdy;
output                      tx_eop_early;
output                      tx_rdy;
wire                        tx_rdy;
reg                         kf3cacb;
reg                         ice565d;
reg                         tx_eop_early;
reg                         qg59748;
reg   [1:0]                 oscba41;
reg                         ne5d208;
reg   [10:0]                the9043;
reg                         vi4821f;
reg                         sh410fa;
reg   [11:0]                qv87d4;
reg   [11:0]                cm43ea4;

`ifdef CFG_REG
reg         [1:0]             qi1f520;
wire                          kqfa900;

`endif

`ifndef VC1

`ifdef CFG_REG

`else

`endif

`else

`ifdef CFG_REG

`else

`endif

`endif
reg ead4800;
reg [15 : 0] qva4000;
reg goef79e;
reg ykde786;
reg ym158;
reg ksac0;
reg gq5601;
reg wy2b008;
reg psd00bd;
reg hoc0203;
reg fc101a;
reg qv80d2;
reg [1 : 0] fn40694;
reg rv34a6;
reg [10 : 0] ks1a537;
reg rtd29b8;
reg vx94dc7;
reg [11 : 0] uka6e3e;
reg [11 : 0] bn371f1;
reg [2047:0] ux1852e;
wire [18:0] xjc2975;

`ifdef CFG_REG

`endif

`ifdef CFG_REG

`endif

`ifndef VC1

`ifdef CFG_REG

`else

`endif

`else

`ifdef CFG_REG

`else

`endif

`endif

localparam do14bae = 19,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef CFG_REG


`endif


`ifdef CFG_REG


`endif


`ifndef VC1


`ifdef CFG_REG


`else


`endif


`else


`ifdef CFG_REG


`else


`endif


`endif






`ifdef CFG_REG



`endif







assign txrdy_clear_rdy = (hoc0203 || (ykde786 & ~qv80d2)) ? 1'b1 : 1'b0;


`ifdef CFG_REG



assign                        kqfa900 = cfg_rmux_req | qi1f520[1];
always @(posedge sys_clk or negedge rst_n) begin  if (!rst_n) begin    qi1f520 <= 2'd0;  end  else begin    qi1f520 <= {qi1f520[0],cfg_rmux_req};  end
end

`endif




`ifndef VC1









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ice565d <= 0;   else begin      if (txrdy_clear_rdy || wy2b008)         ice565d <= 1'b0;


`ifdef CFG_REG
         else if (!kqfa900 && ead4800 && ym158 && !psd00bd && gq5601 && ksac0)            ice565d <= 1'b1;


`else
         else if (ead4800 && ym158 && !psd00bd && gq5601 && ksac0)            ice565d <= 1'b1;


`endif
   end
end

`else








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ice565d      <= 0;   else  begin            if (txrdy_clear_rdy || wy2b008)         ice565d <= 1'b0;


`ifdef CFG_REG
      else if (!kqfa900 && ead4800 && ym158 && !psd00bd)         ice565d <= 1'b1;


`else
      else if (ead4800 && ym158 && !psd00bd)         ice565d <= 1'b1;


`endif
   end
end

`endif

assign tx_rdy = fc101a;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vi4821f   <= 1'b0;      sh410fa   <= 1'b0;      oscba41 <= 0;      ne5d208  <= 0;      the9043 <= 0;   end   else begin      vi4821f   <= goef79e;      sh410fa   <= rtd29b8;      oscba41 <= (goef79e)    ? qva4000[14:13] : fn40694;      ne5d208  <= (rtd29b8) ? qva4000[15] : rv34a6;      the9043 <= (rtd29b8 && qva4000[9:0] == 10'd0) ? 11'h400 : {1'b0,qva4000[9:0]};   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kf3cacb  <= 0;   end   else if (bn371f1 == 12'h06) begin      kf3cacb <= 1'b1;   end   else begin      kf3cacb  <= 0;   end
end





























always @(*) begin   case (fn40694)      2'b00: qv87d4 =  12'd6;      2'b01: qv87d4 =  12'd8;      2'b10: qv87d4 =  (12'd6 + {ks1a537, 1'b0});       2'b11: qv87d4 =  (12'd8 + {ks1a537, 1'b0});    endcase
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cm43ea4 <= 0;   end   else if (vx94dc7) begin      cm43ea4 <= uka6e3e;   end   else if (bn371f1 >= 12'h04) begin      cm43ea4 <= bn371f1 - 1;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      qg59748 <= 0;   end   else begin      qg59748 <= ykde786;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tx_eop_early <= 0;   else begin      if (ykde786 & ~qv80d2)         tx_eop_early <= 1'b1;      else if (vx94dc7 &&  (fn40694 == 2'b00))           tx_eop_early <= 1'b1;      else if (bn371f1 == 12'h07)         tx_eop_early <= 1'b1;      else         tx_eop_early <= 1'b0;   end
end
always@* begin ead4800<=xjc2975[0];qva4000<={tx_data>>1,xjc2975[1]};goef79e<=xjc2975[2];ykde786<=xjc2975[3];ym158<=xjc2975[4];ksac0<=xjc2975[5];gq5601<=xjc2975[6];wy2b008<=xjc2975[7];psd00bd<=xjc2975[8];hoc0203<=xjc2975[9];fc101a<=xjc2975[10];qv80d2<=xjc2975[11];fn40694<={oscba41>>1,xjc2975[12]};rv34a6<=xjc2975[13];ks1a537<={the9043>>1,xjc2975[14]};rtd29b8<=xjc2975[15];vx94dc7<=xjc2975[16];uka6e3e<={qv87d4>>1,xjc2975[17]};bn371f1<={cm43ea4>>1,xjc2975[18]};end
always@* begin ux1852e[2047]<=tx_data[0];ux1852e[2046]<=tx_st;ux1852e[2044]<=tx_nlfy;ux1852e[2040]<=txtp_rdy;ux1852e[2032]<=vcarb_grant_val;ux1852e[2016]<=vcarb_grant;ux1852e[1985]<=pause_enable;ux1852e[1950]<=qv87d4[0];ux1852e[1923]<=vcneg_pend;ux1852e[1852]<=cm43ea4[0];ux1852e[1799]<=kf3cacb;ux1852e[1551]<=ice565d;ux1852e[1054]<=qg59748;ux1852e[1023]<=tx_req;ux1852e[975]<=sh410fa;ux1852e[487]<=vi4821f;ux1852e[243]<=the9043[0];ux1852e[121]<=ne5d208;ux1852e[60]<=oscba41[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule




























































`timescale 1 ns / 100 ps
module pcie_x1_top_fnf326b 
   (
    input wire               sys_clk,         
    input wire               rst_n,           

    input wire               goe5cd6,    
    input wire [2:0]         cfgec_vcasel,    

    input wire [`NUM_VC-1:0] tx_req,          
    input wire               tx_eop_early,    
    input wire               yxd601d,    
    input wire               txrdy_clear_rdy,
    `ifdef X4
       input wire            jc739ea, 
    `endif
    
    
    output wire               vcarb_grant_val, 
    output wire [`NUM_VC-1:0] vcarb_grant          );
wire   [7:0]                qi972ec;
wire                        jp50a3a;
wire   [7:0]                ep851d6;
wire                        vx3b34;
wire   [7:0]                oh1d9a6;
reg    [7:0]                ic5352a;
reg    [7:0]                ne73580;
reg    [1:0]                qi5e8;
reg                         wl9a950;
reg                         vxb00ec;
integer                     dobd025,cze812a;

`define   EVCC   `NUM_VC-1
parameter rt40955= 2'd0;
parameter ls4aaf = 2'd1;
parameter uka66ad = 2'd2;
parameter xjecd34  = `LPEVCC;

`ifdef X4

`endif

`ifdef X4

`endif
reg me49c92;
reg [2 : 0] cz4e491;
reg [`NUM_VC - 1 : 0] ead4800;
reg mg92469;
reg aa92348;
reg icdedc1;
reg fnf6e09;
reg [7 : 0] ngb704e;
reg dob8273;
reg [7 : 0] ayc139a;
reg [1 : 0] db9cd0;
reg byd5a2d;
reg lf91a40;
reg [2047:0] ux1852e;
wire [12:0] xjc2975;

`define   EVCC   `NUM_VC-1


`ifdef X4

`endif


`ifdef X4

`endif

localparam do14bae = 13,jra5d72 = 32'hfdffea0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`define   EVCC   `NUM_VC-1


`ifdef X4


`endif


`ifdef X4


`endif








`define   EVCC   `NUM_VC-1

















always @(ead4800) begin      if (xjecd34 == 3'b000) begin      for (dobd025 = 7; dobd025 >= 0; dobd025=dobd025-1) begin         if (dobd025 <= `EVCC) begin            ic5352a[dobd025] = ead4800[dobd025];         end         else begin            ic5352a[dobd025] = 1'b0;         end      end   end      else if (`EVCC == xjecd34) begin      ic5352a   = 0;   end      else begin      for (dobd025 = 7; dobd025 >= 0; dobd025=dobd025-1) begin         if (dobd025 <= `EVCC && dobd025 > (xjecd34)) begin            ic5352a[dobd025] = ead4800[dobd025];         end         else begin            ic5352a[dobd025] = 1'b0;         end      end   end
end




always @(ead4800) begin      if (xjecd34 == `EVCC) begin      for (cze812a = 7; cze812a >= 0; cze812a = cze812a -1) begin         if (cze812a <= xjecd34) begin            ne73580[cze812a] = ead4800[cze812a];         end         else begin            ne73580[cze812a] = 1'b0;         end      end   end      else if (xjecd34 == 3'b000) begin      ne73580   = 0;   end      else begin      for (cze812a = 7; cze812a >= 0; cze812a = cze812a -1) begin         if (cze812a <= xjecd34) begin            ne73580[cze812a] = ead4800[cze812a];         end         else begin            ne73580[cze812a] = 1'b0;         end      end   end
end





generate   if (xjecd34 != `EVCC) begin      pcie_x1_top_kf2ca9a bnafca3      (              .sys_clk        (sys_clk),       .rst_n          (rst_n),       .ic5352a      (ic5352a),       .wl9a950     (byd5a2d),       .tx_eop_early   (mg92469),       .yxd601d   (aa92348),


`ifdef X4
          .jc739ea (jc739ea),


`endif

              .jp50a3a   (jp50a3a),       .ep851d6   (ep851d6)       );   end   else begin      assign jp50a3a = 0;      assign ep851d6 = 0;   end
endgenerate





generate   if (xjecd34 != 0) begin      pcie_x1_top_hod072e hqbd17         (                    .sys_clk       (sys_clk),          .rst_n         (rst_n),          .goe5cd6  (me49c92),          .cfgec_vcasel  (cz4e491),          .ne73580     (ne73580),          .tx_eop_early  (mg92469),          .yxd601d  (aa92348),


`ifdef X4
             .jc739ea (jc739ea),


`endif
          .vxb00ec    (lf91a40),                    .vx3b34  (vx3b34),          .oh1d9a6  (oh1d9a6)          );   end   else begin      assign vx3b34 = 0;      assign oh1d9a6 = 0;   end
endgenerate



assign qi972ec  = ngb704e | ayc139a;
assign vcarb_grant_val  = fnf6e09 | dob8273;
assign vcarb_grant      = qi972ec[`NUM_VC-1:0];







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qi5e8  <= rt40955;      wl9a950 <= 1'b0;      vxb00ec <= 1'b0;   end   else begin      case(db9cd0)         rt40955: begin            case ({|ic5352a,|ne73580})               2'b10,2'b11: begin                  wl9a950 <= 1'b1;                  vxb00ec <= 1'b0;                  qi5e8  <= uka66ad;               end               2'b01: begin                  wl9a950 <= 1'b0;                  vxb00ec <= 1'b1;                  qi5e8  <= ls4aaf;               end               default: begin                  wl9a950 <= 1'b0;                  vxb00ec <= 1'b0;                  qi5e8  <= rt40955;               end            endcase         end         ls4aaf: begin            if (icdedc1) begin               case ({|ic5352a,|ne73580})                  2'b10,2'b11: begin                     wl9a950 <= 1'b1;                     vxb00ec <= 1'b0;                     qi5e8  <= rt40955;                  end                  2'b01: begin                     wl9a950 <= 1'b0;                     vxb00ec <= 1'b1;                     qi5e8  <= ls4aaf;                  end                  default: begin                     wl9a950 <= 1'b0;                     vxb00ec <= 1'b1;                     qi5e8  <= rt40955;                  end               endcase            end            else begin                  qi5e8  <= ls4aaf;            end         end         uka66ad: begin            if (icdedc1) begin               case ({|ic5352a,|ne73580})                  2'b10,2'b11: begin                     wl9a950 <= 1'b1;                     vxb00ec <= 1'b0;                     qi5e8  <= rt40955;                  end                  2'b01: begin                     wl9a950 <= 1'b1;                     vxb00ec <= 1'b0;                     qi5e8  <= rt40955;                  end                  default: begin                     wl9a950 <= 1'b1;                     vxb00ec <= 1'b0;                     qi5e8  <= rt40955;                  end               endcase            end            else begin                  qi5e8  <= uka66ad;            end         end         default: begin            qi5e8  <= rt40955;         end      endcase   end
end
always@* begin me49c92<=xjc2975[0];cz4e491<={cfgec_vcasel>>1,xjc2975[1]};ead4800<={tx_req>>1,xjc2975[2]};mg92469<=xjc2975[3];aa92348<=xjc2975[4];icdedc1<=xjc2975[5];fnf6e09<=xjc2975[6];ngb704e<={ep851d6>>1,xjc2975[7]};dob8273<=xjc2975[8];ayc139a<={oh1d9a6>>1,xjc2975[9]};db9cd0<={qi5e8>>1,xjc2975[10]};byd5a2d<=xjc2975[11];lf91a40<=xjc2975[12];end
always@* begin ux1852e[2047]<=cfgec_vcasel[0];ux1852e[2046]<=tx_req[0];ux1852e[2044]<=tx_eop_early;ux1852e[2040]<=yxd601d;ux1852e[2032]<=txrdy_clear_rdy;ux1852e[2016]<=jp50a3a;ux1852e[1984]<=ep851d6[0];ux1852e[1921]<=vx3b34;ux1852e[1795]<=oh1d9a6[0];ux1852e[1542]<=qi5e8[0];ux1852e[1036]<=wl9a950;ux1852e[1023]<=goe5cd6;ux1852e[25]<=vxb00ec;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule



























































`timescale 1 ns / 100 ps
module pcie_x1_top_int_msg_x1 
   (
    
    sys_clk,         
    rst_n,           

    int_disable,     
    inta_n,          

    ftl_err_out,     
    nftl_err_out,    
    cor_err_out,     

    bus_num,         
    dev_num,         
    func_num,        

    `ifdef ECRC
      ecrc_enb,      
    `endif

    int_msg_rd,      
    err_msg_rd,      
    
    tx_ca_ph_infi,   
    tx_ca_pd_infi,   
    tx_ca_ph,        
    tx_ca_pd,        

    msi_tc,          
    msi,             
    msi_enable,      
    mm_enable,       
    mes_uaddr,       
    mes_laddr,       
    mes_data,        
    
    
    err_msg_req,      
    err_msg_data,     
    
    err_msg_ae,       

    int_msg_req,      
    int_msg_data,     
    
    int_msg_ae,       
    int_pending       
    );
parameter R = 1'b0;
parameter ERR_COR      = 2'b00;
parameter ERR_NONFATAL = 2'b01;
parameter ERR_FATAL    = 2'b11;
parameter ARB_IDLE  = 4'd0;
parameter MSI_WAIT  = 4'd3;
parameter MSI_0     = 4'd4;
parameter MSI_1     = 4'd5;
parameter MSI_2     = 4'd6;
parameter MSI_3     = 4'd7;
parameter MSI_4     = 4'd8;
parameter MSI_5     = 4'd9;
parameter MSI_6     = 4'd10;
parameter MSI_7     = 4'd11;
parameter PKT_IDLE    = 2'd0;
parameter PKT_HEADER  = 2'd1;
parameter PKT_ADDR    = 2'd2;
parameter PKT_DATA    = 2'd3;
parameter INTA_IDLE       = 2'd0;
parameter INTA_ASSERT     = 2'd1;
parameter INTA_DEASSERT   = 2'd2;
input                       sys_clk;
input                       rst_n;
input                       int_disable;
input                       inta_n;
input                       ftl_err_out;
input                       nftl_err_out;
input                       cor_err_out;
input  [7:0]                bus_num;
input  [4:0]                dev_num;
input  [2:0]                func_num;

`ifdef ECRC
input                    ecrc_enb;

`endif
input                       int_msg_rd;
input                       err_msg_rd;
input                       tx_ca_ph_infi;
input                       tx_ca_pd_infi;
input  [7:0]                tx_ca_ph;
input  [11:0]               tx_ca_pd;
input  [7:0]                msi;
input  [2:0]                msi_tc;
input                       msi_enable;
input  [2:0]                mm_enable;
input  [31:0]               mes_uaddr;
input  [31:0]               mes_laddr;
input  [15:0]               mes_data;
output                      err_msg_req;
output [15:0]               err_msg_data;
output                      err_msg_ae;
output                      int_msg_req;
output [15:0]               int_msg_data;
output                      int_msg_ae;
output                      int_pending;
wire                        err_msg_req;
wire [15:0]                 err_msg_data;
reg                         err_msg_ae;
wire                        int_msg_req;
wire [15:0]                 int_msg_data;
wire                        int_msg_ae;
reg                         int_pending;
reg [7:0]                   yx54f34;
reg [7:0]                   twa79a4;
reg [31:0]                  sj3cd23;
reg [2:0]                   xje691d;
reg [31:0]                  wy348ef;
reg [2:0]                   yza4779;
reg [2:0]                   gd23bcd;
reg [3:0]                   sj1de6d;
reg [7:0]                   ayef36c;
reg [31:0]                  vi79b60;
reg [1:0]                   vvcdb03;
reg [15:0]                  ui6d81f;
reg                         tw35b43;
reg                         sh607c3;
reg [2:0]                   lf3e1d;
reg                         ks1f0ee;
reg [1:0]                   qtf8770;
reg [63:0]                  czc3b84;
reg [63:0]                  sj1dc24;
reg                         byee124;
reg [1:0]                   en70922;
reg                         lf84915;
reg                         ou248af;
reg                         ym24578;
reg                         hd22bc1;
reg  [1:0]                  ym15e0f [0:31];
reg                         vxaf078;
reg  [4:0]                  go783c6;
reg  [4:0]                  ykc1e30;
reg  [2:0]                  ouf181;
reg  [5:0]                  qg78c09;
reg  [15:0]                 gbc6049;
reg [1:0]                   ba3024d;
reg                         jr8126a;
reg                         xl9356;
reg [3:0]                   go49ab6;
reg [6:0]                   ri30425 ;
reg [6:0]                   ec8212a ;
reg [7:0]                   lf227cc;
reg                         cob62a9;
reg                         uxb1549;
wire                        ep8aa4c;
wire [7:0]                  nr55264;
wire [1:0]                  mga9327;
wire [4:0]                  qg49939;
wire [2:0]                  go4c9c9;
wire                        hb64e49;
wire                        xl2724e;
wire [9:0]                  ux39276;
wire [15:0]                 ipc93b4;
wire [7:0]                  qg49da4;
wire [3:0]                  ip4ed21;
wire [3:0]                  rg7690c;
wire [31:0]                 gdb4862;
wire [31:0]                 ana4315;
wire [15:0]                 uk218ad;
wire [31:0]                 xlc568;
wire [31:0]                 go62b46;
wire                        qi15a31;
wire                        hqad188;
wire [1:0]                  cm68c43;
wire [4:0]                  kq46218;
wire [2:0]                  gq310c1;
wire [7:0]                  uk88608;
wire [9:0]                  ic43040;
wire [31:0]                 sj18201;
wire [31:0]                 eac100d;
wire [4:0]                  ir8068;
wire [15:0]                 th40344;
wire [7:0]                  xy1a26;
wire [31:0]                 ird133;
wire [31:0]                 qg6899c;
wire                        uv44ce0;
wire                        kf26705;
wire                        ux3382c;
wire                        do9c164;
wire                        ou8dce3;
integer                     endc2dd,xwe16ed;
reg vv6460c;

`ifdef ECRC

`else

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif
reg ir23067;
reg ep1833c;
reg wwc19e5;
reg bncf29;
reg qg6794f;
reg [7 : 0] qvb12ff;
reg [4 : 0] xy897fc;
reg [2 : 0] ip4bfe2;
reg hb4f34c;
reg ne79a67;
reg jpcd33b;
reg zk699de;
reg [7 : 0] me4cef2;
reg [11 : 0] ay67791;
reg [2 : 0] qi3bc88;
reg [7 : 0] ayde440;
reg off2200;
reg [2 : 0] nt91005;
reg [31 : 0] mg8802f;
reg [31 : 0] zx40178;
reg [15 : 0] swbc6;
reg [7 : 0] sw5e31;
reg [7 : 0] tw2f189;
reg [31 : 0] qg78c4a;
reg [2 : 0] gbc6251;
reg [31 : 0] aa3128d;
reg [2 : 0] zm89468;
reg [2 : 0] zx4a342;
reg [3 : 0] cz51a17;
reg [7 : 0] ym8d0bc;
reg [31 : 0] os685e0;
reg [1 : 0] ho42f01;
reg [15 : 0] gd1780a;
reg ep90e49;
reg ose02a8;
reg [2 : 0] do1541;
reg ymaa0a;
reg [1 : 0] rt55050;
reg [63 : 0] twa8287;
reg [63 : 0] wj4143b;
reg uka1dc;
reg [1 : 0] pf50ee1;
reg ym8770e;
reg ou3b871;
reg mrdc388;
reg jce1c45;
reg lse22a;
reg [4 : 0] vv71153;
reg [4 : 0] ks88a9e;
reg [2 : 0] nr454f1;
reg [5 : 0] ba2a78e;
reg [15 : 0] cm53c72;
reg [1 : 0] fp9e391;
reg byf1c8e;
reg nt8e473;
reg [3 : 0] ic7239f;
reg [6 : 0] ofc6dcd;
reg [6 : 0] kf36e6c;
reg [7 : 0] bab7364;
reg qv9f3ba;
reg nrf9dd4;
reg goceea7;
reg [7 : 0] ay77538;
reg [1 : 0] fpba9c1;
reg [4 : 0] qgd4e0e;
reg [2 : 0] hqa7070;
reg xl38382;
reg eac1c16;
reg [9 : 0] lse0b1;
reg [15 : 0] uv7058b;
reg [7 : 0] co82c5c;
reg [3 : 0] tj162e0;
reg [3 : 0] gdb1706;
reg [31 : 0] xl8b834;
reg [31 : 0] go5c1a6;
reg [15 : 0] mee0d31;
reg [31 : 0] lf6988;
reg [31 : 0] ks34c46;
reg eca6231;
reg wy31188;
reg [1 : 0] sw88c40;
reg [4 : 0] ww46201;
reg [2 : 0] ym31009;
reg [7 : 0] ie88048;
reg [9 : 0] th40240;
reg [31 : 0] xy1206;
reg [31 : 0] fp9032;
reg [4 : 0] tu48196;
reg [15 : 0] dz40cb2;
reg [7 : 0] fp6597;
reg [31 : 0] vx32cbf;
reg [31 : 0] ls965fe;
reg twb2ff2;
reg uk97f92;
reg tjbfc91;
reg zkfe48e;
reg pu9ce74;
reg co9239d;
reg [2047:0] ux1852e;
wire [97:0] xjc2975;

`ifdef ECRC

`endif

`ifdef ECRC

`else

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

localparam do14bae = 98,jra5d72 = 32'hfdffea0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`endif


`ifdef ECRC


`else


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif











`ifdef ECRC



`endif























assign uv44ce0  =  wwc19e5 & ~ou3b871;
assign kf26705 =  bncf29 & ~mrdc388;
assign ux3382c  =  qg6794f & ~jce1c45;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      en70922  <= 2'b00;      lf84915      <= 1'b0;      ou248af  <= 1'b0;      ym24578 <= 1'b0;      hd22bc1  <= 1'b0;   end   else begin      ou248af  <= wwc19e5;      ym24578 <= bncf29;      hd22bc1  <= qg6794f;            if(twb2ff2 || uk97f92 || tjbfc91)         lf84915  <= 1'b1;      else         lf84915  <= 1'b0;          if(twb2ff2)        en70922 <= ERR_FATAL;     else if(uk97f92)        en70922 <= ERR_NONFATAL;     else if(tjbfc91)        en70922 <= ERR_COR;   end
end





assign nr55264  = (off2200) ? (ayde440[7:0] & qg78c4a[7:0]) : 8'h00;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yx54f34        <= 8'h00;      twa79a4  <= 8'h00;   end   else begin      twa79a4 <= ay77538;
      for (endc2dd = 0 ; endc2dd < 8; endc2dd = endc2dd+1) begin         if(ay77538[endc2dd] && ~tw2f189[endc2dd])            yx54f34[endc2dd]  <= 1'b1;         else if(ym8d0bc[endc2dd])            yx54f34[endc2dd]  <= 1'b0;      end   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ba3024d      <= INTA_IDLE;      jr8126a     <= 1'b0;      go49ab6 <= 4'b0000;      int_pending <= 1'b0;      vv6460c <= 1'b0;   end   else begin      if(ho42f01 == PKT_ADDR)         vv6460c <= 1'b1;      else         vv6460c <= 1'b0;      case(fp9e391)         INTA_IDLE : begin            if(~off2200 && ~ir23067 && ~ep1833c) begin               ba3024d  <= INTA_ASSERT;               jr8126a <= 1'b1;            end            else if(nt8e473)               jr8126a <= 1'b0;         end         INTA_ASSERT : begin            go49ab6 <= 4'b0000;            int_pending <= 1'b1;                        if((ir23067 || ep1833c) && (~byf1c8e && ~nt8e473 && (co9239d || ho42f01 == PKT_IDLE))) begin               ba3024d  <= INTA_DEASSERT;               jr8126a <= 1'b1;            end            else if(nt8e473)               jr8126a <= 1'b0;         end         INTA_DEASSERT : begin            go49ab6 <= 4'b0100;            int_pending <= 1'b0;            if(nt8e473)               jr8126a <= 1'b0;            if(ep1833c)               ba3024d  <= INTA_IDLE;         end      endcase   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      sj1de6d   <= ARB_IDLE;      ayef36c <= 8'h00;      xl9356 <= 1'b0;      vi79b60  <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};   end   else begin      xl9356    <= byf1c8e;      if(eca6231)         vi79b60  <= aa3128d;      else if(|cz51a17[3:2] == 1'b1)            vi79b60  <= {os685e0[3:0], os685e0[31:4]};      case(cz51a17)         ARB_IDLE : begin            if(|sw5e31)               sj1de6d  <= os685e0[3:0];         end         MSI_WAIT : begin            ayef36c  <= 0;            if(uka1dc)               sj1de6d   <= os685e0[3:0];         end                                       MSI_0 : begin            sj1de6d      <= (sw5e31[0]) ? MSI_WAIT : os685e0[3:0];            ayef36c[0] <= sw5e31[0];         end         MSI_1 : begin            sj1de6d      <= (sw5e31[1]) ? MSI_WAIT : os685e0[3:0];            ayef36c[1] <= sw5e31[1];         end         MSI_2 : begin            sj1de6d      <= (sw5e31[2]) ? MSI_WAIT : os685e0[3:0];            ayef36c[2] <= sw5e31[2];         end         MSI_3 : begin            sj1de6d      <= (sw5e31[3]) ? MSI_WAIT : os685e0[3:0];            ayef36c[3] <= sw5e31[3];         end         MSI_4 : begin            sj1de6d      <= (sw5e31[4]) ? MSI_WAIT : os685e0[3:0];            ayef36c[4] <= sw5e31[4];         end         MSI_5 : begin            sj1de6d      <= (sw5e31[5]) ? MSI_WAIT : os685e0[3:0];            ayef36c[5] <= sw5e31[5];         end         MSI_6 : begin            sj1de6d      <= (sw5e31[6]) ? MSI_WAIT : os685e0[3:0];            ayef36c[6] <= sw5e31[6];         end         MSI_7 : begin            sj1de6d      <= (sw5e31[7]) ? MSI_WAIT : os685e0[3:0];            ayef36c[7] <= sw5e31[7];         end      endcase   end
end



assign mga9327  = (ose02a8) ?  2'b11 : 2'b10;
assign qg49939 = 5'b0000;
assign go4c9c9   = qi3bc88;

`ifdef ECRC
  assign hb64e49  = ecrc_enb;

`else
  assign hb64e49  = 1'b0;

`endif

assign xl2724e    = 1'b0;
assign ux39276  = 10'h001;
assign ipc93b4 = {qvb12ff, xy897fc, ip4bfe2};
assign qg49da4         = 8'h00;  
assign ip4ed21     = 4'b0000;
assign rg7690c    = 4'b0011;

assign gdb4862 = {R, fpba9c1, qgd4e0e, R, hqa7070, R,R,R,R,   xl38382, eac1c16, 2'b00, R,R, lse0b1};
assign ana4315 = {uv7058b,  co82c5c, tj162e0, gdb1706};
assign cm68c43     = 2'b01;                         
assign kq46218    = {2'b10, 3'b000};               
assign gq310c1      = 3'b000;                        
assign uk88608 = {4'b0011, 2'b00, pf50ee1}; 
assign ic43040     = {R,R,R,R,R, R,R,R,R,R};        

assign sj18201 = {R, sw88c40, ww46201, R, ym31009, R,R,R,R,  xl38382, eac1c16, 2'b00, R,R, th40240};
assign eac100d = {uv7058b,  co82c5c, ie88048};
assign ir8068    = {2'b10, 3'b100};               
assign th40344 = {qvb12ff, xy897fc, R, R, R }; 
assign xy1a26     = {4'b0010, ic7239f}; 


assign ird133 = {R, sw88c40, tu48196, R, ym31009, R,R,R,R,  xl38382, eac1c16, 2'b00, R,R, th40240};
assign qg6899c = {dz40cb2,  co82c5c, fp6597};
assign uk218ad = {swbc6[15:3], do1541};

assign go62b46 = {mee0d31[7:0], mee0d31[15:8], 8'h00, 8'h00};

assign xlc568 = {mee0d31[7:0], mee0d31[15:8], 8'h00, 8'h00};








assign hqad188  = ym8770e; 
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vxaf078      <= 1'b0;      go783c6    <= 5'b00000;      ykc1e30    <= 5'b00000;      ouf181    <= 3'b000;      qg78c09      <= 6'b000000;      gbc6049      <= 16'd0;      err_msg_ae <= 1'b0;            for (xwe16ed=0; xwe16ed<32; xwe16ed=xwe16ed+1)         ym15e0f[xwe16ed]  <= 2'b00;   end   else begin                  if(ne79a67 && (nr454f1 == 3'b110))            vxaf078 <= 1'b1;      else         vxaf078 <= 1'b0;      ouf181 <= (ne79a67) ? nr454f1 + 3'b001 : nr454f1;      if (wy31188)         go783c6 <= vv71153 + 5'd1 ;      if (lse22a)         ykc1e30 <= ks88a9e + 5'd1;      if (wy31188 && !lse22a)         qg78c09 <= ba2a78e + 6'd1 ;      else if (lse22a && !wy31188)         qg78c09 <= ba2a78e - 6'd1 ;
      if (wy31188)         ym15e0f[vv71153]  <= pf50ee1;            if (ne79a67) begin            case(nr454f1)            3'd0    : gbc6049 <= xy1206[31:16];            3'd1    : gbc6049 <= xy1206[15:0];            3'd2    : gbc6049 <= fp9032[31:16];            3'd3    : gbc6049 <= {fp9032[15:2], ym15e0f[ks88a9e]};            default : gbc6049 <= 16'd0;          endcase      end                        if (ne79a67) begin            if((ba2a78e == 6'd1) && (nr454f1 == 3'd4))             err_msg_ae   <= 1'b1;      end      else                 err_msg_ae   <= 1'b0;
         end
end






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vvcdb03        <= PKT_IDLE;      ui6d81f        <= 16'd0;      tw35b43         <= 1'b0;      sh607c3 <= 1'b0;      lf3e1d    <= 3'b000;      ks1f0ee   <= 1'b0;      qtf8770       <= 2'b00;      czc3b84    <= 64'd0;      sj1dc24    <= 64'd0;      byee124  <= 1'b0;   end   else begin      sh607c3 <= (|mg8802f) ? 1'b1 : 1'b0;      case(ho42f01)         PKT_IDLE : begin                        czc3b84  <= (|ym8d0bc) ? {xl8b834[15:0], go5c1a6, 16'd0} : {vx32cbf[15:0], ls965fe, 16'd0};            ui6d81f      <= (|ym8d0bc) ? xl8b834[31:16] : vx32cbf[31:16];            ks1f0ee <= (|ym8d0bc) ? 1'b1 : 1'b0;            qtf8770     <= 2'b01;            sj1dc24  <= wj4143b << 16;               byee124<= 1'b0;            tw35b43       <= 1'b0;            if(|ym8d0bc || nt8e473) begin               tw35b43       <= 1'b1;               vvcdb03      <= PKT_HEADER;            end         end         PKT_HEADER : begin               qtf8770     <= rt55050 + 1;            ui6d81f      <= twa8287[63:48];            czc3b84  <= twa8287 << 16;                        if(ymaa0a)                sj1dc24    <= (ose02a8) ? {mg8802f, zx40178} : {zx40178, lf6988};            else                 sj1dc24    <= 64'd0;              if(rt55050 == 2'b01)               lf3e1d  <= gbc6251;               if(rt55050 == 2'b11)               vvcdb03      <= PKT_ADDR;         end         PKT_ADDR : begin               qtf8770            <= rt55050 + 1;            ui6d81f             <= wj4143b[63:48];            sj1dc24         <= wj4143b << 16;            czc3b84[63:32]  <= ks34c46;            if(rt55050 == 2'b11)  begin               if(ymaa0a) begin                   vvcdb03      <= (ose02a8) ? PKT_DATA : PKT_IDLE;                  byee124<= !ose02a8;               end               else                    vvcdb03      <= PKT_IDLE;            end         end         PKT_DATA : begin               qtf8770     <= rt55050 + 1;            ui6d81f      <= twa8287[63:48];            czc3b84  <= twa8287 << 16;            sj1dc24  <= wj4143b << 16;               if(rt55050 == 2'b01)  begin               vvcdb03      <= PKT_IDLE;               byee124<= 1'b1;            end         end      endcase   end
end


always @(*) begin   sj3cd23    =  32'h0000_0000;   case(nt91005)      3'b000 : begin         sj3cd23    =  32'h0000_0001;         end      3'b001 : begin         sj3cd23    =  32'h0000_0003;         end      3'b010 : begin         sj3cd23    =  32'h0000_000F;         end      3'b011 : begin         sj3cd23    =  32'h0000_00FF;         end                                                            default : begin         sj3cd23    =  32'h0000_0000;      end   endcase
end


assign qi15a31 = (zm89468 == zx4a342) ? 1'b0 : 1'b1;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wy348ef       <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};      xje691d       <= 3'b000;      yza4779      <= 3'b000;      gd23bcd  <= 3'b000;   end   else begin            yza4779      <= nt91005;      gd23bcd  <= zm89468;      case(nt91005)         3'b000 : begin            wy348ef  <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};            xje691d  <= swbc6[2:0];         end         3'b001 : begin            wy348ef  <= {MSI_1, MSI_0, MSI_1, MSI_0, MSI_1, MSI_0, MSI_1, MSI_0};            xje691d[2:1] <= swbc6[2:1];            case(ym8d0bc[1:0])               2'b01   : xje691d[0] <= 1'b0;               2'b10   : xje691d[0] <= 1'b1;               default : xje691d[0] <= 1'b0;            endcase         end         3'b010 : begin            wy348ef  <= {MSI_3, MSI_2, MSI_1, MSI_0, MSI_3, MSI_2, MSI_1, MSI_0};            xje691d[2] <= swbc6[2];            case(ym8d0bc[3:0])               4'b0001 : xje691d[1:0] <= 2'h0;               4'b0010 : xje691d[1:0] <= 2'h1;               4'b0100 : xje691d[1:0] <= 2'h2;               4'b1000 : xje691d[1:0] <= 2'h3;               default : xje691d[1:0] <= 2'h0;            endcase         end         3'b011 : begin            wy348ef  <= {MSI_7, MSI_6, MSI_5, MSI_4, MSI_3, MSI_2, MSI_1, MSI_0};            case(ym8d0bc)               8'b0000_0001 : xje691d <= 3'h0;               8'b0000_0010 : xje691d <= 3'h1;               8'b0000_0100 : xje691d <= 3'h2;               8'b0000_1000 : xje691d <= 3'h3;               8'b0001_0000 : xje691d <= 3'h4;               8'b0010_0000 : xje691d <= 3'h5;               8'b0100_0000 : xje691d <= 3'h6;               8'b1000_0000 : xje691d <= 3'h7;               default      : xje691d <= 3'h0;            endcase         end                                                               default : begin            wy348ef  <= {MSI_7, MSI_6, MSI_5, MSI_4, MSI_3, MSI_2, MSI_1, MSI_0};            xje691d  <= swbc6[2:0];         end      endcase   end
end


assign do9c164 = hb4f34c;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ri30425 <= 7'd0 ;      ec8212a <= 7'd0 ;      lf227cc   <= 8'd0 ;   end   else begin      if (ep90e49)         ri30425 <= (ofc6dcd == 7'd81) ? 7'd0 : ofc6dcd + 7'd1 ;      if (zkfe48e)         ec8212a <= (kf36e6c == 7'd81) ? 7'd0 : kf36e6c + 7'd1 ;      if (ep90e49 && !zkfe48e)         lf227cc <= bab7364 + 8'd1 ;      else if (zkfe48e && !ep90e49)         lf227cc <= bab7364 - 8'd1 ;   end
end



always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      cob62a9 <= 1'b0 ;   else if (jpcd33b)      cob62a9 <= 1'b1 ;   else if (me4cef2 != 8'h00)      cob62a9 <= 1'b1 ;   else      cob62a9 <= 1'b0 ;
end
always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      uxb1549 <= 1'b0 ;   else if (zk699de)      uxb1549 <= 1'b1 ;   else if (ay67791 != 8'h00)      uxb1549 <= 1'b1 ;   else      uxb1549 <= 1'b0 ;
end


assign ep8aa4c = off2200 ? (qv9f3ba & nrf9dd4) : qv9f3ba ;

assign int_msg_req = ((bab7364 >= 8'd2) && goceea7) ;

assign int_msg_ae = (|bab7364[7:1] == 1'b0) ;


assign err_msg_req  = ((ba2a78e >= 6'd1) && qv9f3ba);

assign err_msg_data = cm53c72;





pmi_distributed_dpram #(   .pmi_addr_depth       (81),      .pmi_addr_width       (7),       .pmi_data_width       (16),      .pmi_regmode          ("reg"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_family        ("ECP3"),


`else
      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_distributed_dpram"))
   eca6f9 (   .WrAddress            (ri30425),   .Data                 (ui6d81f),   .WrClock              (sys_clk),   .WE                   (tw35b43),   .WrClockEn            (1'b1),   .RdAddress            (ec8212a),   .RdClock              (sys_clk),   .RdClockEn            (do9c164),   .Reset                (~rst_n),   .Q                    (int_msg_data )   );
always@* begin ir23067<=xjc2975[0];ep1833c<=xjc2975[1];wwc19e5<=xjc2975[2];bncf29<=xjc2975[3];qg6794f<=xjc2975[4];qvb12ff<={bus_num>>1,xjc2975[5]};xy897fc<={dev_num>>1,xjc2975[6]};ip4bfe2<={func_num>>1,xjc2975[7]};hb4f34c<=xjc2975[8];ne79a67<=xjc2975[9];jpcd33b<=xjc2975[10];zk699de<=xjc2975[11];me4cef2<={tx_ca_ph>>1,xjc2975[12]};ay67791<={tx_ca_pd>>1,xjc2975[13]};qi3bc88<={msi_tc>>1,xjc2975[14]};ayde440<={msi>>1,xjc2975[15]};off2200<=xjc2975[16];nt91005<={mm_enable>>1,xjc2975[17]};mg8802f<={mes_uaddr>>1,xjc2975[18]};zx40178<={mes_laddr>>1,xjc2975[19]};swbc6<={mes_data>>1,xjc2975[20]};sw5e31<={yx54f34>>1,xjc2975[21]};tw2f189<={twa79a4>>1,xjc2975[22]};qg78c4a<={sj3cd23>>1,xjc2975[23]};gbc6251<={xje691d>>1,xjc2975[24]};aa3128d<={wy348ef>>1,xjc2975[25]};zm89468<={yza4779>>1,xjc2975[26]};zx4a342<={gd23bcd>>1,xjc2975[27]};cz51a17<={sj1de6d>>1,xjc2975[28]};ym8d0bc<={ayef36c>>1,xjc2975[29]};os685e0<={vi79b60>>1,xjc2975[30]};ho42f01<={vvcdb03>>1,xjc2975[31]};gd1780a<={ui6d81f>>1,xjc2975[32]};ep90e49<=xjc2975[33];ose02a8<=xjc2975[34];do1541<={lf3e1d>>1,xjc2975[35]};ymaa0a<=xjc2975[36];rt55050<={qtf8770>>1,xjc2975[37]};twa8287<={czc3b84>>1,xjc2975[38]};wj4143b<={sj1dc24>>1,xjc2975[39]};uka1dc<=xjc2975[40];pf50ee1<={en70922>>1,xjc2975[41]};ym8770e<=xjc2975[42];ou3b871<=xjc2975[43];mrdc388<=xjc2975[44];jce1c45<=xjc2975[45];lse22a<=xjc2975[46];vv71153<={go783c6>>1,xjc2975[47]};ks88a9e<={ykc1e30>>1,xjc2975[48]};nr454f1<={ouf181>>1,xjc2975[49]};ba2a78e<={qg78c09>>1,xjc2975[50]};cm53c72<={gbc6049>>1,xjc2975[51]};fp9e391<={ba3024d>>1,xjc2975[52]};byf1c8e<=xjc2975[53];nt8e473<=xjc2975[54];ic7239f<={go49ab6>>1,xjc2975[55]};ofc6dcd<={ri30425>>1,xjc2975[56]};kf36e6c<={ec8212a>>1,xjc2975[57]};bab7364<={lf227cc>>1,xjc2975[58]};qv9f3ba<=xjc2975[59];nrf9dd4<=xjc2975[60];goceea7<=xjc2975[61];ay77538<={nr55264>>1,xjc2975[62]};fpba9c1<={mga9327>>1,xjc2975[63]};qgd4e0e<={qg49939>>1,xjc2975[64]};hqa7070<={go4c9c9>>1,xjc2975[65]};xl38382<=xjc2975[66];eac1c16<=xjc2975[67];lse0b1<={ux39276>>1,xjc2975[68]};uv7058b<={ipc93b4>>1,xjc2975[69]};co82c5c<={qg49da4>>1,xjc2975[70]};tj162e0<={ip4ed21>>1,xjc2975[71]};gdb1706<={rg7690c>>1,xjc2975[72]};xl8b834<={gdb4862>>1,xjc2975[73]};go5c1a6<={ana4315>>1,xjc2975[74]};mee0d31<={uk218ad>>1,xjc2975[75]};lf6988<={xlc568>>1,xjc2975[76]};ks34c46<={go62b46>>1,xjc2975[77]};eca6231<=xjc2975[78];wy31188<=xjc2975[79];sw88c40<={cm68c43>>1,xjc2975[80]};ww46201<={kq46218>>1,xjc2975[81]};ym31009<={gq310c1>>1,xjc2975[82]};ie88048<={uk88608>>1,xjc2975[83]};th40240<={ic43040>>1,xjc2975[84]};xy1206<={sj18201>>1,xjc2975[85]};fp9032<={eac100d>>1,xjc2975[86]};tu48196<={ir8068>>1,xjc2975[87]};dz40cb2<={th40344>>1,xjc2975[88]};fp6597<={xy1a26>>1,xjc2975[89]};vx32cbf<={ird133>>1,xjc2975[90]};ls965fe<={qg6899c>>1,xjc2975[91]};twb2ff2<=xjc2975[92];uk97f92<=xjc2975[93];tjbfc91<=xjc2975[94];zkfe48e<=xjc2975[95];pu9ce74<=xjc2975[96];co9239d<=xjc2975[97];end
always@* begin ux1852e[2047]<=inta_n;ux1852e[2046]<=ftl_err_out;ux1852e[2044]<=nftl_err_out;ux1852e[2040]<=cor_err_out;ux1852e[2032]<=bus_num[0];ux1852e[2016]<=dev_num[0];ux1852e[1984]<=func_num[0];ux1852e[1980]<=vi79b60[0];ux1852e[1950]<=xje691d[0];ux1852e[1930]<=lf3e1d[0];ux1852e[1921]<=int_msg_rd;ux1852e[1912]<=vvcdb03[0];ux1852e[1853]<=wy348ef[0];ux1852e[1818]<=go62b46[0];ux1852e[1813]<=ks1f0ee;ux1852e[1806]<=ba3024d[0];ux1852e[1802]<=cob62a9;ux1852e[1795]<=err_msg_rd;ux1852e[1777]<=ui6d81f[0];ux1852e[1746]<=kf26705;ux1852e[1687]<=ou8dce3;ux1852e[1685]<=uk88608[0];ux1852e[1659]<=yza4779[0];ux1852e[1648]<=ykc1e30[0];ux1852e[1630]<=mes_uaddr[0];ux1852e[1588]<=qi15a31;ux1852e[1578]<=qtf8770[0];ux1852e[1564]<=jr8126a;ux1852e[1556]<=uxb1549;ux1852e[1542]<=tx_ca_ph_infi;ux1852e[1511]<=twa79a4[0];ux1852e[1506]<=tw35b43;ux1852e[1460]<=qg6899c[0];ux1852e[1445]<=ux3382c;ux1852e[1436]<=vxaf078;ux1852e[1389]<=xy1a26[0];ux1852e[1383]<=ym24578;ux1852e[1369]<=lf84915;ux1852e[1327]<=vv6460c;ux1852e[1323]<=ic43040[0];ux1852e[1280]<=hb64e49;ux1852e[1271]<=gd23bcd[0];ux1852e[1249]<=ouf181[0];ux1852e[1212]<=mes_laddr[0];ux1852e[1197]<=eac100d[0];ux1852e[1129]<=hqad188;ux1852e[1109]<=czc3b84[0];ux1852e[1080]<=xl9356;ux1852e[1064]<=ep8aa4c;ux1852e[1036]<=tx_ca_pd_infi;ux1852e[1027]<=ux39276[0];ux1852e[1023]<=int_disable;ux1852e[990]<=ayef36c[0];ux1852e[975]<=sj3cd23[0];ux1852e[965]<=sh607c3;ux1852e[909]<=xlc568[0];ux1852e[903]<=gbc6049[0];ux1852e[901]<=lf227cc[0];ux1852e[873]<=uv44ce0;ux1852e[843]<=do9c164;ux1852e[842]<=gq310c1[0];ux1852e[824]<=go783c6[0];ux1852e[815]<=mm_enable[0];ux1852e[755]<=yx54f34[0];ux1852e[730]<=ird133[0];ux1852e[718]<=hd22bc1;ux1852e[694]<=th40344[0];ux1852e[691]<=ou248af;ux1852e[684]<=en70922[0];ux1852e[640]<=go4c9c9[0];ux1852e[598]<=sj18201[0];ux1852e[513]<=xl2724e;ux1852e[495]<=sj1de6d[0];ux1852e[454]<=uk218ad[0];ux1852e[451]<=qg78c09[0];ux1852e[450]<=ec8212a[0];ux1852e[421]<=kq46218[0];ux1852e[407]<=msi_enable;ux1852e[377]<=mes_data[0];ux1852e[347]<=ir8068[0];ux1852e[342]<=byee124;ux1852e[320]<=qg49939[0];ux1852e[227]<=ana4315[0];ux1852e[225]<=ri30425[0];ux1852e[210]<=cm68c43[0];ux1852e[203]<=msi[0];ux1852e[171]<=sj1dc24[0];ux1852e[160]<=mga9327[0];ux1852e[113]<=gdb4862[0];ux1852e[112]<=go49ab6[0];ux1852e[101]<=msi_tc[0];ux1852e[80]<=nr55264[0];ux1852e[56]<=rg7690c[0];ux1852e[50]<=tx_ca_pd[0];ux1852e[28]<=ip4ed21[0];ux1852e[25]<=tx_ca_ph[0];ux1852e[14]<=qg49da4[0];ux1852e[7]<=ipc93b4[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule









































































`timescale 1 ns / 100 ps
module pcie_x1_top_txintf_x1 
   (
    
    sys_clk,           
    rst_n,             
    cfgec_vcasel,      

    arb_enable,        
    arb_enable2,       
    msi_enable,        
    `ifdef CFG_REG
       cfg_rmux_req,   
       cfg_rmux_ae,    
       cfg_rmux_data,  
    `endif
    `ifdef ECRC
      ecrc_enb,        
    `endif
    tx_req,            
    tx_data,           
    tx_st,             
    tx_end,            
    tx_nlfy,           
    txtp_rdy,          
    dll_pause_cnt,     
    vcneg_pend,        

    
    txintf_pause_ack,  
    txintf_rdy_ack,    
    `ifdef CFG_REG
       cfg_rmux_rd,    
    `endif
    cfg_cplh_cc,       
    cfg_cpld_cc,       
    cfg_ph_cc,         
    cfg_pd_cc,         

    tx_rdy,            
    txintf_req,        
    txintf_data,       
    txintf_st,         
    txintf_end,        
    txintf_nlfy,       

    f_nf_emsg_sent,    
    rchk_credit_cpl,   
    rchk_credit_p,     
    cfg_rmux_end       

    );
parameter FADDR    = 3;
parameter D_WIDTH  = 16;
localparam ls2f6c2 = 2'd0;
localparam hb7b612  = 2'd1;
localparam kqdb097    = 2'd2;
localparam rtd84b8    = 2'd3;
input                       sys_clk;
input                       rst_n;
input  [2:0]                cfgec_vcasel;
input                       arb_enable;
input                       arb_enable2;
input                       msi_enable;

`ifdef CFG_REG
input                    cfg_rmux_req;
input                    cfg_rmux_ae;
input [15:0]             cfg_rmux_data;

`endif

`ifdef ECRC
input                    ecrc_enb;

`endif
input [`NUM_VC-1:0]         tx_req;
input [(`NUM_VC*16)-1:0]    tx_data;
input [`NUM_VC-1:0]         tx_st;
input [`NUM_VC-1:0]         tx_end;
input [`NUM_VC-1:0]         tx_nlfy;
input                       txtp_rdy;
input [FADDR:0]             dll_pause_cnt;
input [`NUM_VC -1:0]        vcneg_pend ;
output                      txintf_pause_ack;
output                      txintf_rdy_ack;

`ifdef CFG_REG
output                   cfg_rmux_rd;

`endif
output                      cfg_cplh_cc;
output                      cfg_cpld_cc;
output                      cfg_ph_cc;
output                      cfg_pd_cc;
output[`NUM_VC-1:0]         tx_rdy;
output                      txintf_req;
output [15:0]               txintf_data;
output                      txintf_st;
output                      txintf_end;
output                      txintf_nlfy;
output                      cfg_rmux_end;
output                      f_nf_emsg_sent;
output                      rchk_credit_cpl;
output                      rchk_credit_p;
wire   [`NUM_VC-1:0]        tx_eop_early;
wire   [`NUM_VC-1:0]        vcarb_grant;
wire   [`NUM_VC-1:0]        txrdy_clear_rdy;
wire                        vcarb_grant_val;

`ifndef VC1
wire                        rv84534;

`endif
wire                        jr229a6;
wire                        pu14d37;
wire                        yma69ba;
reg    [`NUM_VC-1:0]        ec34dd1;
reg    [`NUM_VC-1:0]        iea6e89;
reg                         txintf_req;
reg    [15:0]               txintf_data;
reg                         txintf_st;
reg                         txintf_end;
reg                         txintf_nlfy;
reg                         goe5cd6;

`ifdef CFG_REG
reg                         kd7f28e;
reg                         cfg_rmux_rd;
reg    [1:0]                neca3ae;
reg                         kd51d73;
reg    [3:0]                nt8eb9c;
wire                        gb75ce6;
wire                        anae735;
wire                        vi739ac;
wire                        ls9cd62;

`endif
reg   [FADDR+2:0]           ng35897;
reg                         pause_enable;
reg   [1:0]                 os625d9;
reg                         txintf_pause_ack;
reg                         txintf_rdy_ack;
reg                         cbbb228;
reg                         yxd9145;
reg                         cfg_cplh_cc;
reg                         cfg_cpld_cc;
reg                         cfg_ph_cc;
reg                         cfg_pd_cc;
reg                         cfg_rmux_end;
reg                         f_nf_emsg_sent;
reg                         rchk_credit_cpl;
reg                         rchk_credit_p;
reg                         rib7d76;

`ifndef VC1

`ifdef ECRC

`endif

`else

`endif

`ifdef CFG_REG
reg [D_WIDTH -1:0] ykf5d94;
reg                ohaeca1,ho7650d,hqb286b,fp9435a;

`endif

`ifdef CFG_REG

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef CFG_REG

`else

`endif 

`ifdef CFG_REG
parameter  CR_WAIT  = 2'd0;
parameter  CR_ST    = 2'd1;
parameter  CR_END   = 2'd2;
parameter  CR_IPG   = 2'd3;

`ifdef ECRC

`else

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`define TXRDY_DEF txrdy

`endif

`ifdef X1

`define TXRDY_DEF pcie_x1_top_txrdy_x1

`endif

`ifdef CFG_REG

`endif

`ifdef ECRC

`else

`endif
reg [2 : 0] cz4e491;
reg cobc9bf;
reg xwe4df9;
reg off2200;
reg [`NUM_VC - 1 : 0] ead4800;
reg [(`NUM_VC * 16) - 1 : 0] qva4000;
reg [`NUM_VC - 1 : 0] goef79e;
reg [`NUM_VC - 1 : 0] th7bcf0;
reg [`NUM_VC - 1 : 0] ykde786;
reg ym158;
reg [FADDR : 0] ks824e7;
reg [`NUM_VC - 1 : 0] psd00bd;
reg [`NUM_VC - 1 : 0] mg92469;
reg [`NUM_VC - 1 : 0] gq5601;
reg [`NUM_VC - 1 : 0] icdedc1;
reg ksac0;
reg ux2c797;
reg dm63cbd;
reg tw1e5eb;
reg [`NUM_VC - 1 : 0] kdf2f5a;
reg [`NUM_VC - 1 : 0] aa97ad4;
reg me49c92;
reg [FADDR + 2 : 0] vv5a852;
reg wy2b008;
reg [1 : 0] epa14b9;
reg aaa5cd;
reg jc52e69;
reg gq9734b;
reg [2047:0] ux1852e;
wire [27:0] xjc2975;

`ifdef CFG_REG

`endif

`ifdef ECRC

`endif

`ifdef CFG_REG

`endif

`ifndef VC1

`endif

`ifdef CFG_REG

`endif

`ifndef VC1


`ifdef ECRC

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef CFG_REG

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef CFG_REG

`else

`endif 

`ifdef CFG_REG

`ifdef ECRC

`else

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`define TXRDY_DEF txrdy

`endif

`ifdef X1

`define TXRDY_DEF pcie_x1_top_txrdy_x1

`endif


`ifdef CFG_REG

`endif

`ifdef ECRC

`else

`endif

localparam do14bae = 28,jra5d72 = 32'hfdffd14b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef CFG_REG


`endif


`ifdef ECRC


`endif


`ifdef CFG_REG


`endif


`ifndef VC1


`endif


`ifdef CFG_REG


`endif


`ifndef VC1


`ifdef ECRC


`endif


`else


`endif


`ifdef CFG_REG


`endif


`ifdef CFG_REG


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef CFG_REG


`else


`endif 


`ifdef CFG_REG


`ifdef ECRC


`else


`endif


`else


`endif


`ifdef CFG_REG


`endif


`ifdef X4


`define TXRDY_DEF txrdy


`endif


`ifdef X1


`define TXRDY_DEF pcie_x1_top_txrdy_x1


`endif


`ifdef CFG_REG


`endif


`ifdef ECRC


`else


`endif









`ifdef CFG_REG



`endif



`ifdef ECRC



`endif



`ifdef CFG_REG



`endif






`ifndef VC1



`endif




`ifdef CFG_REG



`endif






`ifndef VC1

assign rv84534 = ((|th7bcf0) | (|ykde786));
pcie_x1_top_fnf326b zk793d0   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .goe5cd6    (me49c92),    .cfgec_vcasel    (cz4e491),    .tx_req          (ead4800),    .tx_eop_early    (|mg92469),


`ifdef ECRC
      .ecrc_enb      (ecrc_enb),


`endif
    .txrdy_clear_rdy (|icdedc1),
        .vcarb_grant_val (vcarb_grant_val),    .vcarb_grant     (vcarb_grant)    );

`else

assign vcarb_grant_val = 1'b1;
assign vcarb_grant     = 'd1;

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      ec34dd1 <= 0;      iea6e89 <= 0;   end   else if (ksac0) begin      ec34dd1 <= gq5601;      iea6e89 <= kdf2f5a;   end
end










`ifdef CFG_REG
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         ykf5d94  <= 64'd0;         ohaeca1 <= 1'b0;         hqb286b    <= 1'b0;         fp9435a   <= 1'b0;      end      else begin         ykf5d94  <= cfg_rmux_data;         ohaeca1 <= kd7f28e;         hqb286b    <= kd51d73;         fp9435a   <= cfg_rmux_end;      end   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      txintf_data <= 0;      txintf_st   <= 0;      txintf_end  <= 0;      txintf_nlfy <= 0;   end


`ifdef CFG_REG
   else if (ohaeca1) begin      txintf_data <= ykf5d94;      txintf_st   <= hqb286b;      txintf_end  <= fp9435a;      txintf_nlfy <= 1'b0;   end


`endif
   else begin      case(1'b1)


`ifdef EN_VC0
            aa97ad4[0]: begin               txintf_data <= qva4000[15:0];               txintf_st   <= goef79e[0];               txintf_end  <= (ykde786[0] & th7bcf0[0]) ? 1'b0 : th7bcf0[0];               txintf_nlfy <= ykde786[0];            end


`endif



`ifdef EN_VC1
            aa97ad4[1]: begin               txintf_data <= qva4000[2*16-1:16];               txintf_st   <= goef79e[1];               txintf_end  <= (ykde786[1] & th7bcf0[1]) ? 1'b0 : th7bcf0[1];               txintf_nlfy <= ykde786[1];            end


`endif



`ifdef EN_VC2
            aa97ad4[2]: begin               txintf_data <= qva4000[3*16-1:2*16];               txintf_st   <= goef79e[2];               txintf_end  <= (ykde786[2] & th7bcf0[2]) ? 1'b0 : th7bcf0[2];               txintf_nlfy <= ykde786[2];            end


`endif



`ifdef EN_VC3
            aa97ad4[3]: begin               txintf_data <= qva4000[4*16-1:3*16];               txintf_st   <= goef79e[3];               txintf_end  <= (ykde786[3] & th7bcf0[3]) ? 1'b0 : th7bcf0[3];               txintf_nlfy <= ykde786[3];            end


`endif



`ifdef EN_VC4
            aa97ad4[4]: begin               txintf_data <= qva4000[5*16-1:4*16];               txintf_st   <= goef79e[4];               txintf_end  <= (ykde786[4] & th7bcf0[4]) ? 1'b0 : th7bcf0[4];               txintf_nlfy <= ykde786[4];            end


`endif



`ifdef EN_VC5
            aa97ad4[5]: begin               txintf_data <= qva4000[6*16-1:5*16];               txintf_st   <= goef79e[5];               txintf_end  <= (ykde786[5] & th7bcf0[5]) ? 1'b0 : th7bcf0[5];               txintf_nlfy <= ykde786[5];            end


`endif



`ifdef EN_VC6
            aa97ad4[6]: begin               txintf_data <= qva4000[7*16-1:6*16];               txintf_st   <= goef79e[6];               txintf_end  <= (ykde786[6] & th7bcf0[6]) ? 1'b0 : th7bcf0[6];               txintf_nlfy <= ykde786[6];            end


`endif



`ifdef EN_VC7
            aa97ad4[7]: begin               txintf_data <= qva4000[8*16-1:7*16];               txintf_st   <= goef79e[7];               txintf_end  <= (ykde786[7] & th7bcf0[7]) ? 1'b0 : th7bcf0[7];               txintf_nlfy <= ykde786[7];            end


`endif
         default :  begin            txintf_st   <= 1'b0;            txintf_end  <= 1'b0;            txintf_nlfy <= 1'b0;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      txintf_req <= 0;   end   else if (me49c92 == 1'b0) begin


`ifdef CFG_REG
      txintf_req <= (|ead4800 | cfg_rmux_req);


`else
      txintf_req <= |ead4800;


`endif 
   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      goe5cd6 <= 0;   end   else if (|goef79e) begin      goe5cd6 <= 1'b1;   end   else if (|mg92469) begin      goe5cd6 <= 1'b0;   end
end












`ifdef CFG_REG


assign yma69ba = (ykf5d94[1:0] != 2'b00) ? 1'b1 : 1'b0;    
assign jr229a6   = (cfg_rmux_data[14:13] != 2'b01) ? 1'b1 : 1'b0;  
assign pu14d37   = (cfg_rmux_data[14:13] == 2'b11) ? 1'b1 : 1'b0;  
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      neca3ae        <= CR_WAIT;      kd7f28e  <= 1'b0;      cfg_rmux_rd     <= 1'b0;      kd51d73     <= 1'b0;      cfg_rmux_end    <= 1'b0;      f_nf_emsg_sent  <= 1'b0;      rchk_credit_cpl <= 1'b0;      rchk_credit_p   <= 1'b0;      rib7d76       <= 1'b0;   end   else begin      kd7f28e  <= 1'b0;      cfg_rmux_rd     <= 1'b0;      kd51d73     <= 1'b0;      cfg_rmux_end    <= 1'b0;      f_nf_emsg_sent  <= 1'b0;      rchk_credit_cpl <= 1'b0;      rchk_credit_p   <= 1'b0;      rib7d76       <= 1'b0;      case(neca3ae)         CR_WAIT: begin            if (cfg_rmux_req && ym158 && !cfg_rmux_ae && |tx_rdy == 1'b0 && wy2b008 == 1'b0) begin               cfg_rmux_rd  <= 1'b1;               neca3ae     <= CR_ST;               rib7d76    <= 1'b1;              end            else begin               neca3ae     <= CR_WAIT;            end         end         CR_ST: begin            kd7f28e  <= 1'b1;            cfg_rmux_rd     <= 1'b1;            kd51d73     <= 1'b1;            neca3ae        <= CR_END;         end         CR_END: begin            if (anae735 == 1'b1) begin               cfg_rmux_end    <= 1'b1;               kd7f28e  <= 1'b1;               neca3ae        <= CR_IPG;               rchk_credit_cpl <= !cobc9bf;                  rchk_credit_p   <= cobc9bf;                end            else begin               kd7f28e  <= 1'b1;               cfg_rmux_rd     <= 1'b1;               neca3ae        <= CR_END;            end                                                if((nt8eb9c == 4'd4) && cobc9bf && xwe4df9) begin                f_nf_emsg_sent  <= tw1e5eb;              end         end         CR_IPG: begin            if (vi739ac == 1'b1) begin               neca3ae        <= CR_WAIT;            end            else begin               neca3ae        <= CR_IPG;            end         end         default: begin            neca3ae     <= CR_WAIT;         end      endcase   end
end
assign ls9cd62 = (neca3ae  != CR_WAIT) ? 1'b1 : 1'b0;













assign gb75ce6 = cfg_rmux_data[14];
assign anae735 = (nt8eb9c == 4'd1 && neca3ae == CR_END) ? 1'b1 : 1'b0;
assign vi739ac  = (nt8eb9c == 4'd1 && neca3ae == CR_IPG) ? 1'b1 : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      nt8eb9c <= 0;   end   else if (kd51d73) begin            case({cobc9bf, xwe4df9})         2'b00,         2'b01 : begin                         nt8eb9c <= (gb75ce6 == 1'b0) ? 4'd4 : 4'd6;         end         2'b10 : begin                                     if(off2200)                if(dm63cbd)                  nt8eb9c <= 4'd8;               else                  nt8eb9c <= 4'd6;            else                 nt8eb9c <= 4'd6;         end         2'b11 : begin                         nt8eb9c <= 4'd6;         end      endcase   end      else if (cfg_rmux_end) begin


`ifdef ECRC
      nt8eb9c <= (ecrc_enb) ? 4'd4 : 4'd2;


`else
      nt8eb9c <= 4'd2;


`endif
   end   else if (nt8eb9c != 0) begin      nt8eb9c <= nt8eb9c - 1;   end
end

`else
   assign jr229a6     = 1'b0;   assign pu14d37     = 1'b0;   assign yma69ba   = 1'b0;   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         cfg_rmux_end    <= 1'b0;         f_nf_emsg_sent  <= 1'b0;         rchk_credit_cpl <= 1'b0;         rchk_credit_p   <= 1'b0;         rib7d76       <= 1'b0;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cfg_ph_cc       <= 1'b0;      cfg_pd_cc       <= 1'b0;      cfg_cplh_cc     <= 1'b0;      cfg_cpld_cc     <= 1'b0;   end


`ifdef CFG_REG
   else begin      cfg_ph_cc       <= 1'b0;      cfg_pd_cc       <= 1'b0;      cfg_cplh_cc     <= 1'b0;      cfg_cpld_cc     <= 1'b0;      if(gq9734b) begin         if(cobc9bf) begin             cfg_ph_cc     <= 1'b1;            if(!xwe4df9 && off2200)                cfg_pd_cc     <= 1'b1;         end      end      else if (!cobc9bf && kd51d73) begin             cfg_cplh_cc     <= 1'b1;            cfg_cpld_cc     <= cfg_rmux_data[14];      end   end


`endif

end




`ifdef X4



`define TXRDY_DEF txrdy



`endif



`ifdef X1



`define TXRDY_DEF pcie_x1_top_txrdy_x1



`endif

`TXRDY_DEF ie92c47 [`NUM_VC-1:0]   (        .sys_clk            (sys_clk),    .rst_n              (rst_n),    .tx_req             (tx_req),    .tx_data            (tx_data),    .tx_st              (tx_st),    .tx_nlfy            (tx_nlfy),    .txtp_rdy           (txtp_rdy),


`ifdef CFG_REG
       .cfg_rmux_req    (cfg_rmux_req | ls9cd62),


`endif
    .vcarb_grant_val    (vcarb_grant_val),    .vcarb_grant        (vcarb_grant),    .pause_enable       (pause_enable),    .vcneg_pend         (vcneg_pend),        .txrdy_clear_rdy    (txrdy_clear_rdy),    .tx_eop_early       (tx_eop_early),    .tx_rdy             (tx_rdy)    );
























always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      os625d9         <= ls2f6c2;      ng35897        <= 0;      pause_enable     <= 0;      txintf_pause_ack <= 0;   end   else begin      txintf_pause_ack <= 1'b0;      case(epa14b9)         ls2f6c2: begin            if (|tx_rdy && |icdedc1) begin               os625d9         <= hb7b612;


`ifdef ECRC
               ng35897        <= (ecrc_enb) ? {ks824e7,2'b00} + 3'd4 :  {ks824e7,2'b00} + 2'd2;


`else
               ng35897        <= {ks824e7,2'b00} + 2'd2;


`endif
               pause_enable     <= 1'b1;               txintf_pause_ack <= 1'b1;            end            else if (|tx_rdy == 1'b0 && |ead4800 == 1'b0 && ks824e7 != 0) begin               os625d9         <= hb7b612;               ng35897        <= {ks824e7,2'b00};               pause_enable     <= 1'b1;               txintf_pause_ack <= 1'b1;            end            else begin               os625d9         <= ls2f6c2;               pause_enable     <= 1'b0;            end         end         hb7b612: begin            if (vv5a852 == 0) begin               os625d9         <= kqdb097;               pause_enable     <= 1'b0;            end            else begin               os625d9         <= hb7b612;               ng35897        <= vv5a852 - 1'd1;               pause_enable     <= 1'b1;            end         end                  kqdb097: begin            os625d9         <= rtd84b8;         end         rtd84b8: begin            os625d9         <= ls2f6c2;         end         default: begin            os625d9         <= ls2f6c2;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      cbbb228 <= 0;      yxd9145 <= 0;      txintf_rdy_ack  <= 0;   end   else begin      cbbb228 <= (ym158 == 1'b0 && |tx_rdy == 1'b0) ? 1'b1 : 1'b0;      yxd9145 <= aaa5cd;      txintf_rdy_ack  <= aaa5cd & ~jc52e69 & (|tx_rdy == 1'b0);   end
end

always@* begin cz4e491<={cfgec_vcasel>>1,xjc2975[0]};cobc9bf<=xjc2975[1];xwe4df9<=xjc2975[2];off2200<=xjc2975[3];ead4800<={tx_req>>1,xjc2975[4]};qva4000<={tx_data>>1,xjc2975[5]};goef79e<={tx_st>>1,xjc2975[6]};th7bcf0<={tx_end>>1,xjc2975[7]};ykde786<={tx_nlfy>>1,xjc2975[8]};ym158<=xjc2975[9];ks824e7<={dll_pause_cnt>>1,xjc2975[10]};psd00bd<={vcneg_pend>>1,xjc2975[11]};mg92469<={tx_eop_early>>1,xjc2975[12]};gq5601<={vcarb_grant>>1,xjc2975[13]};icdedc1<={txrdy_clear_rdy>>1,xjc2975[14]};ksac0<=xjc2975[15];ux2c797<=xjc2975[16];dm63cbd<=xjc2975[17];tw1e5eb<=xjc2975[18];kdf2f5a<={ec34dd1>>1,xjc2975[19]};aa97ad4<={iea6e89>>1,xjc2975[20]};me49c92<=xjc2975[21];vv5a852<={ng35897>>1,xjc2975[22]};wy2b008<=xjc2975[23];epa14b9<={os625d9>>1,xjc2975[24]};aaa5cd<=xjc2975[25];jc52e69<=xjc2975[26];gq9734b<=xjc2975[27];end
always@* begin ux1852e[2047]<=arb_enable;ux1852e[2046]<=arb_enable2;ux1852e[2044]<=msi_enable;ux1852e[2040]<=tx_req[0];ux1852e[2033]<=tx_data[0];ux1852e[2019]<=tx_st[0];ux1852e[1990]<=tx_end[0];ux1852e[1981]<=rib7d76;ux1852e[1939]<=yma69ba;ux1852e[1933]<=tx_nlfy[0];ux1852e[1831]<=ec34dd1[0];ux1852e[1819]<=txtp_rdy;ux1852e[1778]<=vcarb_grant_val;ux1852e[1615]<=iea6e89[0];ux1852e[1591]<=dll_pause_cnt[0];ux1852e[1508]<=jr229a6;ux1852e[1271]<=os625d9[0];ux1852e[1182]<=goe5cd6;ux1852e[1135]<=vcneg_pend[0];ux1852e[1023]<=cfgec_vcasel[0];ux1852e[990]<=yxd9145;ux1852e[969]<=pu14d37;ux1852e[889]<=txrdy_clear_rdy[0];ux1852e[635]<=pause_enable;ux1852e[495]<=cbbb228;ux1852e[444]<=vcarb_grant[0];ux1852e[317]<=ng35897[0];ux1852e[222]<=tx_eop_early[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule




































































`timescale 1 ns / 100 ps
module pcie_x1_top_hd2d292 #(
   parameter FADDR    = 3,   parameter D_WIDTH  = 64 )
   (
   input wire                  sys_clk,      
   input wire                  rst_n,        

   input wire                  tlp_debug,      
   input wire   [11:0]         nefb397,   
   input wire   [13:0]         zkc5737, 
                                                
   
   input wire                  db13b67,    
   input wire  [D_WIDTH-1:0]   tlpgen_data,   
   input wire                  tlpgen_st,     
   input wire                  tlpgen_end,    
   input wire                  tlpgen_nlfy,   
   input wire                  tlpgen_rdy_ack,
   `ifdef X4
      input wire               sw2b9ba ,
      input wire               uk3e9a1,   
   `endif

   
   input wire                  ntba23f,    
   input wire  [2:0]           god11ff,      
   input wire  [1:0]           ie88ff9,      
   input wire                  vi47fc9,    
   input wire  [2:0]           ng3fe4a,      
   input wire  [1:0]           cmff252,      
   input wire  [(`NUM_VC-1):0]    zxf9291,
   input wire  [(`NUM_VC-1):0]    wjc948e,
   input wire  [(`NUM_VC-1):0]    bl4a474,
   input wire  [(24*`NUM_VC)-1:0] xw574e2,       
   input wire  [(24*`NUM_VC)-1:0] ntba712,      
   input wire  [(24*`NUM_VC)-1:0] ipd3897,     

   input wire                  jcc59b0,         
   input wire   [2:0]          tx_pmtype,     
   input wire                  an2cd83,     
   input wire  [23:0]          tx_vsd_data,   

   
   input wire  [D_WIDTH-1:0]   dfrm_tdata,    
   input wire                  dfrm_tval,     
   input wire                  dfrm_st,       
   input wire                  dfrm_end,      
   input wire                  dfrm_edb,      
   `ifdef X4
      input wire               co3b27d,     
      input wire  [15:0]       yxd93e9,      
      input wire  [31:0]       czc9f4d,     
      input wire  [47:0]       dfrm_ddata,    
      input wire               goe5a3f,     
   `endif
   `ifdef X1
      input wire  [15:0]       ux2383c,
      input wire               dfrm_dllp_st,  
      input wire               dfrm_dllp_end, 
   `endif

   
   input wire [3:0]            phy_ltssm_state, 
   input wire                  phy_link_up,   
   input wire                  phy_l0,        
   input wire [`NUM_VC-1:0]    ykce5dc,        
   input wire [(`NUM_VC*3)-1:0] su72ee1,     
   input wire                  ipd9cbb,       
   input wire [2:0]            max_pl_size,   

   
   input wire                  bn37447,

   
   input wire  [`NUM_VC-1:0]   trnc_st,       

   
   input wire                  phy_skpq_val,  
   `ifdef X4
      input wire [1:0]         phy_skpq_nclks,
      input wire               qgd1a4f,    
      input wire               ym15727,    
      input wire [2:0]         phy_cfgln_sum, 
   `endif

   
   
   output wire                txtp_rdy,       

   
   output wire [D_WIDTH-1:0]  tdmux_data,     
   output wire                tdmux_val,      
   output wire                tdmux_st,       
   output wire                tdmux_end,      
   output wire                tdmux_edb,      
   output wire                tdmux_skip,     
   `ifdef X4
      output wire             ng96a8a,     
      output wire             rvaa29e,     
   `endif
   `ifdef X1
      output wire             tdmux_dllp_st,  
      output wire             tdmux_dllp_end, 
   `endif

   
   output reg [D_WIDTH-1:0]   rxtp_data,      
   output reg                 rxtp_st,        
   output reg                 rxtp_end,       
   `ifdef X4
      output reg              co347bf,      
   `endif

   output wire [22:0]         ayf58a1,    
   output wire [1:0]          coac509,  
   output wire                os62849,  
   output wire                do14249,  
   output wire                mta124b,   
   output wire [23:0]         rxdp_vsd_data , 
   output wire [2:0]          rxdp_pmd_type,  
   output wire [1:0]          rxdp_dllp_val,  

   
   output wire [`NUM_VC-1:0]  epa437e,    
   output wire [`NUM_VC-1:0]  aa21bf5,   
   output wire [`NUM_VC-1:0]  sjdfa8,  
   output wire                hq111f2,
   output wire                qi88f93,

   
   output wire [`NUM_VC-1:0]  vcneg_pend,      
   output wire                rxtp_bad_tlp,    
   output wire                cb2c67b,   
   output wire                ie5434,      
   output wire                mrd9d4b,  
   output wire                ksa936e,  

   
   output wire                dl_inactive,     
   output wire                dl_init,         
   output wire                dl_active,       
   output wire [`NUM_VC-1:0]  dl_up,           

   
   output wire                tx_rbuf_empty ,  
   output reg                 tx_dllp_pend ,   
   output reg                 rx_tlp_rcvd ,    

   
   output wire [FADDR:0]      dll_pause_cnt,   

   
   output wire                mef516e       );
wire [D_WIDTH-1:0]    txtp_tdata;
wire [11:0]           pu4305;
wire [11:0]           rxtp_seq;
wire [11:0]           uv5e021;
wire [2:0]            ng2573b;
wire [19:0]           kf33148;
wire [2:0]            jc7c37b;
wire [1:0]            uxded2;

`ifdef X4
reg yz29142;

`endif
reg [11:0]  jc48a15;
reg [11:0]  fn450ab;
reg         rv2855e;

`ifdef X1
reg         fa42af7;
reg         ou157ba;
reg [3:0]   wlabdd1;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
wire [D_WIDTH-1:0] wjf746d ;
wire           zzba36d ;
wire           ykd1b6f ;

`ifdef X4
wire        sw8db78 ;

`endif

`ifdef X1

`define RXTP_MOD pcie_x1_top_rxtp_x1

`endif

`ifdef X4

`define RXTP_MOD rxtp

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg dzd7b8a;
reg [11 : 0] eadb068;
reg [13 : 0] al5eaac;
reg go6756a;
reg [D_WIDTH - 1 : 0] irae41e;
reg go720f4;
reg an907a1;
reg ng83d0d;
reg ng3ab50;
reg th55947;
reg [2 : 0] ecaca3e;
reg [1 : 0] cz651f0;
reg nt28f85;
reg [2 : 0] vi47c2e;
reg [1 : 0] mg3e172;
reg [(`NUM_VC - 1) : 0] ykf0b91;
reg [(`NUM_VC - 1) : 0] oh85c89;
reg [(`NUM_VC - 1) : 0] mg2e44d;
reg [(24 * `NUM_VC) - 1 : 0] the3133;
reg [(24 * `NUM_VC) - 1 : 0] oh1899e;
reg [(24 * `NUM_VC) - 1 : 0] uic4cf4;
reg xl91341;
reg [2 : 0] ux33d0c;
reg pu89a0f;
reg [23 : 0] ww683da;
reg [D_WIDTH - 1 : 0] dz715da;
reg yz8aed6;
reg ps576b4;
reg anbb5a2;
reg hodad15;
reg [3 : 0] ld40e61;
reg qv730f;
reg rgee2bb;
reg [`NUM_VC - 1 : 0] cmc1a07;
reg [(`NUM_VC * 3) - 1 : 0] wld039;
reg vvd8340;
reg [2 : 0] ri20490;
reg zzaab28;
reg [`NUM_VC - 1 : 0] ep3987d;
reg qgf5565;
reg [11 : 0] mga9deb;
reg [11 : 0] jcda34f;
reg [11 : 0] wy2e8c1;
reg [2 : 0] iped981;
reg [19 : 0] nrc7627;
reg [2 : 0] lq69e80;
reg [1 : 0] of7a017;
reg [11 : 0] cmc4fce;
reg [11 : 0] xl27e71;
reg xy3f38f;
reg [D_WIDTH - 1 : 0] qgce3df;
reg jp71ef9;
reg yz8f7cf;
reg [2047:0] ux1852e;
wire [52:0] xjc2975;

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`define RXTP_MOD pcie_x1_top_rxtp_x1

`endif

`ifdef X4

`define RXTP_MOD rxtp

`endif


`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

localparam do14bae = 53,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`define RXTP_MOD pcie_x1_top_rxtp_x1


`endif


`ifdef X4


`define RXTP_MOD rxtp


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif






`ifdef X4
            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         yz29142 <= 1'b0;      else         yz29142 <= sw2b9ba;   end

`endif







pcie_x1_top_pff6fd9 go46106 (      .sys_clk          ( sys_clk ),   .rst_n            ( rst_n ),   .nefb397     ( eadb068 ),      .ipd9cbb          ( vvd8340 ),   .ykce5dc           ( cmc1a07 ),   .su72ee1         ( wld039 ),      .phy_ltssm_state  ( ld40e61 ),   .phy_link_up      ( qv730f ),      .trnc_st          ( ep3987d ),      .os62849    ( os62849 ),   .do14249    ( do14249 ),   .mta124b     ( mta124b ),   .coac509    ( coac509 ),   .ng2573b        ( iped981 ),
      .uk2b9db         ( uk2b9db ),   .cm5ced9        ( cm5ced9 ),   .ene76c8    ( ene76c8 ),   .wy3b644    ( wy3b644 ),      .rxtp_nak         ( rxtp_nak ),   .ofd9108     ( ofd9108 ),      .dl_inactive      ( dl_inactive ),   .dl_init          ( dl_init ),   .dl_active        ( dl_active ),   .dl_up            ( dl_up ),      .rt45f0d       ( rt45f0d ),   .ls2f86f      ( ls2f86f ),   .jc7c37b      ( jc7c37b ),   .xwe1bda      ( xwe1bda ),   .uxded2      ( uxded2 ),      .vcneg_pend       ( vcneg_pend )   );







`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         fa42af7 <= 1'b0;         ou157ba <= 1'b0;      end      else begin         fa42af7 <= tdmux_dllp_st;         ou157ba <= fa42af7;      end   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jc48a15 <= 12'd0;      fn450ab  <= 12'd0;      rv2855e   <= 1'b0;   end   else begin


`ifdef X1
         if (fa42af7 && tdmux_val)            wlabdd1[3:0] <= tdmux_data[3:0];         if (ou157ba && tdmux_val)            jc48a15 <= {wlabdd1[3:0], tdmux_data[15:8]};


`endif



`ifdef X4
         if (rvaa29e && tdmux_val)            jc48a15 <= tdmux_data[35:24];


`endif

      fn450ab   <= jcda34f;      rv2855e    <= ~(xl27e71 == cmc4fce);      tx_dllp_pend <= xy3f38f;   end
end

pcie_x1_top_dm73f1d #(   .FADDR           ( FADDR ),   .D_WIDTH         ( D_WIDTH ))   ng8cf19 (      .sys_clk         ( sys_clk ),   .rst_n           ( rst_n ),      .db13b67      ( go6756a ),   .tlpgen_data     ( irae41e ),   .tlpgen_st       ( go720f4 ),   .tlpgen_end      ( an907a1 ),   .tlpgen_nlfy     ( ng83d0d ),   .tlpgen_rdy_ack  ( ng3ab50 ),


`ifdef X4
      .sw2b9ba  ( sw2b9ba ),      .uk3e9a1  ( uk3e9a1 ),


`endif

   .pu4305     ( mga9deb ),   .qi2182a        ( qi2182a ),   .rvc150       ( rvc150 ),   .mr60a86      ( mr60a86 ),   .yz80860        ( dl_inactive ),   .dll_pause_cnt   ( dll_pause_cnt ),   .phy_l0          ( rgee2bb ),   .max_pl_size     ( ri20490 ),      .txtp_rdy        ( txtp_rdy ),   .hofb3a9  ( ),   .txtp_tdata      ( txtp_tdata ),   .al5e1c9   ( txtp_erly_tval ),   .txtp_st         ( txtp_st ),   .txtp_end        ( txtp_end ),   .txtp_edb        ( txtp_edb ),


`ifdef X4
      .ne79b37    ( ne79b37 ),      .jpcd9bb    ( jpcd9bb ),


`endif

   .tx_rbuf_empty   ( tx_rbuf_empty ),   .qgf010c  ( qgf010c ),   .uv5e021     ( uv5e021 ),   .ksa936e  ( ksa936e ),   .mrd9d4b  ( mrd9d4b )   );

pcie_x1_top_fne3c2e #(   .FADDR                ( FADDR ),   .D_WIDTH              ( D_WIDTH ))   yk7834f (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .zkc5737          (al5eaac),   .phy_link_up              (qv730f),   .phy_skpq_val             (qgf5565),


`ifdef X4
      .sw2b9ba              (yz29142) ,      .qgd1a4f               (qgd1a4f),      .phy_cfgln_sum            (phy_cfgln_sum),      .phy_skpq_nclks           (phy_skpq_nclks),


`endif

      .bn37447           (zzaab28),      .ntba23f               (th55947),   .god11ff                 (ecaca3e),   .ie88ff9                 (cz651f0),   .vi47fc9               (nt28f85),   .ng3fe4a                 (vi47c2e),   .cmff252                 (mg3e172),
   .zxf9291            (ykf0b91),   .wjc948e           (oh85c89),   .bl4a474          (mg2e44d),   .su72ee1                 (wld039),

`ifdef EN_VC0
   .rv91d3a                   (the3133[23:0]),   .rv8e9d6                  (oh1899e[23:0]),   .nr74eb6                 (uic4cf4[23:0]),

`endif



`ifdef EN_VC1
   .doa75b7                   (the3133[47:24]),   .pu3adba                  (oh1899e[47:24]),   .uvd6dd2                 (uic4cf4[47:24]),

`endif



`ifdef EN_VC2
   .qib6e95                   (the3133[71:48]),   .xyb74a8                  (oh1899e[71:48]),   .hdba543                 (uic4cf4[71:48]),

`endif



`ifdef EN_VC3
   .nrd2a1f                   (the3133[95:72]),   .oh950ff                  (oh1899e[95:72]),   .vka87fd                 (uic4cf4[95:72]),

`endif



`ifdef EN_VC4
   .kq43feb                   (the3133[119:96]),   .co1ff58                  (oh1899e[119:96]),   .goffac1                 (uic4cf4[119:96]),

`endif



`ifdef EN_VC5
   .alfd608                   (the3133[143:120]),   .dmeb044                  (oh1899e[143:120]),   .tu58222                 (uic4cf4[143:120]),

`endif



`ifdef EN_VC6
   .mec1113                   (the3133[167:144]),   .ux8898                  (oh1899e[167:144]),   .of444c5                 (uic4cf4[167:144]),

`endif



`ifdef EN_VC7
   .lf2262c                   (the3133[191:168]),   .db13166                  (oh1899e[191:168]),   .gq98b36                 (uic4cf4[191:168]),

`endif

      .jcc59b0                    (xl91341),   .vi66c1c              (ux33d0c),   .an2cd83                (pu89a0f),   .tx_vsd_data              (ww683da),      .rxtp_nak                 (rxtp_nak),   .ofd9108             (ofd9108),   .rxtp_ack                 (rxtp_ack),   .rxtp_seq                 (jcda34f),      .rt45f0d               (rt45f0d),   .ls2f86f              (ls2f86f),   .jc7c37b              (lq69e80),   .xwe1bda              (xwe1bda),   .uxded2              (of7a017),   .vcneg_pend               (vcneg_pend),      .txtp_tdata               (txtp_tdata),


`ifdef X1
      .txtp_erly_tval        (txtp_erly_tval),


`endif
   .txtp_st                  (txtp_st),   .txtp_end                 (txtp_end),   .txtp_edb                 (txtp_edb),


`ifdef X4
      .ne79b37             (ne79b37),      .jpcd9bb             (jpcd9bb),


`endif

         .dll_pause_cnt            (dll_pause_cnt),      .tdmux_data               (tdmux_data),   .tdmux_val                (tdmux_val),   .tdmux_st                 (tdmux_st),   .tdmux_end                (tdmux_end),   .tdmux_edb                (tdmux_edb),   .tdmux_skip               (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st         (tdmux_dllp_st),      .tdmux_dllp_end        (tdmux_dllp_end),


`endif



`ifdef X4
      .ng96a8a            (ng96a8a),      .rvaa29e            (rvaa29e),


`endif

      .epa437e              (epa437e),   .aa21bf5             (aa21bf5),   .sjdfa8            (sjdfa8),   .hq111f2               (hq111f2),   .qi88f93               (qi88f93),      .uk2b9db                 (uk2b9db),   .cm5ced9                (cm5ced9),   .ene76c8            (ene76c8),   .wy3b644            (wy3b644),      .mef516e             (mef516e)   );

pcie_x1_top_psf187b ksa393e (      .sys_clk        ( sys_clk ),   .rst_n          ( rst_n ),   


`ifdef X1
      .ux2383c ( ux2383c ),      .dfrm_dllp_st   ( dfrm_dllp_st ),


`endif



`ifdef X4
      .ux2383c  ( dfrm_ddata ),      .goe5a3f       ( goe5a3f ),


`endif

   .uv5e021    ( wy2e8c1 ),   .qgf010c ( qgf010c ),   .yz80860       ( dl_inactive ),      .ayf58a1    ( ayf58a1 ),   .coac509  ( coac509 ),   .os62849  ( os62849 ),   .do14249  ( do14249 ),   .mta124b   ( mta124b ),   .rxdp_vsd_data  ( rxdp_vsd_data ),   .rxdp_pmd_type  ( rxdp_pmd_type ),   .rxdp_dllp_val  ( rxdp_dllp_val ),   .pu4305    ( pu4305 ),   .qi2182a       ( qi2182a ),   .rvc150      ( rvc150 ),   .mr60a86     ( mr60a86 ),   .cb2c67b  ( cb2c67b ),   .ie5434     ( ie5434 )   );
assign {ng2573b, kf33148} = ayf58a1;



`ifdef X4



`endif




`ifdef X1



`define RXTP_MOD pcie_x1_top_rxtp_x1



`endif



`ifdef X4



`define RXTP_MOD rxtp



`endif

`RXTP_MOD lf9bc65 (      .sys_clk        ( sys_clk ),   .rst_n          ( rst_n ),      .tlp_debug      ( tlp_debug ),   .phy_l0         ( phy_l0 ),   .dl_up          ( dl_up[0] ),   .dfrm_tdata     ( dfrm_tdata ),   .dfrm_tval      ( dfrm_tval ),   .dfrm_st        ( dfrm_st ),   .dfrm_end       ( dfrm_end ),   .dfrm_edb       ( dfrm_edb ),


`ifdef X4
      .dfrm_dwen   ( co3b27d ),      .dfrm_seq    ( yxd93e9 ),      .dfrm_lcrc   ( czc9f4d ),
      .phy_x4_val  ( qgd1a4f ),      .phy_x2_val  ( ym15727 ),      .rxtp_dwen   ( sw8db78 ),


`endif

      .rxtp_data      ( wjf746d ),   .rxtp_st        ( zzba36d ),   .rxtp_end       ( ykd1b6f ),   .rxtp_seq       ( rxtp_seq ),   .rxtp_bad_tlp   ( rxtp_bad_tlp ),   .rxtp_ack       ( rxtp_ack ),   .rxtp_nak       ( rxtp_nak ),   .rxtp_duptlp    ( ofd9108 )   );
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rx_tlp_rcvd  <= 1'b0 ;      rxtp_data <= {D_WIDTH{1'd0}} ;      rxtp_st   <= 1'b0 ;      rxtp_end  <= 1'b0 ;


`ifdef X4
         co347bf <= 1'b0 ;


`endif
   end   else begin      rx_tlp_rcvd  <= ps576b4 ;      rxtp_data <= qgce3df ;      rxtp_st   <= jp71ef9 ;      rxtp_end  <= yz8f7cf ;


`ifdef X4
         co347bf <= sw8db78 ;


`endif
   end
end
always@* begin dzd7b8a<=xjc2975[0];eadb068<={nefb397>>1,xjc2975[1]};al5eaac<={zkc5737>>1,xjc2975[2]};go6756a<=xjc2975[3];irae41e<={tlpgen_data>>1,xjc2975[4]};go720f4<=xjc2975[5];an907a1<=xjc2975[6];ng83d0d<=xjc2975[7];ng3ab50<=xjc2975[8];th55947<=xjc2975[9];ecaca3e<={god11ff>>1,xjc2975[10]};cz651f0<={ie88ff9>>1,xjc2975[11]};nt28f85<=xjc2975[12];vi47c2e<={ng3fe4a>>1,xjc2975[13]};mg3e172<={cmff252>>1,xjc2975[14]};ykf0b91<={zxf9291>>1,xjc2975[15]};oh85c89<={wjc948e>>1,xjc2975[16]};mg2e44d<={bl4a474>>1,xjc2975[17]};the3133<={xw574e2>>1,xjc2975[18]};oh1899e<={ntba712>>1,xjc2975[19]};uic4cf4<={ipd3897>>1,xjc2975[20]};xl91341<=xjc2975[21];ux33d0c<={tx_pmtype>>1,xjc2975[22]};pu89a0f<=xjc2975[23];ww683da<={tx_vsd_data>>1,xjc2975[24]};dz715da<={dfrm_tdata>>1,xjc2975[25]};yz8aed6<=xjc2975[26];ps576b4<=xjc2975[27];anbb5a2<=xjc2975[28];hodad15<=xjc2975[29];ld40e61<={phy_ltssm_state>>1,xjc2975[30]};qv730f<=xjc2975[31];rgee2bb<=xjc2975[32];cmc1a07<={ykce5dc>>1,xjc2975[33]};wld039<={su72ee1>>1,xjc2975[34]};vvd8340<=xjc2975[35];ri20490<={max_pl_size>>1,xjc2975[36]};zzaab28<=xjc2975[37];ep3987d<={trnc_st>>1,xjc2975[38]};qgf5565<=xjc2975[39];mga9deb<={pu4305>>1,xjc2975[40]};jcda34f<={rxtp_seq>>1,xjc2975[41]};wy2e8c1<={uv5e021>>1,xjc2975[42]};iped981<={ng2573b>>1,xjc2975[43]};nrc7627<={kf33148>>1,xjc2975[44]};lq69e80<={jc7c37b>>1,xjc2975[45]};of7a017<={uxded2>>1,xjc2975[46]};cmc4fce<={jc48a15>>1,xjc2975[47]};xl27e71<={fn450ab>>1,xjc2975[48]};xy3f38f<=xjc2975[49];qgce3df<={wjf746d>>1,xjc2975[50]};jp71ef9<=xjc2975[51];yz8f7cf<=xjc2975[52];end
always@* begin ux1852e[2047]<=nefb397[0];ux1852e[2046]<=zkc5737[0];ux1852e[2044]<=db13b67;ux1852e[2040]<=tlpgen_data[0];ux1852e[2032]<=tlpgen_st;ux1852e[2018]<=uv5e021[0];ux1852e[2017]<=tlpgen_end;ux1852e[1989]<=ng2573b[0];ux1852e[1987]<=tlpgen_nlfy;ux1852e[1931]<=kf33148[0];ux1852e[1927]<=tlpgen_rdy_ack;ux1852e[1865]<=wjc948e[0];ux1852e[1859]<=ykce5dc[0];ux1852e[1815]<=jc7c37b[0];ux1852e[1806]<=ntba23f;ux1852e[1682]<=bl4a474[0];ux1852e[1671]<=su72ee1[0];ux1852e[1582]<=uxded2[0];ux1852e[1565]<=god11ff[0];ux1852e[1488]<=phy_link_up;ux1852e[1485]<=zzba36d;ux1852e[1326]<=dfrm_tval;ux1852e[1317]<=xw574e2[0];ux1852e[1295]<=ipd9cbb;ux1852e[1210]<=dfrm_end;ux1852e[1189]<=an2cd83;ux1852e[1172]<=ipd3897[0];ux1852e[1116]<=jc48a15[0];ux1852e[1087]<=bn37447;ux1852e[1082]<=ie88ff9[0];ux1852e[1023]<=tlp_debug;ux1852e[1009]<=rxtp_seq[0];ux1852e[932]<=zxf9291[0];ux1852e[929]<=phy_l0;ux1852e[922]<=ykd1b6f;ux1852e[744]<=phy_ltssm_state[0];ux1852e[742]<=wjf746d[0];ux1852e[663]<=dfrm_tdata[0];ux1852e[605]<=dfrm_st;ux1852e[594]<=tx_pmtype[0];ux1852e[586]<=ntba712[0];ux1852e[543]<=max_pl_size[0];ux1852e[504]<=pu4305[0];ux1852e[466]<=cmff252[0];ux1852e[372]<=dfrm_edb;ux1852e[371]<=rv2855e;ux1852e[331]<=tx_vsd_data[0];ux1852e[297]<=jcc59b0;ux1852e[252]<=phy_skpq_val;ux1852e[233]<=ng3fe4a[0];ux1852e[185]<=fn450ab[0];ux1852e[126]<=trnc_st[0];ux1852e[116]<=vi47fc9;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule




























































`timescale 1 ns / 100 ps
module pcie_x1_top_ir33b9d #(
   parameter FADDR    = 6,   parameter D_WIDTH  = 64 )
   (
   
   input wire                sys_clk ,         
   input wire                rst_n ,           

   
   
   input wire [31:0]         yz1d92d ,
   input wire [31:0]         zxec96c ,
   input wire [31:0]         pf64b66 ,
   input wire [31:0]         INIT_REG_010 ,
   input wire [31:0]         INIT_REG_014 ,
   input wire [31:0]         INIT_REG_018 ,
   input wire [31:0]         INIT_REG_01C ,
   input wire [31:0]         INIT_REG_020 ,
   input wire [31:0]         INIT_REG_024 ,
   input wire [31:0]         zm964ea ,
   input wire [31:0]         bab2752 ,
   input wire [31:0]         ls93a93 ,
   input wire [31:0]         wy9d49b ,
   input wire                load_id ,            
   
   input wire [31:0]         bl40242 ,
   input wire [31:0]         je1216 ,
   input wire [9:0]          xl90b2 ,  
   input wire [9:0]          ho48596 ,  
   input wire [9:0]          jc42cb2 ,  
   input wire [9:0]          xl16592 ,  
   input wire [9:0]          lsb2c96 ,  
   input wire [9:0]          je964b2 ,  
   input wire [9:0]          dob2592 ,  
   input wire [9:0]          aa92c93 ,  

   
   input wire [31:0]         ng96499 ,
   
   input wire [31:0]         bl40756 ,
   input wire [31:0]         lf3ab6 ,
   input wire [31:0]         mt1d5b6 ,
   input wire [31:0]         iceadb5 ,
   `ifdef GEN2
      input wire [31:0]      kq56da9 ,
   `endif
   
   input wire [31:0]         czf88d2 ,
   input wire [31:0]         wwc4695 ,

   
   `ifdef CFG_VCC
      input wire [31:0]      ho57539 ,
   `endif

   input wire [(8*`NUM_VC)-1:0]    ykf5d6d,      
   input wire [(8*`NUM_VC)-1:0]    ohaeb69,     
   input wire [(12*`NUM_VC)-1:0]   puada6d,      
   input wire [(12*`NUM_VC)-1:0]   kq6d36a,     
   input wire [6:0]                dm4da8a,  
   input wire [10:0]               go6d453,  
   input wire [6:0]                wj6a299, 
   input wire [10:0]               qt514cc, 
   input wire [11:0]               wwcb0de,    
   input wire                      tlp_debug ,      

   input wire                      inta_n,          
   input wire [7:0]                msi,             
   input wire [2:0]                msi_tc,          
   input wire [`NUM_VC-1:0]        tx_req,          
   input wire [(`NUM_VC*D_WIDTH) -1:0]  tx_data,         
   input wire [`NUM_VC-1:0]        tx_st,           
   input wire [`NUM_VC-1:0]        tx_end,          
   input wire [`NUM_VC-1:0]        tx_nlfy,         
   `ifdef X4
      input wire [`NUM_VC-1:0]     db9b255,         
      input wire                   co347bf ,      
      input wire                   ie88a08,
      input wire                   xj45041,
   `endif
   
   input wire                      phy_link_up,
   input wire                      qtf80af ,
   input wire                      byc057c ,
   input wire [2:0]                kf2be2 ,
   input wire [2:0]                phy_cfgln_sum,   
   input wire                      dfrm_perr ,
   input wire [FADDR:0]            dll_pause_cnt,   
   input wire                      txtp_rdy ,       
   input wire [D_WIDTH-1:0]        rxtp_data ,      
   input wire                      rxtp_st ,        
   input wire                      rxtp_end ,       
   input wire                      rxtp_bad_tlp,    
   input wire                      cb2c67b,   
   input wire                      ie5434,      
   input wire                      mrd9d4b,  
   input wire                      ksa936e , 
   input wire                      os62849,   
   input wire                      do14249,   
   input wire                      mta124b,    
   input wire [1:0]                coac509,   
   input wire [2:0]                vvcd2fd,   
   input wire [19:0]               rg697ee,   
   input wire [`NUM_VC-1:0]        dl_up ,
   input wire                      dl_active,
   input wire                      dl_inactive,
   input wire [`NUM_VC -1:0]       vcneg_pend ,     
   input wire                      phy_l0_l0s,      
   input wire                      hq111f2,
   input wire                      qi88f93,
   input wire [`NUM_VC-1:0]        epa437e,
   input wire [`NUM_VC-1:0]        aa21bf5,
   input wire [`NUM_VC-1:0]        sjdfa8,
   input wire [`NUM_VC-1:0]        kf39400,   
   input wire [`NUM_VC-1:0]        faca004,   
   input wire [`NUM_VC-1:0]        zx50023,  
   input wire [`NUM_VC-1:0]        gd8011f,  
   input wire [`NUM_VC-1:0]        ux23f0a,    
   input wire [`NUM_VC-1:0]        ym1f855,    
   input wire [`NUM_VC-1:0]        nph_processed,   
   input wire [`NUM_VC-1:0]        npd_processed,   

   input wire [(8*`NUM_VC)-1:0]    oua9cc7,          
   input wire [(8*`NUM_VC)-1:0]    en4e638,         

   `ifdef ECRC
      `ifdef AER
         output wire               ecrc_gen_enb ,
         output wire               ecrc_chk_enb ,
      `else
         input wire                ecrc_gen_enb ,
         input wire                ecrc_chk_enb ,
      `endif
   `endif

   
   `ifdef AER
      input wire [127:0]           err_tlp_header , 
                                                    
   `endif
   input wire                      cmpln_tout ,     
   input wire                      cmpltr_abort_np ,
   input wire                      cmpltr_abort_p , 
   input wire                      unexp_cmpln ,    
   input wire                      ur_np_ext ,      
   input wire                      ur_p_ext ,       
   input wire                      np_req_pend ,    
   input wire                      pme_status ,     
   input wire                      term_all_cfg,
   input wire                      ym31141,
   `ifdef GEN2
      input wire                   flr_rdy_in ,     
   `endif

   
   input wire [11:0]               ADR_I ,    
   input wire [31:0]               DAT_I ,    
   input wire                      WE_I ,     
   input wire                      STB_I ,    

   
   output wire [31:0]              RDAT_O ,   
   output wire                     ACK_O ,    
   output wire                     db13b67 ,
   output wire [D_WIDTH-1:0]       tlpgen_data ,
   output wire                     tlpgen_st ,
   output wire                     tlpgen_end ,
   output wire                     tlpgen_nlfy ,
   output wire                     tlpgen_rdy_ack ,
   output wire                     bn37447 ,
   output wire [`NUM_VC-1:0]       tx_rdy,
   output wire [(`NUM_VC*9)-1:0]   tx_ca_ph,
   output wire [(`NUM_VC*13)-1:0]  tx_ca_pd,
   output wire [(`NUM_VC*9)-1:0]   kd70464,
   output wire [(`NUM_VC*13)-1:0]  aa82324,
   output wire [(`NUM_VC*9)-1:0]   tx_ca_cplh,
   output wire [(`NUM_VC*13)-1:0]  xy8c90a,
   output reg                      gqbcc7e,
   output reg                      fne63f1,
   output wire [(`NUM_VC*D_WIDTH)-1:0]  rx_data ,
   output wire [`NUM_VC-1:0]       rx_st ,
   output wire [`NUM_VC-1:0]       rx_end ,
   `ifdef ECRC
      output wire [`NUM_VC-1:0]    rx_ecrc_err ,
   `endif
   output wire [`NUM_VC-1:0]       rx_us_req ,
   output wire [`NUM_VC-1:0]       rx_malf_tlp ,
   output wire [6:0]               rx_bar_hit ,      
   `ifdef X4
      output wire                  sw2b9ba ,
      output wire                  uk3e9a1 ,
      output wire                  tx_val,
      output wire [`NUM_VC-1:0]    zkfb019 ,
   `endif
   
   output wire [7:0]               bus_num ,         
   output wire [4:0]               dev_num ,         
   output wire [2:0]               func_num ,        
   output wire [1:0]               pm_power_state ,  
   output wire                     pme_en ,          
   output wire [2:0]               mm_enable ,       
   output wire                     msi_enable ,      
   output wire [31:0]              mes_laddr ,       
   output wire [31:0]              mes_uaddr ,       
   output wire [15:0]              mes_data ,        
   output wire [5:0]               cmd_reg_out ,     
   output wire [14:0]              dev_cntl_out ,    
   output wire [7:0]               lnk_cntl_out ,    
   output wire                     ftl_err_out ,     
   output wire                     nftl_err_out ,    
   output wire                     cor_err_out ,     
   `ifdef GEN2
      output wire  [4:0]           dev_cntl_2_out ,  
      output reg                   initiate_flr ,    
   `endif

   output wire [2:0]               max_pl_size ,     
   output wire                     ext_sync ,        
   output wire                     xjd7c45 ,    
   output wire                     qvbe22f ,     
   output wire [2:0]               cfgcs_losel ,     

   output wire [`NUM_VC -1:0]      swa09d ,
   output wire [(`NUM_VC*3)-1:0]   su72ee1,
   output wire [(`NUM_VC*8)-1:0]   aa82cb0,

   output wire [`NUM_VC -1:0]      trnc_st,
   output wire                     ntba23f,
   output wire [2:0]               god11ff,
   output wire [1:0]               ie88ff9,
   output wire                     vi47fc9,
   output wire [2:0]               ng3fe4a,
   output wire [1:0]               cmff252,
   output wire [`NUM_VC -1:0]      zxf9291,
   output wire [`NUM_VC -1:0]      wjc948e,
   output wire [`NUM_VC -1:0]      bl4a474,

   output wire [(24*`NUM_VC)-1:0]  xw574e2,
   output wire [(24*`NUM_VC)-1:0]  ntba712,
   output wire [(24*`NUM_VC)-1:0]  ipd3897
   ) ;
wire [D_WIDTH -1:0]         tlpdec_data ;
wire [2:0]                  tlpdec_tc ;
wire [(`NUM_VC*8)-1:0]      cfgec_tvmap ;
wire [2:0]                  fad0698 ;
wire [2:0]                  gbd30d8 ;
wire [2:0]                  pu1b10d ;
wire [2:0]                  aa21ab0 ;
wire [2:0]                  cm56025 ;
wire [2:0]                  ri4a35 ;
wire [2:0]                  yk46ade ;
wire [2:0]                  yx5bc14 ;
wire [2:0]                  cfgec_vcasel ;
wire [D_WIDTH -1:0]         txintf_data;
wire [D_WIDTH -1:0]         cfg_rmux_data ;
wire [31:0]                 ofd37c2 ;
wire [31:0]                 tj9be14 ;
wire [31:0]                 nedf0a7 ;
wire [31:0]                 off853a ;
wire [31:0]                 nrc29d4 ;
wire [31:0]                 ba14ea6 ;
wire [31:0]                 ria7532 ;
wire [31:0]                 xy3a992 ;
wire [31:0]                 ead4c92 ;
wire [31:0]                 oua6490 ;
wire [31:0]                 bn32480 ;
wire [31:0]                 ks92407 ;
wire [31:0]                 ks92038 ;
wire [31:0]                 mt901c0 ;
wire [31:0]                 tlpdec_addr_l32 ;
wire [31:0]                 tlpdec_addr_h32 ;
wire [D_WIDTH-1:0]          go67056 ;
wire [6:0]                  bar_hit ;
wire                        sw98e2b ;
wire                        dzc7158 ;
wire [15:0]                 byebf11 ;
wire [(`NUM_VC*D_WIDTH)-1:0] ba86007 ;
wire [`NUM_VC -1:0]         ng3003b ;
wire [`NUM_VC -1:0]         an801da ;

`ifdef ECRC
wire [`NUM_VC -1:0]      aaed4 ;

`endif
wire [`NUM_VC -1:0]         gd76a1 ;
wire [`NUM_VC -1:0]         aa3b50d ;
wire                        tlpdec_cfgrd ;
wire                        cfg_rmux_rd;
wire                        sja1a59;
wire                        gdd2cc;
wire                        cfg_rmux_end;
wire                        ip4b323;
wire  [D_WIDTH-1:0]         shcc8e8;
wire                        int_msg_rd;
wire                        err_msg_rd;
wire                        int_msg_req;
wire  [D_WIDTH-1:0]         int_msg_data;
wire                        int_msg_ae;
wire                        int_pending;
wire                        int_disable ;
wire                        err_msg_req;
wire  [D_WIDTH-1:0]         err_msg_data;
wire                        err_msg_ae;
reg                         arb_enable;
reg                         arb_enable2;
reg [1:0]                   ou10320;
reg                         cfg_rmux_req;
reg                         jrc80f;
reg                         fn6407f     ;
reg                         je203ff   ;
reg                         pu1ffb     ;
reg                         ukffdb   ;
wire                        ng3aaf5 ;
wire                        dmd57aa ;
wire                        f_nf_emsg_sent;
wire                        rchk_credit_p;
wire                        rchk_credit_cpl;
wire                        tlpdec_rvcd_sts_ur;
wire                        tlpdec_rvcd_sts_ca;
wire                        zmb181 ;
wire                        by58c0b ;
wire                        txintf_end ;
wire                        txintf_nlfy ;
wire    [`NUM_VC-1:0]       vc_rcvd;
wire                        ph_rcvd;
wire                        pd_rcvd;
wire                        nph_rcvd;
wire                        npd_rcvd;
wire   [8:0]                credits_rcvd;
wire                        malf_pkt_ph;
wire                        malf_pkt_pd;
wire                        malf_pkt_nph;
wire                        malf_pkt_npd;
wire                        fc_overflow;

`ifdef X4
wire                     tlp_erly_st ;
wire [`NUM_VC -1:0]      hq44a3 ;
wire                     hd2251a;
wire                     wl128d6;
wire                     jr946b5;
wire                     gqa35af;
reg                      mg1ad78 ;

`endif
localparam ARB_IDLE     = 2'b00;
localparam rvb5e0d = 2'b01;
localparam lfaf06f = 2'b10;

`ifdef GEN2
reg [2:0] ea7837e ;
reg       ir17e02 ;
reg       sjdf81 ;
reg       drop_resp ;
wire      ld7e06d ;
localparam qgf036f = 3'd0 ;
localparam zz81b78   = 3'd1 ;
localparam yzdbc7   = 3'd2 ;
localparam su6de3d   = 3'd3 ;
localparam kd6f1e8   = 3'd4 ;
localparam ww78f44   = 3'd5 ;
localparam dzc7a21      = 3'd6 ;
localparam bn3d10e      = 3'd7 ;

`endif

`ifndef CFG_REG
wire  cfg_hit;
wire  s2e_cnt_err;

`endif

`ifdef X4

`define INTMSG_DEF int_msg

`define TXINTF_DEF txintf

`define TLPGEN_DEF tlpgen

`define TLPDEC_DEF tlpdec

`define RXINTF_DEF rxintf

`endif

`ifdef X1

`define INTMSG_DEF pcie_x1_top_int_msg_x1

`define TXINTF_DEF pcie_x1_top_txintf_x1

`define TLPGEN_DEF pcie_x1_top_tlpgen_x1

`define TLPDEC_DEF pcie_x1_top_tlpdec_x1

`define RXINTF_DEF pcie_x1_top_rxintf_x1

`endif

`ifdef X4

`endif

`ifdef GEN2

`else

`endif

`ifdef CFG_REG

`ifdef ECRC

`endif

`ifdef X4

`endif

`else

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`ifdef X4

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`endif
reg ie21da4 ;
reg doed20 ;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif
wire dm76902  = txintf_end & ~ie21da4 ;
wire do204ad = txintf_nlfy & ~doed20 ;

`ifdef X4
wire qv95aed = gqa35af & ~mg1ad78;

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef CFG_REG

`ifdef EN_BAR0

`endif

`ifdef EN_BAR1

`endif

`ifdef EN_BAR2

`endif

`ifdef EN_BAR3

`endif

`ifdef EN_BAR4

`endif

`ifdef EN_BAR5

`endif

`ifdef EN_ER_BAR

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`else

`endif

`ifdef ECRC

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef VC1

`else

`ifdef X4

`endif

`ifdef ECRC

`endif

`endif

`ifdef X1
reg ba1bb5f ;
reg nr5f7af ;
reg dm6c7d4 ;
reg xw63ea3 ;

`endif

`ifdef X4

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef CFG_REG

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef CFG_VCC

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef GEN2

`endif

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef EN_VC0

`ifdef CFG_VCC

`else

`endif

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`else

`endif

`ifdef GEN2

`ifdef X4

`endif

`ifdef X1

`endif

`endif

`ifdef DEBUG
wire        wy1f51b, gofa8d8, ykd46c0, wya3601, ls1b008, zxd8042, jcc0217, vk10ba;
wire        oh85d2,  ne42e94,  cb174a2,  bnba514,  rtd28a7,  vx9453f,  zma29ff,  ng14ffb;
wire [D_WIDTH-1:0] pu3fed3, suff69a, vifb4d1, tuda68b, kdd345a, mt9a2d4, ead16a4, vx8b521;
wire        xj5a90f,   sud487f,   yza43f8,   ec21fc5,   wyfe28,   al7f140,   ipf8a05,   tuc502d;
wire        zz2816a,  th40b57,  aa5abf,  hd2d5f9,  en6afcf,  fa57e7d,  dbbf3eb,  hbf9f5f;
wire        lqcfaff, os7d7fa, lqebfd0, ld5fe83, ayff41f, gofa0f9, dmd07c9, ls83e4b;
wire [D_WIDTH-1:0] rtf92d0, kdc9686, ip4b434, xj5a1a5, psd0d2e, zm86972, sw34b92, tja5c91;
wire        mg2e48e,   me72470,   uk92381,   ph91c08,   bn8e046,   sh70237,   ph811bc,   sj8de6;
wire        ww46f35,  xl379a8,  aabcd46,  jpe6a31,  pu3518f,  pua8c7a,  kq463d2,  gq31e91;

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4
wire     an8f489, kd7a44d, ldd226d, vx9136e, zm89b77, by4dbbb, qg6dddb, vv6eed8;
wire     kq776c7, gdbb639, cmdb1cd, fnd8e68, dzc7346, ep39a37, pfcd1bd, ui68dee;

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`endif  //End of DEBUG
reg [31 : 0] pu250cf;
reg [31 : 0] nt2867b;
reg [31 : 0] yk433df;
reg [31 : 0] rv19ef9;
reg [31 : 0] tucf7ce;
reg [31 : 0] hb7be73;
reg [31 : 0] hodf39e;
reg [31 : 0] thf9cf2;
reg [31 : 0] cmce797;
reg [31 : 0] zk73cb9;
reg [31 : 0] tj9e5ca;
reg [31 : 0] kdf2e56;
reg [31 : 0] aa972b4;
reg ri14e35;
reg [31 : 0] lsb89df;
reg [31 : 0] qgc4efb;
reg [9 : 0] fp277d9;
reg [9 : 0] ec3bece;
reg [9 : 0] jcdf670;
reg [9 : 0] hofb382;
reg [9 : 0] mrd9c13;
reg [9 : 0] eace09c;
reg [9 : 0] qt704e1;
reg [9 : 0] wy8270c;
reg [31 : 0] bn13861;
reg [31 : 0] je89e72;
reg [31 : 0] fn4f393;
reg [31 : 0] xw79c9f;
reg [31 : 0] icce4fb;
reg [31 : 0] ec8d681;
reg [31 : 0] nr6b408;
reg [(8 * `NUM_VC) - 1 : 0] fn4523e;
reg [(8 * `NUM_VC) - 1 : 0] qv291f6;
reg [(12 * `NUM_VC) - 1 : 0] lq47dab;
reg [(12 * `NUM_VC) - 1 : 0] ks3ed5a;
reg [6 : 0] fpb5686;
reg [10 : 0] ohab436;
reg [6 : 0] fn5a1b4;
reg [10 : 0] byd0da6;
reg [11 : 0] fp8bc6d;
reg dzd7b8a;
reg ep1833c;
reg [7 : 0] ayde440;
reg [2 : 0] qi3bc88;
reg [`NUM_VC - 1 : 0] ead4800;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] qva4000;
reg [`NUM_VC - 1 : 0] goef79e;
reg [`NUM_VC - 1 : 0] th7bcf0;
reg [`NUM_VC - 1 : 0] ykde786;
reg qv730f;
reg ir1d90f;
reg blec87c;
reg [2 : 0] fn643e6;
reg [2 : 0] gb5462c;
reg ie21f37;
reg [FADDR : 0] ks824e7;
reg ym158;
reg [D_WIDTH - 1 : 0] lq7cb2d;
reg qge596b;
reg qv2cb58;
reg vi7cdc0;
reg vve6e03;
reg jr3701f;
reg xyb80ff;
reg fac07fa;
reg ofcc3ed;
reg pf61f6c;
reg gqfb66;
reg [1 : 0] ay7db30;
reg [2 : 0] pu1bbde;
reg [19 : 0] jpddef3;
reg [`NUM_VC - 1 : 0] lsbdc57;
reg cof9b8;
reg kddc813;
reg [`NUM_VC - 1 : 0] psd00bd;
reg xl32528;
reg xw63705;
reg tw1b82a;
reg [`NUM_VC - 1 : 0] ec92947;
reg [`NUM_VC - 1 : 0] vx94a39;
reg [`NUM_VC - 1 : 0] xla51ce;
reg [`NUM_VC - 1 : 0] cmcef9d;
reg [`NUM_VC - 1 : 0] ui77ce8;
reg [`NUM_VC - 1 : 0] epbe740;
reg [`NUM_VC - 1 : 0] pff3a05;
reg [`NUM_VC - 1 : 0] bl40b8d;
reg [`NUM_VC - 1 : 0] mg5c6f;
reg [`NUM_VC - 1 : 0] wy2e379;
reg [`NUM_VC - 1 : 0] rt71bc8;
reg [(8 * `NUM_VC) - 1 : 0] ps791cc;
reg [(8 * `NUM_VC) - 1 : 0] vvc8e62;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg zx4f511;
reg wlb1ee9;
reg tu6cba7;
reg sud447c;
reg [11 : 0] sh65d3a;
reg [31 : 0] ec2e9d4;
reg hb74ea1;
reg hqa750f;
reg [2 : 0] ir806c9;
reg [(`NUM_VC * 8) - 1 : 0] ri2086c;
reg [2 : 0] vk1b267;
reg [2 : 0] ald933a;
reg [2 : 0] shc99d5;
reg [2 : 0] ww4cead;
reg [2 : 0] cm67569;
reg [2 : 0] hq3ab48;
reg [2 : 0] hod5a42;
reg [2 : 0] ngad212;
reg [2 : 0] cz4e491;
reg [D_WIDTH - 1 : 0] lqf4a31;
reg [D_WIDTH - 1 : 0] hq9369c;
reg [31 : 0] ph9b4e2;
reg [31 : 0] dmda716;
reg [31 : 0] mrd38b2;
reg [31 : 0] fc9c595;
reg [31 : 0] gbe2cab;
reg [31 : 0] tj1655d;
reg [31 : 0] fcb2aee;
reg [31 : 0] oh95772;
reg [31 : 0] wlabb95;
reg [31 : 0] tu5dcad;
reg [31 : 0] jcee56a;
reg [31 : 0] os72b52;
reg [31 : 0] ir95a90;
reg [31 : 0] vkad484;
reg [31 : 0] ri3f7be;
reg [31 : 0] nefbdf3;
reg [D_WIDTH - 1 : 0] nt84714;
reg [6 : 0] ou2b124;
reg sj398bb;
reg wjcc5dd;
reg [15 : 0] zz38a98;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] ls35f51;
reg [`NUM_VC - 1 : 0] phafa8b;
reg [`NUM_VC - 1 : 0] os7d45f;
reg [`NUM_VC - 1 : 0] kqea2f8;
reg [`NUM_VC - 1 : 0] yx517c0;
reg vi6c485;
reg nr717f8;
reg gbf8176;
reg zkc0bb4;
reg wy5da3;
reg ym2ed19;
reg [D_WIDTH - 1 : 0] uxb464a;
reg hb4f34c;
reg ne79a67;
reg mrc9507;
reg [D_WIDTH - 1 : 0] yx541e6;
reg zza0f35;
reg kf79ae;
reg ir23067;
reg pfe6ba5;
reg [D_WIDTH - 1 : 0] ohae97b;
reg jp74bdd;
reg cobc9bf;
reg xwe4df9;
reg [1 : 0] rt7bbf2;
reg ldddf96;
reg wwefcb6;
reg vv7e5b1;
reg uvf2d8f;
reg do96c7c;
reg ksb63e3;
reg rv3fd2;
reg gq1fe96;
reg fa7c66c;
reg the3362;
reg ph19b16;
reg fncd8b6;
reg xw6c5b7;
reg ay62dbb;
reg xl16dd9;
reg nt28c5f;
reg ui462fe;
reg [`NUM_VC - 1 : 0] irbb3c3;
reg uvd9e1d;
reg rgcf0ec;
reg os78763;
reg mrc3b18;
reg [8 : 0] ux1d8c4;
reg thec624;
reg vi63127;
reg ep1893a;
reg suc49d4;
reg kqc4902;
reg hd27508;
reg vk3a846;
reg osd4232;
reg wla1191;
reg [2047:0] ux1852e;
wire [195:0] xjc2975;

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifndef CFG_REG

`endif

`ifdef X4

`define INTMSG_DEF int_msg

`define TXINTF_DEF txintf

`define TLPGEN_DEF tlpgen

`define TLPDEC_DEF tlpdec

`define RXINTF_DEF rxintf

`endif

`ifdef X1

`define INTMSG_DEF pcie_x1_top_int_msg_x1

`define TXINTF_DEF pcie_x1_top_txintf_x1

`define TLPGEN_DEF pcie_x1_top_tlpgen_x1

`define TLPDEC_DEF pcie_x1_top_tlpdec_x1

`define RXINTF_DEF pcie_x1_top_rxintf_x1

`endif

`ifdef X4

`endif

`ifdef GEN2

`else

`endif

`ifdef CFG_REG


`ifdef ECRC

`endif

`ifdef X4

`endif

`else

`endif


`ifdef X4

`endif

`ifdef CFG_REG

`ifdef X4

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif


`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef CFG_REG


`ifdef EN_BAR0

`endif

`ifdef EN_BAR1

`endif

`ifdef EN_BAR2

`endif

`ifdef EN_BAR3

`endif

`ifdef EN_BAR4

`endif

`ifdef EN_BAR5

`endif

`ifdef EN_ER_BAR

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`else

`endif


`ifdef ECRC

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef VC1

`else

`ifdef X4

`endif

`ifdef ECRC

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef CFG_REG


`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef CFG_VCC

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef GEN2

`endif

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef EN_VC0

`ifdef CFG_VCC

`else

`endif

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`else

`endif

`ifdef GEN2

`ifdef X4

`endif

`ifdef X1

`endif

`endif

`ifdef DEBUG

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`endif  //End of DEBUG

localparam do14bae = 196,jra5d72 = 32'hfdffd48b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif


`ifndef CFG_REG


`endif


`ifdef X4


`define INTMSG_DEF int_msg


`define TXINTF_DEF txintf


`define TLPGEN_DEF tlpgen


`define TLPDEC_DEF tlpdec


`define RXINTF_DEF rxintf


`endif


`ifdef X1


`define INTMSG_DEF pcie_x1_top_int_msg_x1


`define TXINTF_DEF pcie_x1_top_txintf_x1


`define TLPGEN_DEF pcie_x1_top_tlpgen_x1


`define TLPDEC_DEF pcie_x1_top_tlpdec_x1


`define RXINTF_DEF pcie_x1_top_rxintf_x1


`endif


`ifdef X4


`endif


`ifdef GEN2


`else


`endif


`ifdef CFG_REG


`ifdef ECRC


`endif


`ifdef X4


`endif


`else


`endif


`ifdef X4


`endif


`ifdef CFG_REG


`ifdef X4


`endif


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef CFG_REG


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef AER


`endif


`ifdef AER


`endif


`ifdef CFG_REG


`ifdef EN_BAR0


`endif


`ifdef EN_BAR1


`endif


`ifdef EN_BAR2


`endif


`ifdef EN_BAR3


`endif


`ifdef EN_BAR4


`endif


`ifdef EN_BAR5


`endif


`ifdef EN_ER_BAR


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`else


`endif


`ifdef ECRC


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef VC1


`else


`ifdef X4


`endif


`ifdef ECRC


`endif


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef CFG_REG


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef CFG_VCC


`endif


`ifdef ECRC


`endif


`ifdef AER


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef GEN2


`endif


`ifdef ECRC


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef EN_VC0


`ifdef CFG_VCC


`else


`endif


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`else


`endif


`ifdef GEN2


`ifdef X4


`endif


`ifdef X1


`endif


`endif


`ifdef DEBUG


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X4


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`endif  //End of DEBUG





`ifdef ECRC



`endif





`ifdef X4



`endif




`ifdef GEN2



`endif




`ifndef CFG_REG



`endif




`ifdef X4



`define INTMSG_DEF int_msg



`define TXINTF_DEF txintf



`define TLPGEN_DEF tlpgen



`define TLPDEC_DEF tlpdec



`define RXINTF_DEF rxintf



`endif



`ifdef X1



`define INTMSG_DEF pcie_x1_top_int_msg_x1



`define TXINTF_DEF pcie_x1_top_txintf_x1



`define TLPGEN_DEF pcie_x1_top_tlpgen_x1



`define TLPDEC_DEF pcie_x1_top_tlpdec_x1



`define RXINTF_DEF pcie_x1_top_rxintf_x1



`endif






assign cfg_rmux_data = (!cobc9bf) ? uxb464a : (xwe4df9) ? ohae97b : yx541e6;
assign cfg_rmux_ae   = (!cobc9bf) ? ym2ed19   : (xwe4df9) ? jp74bdd   : zza0f35;

`ifdef X4
   assign cb8afa7 = (!cobc9bf) ? hd2251a : (xwe4df9) ? jr946b5 : wl128d6;

`endif



assign gdd2cc   = (cobc9bf) ? 1'b0 : nr717f8;
assign int_msg_rd    = (cobc9bf && !xwe4df9) ? nr717f8 : 1'b0;
assign err_msg_rd    = (cobc9bf &&  xwe4df9) ? nr717f8 : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ou10320        <= ARB_IDLE;      cfg_rmux_req  <= 1'b0;      arb_enable    <= 1'b0;      arb_enable2   <= 1'b0;   end   else begin      case(rt7bbf2)         ARB_IDLE : begin            if(gbf8176) begin               cfg_rmux_req  <= 1'b1;               arb_enable    <= 1'b0;               ou10320        <= rvb5e0d;            end            else if(mrc9507 || pfe6ba5) begin               cfg_rmux_req  <= 1'b1;               arb_enable    <= 1'b1;               ou10320        <= lfaf06f;               case({mrc9507, pfe6ba5})                  2'b11 : arb_enable2   <= !xwe4df9;                  2'b01 : arb_enable2   <= 1'b1;                  2'b10 : arb_enable2   <= 1'b0;               endcase            end         end         rvb5e0d : begin            if(wy5da3) begin               if(mrc9507 || pfe6ba5) begin                  arb_enable    <= 1'b1;                  ou10320        <= lfaf06f;                  case({mrc9507, pfe6ba5})                     2'b11 : arb_enable2   <= !xwe4df9;                     2'b01 : arb_enable2   <= 1'b1;                     2'b10 : arb_enable2   <= 1'b0;                  endcase               end               else if(!gbf8176) begin                  ou10320        <= ARB_IDLE;                  cfg_rmux_req  <= 1'b0;               end            end         end         lfaf06f : begin            if(wy5da3) begin               if(gbf8176) begin                  arb_enable    <= 1'b0;                  ou10320        <= rvb5e0d;               end               else if(mrc9507 || pfe6ba5) begin                   case({mrc9507, pfe6ba5})                     2'b11 : arb_enable2   <= !xwe4df9;                     2'b01 : arb_enable2   <= 1'b1;                     2'b10 : arb_enable2   <= 1'b0;                  endcase               end               else begin                  ou10320        <= ARB_IDLE;                  cfg_rmux_req  <= 1'b0;               end            end         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fn6407f   <= 1'b0;      je203ff <= 1'b0;      pu1ffb   <= 1'b0;      ukffdb <= 1'b0;      gqbcc7e      <= 1'b0;      fne63f1    <= 1'b0;   end   else begin      fn6407f   <= the3362;      je203ff <= ph19b16;      pu1ffb   <= vv7e5b1;      ukffdb <= uvf2d8f;      gqbcc7e      <= do96c7c;      fne63f1    <= ksb63e3;   end
end





`ifdef GEN2
   assign int_disable = (cmd_reg_out[5] | sjdf81) ;

`else
   assign int_disable = cmd_reg_out[5] ;

`endif




`ifdef CFG_REG

`INTMSG_DEF sh5411b (        .sys_clk              (sys_clk),    .rst_n                (rst_n),    .int_disable          (int_disable),    .inta_n               (inta_n),    .ftl_err_out          (ftl_err_out),    .nftl_err_out         (nftl_err_out),    .cor_err_out          (cor_err_out),    .bus_num              (bus_num),    .dev_num              (dev_num),    .func_num             (func_num),


`ifdef ECRC
       .ecrc_enb          (ecrc_gen_enb),


`endif

    .int_msg_rd           (int_msg_rd),    .err_msg_rd           (err_msg_rd),    .tx_ca_ph_infi        (tx_ca_ph[8]),    .tx_ca_pd_infi        (tx_ca_pd[12]),    .tx_ca_ph             (tx_ca_ph[7:0]),    .tx_ca_pd             (tx_ca_pd[11:0]),    .msi_tc               (msi_tc),    .msi                  (msi),    .msi_enable           (msi_enable),    .mm_enable            (mm_enable),    .mes_uaddr            (mes_uaddr),    .mes_laddr            (mes_laddr),    .mes_data             (mes_data),    


`ifdef X4
      .err_msg_dwen       (jr946b5),      .int_msg_dwen       (wl128d6),


`endif
   .err_msg_req           (err_msg_req),   .err_msg_data          (err_msg_data),   .err_msg_ae            (err_msg_ae),   .int_msg_req           (int_msg_req),   .int_msg_data          (int_msg_data),   .int_msg_ae            (int_msg_ae),   .int_pending           (int_pending)  );

`else
   assign err_msg_req   = 1'b0;   assign err_msg_data  = 16'b0;   assign err_msg_ae    = 1'b0;   assign int_msg_req   = 1'b0;   assign int_msg_data  = 16'b0;   assign int_msg_ae    = 1'b0;   assign int_pending   = 1'b0;

`endif





`TXINTF_DEF #(    .FADDR    ( FADDR ) ,    .D_WIDTH  ( D_WIDTH )    )    fpaf506 (        .sys_clk              ( sys_clk ),    .rst_n                ( rst_n ),    .cfgec_vcasel         ( cfgec_vcasel ),


`ifdef X4
       .phy_cfgln_sum     ( phy_cfgln_sum ),


`endif
    .arb_enable           ( arb_enable ),    .arb_enable2          ( arb_enable2 ),    .msi_enable           ( msi_enable ),


`ifdef CFG_REG
       .cfg_rmux_req      ( cfg_rmux_req ),       .cfg_rmux_ae       ( cfg_rmux_ae ),       .cfg_rmux_data     ( cfg_rmux_data ),


`ifdef X4
          .cfg_rmux_dwen  ( cb8afa7 ),


`endif



`endif



`ifdef ECRC
       .ecrc_enb          ( ecrc_gen_enb ) ,


`endif
    .tx_req               ( tx_req ),    .tx_data              ( tx_data ),    .tx_st                ( tx_st ),    .tx_end               ( tx_end ),    .tx_nlfy              ( tx_nlfy ),


`ifdef X4
       .tx_dwen           ( db9b255 ),


`endif
    .txtp_rdy             ( txtp_rdy ),    .dll_pause_cnt        ( dll_pause_cnt ),    .vcneg_pend           ( vcneg_pend ),        .txintf_pause_ack     ( bn37447 ),    .txintf_rdy_ack       ( txintf_rdy_ack ),


`ifdef CFG_REG
       .cfg_rmux_rd       ( cfg_rmux_rd ),


`endif

    .cfg_cplh_cc          ( cfg_cplh_cc ),    .cfg_cpld_cc          ( cfg_cpld_cc ),    .cfg_ph_cc            ( cfg_ph_cc ),    .cfg_pd_cc            ( cfg_pd_cc ),    .tx_rdy               ( tx_rdy ),    .txintf_req           ( db13b67 ),    .txintf_data          ( txintf_data ),    .txintf_st            ( txintf_st ),    .txintf_end           ( txintf_end ),    .txintf_nlfy          ( txintf_nlfy ),


`ifdef X4
       .txintf_dwen       ( gqa35af ),       .txintf_val        ( jc739ea ),


`endif

    .f_nf_emsg_sent       ( f_nf_emsg_sent ),    .rchk_credit_cpl      ( rchk_credit_cpl ),    .rchk_credit_p        ( rchk_credit_p ),    .cfg_rmux_end         ( cfg_rmux_end)    );
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ie21da4  <= 1'b0 ;      doed20 <= 1'b0 ;


`ifdef X4
         mg1ad78 <= 1'b0 ;


`endif
   end


`ifdef X4
      else if (jc739ea) begin         ie21da4  <= nt28c5f ;         doed20 <= ui462fe ;         mg1ad78 <= gqa35af ;      end


`endif



`ifdef X1
      else begin         ie21da4  <= nt28c5f ;         doed20 <= ui462fe ;      end


`endif

end

`ifdef X4
   assign tx_val = jc739ea;

`endif





`TLPGEN_DEF zxc736c (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n ) ,      .txintf_data    ( txintf_data ) ,   .txintf_st      ( txintf_st ) ,   .txintf_end     ( dm76902 ) ,   .txintf_nlfy    ( do204ad ) ,


`ifdef X4
      .txintf_dwen ( qv95aed ) ,      .txintf_val  ( jc739ea ) ,


`endif
   .txintf_rdy_ack ( txintf_rdy_ack ) ,


`ifdef ECRC
      .ecrc_enb    ( ecrc_gen_enb ) ,


`endif

   


`ifdef X4
      .tlpgen_tval ( sw2b9ba ) ,      .tlpgen_dwen ( uk3e9a1 ) ,


`endif
   .tlpgen_data    ( tlpgen_data ) ,   .tlpgen_st      ( tlpgen_st ) ,   .tlpgen_end     ( tlpgen_end ) ,   .tlpgen_nlfy    ( tlpgen_nlfy ) ,   .tlpgen_rdy_ack ( tlpgen_rdy_ack )   ) ;



`TLPDEC_DEF ea43a9b (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,      .rxtp_data          ( rxtp_data ) ,   .rxtp_st            ( rxtp_st ) ,   .rxtp_end           ( rxtp_end ) ,


`ifdef X4
      .rxtp_dwen       ( co347bf ) ,


`endif

   .max_pl_size        ( max_pl_size ) ,


`ifdef ECRC
      .ecrc_enb        ( ecrc_chk_enb ) ,


`endif

   .vc_dl_up_fail      ( vc_dl_up_fail ) ,      .tlpdec_data        ( tlpdec_data ) ,   .tlpdec_st          ( tlpdec_st ) ,   .tlpdec_end         ( tlpdec_end ) ,   .tlpdec_tc          ( tlpdec_tc ) ,


`ifdef X4
      .tlpdec_dwen     ( hofea8e ) ,      .tlp_dwen_reg2   ( gof5472 ) ,


`endif

   .tlpdec_cfgrd       ( tlpdec_cfgrd ) ,   .tlpdec_cfgwr       ( tlpdec_cfgwr ) ,   .tlpdec_memrw       ( tlpdec_memrw ) ,   .tlpdec_iorw        ( tlpdec_iorw ) ,   .tlpdec_rvcd_sts_ur ( tlpdec_rvcd_sts_ur ) ,   .tlpdec_rvcd_sts_ca ( tlpdec_rvcd_sts_ca ) ,   .tlpdec_addr_l32    ( tlpdec_addr_l32 ) ,   .tlpdec_addr_h32    ( tlpdec_addr_h32 ) ,   .tlpdec_addr64      ( tlpdec_addr64 ) ,   .s2e_cnt_err        ( s2e_cnt_err ) ,


`ifdef ECRC
      .tlpdec_ecrc_err ( tlpdec_ecrc_err ) ,      .crc_ok_out      ( je11560 ) ,


`endif
   .tlpdec_pois_tlp    ( tlpdec_pois_tlp ) ,   .tlpdec_us_req      ( tlpdec_us_req ) ,   .tlpdec_malf_tlp    ( tlpdec_malf_tlp ),   .tlp_st_reg2        ( gb60731 ),   .tlp_end_reg2       ( tj398d ),   .tlp_data_reg2      ( go67056 )   ) ;




pcie_x1_top_ip51b71 uk31bb6(      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),   .dl_inactive              (kddc813),   .swa09d                    (swa09d),   .iraee39                     (su72ee1),   .tx_st                    (goef79e),   .tx_end                   (th7bcf0),   .tx_nlfy                  (ykde786),   .tx_data                  (qva4000),


`ifdef X4
      .jc739ea            (jc739ea),


`endif
   .cfg_ph_cc                (cfg_ph_cc),   .cfg_pd_cc                (cfg_pd_cc),   .cfg_cplh_cc              (cfg_cplh_cc),   .cfg_cpld_cc              (cfg_cpld_cc),   .os62849            (ofcc3ed),   .do14249            (pf61f6c),   .mta124b             (gqfb66),   .coac509            (ay7db30),   .vvcd2fd            (pu1bbde),   .rg697ee            (jpddef3),      .aa92b82          (ng3aaf5),   .tx_ca_ph                 (tx_ca_ph),   .tx_ca_pd                 (tx_ca_pd),   .kd70464                (kd70464),   .aa82324                (aa82324),   .tx_ca_cplh               (tx_ca_cplh),   .xy8c90a               (xy8c90a)   ) ;



pcie_x1_top_ip4e993 do11b7d(         .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .ykf5d6d               (fn4523e),   .ohaeb69              (qv291f6),   .ip75b4d             ({(8*`NUM_VC){1'b0}}),   .puada6d               (lq47dab),   .kq6d36a              (ks3ed5a),   .by69b51             ({(12*`NUM_VC){1'b0}}),   .dm4da8a           (fpb5686),   .go6d453           (ohab436),   .wj6a299          (fn5a1b4),   .qt514cc          (byd0da6),   .mt8a665         (7'd1),   .ay5332d         (11'd1),   .wwcb0de             (fp8bc6d),   .vcneg_pend               (psd00bd),   .qtc378b             (ext_sync),   .phy_l0_l0s               (xl32528),   .hq111f2               (xw63705),   .qi88f93               (tw1b82a),   .epa437e              (ec92947),   .aa21bf5             (vx94a39),   .sjdfa8            (xla51ce),   .kf39400            (cmcef9d),   .faca004            (ui77ce8),   .zx50023           (epbe740),   .gd8011f           (pff3a05),   .wy8fc          ({(`NUM_VC){1'b0}}),   .zm47e1          ({(`NUM_VC){1'b0}}),   .ux23f0a             (bl40b8d),   .ym1f855             (mg5c6f),   .nph_processed            (wy2e379),   .npd_processed            (rt71bc8),   .coaa73           ({(`NUM_VC){1'b0}}),   .xj55398           ({(`NUM_VC){1'b0}}),


`ifdef X1
      .sw98e2b     ((sj398bb & ~s2e_cnt_err)),      .dzc7158     ((wjcc5dd & ~s2e_cnt_err)),


`endif



`ifdef X4
      .sw98e2b     (sj398bb),      .dzc7158     (wjcc5dd),


`endif
   .fp38ac7         (1'b0),    .oua9cc7                   (ps791cc),   .en4e638                  (vvc8e62),   .ps731c5                 ({(8*`NUM_VC){1'b1}}),


`ifdef AER
       .vc_rcvd                  (irbb3c3),   .ph_rcvd                  (uvd9e1d),   .pd_rcvd                  (rgcf0ec),   .nph_rcvd                 (os78763),   .npd_rcvd                 (mrc3b18),   .credits_rcvd             (ux1d8c4),   .malf_pkt_ph              (thec624),   .malf_pkt_pd              (vi63127),   .malf_pkt_nph             (ep1893a),   .malf_pkt_npd             (suc49d4),

`endif

      .ntba23f               (ntba23f),   .god11ff                 (god11ff),   .ie88ff9                 (ie88ff9),   .vi47fc9               (vi47fc9),   .ng3fe4a                 (ng3fe4a),   .cmff252                 (cmff252),   .zxf9291            (zxf9291),   .wjc948e           (wjc948e),   .bl4a474          (bl4a474),


`ifdef AER
      .fc_overflow              (fc_overflow),


`endif
   .xw574e2                     (xw574e2),   .ntba712                    (ntba712),   .ipd3897                   (ipd3897)   ) ;




`ifdef CFG_REG

pcie_x1_top_jp7b69b hb4ff3b (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,


`ifdef EN_BAR0
      .ofd37c2        ( ph9b4e2 ) ,      .tj9be14       ( dmda716 ) ,


`endif



`ifdef EN_BAR1
      .nedf0a7        ( mrd38b2 ) ,      .off853a       ( fc9c595 ) ,


`endif



`ifdef EN_BAR2
      .nrc29d4        ( gbe2cab ) ,      .ba14ea6       ( tj1655d ) ,


`endif



`ifdef EN_BAR3
      .ria7532        ( fcb2aee ) ,      .xy3a992       ( oh95772 ) ,


`endif



`ifdef EN_BAR4
      .ead4c92        ( wlabb95 ) ,      .oua6490       ( tu5dcad ) ,


`endif



`ifdef EN_BAR5
      .bn32480        ( jcee56a ) ,      .ks92407       ( os72b52 ) ,


`endif



`ifdef EN_ER_BAR
      .ks92038      ( ir95a90 ) ,      .mt901c0     ( vkad484 ) ,


`endif

   


`ifdef X4
      .bar_hit        ( bar_hit ),      .cb702d    ( cb702d ),


`endif



`ifdef X1
      .bar_hit        ( bar_hit ),      .bar_fail       ( bar_fail ),


`endif

      .tlpdec_memrw       ( tlpdec_memrw ) ,   .tlpdec_iorw        ( tlpdec_iorw ) ,   .tlpdec_addr_l32    ( ri3f7be ) ,   .tlpdec_addr_h32    ( nefbdf3 ) ,   .tlpdec_addr64      ( tlpdec_addr64 )   );

`else
   assign bar_hit    = 7'b0;   assign bar_fail   = 1'b0;

`endif






`RXINTF_DEF ykf521a (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,      .tlpdec_data        ( tlpdec_data ) ,   .tlpdec_st          ( tlpdec_st ) ,   .tlpdec_end         ( tlpdec_end ) ,   .tlpdec_cfgrd       ( tlpdec_cfgrd ) ,


`ifdef ECRC
      .tlpdec_ecrc_err ( tlpdec_ecrc_err ),


`endif
   .tlpdec_us_req      ( tlpdec_us_req ),   .tlpdec_malf_tlp    ( tlpdec_malf_tlp ),      .dl_up              ( dl_up ),   


`ifdef X1
      .cfg_hit         ( (cfg_hit & ~s2e_cnt_err) ) ,      .bar_fail        ( bar_fail ) ,


`endif



`ifdef X4
      .cfg_hit         ( cfg_hit ) ,      .bar_hit_val     ( cb702d ) ,      .tlpdec_dwen     ( hofea8e ) ,      .tlpdec_tc       ( tlpdec_tc ) ,      .rx_dwen         ( hq44a3 ) ,


`endif
   .bar_hit            ( bar_hit ) ,   .fc_overflow        (fc_overflow),      .trnc_st            ( trnc_st ) ,   .vc_dl_up_fail      ( vc_dl_up_fail ) ,   .cfgec_tvmap        ( cfgec_tvmap ) ,   .rx_bar_hit         ( rx_bar_hit ) ,   .rx_data            ( ba86007 ),   .rx_st              ( ng3003b ),   .rx_end             ( an801da ),


`ifdef ECRC
      .rx_ecrc_err     ( aaed4 ),


`endif
   .rx_us_req          ( gd76a1 ),   .rx_malf_tlp        ( aa3b50d ),      .vc_rcvd         (vc_rcvd),   .ph_rcvd         (ph_rcvd),   .pd_rcvd         (pd_rcvd),   .nph_rcvd        (nph_rcvd),   .npd_rcvd        (npd_rcvd),   .credits_rcvd    (credits_rcvd),   .malf_pkt_ph     (malf_pkt_ph),   .malf_pkt_pd     (malf_pkt_pd),   .malf_pkt_nph    (malf_pkt_nph),   .malf_pkt_npd    (malf_pkt_npd)   );


assign rx_data[D_WIDTH-1:0]     = dzd7b8a ? lq7cb2d : ls35f51[D_WIDTH-1:0] ;
assign rx_st[0]          = dzd7b8a ? qge596b : phafa8b[0] ;
assign rx_end[0]         = dzd7b8a ? qv2cb58 : os7d45f[0] ;

`ifdef X4
   assign zkfb019[0]     = dzd7b8a ? co347bf : hq44a3[0] ;

`endif



`ifdef ECRC
   assign rx_ecrc_err[0] = dzd7b8a ? 1'b0 : aaed4[0] ;

`endif

assign rx_us_req[0]      = dzd7b8a ? 1'b0 : kqea2f8[0] ;
assign rx_malf_tlp[0]    = dzd7b8a ? 1'b0 : yx517c0[0] ;


`ifdef VC1



`else
   assign rx_data[(`NUM_VC*D_WIDTH)-1:D_WIDTH]  = ls35f51[(`NUM_VC*D_WIDTH)-1:D_WIDTH] ;   assign rx_st[`NUM_VC-1:1]          = phafa8b[`NUM_VC-1:1] ;   assign rx_end[`NUM_VC-1:1]         = os7d45f[`NUM_VC-1:1] ;


`ifdef X4
      assign zkfb019[`NUM_VC-1:1]     = hq44a3[`NUM_VC-1:1] ;


`endif



`ifdef ECRC
      assign rx_ecrc_err[`NUM_VC-1:1] = aaed4[`NUM_VC-1:1] ;


`endif
   assign rx_us_req[`NUM_VC-1:1]      = kqea2f8[`NUM_VC-1:1] ;   assign rx_malf_tlp[`NUM_VC-1:1]    = yx517c0[`NUM_VC-1:1] ;

`endif






`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         ba1bb5f <= 1'b0 ;         nr5f7af <= 1'b0 ;         dm6c7d4 <= 1'b0 ;      end      else begin         ba1bb5f <= txintf_st ;         nr5f7af <= ba1bb5f ;         dm6c7d4 <= nr5f7af ;      end   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         xw63ea3 <= 1'b0 ;      else if (txintf_st && lqf4a31[12:8] == 5'b01010)         xw63ea3 <= 1'b1 ;      else if (nt28c5f)         xw63ea3 <= 1'b0 ;   end      assign zmb181 = ba1bb5f & (lqf4a31[14] == 1'b1) ;      assign by58c0b = (xw63ea3 & dm6c7d4 & (lqf4a31[15:13] == 3'b100));

`endif



`ifdef X4
      assign zmb181 = txintf_st & (lqf4a31[46] == 1'b1) ;      assign by58c0b = txintf_st & (lqf4a31[60:56] == 5'b01010) & (lqf4a31[15:13] == 3'b100);

`endif



assign byebf11[15] = tlpdec_pois_tlp ;

assign byebf11[14] = fa7c66c & cmd_reg_out[4] ;

assign byebf11[13] = fncd8b6 ;

assign byebf11[12] = xw6c5b7 ;

assign byebf11[11] = xl16dd9 ;

assign byebf11[8] = (ay62dbb | tlpdec_pois_tlp) & cmd_reg_out[4] ;

assign byebf11[3] = kf79ae ;


`ifdef ENDPOINT_COMP
   assign dmd57aa = 1'b0 ;

`else
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         jrc80f <= 1'b0 ;      else         jrc80f <= lsbdc57[0] ;   end   assign dmd57aa = wwefcb6 & ~lsbdc57[0] ;

`endif




`ifdef CFG_REG
   pcie_x1_top_phbf984 #(      .D_WIDTH  ( D_WIDTH ))      wl77a9 (                  .yz1d92d ( pu250cf )  ,      .zxec96c ( nt2867b )  ,      .pf64b66 ( yk433df )  ,      .INIT_REG_010 ( rv19ef9 )  ,      .INIT_REG_014 ( tucf7ce )  ,      .INIT_REG_018 ( hb7be73 )  ,      .INIT_REG_01C ( hodf39e )  ,      .INIT_REG_020 ( thf9cf2 )  ,      .INIT_REG_024 ( cmce797 )  ,      .zm964ea ( zk73cb9 )  ,      .bab2752 ( tj9e5ca )  ,      .ls93a93 ( kdf2e56 )  ,      .wy9d49b ( aa972b4 )  ,      .load_id      ( ri14e35 ) ,            .bl40242      ( lsb89df )  ,      .je1216      ( qgc4efb )  ,      .xl90b2 ( fp277d9 )  ,      .ho48596 ( ec3bece )  ,      .jc42cb2 ( jcdf670 )  ,      .xl16592 ( hofb382 )  ,      .lsb2c96 ( mrd9c13 )  ,      .je964b2 ( eace09c )  ,      .dob2592 ( qt704e1 )  ,      .aa92c93 ( wy8270c )  ,            .ng96499 ( bn13861 )  ,            .bl40756 ( je89e72 )  ,      .lf3ab6 ( fn4f393 )  ,      .mt1d5b6 ( xw79c9f )  ,      .iceadb5 ( icce4fb )  ,


`ifdef GEN2
         .kq56da9 ( kq56da9 )  ,


`endif
            .czf88d2 ( ec8d681 )  ,      .wwc4695 ( nr6b408 )  ,      


`ifdef CFG_VCC
         .ho57539 ( ho57539 )  ,


`endif

            .sys_clk           ( sys_clk ) ,      .rst_n             ( rst_n ),            .tlp_data          ( nt84714 ),      .tlp_st            ( gb60731 ),      .tlp_end           ( tj398d ),      .tlp_erly_st       ( tlp_erly_st ),      .tx_ca_cplh        ( tx_ca_cplh[7:0] ),      .tx_ca_cplh_infi   ( tx_ca_cplh[8] ),            .phy_link_up      ( qv730f ) ,      .qtf80af    ( ir1d90f ) ,      .byc057c ( blec87c ) ,      .kf2be2        ( fn643e6 ) ,      .dfrm_perr        ( ie21f37 ) ,      .dl_active        ( cof9b8 ) ,            .rxtp_bad_tlp      ( vi7cdc0 ),      .cb2c67b     ( vve6e03 ),      .ie5434        ( jr3701f ),      .mrd9d4b    ( xyb80ff ),      .ksa936e    ( fac07fa ),      .ng3aaf5    ( rv3fd2 ),      .mtabd53        ( kqc4902 ),      .dmd57aa     ( gq1fe96 ),


`ifdef CFG_VCC
         .vka2183 ( psd00bd ),


`endif




`ifdef ECRC
         .tlp_ecrc_ok    ( je11560 ) ,         .ecrc_gen_enb   ( ecrc_gen_enb ) ,         .ecrc_chk_enb   ( ecrc_chk_enb ) ,


`endif

      


`ifdef AER
         .err_tlp_header ( err_tlp_header ) ,


`endif
      .byebf11        ( zz38a98 ),      .cmpln_tout        ( ykfa589 ),      .cmpltr_abort_np   ( thd2c49 ),      .cmpltr_abort_p    ( je9624f ),      .unexp_cmpln       ( epb127a ),      .ur_np_ext         ( fc893d4 ) ,      .ur_p_ext          ( su49ea2 ) ,      .np_req_pend       ( zx4f511 ),      .pme_status        ( wlb1ee9 ) ,      .term_all_cfg      ( tu6cba7 ) ,      .ym31141    ( sud447c ) ,


`ifdef X4
         .ie88a08   ( ie88a08 ) ,         .xj45041   ( xj45041 ) ,


`endif



`ifdef X1
         .ie88a08   ( 1'b0 ) ,         .xj45041   ( 1'b1 ) ,


`endif



`ifdef GEN2
         .ir17e02            ( ir17e02 ) ,         .drop_resp      ( drop_resp ) ,


`endif

            .cfg_rmux_rd       ( zkc0bb4 ) ,            .tlpdec_data       ( tlpdec_data ),      .tlpdec_st         ( tlpdec_st ),      .tlpdec_end        ( tlpdec_end ),


`ifdef ECRC
         .tlpdec_ecrc_err( tlpdec_ecrc_err ),


`else
         .tlpdec_ecrc_err( 1'b0 ),


`endif
      .tlpdec_pois_tlp   ( tlpdec_pois_tlp ),      .tlpdec_us_req     ( tlpdec_us_req ),      .tlpdec_malf_tlp   ( tlpdec_malf_tlp ),      .s2e_cnt_err       ( s2e_cnt_err ) ,
            .ADR_I             ( sh65d3a ) ,      .DAT_I             ( ec2e9d4 ),      .WE_I              ( hb74ea1 ),      .STB_I             ( hqa750f ),            .RDAT_O            ( RDAT_O ),      .ACK_O             ( ACK_O ),            .jp5f88b            ( ofd37c2 ),      .nrfc45f            ( nedf0a7 ),      .ene22fe            ( nrc29d4 ),      .xy117f4            ( ria7532 ),      .rv8bfa3            ( ead4c92 ),      .nr5fd1e            ( bn32480 ),      .rgfe8f7            ( ks92038 ),      .zmb72e8       ( tj9be14 ),      .ukb9743       ( off853a ),      .gocba18       ( ba14ea6 ),      .by5d0c0       ( xy3a992 ),      .ale8603       ( oua6490 ),      .yk4301d       ( ks92407 ),      .qv180e9       ( mt901c0 ),      .cfg_hit           ( cfg_hit ),      .nph_processed     ( sw98e2b ) ,      .npd_processed     ( dzc7158 ) ,      .bus_num           ( bus_num ) ,      .dev_num           ( dev_num ) ,      .func_num          ( func_num ) ,      .pm_power_state    ( pm_power_state ) ,      .pme_en            ( pme_en ) ,      .mm_enable         ( mm_enable ) ,      .msi_enable        ( msi_enable ) ,      .mes_laddr         ( mes_laddr ) ,      .mes_uaddr         ( mes_uaddr ) ,      .mes_data          ( mes_data ) ,      .cmd_reg_out       ( cmd_reg_out ),      .dev_cntl_out      ( dev_cntl_out ),      .lnk_cntl_out      ( lnk_cntl_out ),      .ftl_err_out       ( ftl_err_out ),      .nftl_err_out      ( nftl_err_out ),      .cor_err_out       ( cor_err_out ),


`ifdef GEN2
         .dev_cntl_2_out ( dev_cntl_2_out ),         .initiate_flr   ( ld7e06d ),


`endif

      .yk535f1      ( max_pl_size ),      .ux9af88        ( ext_sync ),      .xjd7c45      ( xjd7c45 ),      .qvbe22f       ( qvbe22f ),      .cfgcs_losel       ( cfgcs_losel ) ,


`ifdef CFG_VCC
         .co10c1a        ( ) ,         .zm860d0      ( ) ,         .xy30683       ( xy30683 ) ,         .cfgec_vcasel      ( cfgec_vcasel ) ,


`ifdef EN_VC0
            .mg1a0d3  ( cfgec_tvmap[7:0] ) ,            .fad0698   ( fad0698 ) ,            .ba834c3  ( ba834c3 ) ,


`endif



`ifdef EN_VC1
            .mg1a61b  ( cfgec_tvmap[15:8] ) ,            .gbd30d8   ( gbd30d8 ) ,            .ec986c4  ( ec986c4 ) ,


`endif



`ifdef EN_VC2
            .yxc3621  ( cfgec_tvmap[23:16] ) ,            .pu1b10d   ( pu1b10d ) ,            .fnd886a  ( fnd886a ) ,


`endif



`ifdef EN_VC3
            .ayc4356  ( cfgec_tvmap[31:24] ) ,            .aa21ab0   ( aa21ab0 ) ,            .sjd580  (  sjd580 ) ,


`endif



`ifdef EN_VC4
            .uv6ac04  ( cfgec_tvmap[39:32] ) ,            .cm56025   ( cm56025 ) ,            .bnb0128  (  bnb0128 ) ,


`endif



`ifdef EN_VC5
            .ir80946  ( cfgec_tvmap[47:40] ) ,            .ri4a35   ( ri4a35 ) ,            .ls251ab  ( ls251ab ) ,


`endif



`ifdef EN_VC6
            .hd28d5b  ( cfgec_tvmap[55:48] ) ,            .yk46ade   ( yk46ade ) ,            .ls356f0  ( ls356f0 ) ,


`endif



`ifdef EN_VC7
            .kfab782  ( cfgec_tvmap[63:56] ) ,            .yx5bc14   ( yx5bc14 ) ,            .ayde0a5  ( ayde0a5 ) ,


`endif



`endif

            .cfg_rmux_req         ( sja1a59 ),      .cfg_rmux_data        ( shcc8e8 ),


`ifdef X4
         .cb8afa7     ( hd2251a ),


`endif
      .cfg_rmux_ae          ( ip4b323 )      );


`ifdef X4
      assign  tlp_erly_st = (qge596b & (lq7cb2d[60:56] == 5'b00100)) ;


`endif



`ifdef X1
      assign  tlp_erly_st = (qge596b & (lq7cb2d[12:8] == 5'b00100)) ;


`endif


   assign  aa82cb0 = ri2086c ;


`ifdef EN_VC0



`ifdef CFG_VCC
         assign swa09d[0]          = ba834c3 ;         assign su72ee1[2:0]     = vk1b267;


`else
         assign swa09d[0]          = 1'b1 ;         assign su72ee1[2:0]     = 3'b000;


`endif



`endif



`ifdef EN_VC1
      assign swa09d[1]          = ec986c4 ;      assign su72ee1[5:3]     = ald933a;


`endif



`ifdef EN_VC2
      assign swa09d[2]          = fnd886a ;      assign su72ee1[8:6]     = shc99d5;


`endif



`ifdef EN_VC3
      assign swa09d[3]          = sjd580 ;      assign su72ee1[11:9]    = ww4cead;


`endif



`ifdef EN_VC4
      assign swa09d[4]          = bnb0128 ;      assign su72ee1[14:12]   = cm67569;


`endif



`ifdef EN_VC5
      assign swa09d[5]          = ls251ab ;      assign su72ee1[17:15]   = hq3ab48;


`endif



`ifdef EN_VC6
      assign swa09d[6]          = ls356f0 ;      assign su72ee1[20:18]   = hod5a42;


`endif



`ifdef EN_VC7
      assign swa09d[7]          = ayde0a5 ;      assign su72ee1[23:21]   = ngad212;


`endif



`else
   assign cfg_hit             = 1'b0;   assign cfgcs_losel         = 3'b111;   assign su72ee1[2:0]       = 3'b000;   assign cfgec_vcasel        = 3'b0;   assign ext_sync            = 1'b0;   assign xjd7c45        = 1'b0;   assign max_pl_size         = 3'b010;   assign msi_enable          = 1'b0;   assign sw98e2b   = 1'b0;   assign dzc7158   = 1'b0;   assign qvbe22f         = 1'b0;   assign s2e_cnt_err         = 1'b0;   assign swa09d[0]            = 1'b1;

`endif




`ifdef GEN2
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         ea7837e       <= qgf036f ;         initiate_flr <= 1'b0 ;         sjdf81  <= 1'b0 ;         ir17e02          <= 1'b0 ;         drop_resp    <= 1'b0 ;      end      else begin         initiate_flr  <= ld7e06d ;         case (ea7837e)                    qgf036f : begin               ir17e02       <= 1'b0 ;               drop_resp <= 1'b0 ;       if (ld7e06d) begin                  ea7837e <= zz81b78 ;          if (kf79ae)                     sjdf81 <= 1'b1 ;               end               else                  ea7837e <= qgf036f ;            end        zz81b78 : begin               ea7837e <= yzdbc7 ;            end    yzdbc7 : begin


`ifdef X4
                  ea7837e <= ww78f44 ;


`endif



`ifdef X1
                  ea7837e <= su6de3d ;


`endif
            end    su6de3d : begin               ea7837e <= kd6f1e8 ;            end    kd6f1e8 : begin               ea7837e <= ww78f44 ;            end            ww78f44 : begin       if (zza0f35 && ym2ed19) begin                  ea7837e <= dzc7a21 ;                  sjdf81 <= 1'b0 ;                  drop_resp   <= 1'b1 ;       end               else                  ea7837e <= ww78f44 ;            end            dzc7a21 : begin       if (flr_rdy_in) begin                  ea7837e <= bn3d10e ;                  ir17e02    <= 1'b1 ;       end               else                  ea7837e <= dzc7a21 ;            end        bn3d10e : begin               ea7837e     <= qgf036f ;            end            default : begin               ea7837e      <= qgf036f ;               ir17e02         <= 1'b0 ;               sjdf81 <= 1'b0 ;               drop_resp   <= 1'b0 ;            end         endcase      end   end

`endif






`ifdef DEBUG



`ifdef EN_VC0
   assign oh85d2          = ead4800[0];   assign wy1f51b          = tx_rdy[0];   assign xj5a90f           = goef79e[0];   assign zz2816a          = th7bcf0[0];   assign lqcfaff         = ykde786[0];   assign pu3fed3         = qva4000[1*D_WIDTH-1:0*D_WIDTH];   assign mg2e48e           = rx_st[0];   assign ww46f35          = rx_end[0];   assign rtf92d0         = rx_data[1*D_WIDTH-1:0*D_WIDTH];

`endif



`ifdef EN_VC1
   assign ne42e94          = ead4800[1];   assign gofa8d8          = tx_rdy[1];   assign sud487f           = goef79e[1];   assign th40b57          = th7bcf0[1];   assign os7d7fa         = ykde786[1];   assign suff69a         = qva4000[2*D_WIDTH-1:1*D_WIDTH];   assign me72470           = rx_st[1];   assign xl379a8          = rx_end[1];   assign kdc9686         = rx_data[2*D_WIDTH-1:1*D_WIDTH];

`endif



`ifdef EN_VC2
   assign cb174a2          = ead4800[2];   assign ykd46c0          = tx_rdy[2];   assign yza43f8           = goef79e[2];   assign aa5abf          = th7bcf0[2];   assign lqebfd0         = ykde786[2];   assign vifb4d1         = qva4000[3*D_WIDTH-1:2*D_WIDTH];   assign uk92381           = rx_st[2];   assign aabcd46          = rx_end[2];   assign ip4b434         = rx_data[3*D_WIDTH-1:2*D_WIDTH];

`endif



`ifdef EN_VC3
   assign bnba514          = ead4800[3];   assign wya3601          = tx_rdy[3];   assign ec21fc5           = goef79e[3];   assign hd2d5f9          = th7bcf0[3];   assign ld5fe83         = ykde786[3];   assign tuda68b         = qva4000[4*D_WIDTH-1:3*D_WIDTH];   assign ph91c08           = rx_st[3];   assign jpe6a31          = rx_end[3];   assign xj5a1a5         = rx_data[4*D_WIDTH-1:3*D_WIDTH];

`endif



`ifdef EN_VC4
   assign rtd28a7          = ead4800[4];   assign ls1b008          = tx_rdy[4];   assign wyfe28           = goef79e[4];   assign en6afcf          = th7bcf0[4];   assign ayff41f         = ykde786[4];   assign kdd345a         = qva4000[5*D_WIDTH-1:4*D_WIDTH];   assign bn8e046           = rx_st[4];   assign pu3518f          = rx_end[4];   assign psd0d2e         = rx_data[5*D_WIDTH-1:4*D_WIDTH];

`endif



`ifdef EN_VC5
   assign vx9453f          = ead4800[5];   assign zxd8042          = tx_rdy[5];   assign al7f140           = goef79e[5];   assign fa57e7d          = th7bcf0[5];   assign gofa0f9         = ykde786[5];   assign mt9a2d4         = qva4000[6*D_WIDTH-1:5*D_WIDTH];   assign sh70237           = rx_st[5];   assign pua8c7a          = rx_end[5];   assign zm86972         = rx_data[6*D_WIDTH-1:5*D_WIDTH];

`endif



`ifdef EN_VC6
   assign zma29ff          = ead4800[6];   assign jcc0217          = tx_rdy[6];   assign ipf8a05           = goef79e[6];   assign dbbf3eb          = th7bcf0[6];   assign dmd07c9         = ykde786[6];   assign ead16a4         = qva4000[7*D_WIDTH-1:6*D_WIDTH];   assign ph811bc           = rx_st[6];   assign kq463d2          = rx_end[6];   assign sw34b92         = rx_data[7*D_WIDTH-1:6*D_WIDTH];

`endif



`ifdef EN_VC7
   assign ng14ffb          = ead4800[7];   assign vk10ba          = tx_rdy[7];   assign tuc502d           = goef79e[7];   assign hbf9f5f          = th7bcf0[7];   assign ls83e4b         = ykde786[7];   assign vx8b521         = qva4000[8*D_WIDTH-1:7*D_WIDTH];   assign sj8de6           = rx_st[7];   assign gq31e91          = rx_end[7];   assign tja5c91         = rx_data[8*D_WIDTH-1:7*D_WIDTH];

`endif




`ifdef X4



`ifdef EN_VC0
      assign an8f489         = db9b255[0];      assign kq776c7         = zkfb019[0];


`endif



`ifdef EN_VC1
      assign kd7a44d         = db9b255[1];      assign gdbb639         = zkfb019[1];


`endif



`ifdef EN_VC2
      assign ldd226d         = db9b255[2];      assign cmdb1cd         = zkfb019[2];


`endif



`ifdef EN_VC3
      assign vx9136e         = db9b255[3];      assign fnd8e68         = zkfb019[3];


`endif



`ifdef EN_VC4
      assign zm89b77         = db9b255[4];      assign dzc7346         = zkfb019[4];


`endif



`ifdef EN_VC5
      assign by4dbbb         = db9b255[5];      assign ep39a37         = zkfb019[5];


`endif



`ifdef EN_VC6
      assign qg6dddb         = db9b255[6];      assign pfcd1bd         = zkfb019[6];


`endif



`ifdef EN_VC7
      assign vv6eed8         = db9b255[7];      assign ui68dee         = zkfb019[7];


`endif



`endif




`endif  //End of DEBUG


always@* begin pu250cf<={yz1d92d>>1,xjc2975[0]};nt2867b<={zxec96c>>1,xjc2975[1]};yk433df<={pf64b66>>1,xjc2975[2]};rv19ef9<={INIT_REG_010>>1,xjc2975[3]};tucf7ce<={INIT_REG_014>>1,xjc2975[4]};hb7be73<={INIT_REG_018>>1,xjc2975[5]};hodf39e<={INIT_REG_01C>>1,xjc2975[6]};thf9cf2<={INIT_REG_020>>1,xjc2975[7]};cmce797<={INIT_REG_024>>1,xjc2975[8]};zk73cb9<={zm964ea>>1,xjc2975[9]};tj9e5ca<={bab2752>>1,xjc2975[10]};kdf2e56<={ls93a93>>1,xjc2975[11]};aa972b4<={wy9d49b>>1,xjc2975[12]};ri14e35<=xjc2975[13];lsb89df<={bl40242>>1,xjc2975[14]};qgc4efb<={je1216>>1,xjc2975[15]};fp277d9<={xl90b2>>1,xjc2975[16]};ec3bece<={ho48596>>1,xjc2975[17]};jcdf670<={jc42cb2>>1,xjc2975[18]};hofb382<={xl16592>>1,xjc2975[19]};mrd9c13<={lsb2c96>>1,xjc2975[20]};eace09c<={je964b2>>1,xjc2975[21]};qt704e1<={dob2592>>1,xjc2975[22]};wy8270c<={aa92c93>>1,xjc2975[23]};bn13861<={ng96499>>1,xjc2975[24]};je89e72<={bl40756>>1,xjc2975[25]};fn4f393<={lf3ab6>>1,xjc2975[26]};xw79c9f<={mt1d5b6>>1,xjc2975[27]};icce4fb<={iceadb5>>1,xjc2975[28]};ec8d681<={czf88d2>>1,xjc2975[29]};nr6b408<={wwc4695>>1,xjc2975[30]};fn4523e<={ykf5d6d>>1,xjc2975[31]};qv291f6<={ohaeb69>>1,xjc2975[32]};lq47dab<={puada6d>>1,xjc2975[33]};ks3ed5a<={kq6d36a>>1,xjc2975[34]};fpb5686<={dm4da8a>>1,xjc2975[35]};ohab436<={go6d453>>1,xjc2975[36]};fn5a1b4<={wj6a299>>1,xjc2975[37]};byd0da6<={qt514cc>>1,xjc2975[38]};fp8bc6d<={wwcb0de>>1,xjc2975[39]};dzd7b8a<=xjc2975[40];ep1833c<=xjc2975[41];ayde440<={msi>>1,xjc2975[42]};qi3bc88<={msi_tc>>1,xjc2975[43]};ead4800<={tx_req>>1,xjc2975[44]};qva4000<={tx_data>>1,xjc2975[45]};goef79e<={tx_st>>1,xjc2975[46]};th7bcf0<={tx_end>>1,xjc2975[47]};ykde786<={tx_nlfy>>1,xjc2975[48]};qv730f<=xjc2975[49];ir1d90f<=xjc2975[50];blec87c<=xjc2975[51];fn643e6<={kf2be2>>1,xjc2975[52]};gb5462c<={phy_cfgln_sum>>1,xjc2975[53]};ie21f37<=xjc2975[54];ks824e7<={dll_pause_cnt>>1,xjc2975[55]};ym158<=xjc2975[56];lq7cb2d<={rxtp_data>>1,xjc2975[57]};qge596b<=xjc2975[58];qv2cb58<=xjc2975[59];vi7cdc0<=xjc2975[60];vve6e03<=xjc2975[61];jr3701f<=xjc2975[62];xyb80ff<=xjc2975[63];fac07fa<=xjc2975[64];ofcc3ed<=xjc2975[65];pf61f6c<=xjc2975[66];gqfb66<=xjc2975[67];ay7db30<={coac509>>1,xjc2975[68]};pu1bbde<={vvcd2fd>>1,xjc2975[69]};jpddef3<={rg697ee>>1,xjc2975[70]};lsbdc57<={dl_up>>1,xjc2975[71]};cof9b8<=xjc2975[72];kddc813<=xjc2975[73];psd00bd<={vcneg_pend>>1,xjc2975[74]};xl32528<=xjc2975[75];xw63705<=xjc2975[76];tw1b82a<=xjc2975[77];ec92947<={epa437e>>1,xjc2975[78]};vx94a39<={aa21bf5>>1,xjc2975[79]};xla51ce<={sjdfa8>>1,xjc2975[80]};cmcef9d<={kf39400>>1,xjc2975[81]};ui77ce8<={faca004>>1,xjc2975[82]};epbe740<={zx50023>>1,xjc2975[83]};pff3a05<={gd8011f>>1,xjc2975[84]};bl40b8d<={ux23f0a>>1,xjc2975[85]};mg5c6f<={ym1f855>>1,xjc2975[86]};wy2e379<={nph_processed>>1,xjc2975[87]};rt71bc8<={npd_processed>>1,xjc2975[88]};ps791cc<={oua9cc7>>1,xjc2975[89]};vvc8e62<={en4e638>>1,xjc2975[90]};ykfa589<=xjc2975[91];thd2c49<=xjc2975[92];je9624f<=xjc2975[93];epb127a<=xjc2975[94];fc893d4<=xjc2975[95];su49ea2<=xjc2975[96];zx4f511<=xjc2975[97];wlb1ee9<=xjc2975[98];tu6cba7<=xjc2975[99];sud447c<=xjc2975[100];sh65d3a<={ADR_I>>1,xjc2975[101]};ec2e9d4<={DAT_I>>1,xjc2975[102]};hb74ea1<=xjc2975[103];hqa750f<=xjc2975[104];ir806c9<={tlpdec_tc>>1,xjc2975[105]};ri2086c<={cfgec_tvmap>>1,xjc2975[106]};vk1b267<={fad0698>>1,xjc2975[107]};ald933a<={gbd30d8>>1,xjc2975[108]};shc99d5<={pu1b10d>>1,xjc2975[109]};ww4cead<={aa21ab0>>1,xjc2975[110]};cm67569<={cm56025>>1,xjc2975[111]};hq3ab48<={ri4a35>>1,xjc2975[112]};hod5a42<={yk46ade>>1,xjc2975[113]};ngad212<={yx5bc14>>1,xjc2975[114]};cz4e491<={cfgec_vcasel>>1,xjc2975[115]};lqf4a31<={txintf_data>>1,xjc2975[116]};hq9369c<={cfg_rmux_data>>1,xjc2975[117]};ph9b4e2<={ofd37c2>>1,xjc2975[118]};dmda716<={tj9be14>>1,xjc2975[119]};mrd38b2<={nedf0a7>>1,xjc2975[120]};fc9c595<={off853a>>1,xjc2975[121]};gbe2cab<={nrc29d4>>1,xjc2975[122]};tj1655d<={ba14ea6>>1,xjc2975[123]};fcb2aee<={ria7532>>1,xjc2975[124]};oh95772<={xy3a992>>1,xjc2975[125]};wlabb95<={ead4c92>>1,xjc2975[126]};tu5dcad<={oua6490>>1,xjc2975[127]};jcee56a<={bn32480>>1,xjc2975[128]};os72b52<={ks92407>>1,xjc2975[129]};ir95a90<={ks92038>>1,xjc2975[130]};vkad484<={mt901c0>>1,xjc2975[131]};ri3f7be<={tlpdec_addr_l32>>1,xjc2975[132]};nefbdf3<={tlpdec_addr_h32>>1,xjc2975[133]};nt84714<={go67056>>1,xjc2975[134]};ou2b124<={bar_hit>>1,xjc2975[135]};sj398bb<=xjc2975[136];wjcc5dd<=xjc2975[137];zz38a98<={byebf11>>1,xjc2975[138]};ls35f51<={ba86007>>1,xjc2975[139]};phafa8b<={ng3003b>>1,xjc2975[140]};os7d45f<={an801da>>1,xjc2975[141]};kqea2f8<={gd76a1>>1,xjc2975[142]};yx517c0<={aa3b50d>>1,xjc2975[143]};vi6c485<=xjc2975[144];nr717f8<=xjc2975[145];gbf8176<=xjc2975[146];zkc0bb4<=xjc2975[147];wy5da3<=xjc2975[148];ym2ed19<=xjc2975[149];uxb464a<={shcc8e8>>1,xjc2975[150]};hb4f34c<=xjc2975[151];ne79a67<=xjc2975[152];mrc9507<=xjc2975[153];yx541e6<={int_msg_data>>1,xjc2975[154]};zza0f35<=xjc2975[155];kf79ae<=xjc2975[156];ir23067<=xjc2975[157];pfe6ba5<=xjc2975[158];ohae97b<={err_msg_data>>1,xjc2975[159]};jp74bdd<=xjc2975[160];cobc9bf<=xjc2975[161];xwe4df9<=xjc2975[162];rt7bbf2<={ou10320>>1,xjc2975[163]};ldddf96<=xjc2975[164];wwefcb6<=xjc2975[165];vv7e5b1<=xjc2975[166];uvf2d8f<=xjc2975[167];do96c7c<=xjc2975[168];ksb63e3<=xjc2975[169];rv3fd2<=xjc2975[170];gq1fe96<=xjc2975[171];fa7c66c<=xjc2975[172];the3362<=xjc2975[173];ph19b16<=xjc2975[174];fncd8b6<=xjc2975[
175];xw6c5b7<=xjc2975[176];ay62dbb<=xjc2975[177];xl16dd9<=xjc2975[178];nt28c5f<=xjc2975[179];ui462fe<=xjc2975[180];irbb3c3<={vc_rcvd>>1,xjc2975[181]};uvd9e1d<=xjc2975[182];rgcf0ec<=xjc2975[183];os78763<=xjc2975[184];mrc3b18<=xjc2975[185];ux1d8c4<={credits_rcvd>>1,xjc2975[186]};thec624<=xjc2975[187];vi63127<=xjc2975[188];ep1893a<=xjc2975[189];suc49d4<=xjc2975[190];kqc4902<=xjc2975[191];hd27508<=xjc2975[192];vk3a846<=xjc2975[193];osd4232<=xjc2975[194];wla1191<=xjc2975[195];end
always@* begin ux1852e[2047]<=zxec96c[0];ux1852e[2046]<=pf64b66[0];ux1852e[2044]<=INIT_REG_010[0];ux1852e[2040]<=INIT_REG_014[0];ux1852e[2032]<=INIT_REG_018[0];ux1852e[2018]<=msi[0];ux1852e[2017]<=INIT_REG_01C[0];ux1852e[1989]<=msi_tc[0];ux1852e[1987]<=INIT_REG_020[0];ux1852e[1947]<=ADR_I[0];ux1852e[1934]<=err_msg_ae;ux1852e[1931]<=tx_req[0];ux1852e[1927]<=INIT_REG_024[0];ux1852e[1893]<=aa21ab0[0];ux1852e[1891]<=je203ff;ux1852e[1880]<=credits_rcvd[0];ux1852e[1865]<=xl90b2[0];ux1852e[1859]<=puada6d[0];ux1852e[1857]<=tlpdec_rvcd_sts_ca;ux1852e[1847]<=DAT_I[0];ux1852e[1844]<=phy_cfgln_sum[0];ux1852e[1829]<=nedf0a7[0];ux1852e[1821]<=arb_enable;ux1852e[1815]<=tx_data[0];ux1852e[1806]<=zm964ea[0];ux1852e[1779]<=pme_status;ux1852e[1772]<=fad0698[0];ux1852e[1739]<=cm56025[0];ux1852e[1735]<=pu1ffb;ux1852e[1719]<=cmpltr_abort_p;ux1852e[1717]<=npd_processed[0];ux1852e[1712]<=malf_pkt_ph;ux1852e[1702]<=tlpdec_addr_l32[0];ux1852e[1696]<=ng3003b[0];ux1852e[1682]<=ho48596[0];ux1852e[1674]<=rxtp_st;ux1852e[1671]<=kq6d36a[0];ux1852e[1667]<=zmb181;ux1852e[1646]<=WE_I;ux1852e[1640]<=dfrm_perr;ux1852e[1628]<=yx5bc14[0];ux1852e[1611]<=int_msg_rd;ux1852e[1610]<=off853a[0];ux1852e[1603]<=aa21bf5[0];ux1852e[1595]<=arb_enable2;ux1852e[1594]<=dmd57aa;ux1852e[1582]<=tx_st[0];ux1852e[1565]<=bab2752[0];ux1852e[1564]<=ie21da4;ux1852e[1510]<=term_all_cfg;ux1852e[1507]<=err_msg_req;ux1852e[1497]<=gbd30d8[0];ux1852e[1488]<=ykf5d6d[0];ux1852e[1485]<=byc057c;ux1852e[1481]<=ofd37c2[0];ux1852e[1468]<=ur_p_ext;ux1852e[1453]<=cmpln_tout;ux1852e[1449]<=ks92038[0];ux1852e[1431]<=ri4a35[0];ux1852e[1422]<=ukffdb;ux1852e[1415]<=malf_pkt_npd;ux1852e[1391]<=unexp_cmpln;ux1852e[1387]<=oua9cc7[0];ux1852e[1386]<=bn32480[0];ux1852e[1377]<=malf_pkt_pd;ux1852e[1357]<=tlpdec_addr_h32[0];ux1852e[1345]<=an801da[0];ux1852e[1333]<=bar_hit[0];ux1852e[1326]<=lf3ab6[0];ux1852e[1317]<=jc42cb2[0];ux1852e[1300]<=rxtp_end;ux1852e[1297]<=os62849;ux1852e[1295]<=dm4da8a[0];ux1852e[1287]<=by58c0b;ux1852e[1286]<=aa3b50d[0];ux1852e[1245]<=STB_I;ux1852e[1236]<=dzc7158;ux1852e[1233]<=dll_pause_cnt[0];ux1852e[1212]<=int_msg_ae;ux1852e[1210]<=iceadb5[0];ux1852e[1209]<=cfgec_vcasel[0];ux1852e[1197]<=xy3a992[0];ux1852e[1189]<=aa92c93[0];ux1852e[1175]<=err_msg_rd;ux1852e[1173]<=nrc29d4[0];ux1852e[1172]<=lsb2c96[0];ux1852e[1158]<=sjdfa8[0];ux1852e[1142]<=ou10320[0];ux1852e[1140]<=f_nf_emsg_sent;ux1852e[1124]<=phy_l0_l0s;ux1852e[1116]<=tx_end[0];ux1852e[1105]<=cb2c67b;ux1852e[1094]<=dl_up[0];ux1852e[1092]<=mta124b;ux1852e[1087]<=wj6a299[0];ux1852e[1082]<=ls93a93[0];ux1852e[1080]<=doed20;ux1852e[1077]<=zx50023[0];ux1852e[1053]<=txintf_nlfy;ux1852e[1049]<=cfg_rmux_rd;ux1852e[1023]<=yz1d92d[0];ux1852e[1009]<=inta_n;ux1852e[973]<=ym31141;ux1852e[967]<=err_msg_data[0];ux1852e[946]<=pu1b10d[0];ux1852e[945]<=fn6407f;ux1852e[940]<=npd_rcvd;ux1852e[932]<=je1216[0];ux1852e[929]<=ohaeb69[0];ux1852e[928]<=tlpdec_rvcd_sts_ur;ux1852e[922]<=kf2be2[0];ux1852e[914]<=tj9be14[0];ux1852e[889]<=np_req_pend;ux1852e[886]<=cfgec_tvmap[0];ux1852e[859]<=cmpltr_abort_np;ux1852e[858]<=nph_processed[0];ux1852e[851]<=mt901c0[0];ux1852e[848]<=ba86007[0];ux1852e[837]<=rxtp_data[0];ux1852e[814]<=yk46ade[0];ux1852e[805]<=shcc8e8[0];ux1852e[801]<=epa437e[0];ux1852e[797]<=ng3aaf5;ux1852e[782]<=fc_overflow;ux1852e[753]<=int_disable;ux1852e[744]<=wwc4695[0];ux1852e[742]<=qtf80af;ux1852e[740]<=cfg_rmux_data[0];ux1852e[734]<=ur_np_ext;ux1852e[726]<=en4e638[0];ux1852e[724]<=ks92407[0];ux1852e[707]<=malf_pkt_nph;ux1852e[693]<=oua6490[0];ux1852e[666]<=go67056[0];ux1852e[663]<=bl40756[0];ux1852e[648]<=ksa936e;ux1852e[643]<=gd76a1[0];ux1852e[618]<=sw98e2b;ux1852e[606]<=int_msg_data[0];ux1852e[605]<=mt1d5b6[0];ux1852e[598]<=ria7532[0];ux1852e[594]<=dob2592[0];ux1852e[586]<=xl16592[0];ux1852e[562]<=vcneg_pend[0];ux1852e[552]<=rxtp_bad_tlp;ux1852e[547]<=rg697ee[0];ux1852e[546]<=do14249;ux1852e[543]<=go6d453[0];ux1852e[538]<=faca004[0];ux1852e[526]<=txintf_end;ux1852e[524]<=tlpdec_cfgrd;ux1852e[504]<=tlp_debug;ux1852e[472]<=jrc80f;ux1852e[470]<=nph_rcvd;ux1852e[466]<=bl40242[0];ux1852e[464]<=rchk_credit_cpl;ux1852e[443]<=tlpdec_tc[0];ux1852e[429]<=ym1f855[0];ux1852e[424]<=byebf11[0];ux1852e[418]<=txtp_rdy;ux1852e[402]<=ip4b323;ux1852e[400]<=qi88f93;ux1852e[376]<=int_pending;ux1852e[372]<=czf88d2[0];ux1852e[371]<=phy_link_up;ux1852e[370]<=txintf_data[0];ux1852e[346]<=ead4c92[0];ux1852e[331]<=ng96499[0];ux1852e[324]<=mrd9d4b;ux1852e[303]<=int_msg_req;ux1852e[299]<=ba14ea6[0];ux1852e[297]<=je964b2[0];ux1852e[281]<=dl_inactive;ux1852e[273]<=vvcd2fd[0];ux1852e[269]<=kf39400[0];ux1852e[252]<=wwcb0de[0];ux1852e[236]<=cfg_rmux_req;ux1852e[235]<=pd_rcvd;ux1852e[233]<=load_id;ux1852e[232]<=rchk_credit_p;ux1852e[225]<=do204ad;ux1852e[214]<=ux23f0a[0];ux1852e[201]<=cfg_rmux_end;ux1852e[200]<=hq111f2;ux1852e[185]<=tx_nlfy[0];ux1852e[162]<=ie5434;ux1852e[140]<=dl_active;ux1852e[136]<=coac509[0];ux1852e[126]<=qt514cc[0];ux1852e[117]<=ph_rcvd;ux1852e[116]<=wy9d49b[0];ux1852e[112]<=dm76902;ux1852e[107]<=gd8011f[0];ux1852e[100]<=gdd2cc;ux1852e[58]<=vc_rcvd[0];ux1852e[50]<=sja1a59;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_top_jp61b54 (
                f_clk ,
                s_clk ,
                rst_n ,
                in_fclk,
                out_sclk
               );
parameter WIDTH = 1 ;
input              f_clk ;
input              s_clk ;
input              rst_n ;
input  [WIDTH-1:0] in_fclk ;
output [WIDTH-1:0] out_sclk ;
reg [WIDTH-1:0]   rgdf3db ;
reg [WIDTH-1:0]   tucf6d7 ;
reg [WIDTH-1:0]   kqdb5df ;
reg [WIDTH-1:0]   jpd77c3 ;
reg [WIDTH-1:0]   jcdf0f4 ;
wire [WIDTH-1:0]  qtc3d14 ;
wire [WIDTH-1:0]  out_sclk ;
integer endc2dd ;
reg [WIDTH - 1 : 0] qva469a;
reg [WIDTH - 1 : 0] uk1a6ac;
reg [WIDTH - 1 : 0] yz9ab04;
reg [WIDTH - 1 : 0] qiac12a;
reg [WIDTH - 1 : 0] ba4a8c;
reg [WIDTH - 1 : 0] vk2a31b;
reg [WIDTH - 1 : 0] vk8c6d4;
reg [2047:0] ux1852e;
wire [6:0] xjc2975;

localparam do14bae = 7,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;








always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      rgdf3db <= {WIDTH{1'b0}};   else      for (endc2dd = 0; endc2dd <= WIDTH-1; endc2dd = endc2dd+1) begin         rgdf3db[endc2dd] <= (vk8c6d4[endc2dd]== 1'b1) ? uk1a6ac[endc2dd] : qva469a[endc2dd];      end
end


always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      jpd77c3 <= {WIDTH{1'b0}};   else      jpd77c3 <= uk1a6ac;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      jcdf0f4 <= {WIDTH{1'b0}};   else      jcdf0f4 <= ba4a8c;
end

assign out_sclk  = vk2a31b ;


always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      tucf6d7 <= {WIDTH{1'b0}};   else      tucf6d7 <= vk2a31b;
end

always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      kqdb5df <= {WIDTH{1'b0}};   else      kqdb5df <= yz9ab04;
end



assign qtc3d14  = uk1a6ac ^ qiac12a;
always@* begin qva469a<={in_fclk>>1,xjc2975[0]};uk1a6ac<={rgdf3db>>1,xjc2975[1]};yz9ab04<={tucf6d7>>1,xjc2975[2]};qiac12a<={kqdb5df>>1,xjc2975[3]};ba4a8c<={jpd77c3>>1,xjc2975[4]};vk2a31b<={jcdf0f4>>1,xjc2975[5]};vk8c6d4<={qtc3d14>>1,xjc2975[6]};end
always@* begin ux1852e[2047]<=rgdf3db[0];ux1852e[2046]<=tucf6d7[0];ux1852e[2044]<=kqdb5df[0];ux1852e[2040]<=jpd77c3[0];ux1852e[2032]<=jcdf0f4[0];ux1852e[2016]<=qtc3d14[0];ux1852e[1023]<=in_fclk[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_top_pipe_x1 (
   
   rst_n,              
   sys_clk,            
   
   pclk,               
   rx_data,            
   rx_data_k,          
   rx_valid,           
   rx_elec_idle,       
   rx_status,          
   phy_status,         

   
   phy_disable_scr,    
   phy_inv_polar,      
   phy_eidle_tx,       
   phy_godet_rx,       
   phy_sloopback,      
   phy_snd_beacon,     
   phy_data,           
   phy_kcntl,          
   phy_fndisp,         
   phy_ltssm_state,    
   l0s_tx_state,       
   l1_state,           
   l2_state,           

   
   force_lsm_active,   
   force_rec_ei,       
   force_phy_status,   

   
   
   tx_data,            
   tx_data_k,          
   tx_elec_idle,       
   tx_compliance,      
   rx_polarity,        
   tx_detect_rx_lb,    
   reset_n,            
   power_down,         

   
   asb_data,           
   asb_kcntl,          
   asb_err,            
   asb_eidle_rx,       
   asb_detdone_rx,     
   asb_detres_rx,      
   asb_beacon_rx,      
   asb_lane_sync,      
   asb_dskew_rx        
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam al6fac2     = 2'd2 ;
localparam db3df74     = 2'd1 ;
localparam eaefba7 = 2'd2 ;
localparam dmcfc28 = 3'd3 ;
input                     sys_clk;
input                     rst_n;
input                     pclk;
input [LANE_WIDTH*8-1:0]  rx_data;
input [LANE_WIDTH-1:0]    rx_data_k;
input [LANE_WIDTH-1:0]    rx_valid;
input [LANE_WIDTH-1:0]    rx_elec_idle;
input [LANE_WIDTH*3-1:0]  rx_status;
input                     phy_status;
input [LANE_WIDTH-1:0]    phy_disable_scr;
input [LANE_WIDTH-1:0]    phy_inv_polar;
input [LANE_WIDTH-1:0]    phy_eidle_tx;
input [LANE_WIDTH-1:0]    phy_godet_rx;
input [LANE_WIDTH-1:0]    phy_sloopback;
input [LANE_WIDTH-1:0]    phy_snd_beacon;
input [LANE_WIDTH*8-1:0]  phy_data;
input [LANE_WIDTH-1:0]    phy_kcntl;
input [LANE_WIDTH-1:0]    phy_fndisp;
input [MSM_WIDTH:0]       phy_ltssm_state;
input [L0sTSM_WIDTH:0]    l0s_tx_state;
input [L1SM_WIDTH:0]      l1_state;
input [L2SM_WIDTH:0]      l2_state;
input                     force_lsm_active;
input                     force_rec_ei;
input                     force_phy_status;
output [LANE_WIDTH*8-1:0] tx_data;
output [LANE_WIDTH-1:0]   tx_data_k;
output                    tx_detect_rx_lb;
output [LANE_WIDTH-1:0]   tx_elec_idle;
output [LANE_WIDTH-1:0]   tx_compliance;
output [LANE_WIDTH-1:0]   rx_polarity;
output                    reset_n;
output [1:0]              power_down;
output [LANE_WIDTH*8-1:0] asb_data;
output [LANE_WIDTH-1:0]   asb_kcntl;
output [LANE_WIDTH-1:0]   asb_err;
output [LANE_WIDTH-1:0]   asb_eidle_rx;
output [LANE_WIDTH-1:0]   asb_detdone_rx;
output [LANE_WIDTH-1:0]   asb_detres_rx;
output [LANE_WIDTH-1:0]   asb_beacon_rx;
output [LANE_WIDTH-1:0]   asb_lane_sync;
output                    asb_dskew_rx;
wire                      go5914e;
wire                      pfc8a71;
wire                      bl4538f;
reg [1:0]                 kf29c7e              ;
reg [1:0]                 yx4e3f4              ;
reg [1:0]                 power_down;
reg                       qv8fd2f;
reg                       fn7e97c;
reg                       rgf4be6;
reg                       lfa5f33;
wire   [7:0]              ba2f99e;
wire                      ho7ccf3;
parameter P0  = 2'b00;
parameter P0s = 2'b10;
parameter P1  = 2'b10;
parameter P2  = 2'b11;
reg tj9bd37, mede9bf ;

`ifdef ECP3

`else 

`endif 
reg [LANE_WIDTH * 8 - 1 : 0] wya6fcb;
reg [LANE_WIDTH - 1 : 0] hdbf2ce;
reg [LANE_WIDTH - 1 : 0] cmcb3be;
reg [LANE_WIDTH - 1 : 0] wwcef88;
reg [LANE_WIDTH * 3 - 1 : 0] kfbe200;
reg jcf1005;
reg [LANE_WIDTH - 1 : 0] vv40150;
reg [LANE_WIDTH - 1 : 0] wy5431;
reg [LANE_WIDTH - 1 : 0] jp50c42;
reg [LANE_WIDTH - 1 : 0] co310b3;
reg [LANE_WIDTH - 1 : 0] ne42cc0;
reg [LANE_WIDTH - 1 : 0] gqb3016;
reg [LANE_WIDTH * 8 - 1 : 0] byc0589;
reg [LANE_WIDTH - 1 : 0] fp16254;
reg [LANE_WIDTH - 1 : 0] je89534;
reg [MSM_WIDTH : 0] ld40e61;
reg [L0sTSM_WIDTH : 0] sw345a1;
reg [L1SM_WIDTH : 0] xl16843;
reg [L2SM_WIDTH : 0] yza10fc;
reg gd87e5;
reg ay43f2c;
reg aa1f960;
reg thfcb01;
reg cme580f;
reg ir2c078;
reg [1 : 0] mr603c5;
reg [1 : 0] ng1e2d;
reg ecf16b;
reg os78b59;
reg psc5ac9;
reg xl2d64b;
reg [7 : 0] dz6b25f;
reg su592fe;
reg gbc97f1;
reg cz4bf8c;
reg [2047:0] ux1852e;
wire [34:0] xjc2975;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef ECP3

`else 

`endif 

localparam do14bae = 35,jra5d72 = 32'hfdfff02b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ECP3


`else 


`endif 






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign tx_data       = byc0589;
assign tx_data_k     = fp16254;
assign tx_elec_idle  = jp50c42;
assign tx_compliance = je89534;
assign rx_polarity   = wy5431;
assign reset_n       = rst_n;




assign pfc8a71 = (kfbe200 == 3'b011) ? 1'b1 : 1'b0;
pcie_x1_top_jp61b54 #(2) do307ea   (   .f_clk(pclk) ,   .s_clk(sys_clk) ,   .rst_n (rst_n),   .in_fclk({jcf1005,cme580f}),   .out_sclk({go5914e,bl4538f})   );
assign asb_detdone_rx = thfcb01;
assign asb_detres_rx  =  (aa1f960) ? 1'b1 : ir2c078;



always @(posedge pclk or negedge rst_n) begin   if (!rst_n)      qv8fd2f <= 1'b0;   else if (jcf1005)      qv8fd2f <= 1'b0;   else if (co310b3)      qv8fd2f <= 1'b1;
end
always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      tj9bd37 <= 1'b0;      mede9bf <= 1'b0;   end   else begin      tj9bd37 <= ne42cc0;      mede9bf <= gbc97f1;   end
end
assign tx_detect_rx_lb = (ecf16b | cz4bf8c);




assign asb_data      = wya6fcb;
assign asb_kcntl     = hdbf2ce;






assign asb_lane_sync = (gd87e5) ? 1'b1 : cmcb3be;
assign asb_dskew_rx  = 1'b1 ;  

`ifdef ECP3
      assign asb_eidle_rx  = (os78b59) ? 1'b0 : (ay43f2c) ? 1'b1 : ~cmcb3be;

`else 
   assign asb_eidle_rx  = (os78b59) ? 1'b0 : (ay43f2c) ? 1'b1 : wwcef88;

`endif 

assign asb_beacon_rx = (power_down == P2 && wwcef88 == 1'b0) ? 1'b1 : 1'b0;





assign asb_err       = (kfbe200 == 3'b100 | kfbe200 == 3'b101 | kfbe200 == 3'b110 | kfbe200 == 3'b111) ? 1'b1 : 1'b0;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kf29c7e   <= P1;   end   else begin      case(ld40e61)         L0s:            if (sw345a1 == dmcfc28) begin               kf29c7e   <= P0s;            end         DISABLED,         DETECT:               kf29c7e   <= P1;         L1:            if (xl16843 == al6fac2) begin               kf29c7e   <= P1;            end         L2:            if (yza10fc == db3df74 || yza10fc == eaefba7 ) begin               kf29c7e   <= P2;            end         default:               kf29c7e   <= P0;      endcase   end
end

always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      yx4e3f4 <= P1;      power_down     <= P1;   end   else begin      yx4e3f4 <= mr603c5;      power_down     <= ng1e2d;   end
end







assign  ba2f99e  = asb_data;
assign  ho7ccf3 = asb_kcntl;
always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      fn7e97c  <= 1'b0;      rgf4be6        <= 1'b0;      lfa5f33    <= 1'b0;   end   else begin      rgf4be6 <= (dz6b25f == COM) && su592fe;      if(os78b59) begin            if(psc5ac9 || (ld40e61 != 'd1))            fn7e97c  <= 1'b0;      end      else if(psc5ac9 && (ld40e61 == 'd1) && ~xl2d64b)          fn7e97c  <= 1'b1;            if(ld40e61 != 'd1)          lfa5f33  <= 1'b0;      else if(os78b59)            lfa5f33  <= 1'b1;   end
end
always@* begin wya6fcb<={rx_data>>1,xjc2975[0]};hdbf2ce<={rx_data_k>>1,xjc2975[1]};cmcb3be<={rx_valid>>1,xjc2975[2]};wwcef88<={rx_elec_idle>>1,xjc2975[3]};kfbe200<={rx_status>>1,xjc2975[4]};jcf1005<=xjc2975[5];vv40150<={phy_disable_scr>>1,xjc2975[6]};wy5431<={phy_inv_polar>>1,xjc2975[7]};jp50c42<={phy_eidle_tx>>1,xjc2975[8]};co310b3<={phy_godet_rx>>1,xjc2975[9]};ne42cc0<={phy_sloopback>>1,xjc2975[10]};gqb3016<={phy_snd_beacon>>1,xjc2975[11]};byc0589<={phy_data>>1,xjc2975[12]};fp16254<={phy_kcntl>>1,xjc2975[13]};je89534<={phy_fndisp>>1,xjc2975[14]};ld40e61<={phy_ltssm_state>>1,xjc2975[15]};sw345a1<={l0s_tx_state>>1,xjc2975[16]};xl16843<={l1_state>>1,xjc2975[17]};yza10fc<={l2_state>>1,xjc2975[18]};gd87e5<=xjc2975[19];ay43f2c<=xjc2975[20];aa1f960<=xjc2975[21];thfcb01<=xjc2975[22];cme580f<=xjc2975[23];ir2c078<=xjc2975[24];mr603c5<={kf29c7e>>1,xjc2975[25]};ng1e2d<={yx4e3f4>>1,xjc2975[26]};ecf16b<=xjc2975[27];os78b59<=xjc2975[28];psc5ac9<=xjc2975[29];xl2d64b<=xjc2975[30];dz6b25f<={ba2f99e>>1,xjc2975[31]};su592fe<=xjc2975[32];gbc97f1<=xjc2975[33];cz4bf8c<=xjc2975[34];end
always@* begin ux1852e[2047]<=rx_data_k[0];ux1852e[2046]<=rx_valid[0];ux1852e[2044]<=rx_elec_idle[0];ux1852e[2041]<=rx_status[0];ux1852e[2035]<=phy_status;ux1852e[2022]<=phy_disable_scr[0];ux1852e[1996]<=phy_inv_polar[0];ux1852e[1945]<=phy_eidle_tx[0];ux1852e[1843]<=phy_godet_rx[0];ux1852e[1746]<=l2_state[0];ux1852e[1685]<=force_phy_status;ux1852e[1645]<=phy_fndisp[0];ux1852e[1638]<=phy_sloopback[0];ux1852e[1605]<=tj9bd37;ux1852e[1445]<=force_lsm_active;ux1852e[1425]<=ba2f99e[0];ux1852e[1380]<=rgf4be6;ux1852e[1369]<=qv8fd2f;ux1852e[1322]<=go5914e;ux1852e[1242]<=phy_ltssm_state[0];ux1852e[1229]<=phy_snd_beacon[0];ux1852e[1195]<=bl4538f;ux1852e[1162]<=mede9bf;ux1852e[1023]<=rx_data[0];ux1852e[873]<=l1_state[0];ux1852e[842]<=force_rec_ei;ux1852e[822]<=phy_kcntl[0];ux1852e[802]<=ho7ccf3;ux1852e[712]<=lfa5f33;ux1852e[690]<=fn7e97c;ux1852e[684]<=yx4e3f4[0];ux1852e[597]<=pfc8a71;ux1852e[436]<=l0s_tx_state[0];ux1852e[411]<=phy_data[0];ux1852e[342]<=kf29c7e[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule
































































`define         	DEV_ADDR_WIDTH   13

`define	            DEV_DATA_WIDTH   32

`define          	WB_ADDR_WIDTH    13

`define	            WB_DATA_WIDTH    32

`timescale 1 ns / 100 ps
module pcie_x1_top_thf98bb	
(
	
	RST_I,
	CLK_I,

	ADR_I,
	DAT_I,
	SEL_I,
	WE_I,
	STB_I,
	CYC_I,

	DAT_O,
	ACK_O,
	IRQ_O,
	
	
	CHAIN_RDAT_in,
	CHAIN_ACK_in,

	
    lfbfaa1,
	offd50e,
	kqea874,
	cz543a1,
	epa1d0d,
	xye86c,
	jp74362,
	uxa1b16,
	wld8b4,
	dm6c5a5,
	ww62d2b
);
input                       RST_I;
input                          CLK_I;
input  [(`WB_DATA_WIDTH/8)-1:0] SEL_I;
input                          WE_I;
input                          STB_I;
input                          CYC_I;
input  [`WB_DATA_WIDTH-1:0 ]   DAT_I;
input  [`WB_ADDR_WIDTH-1:0 ]   ADR_I;
input  [`DEV_DATA_WIDTH-1:0 ]  CHAIN_RDAT_in;
input                       CHAIN_ACK_in;
input                          lfbfaa1;
input  [`DEV_DATA_WIDTH-1:0 ]  kqea874;
input  [`DEV_DATA_WIDTH-1:0 ]  cz543a1;
input                          wld8b4;
input                          dm6c5a5;
input               ww62d2b;
output                         ACK_O;
output [`WB_DATA_WIDTH-1:0 ]   DAT_O;
output   IRQ_O;
output [`DEV_ADDR_WIDTH-1:0 ]  offd50e;
output [`DEV_DATA_WIDTH-1:0 ]  epa1d0d;
output [(`DEV_DATA_WIDTH/8)-1:0] xye86c;
output                         jp74362;
output                         uxa1b16;
reg                            xla098b;
reg                            tw4c5e;
reg                            cb262f3;
reg [`DEV_ADDR_WIDTH-1:0 ]     gq3179c;
reg [`DEV_DATA_WIDTH-1:0 ]     xl8bce0;
reg                            jp74362;
reg [`DEV_ADDR_WIDTH-1:0 ]     offd50e;
reg [`DEV_DATA_WIDTH-1:0 ]     epa1d0d;
reg                            uxa1b16;
reg                            xl6998;
reg                            co34cc6;
reg [`DEV_DATA_WIDTH-1:0 ]     swa6631;
reg                            gd33188;
wire                       ym98c45;
wire [`WB_DATA_WIDTH-1:0 ]     DAT_O;
wire                           ACK_O;
wire                       IRQ_O;
wire [(`DEV_DATA_WIDTH/8)-1:0] xye86c;
reg [`WB_ADDR_WIDTH - 1 : 0] sh65d3a;
reg [`WB_DATA_WIDTH - 1 : 0] ec2e9d4;
reg [(`WB_DATA_WIDTH / 8) - 1 : 0] lf283b6;
reg hb74ea1;
reg hqa750f;
reg jc76dea;
reg [`DEV_DATA_WIDTH - 1 : 0] swb6f52;
reg ngb7a90;
reg [`DEV_DATA_WIDTH - 1 : 0] zmbd482;
reg [`DEV_DATA_WIDTH - 1 : 0] uiea412;
reg zk52090;
reg cb90482;
reg co82415;
reg wl120a9;
reg ep9054c;
reg sw82a65;
reg [`DEV_ADDR_WIDTH - 1 : 0] ou15328;
reg [`DEV_DATA_WIDTH - 1 : 0] uka9941;
reg yk4ca08;
reg uv65041;
reg [`DEV_DATA_WIDTH - 1 : 0] bn2820d;
reg ip4106f;
reg oh837c;
reg [2047:0] ux1852e;
wire [22:0] xjc2975;

localparam do14bae = 23,jra5d72 = 32'hfdffda0b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;































always @(posedge lfbfaa1 or negedge RST_I) begin   if(!RST_I) begin      xla098b  <= 0;      tw4c5e <= 0;      cb262f3  <= 0;      gq3179c    <= {(`DEV_ADDR_WIDTH){1'b0}};      xl8bce0    <= {(`DEV_DATA_WIDTH){1'b0}};      jp74362    <= 0;      offd50e      <= {(`DEV_ADDR_WIDTH){1'b0}};      epa1d0d      <= {(`DEV_DATA_WIDTH){1'b0}};   end   else begin      xla098b  <= hqa750f;      tw4c5e <= wl120a9;      cb262f3  <= hb74ea1;      gq3179c    <= sh65d3a;      xl8bce0    <= ec2e9d4;      jp74362    <= sw82a65;      offd50e      <= ou15328;      epa1d0d      <= uka9941;   end
end


always @(posedge lfbfaa1 or negedge RST_I) begin   if(!RST_I) begin      uxa1b16   <= 0;   end      else if (wl120a9 && !ep9054c)begin      uxa1b16   <= 1'b1;   end   else if (wl120a9 && (zk52090 || cb90482))begin      uxa1b16   <= 1'b0;   end
end

always @(posedge CLK_I or negedge RST_I) begin   if(!RST_I) begin      xl6998        <= 0;      co34cc6       <= 0;   end   else begin      xl6998        <= zk52090 | cb90482;      co34cc6       <= yk4ca08;   end
end

always @(posedge CLK_I or negedge RST_I) begin   if(!RST_I) begin      swa6631        <= {(`WB_DATA_WIDTH){1'b0}};   end   else begin      swa6631        <= (cb90482) ? uiea412 :                        (zk52090) ? zmbd482 : bn2820d;   end
end

always @( posedge CLK_I or negedge RST_I )  if ( !RST_I )    gd33188 <= 0;  else    gd33188 <= hqa750f;
assign ym98c45 = ( ( hqa750f || ip4106f ) && jc76dea );
assign DAT_O =  ( oh837c == 1 )? bn2820d  : swb6f52;
assign ACK_O =  ( oh837c == 1 )? uv65041 : ngb7a90;
assign IRQ_O =  co82415;

always@* begin sh65d3a<={ADR_I>>1,xjc2975[0]};ec2e9d4<={DAT_I>>1,xjc2975[1]};lf283b6<={SEL_I>>1,xjc2975[2]};hb74ea1<=xjc2975[3];hqa750f<=xjc2975[4];jc76dea<=xjc2975[5];swb6f52<={CHAIN_RDAT_in>>1,xjc2975[6]};ngb7a90<=xjc2975[7];zmbd482<={kqea874>>1,xjc2975[8]};uiea412<={cz543a1>>1,xjc2975[9]};zk52090<=xjc2975[10];cb90482<=xjc2975[11];co82415<=xjc2975[12];wl120a9<=xjc2975[13];ep9054c<=xjc2975[14];sw82a65<=xjc2975[15];ou15328<={gq3179c>>1,xjc2975[16]};uka9941<={xl8bce0>>1,xjc2975[17]};yk4ca08<=xjc2975[18];uv65041<=xjc2975[19];bn2820d<={swa6631>>1,xjc2975[20]};ip4106f<=xjc2975[21];oh837c<=xjc2975[22];end
always@* begin ux1852e[2047]<=DAT_I[0];ux1852e[2046]<=SEL_I[0];ux1852e[2044]<=WE_I;ux1852e[2040]<=STB_I;ux1852e[2032]<=CYC_I;ux1852e[2016]<=CHAIN_RDAT_in[0];ux1852e[1984]<=CHAIN_ACK_in;ux1852e[1921]<=kqea874[0];ux1852e[1795]<=cz543a1[0];ux1852e[1776]<=gd33188;ux1852e[1758]<=xl6998;ux1852e[1542]<=wld8b4;ux1852e[1505]<=ym98c45;ux1852e[1468]<=co34cc6;ux1852e[1037]<=dm6c5a5;ux1852e[1023]<=ADR_I[0];ux1852e[888]<=swa6631[0];ux1852e[879]<=xl8bce0[0];ux1852e[439]<=gq3179c[0];ux1852e[219]<=cb262f3;ux1852e[109]<=tw4c5e;ux1852e[54]<=xla098b;ux1852e[27]<=ww62d2b;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_top_gb4e60b(

input                         sys_clk,      
input                         rst_n,        


input       [12:0]            ADR_I,           
input       [31:0]            DAT_I,           
input                         WE_I,            
input                         STB_I,           


input                         tx_dllp_sent,    
input       [1:0]             blc84d1,     
input       [2:0]             ne4268e,       
input       [23:0]            hd13473,     


input       [4:0]             phy_ltssm_state, 
`ifdef LW4
input       [3:0]             uid1cf4,   
input       [3:0]             asb_eidle_rx,    
input       [3:0]             asb_detdone_rx,  
input       [3:0]             asb_detres_rx,   
`else
input                         uid1cf4,   

input                         asb_eidle_rx,    
input                         asb_detdone_rx,  
input                         asb_detres_rx,   
`endif



input                         dl_inactive,     
input                         dl_init,         
input                         dl_active,       
input                         dl_up,           
 





output reg  [31:0]            RDAT_O,          
output reg                    ACK_O,           



output reg  [1:0]             tx_dllp_val,       
output wire [2:0]             tx_pmtype,       
output wire [23:0]            tx_vsd_data,     


output wire                   force_lsm_active, 
output wire                   force_rec_ei,     
output wire                   force_phy_status, 
output wire                   force_disable_scr,

output wire                   tlp_debug,       
output wire                   hl_snd_beacon,   
output wire                   hl_disable_scr,  
output wire                   hl_gto_dis,      
output wire                   hl_gto_det,      
output wire                   hl_gto_hrst,     
output wire                   hl_gto_l0stx,    
output wire                   hl_gto_l1,       
output wire                   hl_gto_l2,       
output wire                   hl_gto_l0stxfts, 
`ifdef LW4
output wire [3:0]             hl_gto_lbk,      
`else
output wire                   hl_gto_lbk,      
`endif
output wire                   hl_gto_rcvry,    
output wire                   hl_gto_cfg,      
output wire                   no_pcie_train,   


output wire [4:0]             N_FTS_INC,       
output wire [9:0]             SKP_INS_CNT,     
output wire [13:0]            zkc5737, 


output wire [6:0]             dm4da8a, 
output wire [10:0]            go6d453,
output wire [6:0]             wj6a299,
output wire [10:0]            qt514cc,
output wire [6:0]             mt8a665,
output wire [10:0]            ay5332d,
output wire [11:0]            wwcb0de,


output wire [7:0]             LINK_NUM           ) ;
reg  [31:0]          xje665f;
reg  [31:0]          ux332fe;
reg  [31:0]          hq997f5;
reg  [31:0]          uicbfab;
reg  [31:0]          ld5fd58;
reg  [31:0]          byfeac7;
reg  [31:0]          kqf563a;
reg  [31:0]          cbab1d0;
reg  [31:0]          lq58e84;
reg  [31:0]          zxc7422;
reg                  tw35b43;
reg                  jcd08bb;
reg                  fp845da;
reg                  rv22ed6;
reg                  cb176b7;
reg                  anbb5bc;
reg                  hodade5;
reg                  wjd6f2b;
reg                  hqb795d;
reg                  cobcaea;
reg                  wwe5751;

`ifdef LW4

`else

`endif

`ifdef LW4

`else  // For X1 -- 12, 16, 20 bits are used

`endif
reg [12 : 0] sh65d3a;
reg [31 : 0] ec2e9d4;
reg hb74ea1;
reg hqa750f;
reg ng892c5;
reg [1 : 0] ea4962a;
reg [2 : 0] mr4b150;
reg [23 : 0] by58a85;
reg [4 : 0] ld40e61;
reg kddc813;
reg xj50a92;
reg cof9b8;
reg lsbdc57;
reg [31 : 0] rg525a2;
reg [31 : 0] ou92d12;
reg [31 : 0] vk96891;
reg [31 : 0] anb448b;
reg [31 : 0] zma245c;
reg [31 : 0] kf122e2;
reg [31 : 0] nt91714;
reg [31 : 0] ph8b8a7;
reg [31 : 0] ui5c53e;
reg ep90e49;
reg pu14f8d;
reg zma7c6a;
reg mg3e353;
reg zkf1a99;
reg uk8d4cb;
reg kd6a658;
reg ww532c4;
reg do99620;
reg oscb103;
reg rg58819;
reg [2047:0] ux1852e;
wire [32:0] xjc2975;

`ifdef LW4

`else

`endif

`ifdef LW4

`else  // For X1 -- 12, 16, 20 bits are used

`endif

localparam do14bae = 33,jra5d72 = 32'hfdfff10b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef LW4


`else


`endif


`ifdef LW4


`else  // For X1 -- 12, 16, 20 bits are used


`endif





















assign  tx_pmtype         = rg525a2[2:0];
assign  tx_vsd_data       = rg525a2[26:3];


`ifdef LW4
   assign  hl_gto_lbk        = vk96891[21:18];

`else
   assign  hl_gto_lbk        = vk96891[18];

`endif

assign  tlp_debug         = vk96891[17];  
assign  hl_snd_beacon     = vk96891[16];  
assign  force_lsm_active  = vk96891[15];  
assign  force_rec_ei      = vk96891[14];  
assign  force_phy_status  = vk96891[13];  
assign  force_disable_scr = vk96891[12];  
assign  hl_disable_scr    = vk96891[11];
assign  hl_gto_dis        = vk96891[10];
assign  hl_gto_det        = vk96891[9];
assign  hl_gto_hrst       = vk96891[8];
assign  hl_gto_l0stx      = vk96891[7];
assign  hl_gto_l1         = vk96891[6];
assign  hl_gto_l2         = vk96891[5];
assign  hl_gto_l0stxfts   = vk96891[4];

assign  hl_gto_rcvry      = vk96891[2];
assign  hl_gto_cfg        = vk96891[1];
assign  no_pcie_train     = vk96891[0];

assign  N_FTS_INC         = anb448b[14:10];
assign  SKP_INS_CNT       = anb448b[9:0];
assign  zkc5737   = anb448b[29:16];


assign  dm4da8a    = zma245c[17:11];
assign  go6d453    = zma245c[10:0];
assign  wj6a299   = kf122e2[17:11];
assign  qt514cc   = kf122e2[10:0];
assign  mt8a665  = nt91714[17:11];
assign  ay5332d  = nt91714[10:0];
assign  wwcb0de      = ph8b8a7[11:0];

assign  LINK_NUM          = ui5c53e[7:0];



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xje665f    <= 32'd0;      ux332fe    <= 32'd0;      hq997f5      <= 32'd0;      uicbfab          <= 32'd0;            ld5fd58       <= {2'b11,`ACKNAK_LAT_TIME, 1'b1, 5'd10, `SKP_INS_CNT};      byfeac7         <= 32'hFFFFFFFF;      kqf563a         <= 32'hFFFFFFFF;      cbab1d0         <= 32'hFFFFFFFF;      lq58e84      <= 32'hFFFFFFFF;      zxc7422     <= 0;      tx_dllp_val     <= 2'b00;   end   else  begin            xje665f[7:3]  <= 0;      xje665f[31:9] <= 0;      ux332fe[29:27]<= 0;            hq997f5[31:24]  <= 0;            uicbfab[31:22]      <= 0;      ld5fd58[15]      <= 1'b1;      ld5fd58[31:30]   <= 2'b11;      byfeac7[31:18]     <= 14'b11_1111_1111_1111;      kqf563a[31:18]     <= 14'b11_1111_1111_1111;      cbab1d0[31:18]     <= 14'b11_1111_1111_1111;      lq58e84[31:12]  <= 20'hFFFFF;      zxc7422[31:16] <= 0;
            if(ea4962a[0]) begin             xje665f[30]  <= 1'b1;         xje665f[2:0] <= mr4b150;      end      else if(ep90e49 && pu14f8d)           xje665f[30]  <= 1'b0;      if(ea4962a[1]) begin             xje665f[31]   <= 1'b1;         xje665f[26:3] <= by58a85;      end      else if(ep90e49 && pu14f8d)           xje665f[31]  <= 1'b0;      if(ng892c5) begin         ux332fe[31:30] <= 2'b00;      end      else if(ep90e49 && zma7c6a) begin         ux332fe[31:30] <= ec2e9d4[31:30];           ux332fe[26:3]  <= ec2e9d4[26:3];            ux332fe[2:0]   <= ec2e9d4[2:0];          end            if(|rg525a2[31:30])          tx_dllp_val  <= 2'b00;      else if(ep90e49 && zma7c6a)         tx_dllp_val  <= ec2e9d4[31:30];            hq997f5[11:7]    <= ld40e61;      hq997f5[6:3]     <= {kddc813, xj50a92, cof9b8, lsbdc57};            


`ifdef LW4
         hq997f5[23:20]       <= uid1cf4;                  if(asb_detdone_rx[3])            hq997f5[19]    <= asb_detres_rx[3];         else if(ep90e49 && mg3e353 && ec2e9d4[19])              hq997f5[19]    <= 1'b0;         if(asb_detdone_rx[2])            hq997f5[18]    <= asb_detres_rx[2];         else if(ep90e49 && mg3e353 && ec2e9d4[18])              hq997f5[18]    <= 1'b0;         if(asb_detdone_rx[1])            hq997f5[17]    <= asb_detres_rx[1];         else if(ep90e49 && mg3e353 && ec2e9d4[17])              hq997f5[17]    <= 1'b0;         if(asb_detdone_rx[0])            hq997f5[16]    <= asb_detres_rx[0];         else if(ep90e49 && mg3e353 && ec2e9d4[16])              hq997f5[16]    <= 1'b0;                  if(asb_eidle_rx[3])            hq997f5[15]    <= 1'b1;         else if(ep90e49 && mg3e353 && ec2e9d4[15])             hq997f5[15]    <= 1'b0;         if(asb_eidle_rx[2])            hq997f5[14]    <= 1'b1;         else if(ep90e49 && mg3e353 && ec2e9d4[14])             hq997f5[14]    <= 1'b0;         if(asb_eidle_rx[1])            hq997f5[13]    <= 1'b1;         else if(ep90e49 && mg3e353 && ec2e9d4[13])             hq997f5[13]    <= 1'b0;         if(asb_eidle_rx[0])            hq997f5[12]    <= 1'b1;         else if(ep90e49 && mg3e353 && ec2e9d4[12])             hq997f5[12]    <= 1'b0;


`else  // For X1 -- 12, 16, 20 bits are used
         hq997f5[20]       <= uid1cf4;                  if(asb_detdone_rx)             hq997f5[16]    <= asb_detres_rx;         else if(ep90e49 && mg3e353 && ec2e9d4[16])              hq997f5[16]    <= 1'b0;                  if(asb_eidle_rx)            hq997f5[12]    <= 1'b1;         else if(ep90e49 && mg3e353 && ec2e9d4[12])             hq997f5[12]    <= 1'b0;


`endif

                        if(ep90e49 && zkf1a99)         uicbfab[21:0]     <= ec2e9d4[21:0];                                    if(ep90e49 && uk8d4cb) begin         ld5fd58[29:16]  <= ec2e9d4[29:16];         ld5fd58[14:10]  <= ec2e9d4[14:10];         ld5fd58[9:0]    <= ec2e9d4[9:0];      end                  if(ep90e49 && kd6a658) begin         byfeac7[17:11]     <= ec2e9d4[17:11];          byfeac7[10:0]      <= ec2e9d4[10:0];        end      if(ep90e49 && ww532c4) begin         kqf563a[17:11]     <= ec2e9d4[17:11];          kqf563a[10:0]      <= ec2e9d4[10:0];        end      if(ep90e49 && do99620) begin         cbab1d0[17:11]     <= ec2e9d4[17:11];          cbab1d0[10:0]      <= ec2e9d4[10:0];        end      if(ep90e49 && oscb103) begin         lq58e84[11:0]    <= ec2e9d4[11:0];        end            if(ep90e49 && rg58819) begin         zxc7422[15:0]     <= ec2e9d4[15:0];      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ACK_O       <= 1'b0;      RDAT_O      <= 32'd0;      jcd08bb <= 1'b0;      fp845da <= 1'b0;      rv22ed6   <= 1'b0;         cb176b7       <= 1'b0;      anbb5bc    <= 1'b0;      hodade5      <= 1'b0;      wjd6f2b      <= 1'b0;      hqb795d      <= 1'b0;      cobcaea   <= 1'b0;      wwe5751  <= 1'b0;   end   else  begin      if(ep90e49)         tw35b43    <= 1'b0;      else         tw35b43    <= hb74ea1 & hqa750f && sh65d3a[12];      if(ACK_O)         ACK_O    <= 1'b0;      else         ACK_O    <= hqa750f && sh65d3a[12];      jcd08bb <= 1'b0;      fp845da <= 1'b0;      rv22ed6   <= 1'b0;         cb176b7       <= 1'b0;      anbb5bc    <= 1'b0;      hodade5      <= 1'b0;      wjd6f2b      <= 1'b0;      hqb795d      <= 1'b0;      cobcaea   <= 1'b0;      wwe5751  <= 1'b0;      case(sh65d3a[11:0])         12'h000 : begin            jcd08bb <= 1'b1;            RDAT_O      <= xje665f;         end         12'h004 : begin            fp845da <= 1'b1;            RDAT_O      <= rg525a2;         end         12'h008 : begin            rv22ed6   <= 1'b1;               RDAT_O      <= ou92d12;         end         12'h00C : begin            cb176b7       <= 1'b1;            RDAT_O      <= vk96891;         end         12'h010 : begin            anbb5bc    <= 1'b1;            RDAT_O      <= anb448b;         end         12'h014 : begin            hodade5      <= 1'b1;            RDAT_O      <= zma245c;         end         12'h018 : begin            wjd6f2b      <= 1'b1;            RDAT_O      <= kf122e2;         end         12'h01C : begin            hqb795d      <= 1'b1;            RDAT_O      <= nt91714;         end         12'h020 : begin            cobcaea   <= 1'b1;            RDAT_O      <= ph8b8a7;         end         12'h024 : begin            wwe5751  <= 1'b1;            RDAT_O      <= ui5c53e;         end      endcase   end
end
always@* begin sh65d3a<={ADR_I>>1,xjc2975[0]};ec2e9d4<={DAT_I>>1,xjc2975[1]};hb74ea1<=xjc2975[2];hqa750f<=xjc2975[3];ng892c5<=xjc2975[4];ea4962a<={blc84d1>>1,xjc2975[5]};mr4b150<={ne4268e>>1,xjc2975[6]};by58a85<={hd13473>>1,xjc2975[7]};ld40e61<={phy_ltssm_state>>1,xjc2975[8]};kddc813<=xjc2975[9];xj50a92<=xjc2975[10];cof9b8<=xjc2975[11];lsbdc57<=xjc2975[12];rg525a2<={ux332fe>>1,xjc2975[13]};ou92d12<={hq997f5>>1,xjc2975[14]};vk96891<={uicbfab>>1,xjc2975[15]};anb448b<={ld5fd58>>1,xjc2975[16]};zma245c<={byfeac7>>1,xjc2975[17]};kf122e2<={kqf563a>>1,xjc2975[18]};nt91714<={cbab1d0>>1,xjc2975[19]};ph8b8a7<={lq58e84>>1,xjc2975[20]};ui5c53e<={zxc7422>>1,xjc2975[21]};ep90e49<=xjc2975[22];pu14f8d<=xjc2975[23];zma7c6a<=xjc2975[24];mg3e353<=xjc2975[25];zkf1a99<=xjc2975[26];uk8d4cb<=xjc2975[27];kd6a658<=xjc2975[28];ww532c4<=xjc2975[29];do99620<=xjc2975[30];oscb103<=xjc2975[31];rg58819<=xjc2975[32];end
always@* begin ux1852e[2047]<=DAT_I[0];ux1852e[2046]<=WE_I;ux1852e[2044]<=STB_I;ux1852e[2040]<=tx_dllp_sent;ux1852e[2032]<=blc84d1[0];ux1852e[2016]<=ne4268e[0];ux1852e[1985]<=hd13473[0];ux1852e[1950]<=byfeac7[0];ux1852e[1930]<=jcd08bb;ux1852e[1923]<=phy_ltssm_state[0];ux1852e[1852]<=kqf563a[0];ux1852e[1813]<=fp845da;ux1852e[1799]<=dl_inactive;ux1852e[1656]<=cbab1d0[0];ux1852e[1578]<=rv22ed6;ux1852e[1551]<=dl_init;ux1852e[1345]<=hqb795d;ux1852e[1285]<=wwe5751;ux1852e[1265]<=lq58e84[0];ux1852e[1108]<=cb176b7;ux1852e[1054]<=dl_active;ux1852e[1023]<=ADR_I[0];ux1852e[975]<=ld5fd58[0];ux1852e[965]<=tw35b43;ux1852e[672]<=wjd6f2b;ux1852e[642]<=cobcaea;ux1852e[487]<=uicbfab[0];ux1852e[482]<=zxc7422[0];ux1852e[336]<=hodade5;ux1852e[243]<=hq997f5[0];ux1852e[168]<=anbb5bc;ux1852e[121]<=ux332fe[0];ux1852e[60]<=dl_up;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_top_sync1p (
                f_clk ,
                s_clk ,
                rst_n ,
                in_fclk,
                out_sclk
               );
parameter WIDTH = 1 ;
input              f_clk ;
input              s_clk ;
input              rst_n ;
input  [WIDTH-1:0] in_fclk ;
output [WIDTH-1:0] out_sclk ;
reg [WIDTH-1:0]    rgdf3db ;
reg [WIDTH-1:0]    tucf6d7 ;
reg [WIDTH-1:0]    kqdb5df ;
reg [WIDTH-1:0]    jpd77c3 ;
reg [WIDTH-1:0]    jcdf0f4 ;
reg [WIDTH-1:0]    ks877c7 ;
wire [WIDTH-1:0]   qtc3d14 ;
wire [WIDTH-1:0]   out_sclk ;
reg [WIDTH - 1 : 0] qva469a;
reg [WIDTH - 1 : 0] uk1a6ac;
reg [WIDTH - 1 : 0] yz9ab04;
reg [WIDTH - 1 : 0] qiac12a;
reg [WIDTH - 1 : 0] ba4a8c;
reg [WIDTH - 1 : 0] vk2a31b;
reg [WIDTH - 1 : 0] wybc20c;
reg [WIDTH - 1 : 0] vk8c6d4;
reg [2047:0] ux1852e;
wire [7:0] xjc2975;

localparam do14bae = 8,jra5d72 = 32'hfdffe0cb;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;








always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      rgdf3db <= {WIDTH{1'b0}};   else      rgdf3db <= vk8c6d4 | qva469a;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      jpd77c3 <= {WIDTH{1'b0}};   else      jpd77c3 <= uk1a6ac;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      jcdf0f4 <= {WIDTH{1'b0}};   else      jcdf0f4 <= ba4a8c;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      ks877c7 <= {WIDTH{1'b0}};   else         ks877c7 <= vk2a31b;
end

assign out_sclk  = vk2a31b & ~wybc20c;


always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      tucf6d7 <= {WIDTH{1'b0}};   else      tucf6d7 <= vk2a31b;
end

always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      kqdb5df <= {WIDTH{1'b0}};   else      kqdb5df <= yz9ab04;
end




assign qtc3d14  = uk1a6ac & ~qiac12a;
always@* begin qva469a<={in_fclk>>1,xjc2975[0]};uk1a6ac<={rgdf3db>>1,xjc2975[1]};yz9ab04<={tucf6d7>>1,xjc2975[2]};qiac12a<={kqdb5df>>1,xjc2975[3]};ba4a8c<={jpd77c3>>1,xjc2975[4]};vk2a31b<={jcdf0f4>>1,xjc2975[5]};wybc20c<={ks877c7>>1,xjc2975[6]};vk8c6d4<={qtc3d14>>1,xjc2975[7]};end
always@* begin ux1852e[2047]<=rgdf3db[0];ux1852e[2046]<=tucf6d7[0];ux1852e[2044]<=kqdb5df[0];ux1852e[2040]<=jpd77c3[0];ux1852e[2033]<=jcdf0f4[0];ux1852e[2018]<=ks877c7[0];ux1852e[1988]<=qtc3d14[0];ux1852e[1023]<=in_fclk[0];end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_top_rtf3a33 #(
   parameter LANE_WIDTH = 4,   parameter D_WIDTH    = 64 )
   (
   input wire                sys_clk_250,     
   input wire                sys_clk_125,     
   input wire                rst_n,           

   input wire                term_all_cfg,    
   input wire                inta_n, 
   input wire  [7:0]         msi, 
   input wire  [2:0]         msi_tc,

   `ifdef WISHBONE
      
      input wire             RST_I,           
      input wire             CLK_I,           
      input wire [3:0]       SEL_I,           
      input wire             WE_I,            
      input wire             STB_I,           
      input wire             CYC_I,           
      input wire [31:0]      DAT_I,           
      input wire [12:0]      ADR_I,           
      input wire [31:0]      CHAIN_RDAT_in,   
      input wire             CHAIN_ACK_in,    
   `else
      input wire [9:0]       SKP_INS_CNT,     
      input wire [13:0]      zkc5737, 

      input wire [6:0]       dm4da8a,  
      input wire [10:0]      go6d453,  
      input wire [6:0]       wj6a299, 
      input wire [10:0]      qt514cc, 
      input wire [11:0]      wwcb0de,    

      input wire             tlp_debug,       
      input wire             force_lsm_active, 
      input wire             force_rec_ei,     
      input wire             force_phy_status, 
      input wire             force_disable_scr,

      input wire             hl_snd_beacon,    
      input wire             hl_disable_scr,   
      input wire             hl_gto_dis,       
      input wire             hl_gto_det,       
      input wire             hl_gto_hrst,      
      input wire             hl_gto_l0stx,     
      input wire             hl_gto_l1,        
      input wire             hl_gto_l2,        
      input wire             hl_gto_l0stxfts,  
      input wire [LANE_WIDTH-1:0] hl_gto_lbk,  
      input wire             hl_gto_rcvry,     
      input wire             hl_gto_cfg,       
      input wire             no_pcie_train,    

      
      input wire  [1:0]      tx_dllp_val,      
      input wire  [2:0]      tx_pmtype,        
      input wire  [23:0]     tx_vsd_data,      
   `endif
   
   
   `ifdef ID_INTF
      input wire [15:0]      vendor_id ,      
      input wire [15:0]      device_id ,      
      input wire [7:0]       rev_id ,         
      input wire [23:0]      class_code ,     
      input wire [15:0]      subsys_ven_id ,  
      input wire [15:0]      subsys_id ,      
      input wire             load_id ,        
   `else
      input wire [31:0]      yz1d92d ,   
      input wire [31:0]      zxec96c ,   
      input wire [31:0]      bab2752 ,   
   `endif
   input wire [31:0]         pf64b66 ,   
   input wire [31:0]         INIT_REG_010 ,   
   input wire [31:0]         INIT_REG_014 ,   
   input wire [31:0]         INIT_REG_018 ,   
   input wire [31:0]         INIT_REG_01C ,   
   input wire [31:0]         INIT_REG_020 ,   
   input wire [31:0]         INIT_REG_024 ,   
   input wire [31:0]         zm964ea ,   
   input wire [31:0]         ls93a93 ,   
   input wire [31:0]         wy9d49b ,   
   
   input wire [31:0]         bl40242 ,      
   input wire [31:0]         je1216 ,      
   input wire [9:0]          xl90b2 , 
   input wire [9:0]          ho48596 , 
   input wire [9:0]          jc42cb2 , 
   input wire [9:0]          xl16592 , 
   input wire [9:0]          lsb2c96 , 
   input wire [9:0]          je964b2 , 
   input wire [9:0]          dob2592 , 
   input wire [9:0]          aa92c93 , 
   
   input wire [31:0]         ng96499 ,      
   
   input wire [31:0]         bl40756 ,      
   input wire [31:0]         lf3ab6 ,      
   input wire [31:0]         mt1d5b6 ,      
   input wire [31:0]         iceadb5 ,      
   `ifdef GEN2
      input wire [31:0]      kq56da9 ,      
   `endif
   
   input wire [31:0]         czf88d2 ,   
   input wire [31:0]         wwc4695 ,   
   
   `ifdef CFG_VCC
      input wire [31:0]      ho57539 ,   
   `endif

   
   input wire [7:0]          ic430e9,      
   input wire [7:0]          sj18749,     
   input wire [11:0]         gbc3a4d,      
   input wire [11:0]         yz1d26c,     
   input wire                tx_req_vc0,          
   input wire [D_WIDTH-1:0]  tx_data_vc0,       
   input wire                tx_st_vc0,           
   input wire                tx_end_vc0,          
   input wire                tx_nlfy_vc0,         
   input wire                ph_buf_status_vc0,   
   input wire                pd_buf_status_vc0,   
   input wire                nph_buf_status_vc0,  
   input wire                npd_buf_status_vc0,  
   input wire                ph_processed_vc0,    
   input wire                pd_processed_vc0,    
   input wire                nph_processed_vc0,   
   input wire                npd_processed_vc0,   
   input wire [7:0]          pd_num_vc0,          
   input wire [7:0]          npd_num_vc0,         
   `ifdef X4
      input wire             tx_dwen_vc0,         
   `endif

   
   `ifdef X1
      input wire  [7:0]     rxp_data,        
      input wire            rxp_data_k,      
      input wire            rxp_valid,       
      input wire            rxp_elec_idle,   
      input wire  [2:0]     rxp_status,      
   `endif
   `ifdef X4
      input wire  [7:0]      rxp_data_ln0,        
      input wire             rxp_data_k_ln0,      
      input wire             rxp_valid_ln0,       
      input wire             rxp_elec_idle_ln0,   
      input wire  [2:0]      rxp_status_ln0,      

      input wire  [7:0]      rxp_data_ln1,        
      input wire             rxp_data_k_ln1,      
      input wire             rxp_valid_ln1,       
      input wire             rxp_elec_idle_ln1,   
      input wire  [2:0]      rxp_status_ln1,      

      input wire  [7:0]      rxp_data_ln2,        
      input wire             rxp_data_k_ln2,      
      input wire             rxp_valid_ln2,       
      input wire             rxp_elec_idle_ln2,   
      input wire  [2:0]      rxp_status_ln2,      

      input wire  [7:0]      rxp_data_ln3,        
      input wire             rxp_data_k_ln3,      
      input wire             rxp_valid_ln3,       
      input wire             rxp_elec_idle_ln3,   
      input wire  [2:0]      rxp_status_ln3,      
   `endif
   input wire                phy_status,      

   `ifdef AER
      `ifdef ECRC
         output wire         ecrc_gen_enb , 
         output wire         ecrc_chk_enb , 
      `endif
   `endif
   
   `ifdef AER
      input wire [127:0]     err_tlp_header , 
                                              
   `endif
   input wire                cmpln_tout ,     
   input wire                cmpltr_abort_np ,
   input wire                cmpltr_abort_p , 
   input wire                unexp_cmpln ,    
   input wire                ur_np_ext ,      
   input wire                ur_p_ext ,       
   input wire                np_req_pend ,    
   input wire                pme_status ,     
   `ifdef GEN2
      input wire             flr_rdy_in ,     
   `endif

   
   input wire  [D_WIDTH-1:0]   tx_lbk_data,   
   input wire  [D_WIDTH/8-1:0] tx_lbk_kcntl,  
   output wire                 tx_lbk_rdy,    
   output wire [D_WIDTH-1:0]   rx_lbk_data,   
   output wire [D_WIDTH/8-1:0] rx_lbk_kcntl,  
   `ifdef WISHBONE
      
      output wire            ACK_O,           
      output wire            IRQ_O,           
      output wire [31:0]     DAT_O,           
   `else
      
      output wire            tx_dllp_sent,    
      output wire [2:0]      rxdp_pmd_type,   
      output wire [23:0]     rxdp_vsd_data ,  
      output wire [1:0]      rxdp_dllp_val,   
   `endif

   `ifdef X1
      output wire [7:0]     txp_data,        
      output wire           txp_data_k,      
      output wire           txp_elec_idle,   
      output wire           txp_compliance,  
      output wire           rxp_polarity,    
   `endif
   `ifdef X4
      output wire [7:0]      txp_data_ln0,        
      output wire            txp_data_k_ln0,      
      output wire            txp_elec_idle_ln0,   
      output wire            txp_compliance_ln0,  
      output wire            rxp_polarity_ln0,    

      output wire [7:0]      txp_data_ln1,        
      output wire            txp_data_k_ln1,      
      output wire            txp_elec_idle_ln1,   
      output wire            txp_compliance_ln1,  
      output wire            rxp_polarity_ln1,    

      output wire [7:0]      txp_data_ln2,        
      output wire            txp_data_k_ln2,      
      output wire            txp_elec_idle_ln2,   
      output wire            txp_compliance_ln2,  
      output wire            rxp_polarity_ln2,    

      output wire [7:0]      txp_data_ln3,        
      output wire            txp_data_k_ln3,      
      output wire            txp_elec_idle_ln3,   
      output wire            txp_compliance_ln3,  
      output wire            rxp_polarity_ln3,    
   `endif
   output wire               txp_detect_rx_lb,
   output wire               reset_n,         
   output wire [1:0]         power_down,      

   output wire               phy_pol_compliance,
   output wire               phy_realign_req, 
   output wire [2:0]         phy_cfgln_sum,   
   output wire [3:0]         phy_ltssm_state, 
   output wire [2:0]         phy_ltssm_substate, 
   `ifdef X1
       output wire           ui53b38,   
   `endif
   `ifdef X4
      output wire [3:0]      phy_cfgln,       
      output wire            pcie_x1_top_mca_aligned,     
      output wire            tx_val,          
   `endif
   output wire [7:0]         xl38230,    
   output wire               tx_rdy_vc0,      
   output wire [8:0]         tx_ca_ph_vc0,    
   output wire [12:0]        tx_ca_pd_vc0,    
   output wire [8:0]         tx_ca_nph_vc0,   
   output wire [12:0]        tx_ca_npd_vc0,   
   output wire [8:0]         tx_ca_cplh_vc0,  
   output wire [12:0]        tx_ca_cpld_vc0,  
   output wire               tx_ca_p_recheck_vc0, 
   output wire               tx_ca_cpl_recheck_vc0, 
   output wire [D_WIDTH-1:0] rx_data_vc0,  
   output wire               rx_st_vc0,       
   output wire               rx_end_vc0,      
   `ifdef ECRC
      output wire            rx_ecrc_err_vc0 ,
   `endif
   output wire               rx_us_req_vc0 ,  
   output wire               rx_malf_tlp_vc0 ,
   `ifdef X4
         output wire         rx_dwen_vc0,         
   `endif
   output wire [6:0]         rx_bar_hit ,     

   output wire [2:0]         mm_enable ,     
   output wire               msi_enable ,    

   
   output wire [7:0]         bus_num ,        
   output wire [4:0]         dev_num ,        
   output wire [2:0]         func_num ,       
   output wire [1:0]         pm_power_state , 
   output wire               pme_en ,         
   output wire [5:0]         cmd_reg_out ,    
   output wire [14:0]        dev_cntl_out ,   
   output wire [7:0]         lnk_cntl_out ,   
   `ifdef GEN2
      output wire [4:0]      dev_cntl_2_out , 
      output wire            initiate_flr ,   
   `endif

   
   output wire              tx_rbuf_empty,   
   output wire              tx_dllp_pend,    
   output wire              rx_tlp_rcvd,     

   
   output wire               dl_inactive,     
   output wire               dl_init,         
   output wire               dl_active,       
   output wire               dl_up              ) 
   `ifdef X1
      `ifdef ECP5UM
         
      `else
         `ifdef ECP3
            
         `else
            
         `endif
      `endif
      
      
   `endif
   `ifdef X4
      `ifdef ECP5UM
         
      `else
         `ifdef ECP3
            
         `else
            
         `endif
      `endif
      
      
   `endif
;

`ifdef X1

`define PHY_INST pcie_x1_top_phy_x1

`define PIPE_INST pcie_x1_top_pipe_x1
parameter FADDR = 3;

`endif

`ifdef X4

`define PHY_INST phy

`define PIPE_INST pipe
parameter FADDR = 6;

`endif
wire [D_WIDTH-1:0]           tdmux_data ;
wire [D_WIDTH-1:0]           dfrm_tdata ;
wire [15:0]                  yxd93e9 ;
wire [31:0]                  czc9f4d ;
wire [D_WIDTH-1:0]           tlpgen_data ;
wire [D_WIDTH-1:0]           tlpdec_data ;
wire [D_WIDTH-1:0]           rxtp_data ;
wire [D_WIDTH-1:0]           dfrm_ddata ;
wire [2:0]                   god11ff;
wire [1:0]                   ie88ff9;
wire [2:0]                   ng3fe4a;
wire [1:0]                   cmff252;
wire [(`NUM_VC-1):0]         zxf9291;
wire [(`NUM_VC-1):0]         wjc948e;
wire [(`NUM_VC-1):0]         bl4a474;
wire [(24*`NUM_VC)-1:0]      xw574e2;
wire [(24*`NUM_VC)-1:0]      ntba712;
wire [(24*`NUM_VC)-1:0]      ipd3897;
wire [`NUM_VC-1:0]           epa437e ;
wire [`NUM_VC-1:0]           aa21bf5 ;
wire [`NUM_VC-1:0]           sjdfa8 ;
wire [2:0]                   vvcd2fd ;
wire [19:0]                  rg697ee ;
wire [1:0]                   coac509 ;
wire [`NUM_VC-1:0]           vcneg_pend ;
wire [`NUM_VC-1:0]           ykce5dc ;
wire [(`NUM_VC*3)-1:0]       su72ee1;
wire [(`NUM_VC*8)-1:0]       aa82cb0 ;
wire [2:0]                   kf2be2 ;
wire [2:0]                   cfgcs_losel;
wire [2:0]                   max_pl_size;
wire                         ext_sync;
wire                         ipd9cbb;
wire                         xjd7c45;
wire [FADDR:0]               dll_pause_cnt;
wire [D_WIDTH/2-1:0]         phy_data;
wire [D_WIDTH/16-1:0]        phy_kcntl;
wire [D_WIDTH/2-1:0]         asb_data;
wire [D_WIDTH/16-1:0]        asb_kcntl;
wire [2:0]                   phy_l0s_tx_state;
wire [1:0]                   phy_l1_state;
wire [1:0]                   phy_l2_state;
wire                         phy_disable_scr;
wire                         phy_sloopback;
wire                         phy_snd_beacon;

`ifdef X4
wire [3:0]                asb_skip_found;
wire [3:0]                asb_err;
wire [3:0]                skip_added;
wire [3:0]                skip_removed;
wire [3:0]                phy_inv_polar;
wire [3:0]                phy_eidle_tx;
wire [3:0]                phy_godet_rx;
wire [3:0]                phy_fndisp;
wire [3:0]                asb_eidle_rx;
wire [3:0]                asb_detdone_rx;
wire [3:0]                asb_detres_rx;
wire [3:0]                asb_beacon_rx;
wire [3:0]                asb_lane_sync;

`endif
wire [(8*`NUM_VC)-1:0]      ykf5d6d;
wire [(8*`NUM_VC)-1:0]      ohaeb69;
wire [(12*`NUM_VC)-1:0]     puada6d;
wire [(12*`NUM_VC)-1:0]     kq6d36a;
wire [`NUM_VC -1:0]         tx_req;
wire [(`NUM_VC*D_WIDTH)-1:0] tx_data;
wire [`NUM_VC -1:0]         tx_st;
wire [`NUM_VC -1:0]         tx_end;
wire [`NUM_VC -1:0]         tx_nlfy;
wire [`NUM_VC -1:0]         kf39400;
wire [`NUM_VC -1:0]         faca004;
wire [`NUM_VC -1:0]         zx50023;
wire [`NUM_VC -1:0]         gd8011f;
wire [`NUM_VC -1:0]         ux23f0a;
wire [`NUM_VC -1:0]         ym1f855;
wire [`NUM_VC -1:0]         nph_processed;
wire [`NUM_VC -1:0]         npd_processed;
wire [(8*`NUM_VC)-1:0]      oua9cc7;
wire [(8*`NUM_VC)-1:0]      en4e638;
wire [`NUM_VC -1:0]         tx_rdy;
wire [(`NUM_VC*9)-1:0]      tx_ca_ph;
wire [(`NUM_VC*13)-1:0]     tx_ca_pd;
wire [(`NUM_VC*9)-1:0]      kd70464;
wire [(`NUM_VC*13)-1:0]     aa82324;
wire [(`NUM_VC*9)-1:0]      tx_ca_cplh;
wire [(`NUM_VC*13)-1:0]     xy8c90a;
wire [(`NUM_VC*D_WIDTH)-1:0] rx_data;
wire [`NUM_VC -1:0]         rx_st;
wire [`NUM_VC -1:0]         rx_end;

`ifdef ECRC
wire [`NUM_VC -1:0]      rx_ecrc_err ;

`endif
wire [`NUM_VC -1:0]         rx_us_req ;
wire [`NUM_VC -1:0]         rx_malf_tlp ;
wire [`NUM_VC -1:0]         ld7b9ae ;
wire [`NUM_VC -1:0]         trnc_st     ;

`ifdef X4
wire [`NUM_VC -1:0]      db9b255;
wire [`NUM_VC -1:0]      zkfb019;
wire [1:0]               phy_skpq_nclks;
wire                     phy_skpq_val;
reg  [3:0]               mtb4eea;
reg  [3:0]               vka7755 ;
reg  [3:0]               co3baaa ;

`endif
wire [12:0]                 offd50e;
wire [31:0]                 epa1d0d;
wire                    xye86c;
wire                    jp74362;
wire                    uxa1b16;
wire [31:0]                 kqea874;
wire [31:0]                 cz543a1;
wire                        wld8b4;
wire                        dm6c5a5;
wire    ww62d2b;

`ifdef WISHBONE
wire [9:0]                  SKP_INS_CNT;
wire [13:0]                 zkc5737;
wire [6:0]                  dm4da8a;
wire [10:0]                 go6d453;
wire [6:0]                  wj6a299;
wire [10:0]                 qt514cc;
wire [11:0]                 wwcb0de;
wire  [1:0]                 tx_dllp_val;
wire [2:0]                  tx_pmtype;
wire  [23:0]                tx_vsd_data;
wire [2:0]                  rxdp_pmd_type;
wire [23:0]                 rxdp_vsd_data;
wire [1:0]                  rxdp_dllp_val;

`ifdef X4
wire [3:0]               hl_gto_lbk;

`endif

`else

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif  

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef X4

`ifdef DOWN_X2

`else

`ifdef DOWN_X1

`else

`ifdef FORCE_REG_X1

`else

`endif

`endif

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`ifdef X1

`endif

`ifdef X4

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif
reg tu6cba7;
reg ep1833c;
reg [7 : 0] ayde440;
reg [2 : 0] qi3bc88;
reg [31 : 0] yk433df;
reg [31 : 0] rv19ef9;
reg [31 : 0] tucf7ce;
reg [31 : 0] hb7be73;
reg [31 : 0] hodf39e;
reg [31 : 0] thf9cf2;
reg [31 : 0] cmce797;
reg [31 : 0] zk73cb9;
reg [31 : 0] kdf2e56;
reg [31 : 0] aa972b4;
reg [31 : 0] lsb89df;
reg [31 : 0] qgc4efb;
reg [9 : 0] fp277d9;
reg [9 : 0] ec3bece;
reg [9 : 0] jcdf670;
reg [9 : 0] hofb382;
reg [9 : 0] mrd9c13;
reg [9 : 0] eace09c;
reg [9 : 0] qt704e1;
reg [9 : 0] wy8270c;
reg [31 : 0] bn13861;
reg [31 : 0] je89e72;
reg [31 : 0] fn4f393;
reg [31 : 0] xw79c9f;
reg [31 : 0] icce4fb;
reg [31 : 0] ec8d681;
reg [31 : 0] nr6b408;
reg [7 : 0] neca763;
reg [7 : 0] ic53b1b;
reg [11 : 0] ym9d8d9;
reg [11 : 0] zxec6c8;
reg rg63647;
reg [D_WIDTH - 1 : 0] qtd91d2;
reg rtc8e95;
reg ps474af;
reg vk3a57b;
reg vvd2bdb;
reg an95edf;
reg lfaf6fc;
reg hb7b7e6;
reg kqdbf37;
reg tudf9b9;
reg pffcdcb;
reg zxe6e5f;
reg [7 : 0] ph372ff;
reg [7 : 0] swb97ff;
reg jcf1005;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg zx4f511;
reg wlb1ee9;
reg [D_WIDTH - 1 : 0] ng969ba;
reg [D_WIDTH / 8 - 1 : 0] ksa6e9d;
reg [D_WIDTH - 1 : 0] vxb5ae8;
reg [D_WIDTH - 1 : 0] dz715da;
reg [15 : 0] ofe2fd3;
reg [31 : 0] ep17e9d;
reg [D_WIDTH - 1 : 0] irae41e;
reg [D_WIDTH - 1 : 0] cob906a;
reg [D_WIDTH - 1 : 0] lq7cb2d;
reg [D_WIDTH - 1 : 0] xjcd123;
reg [2 : 0] ecaca3e;
reg [1 : 0] cz651f0;
reg [2 : 0] vi47c2e;
reg [1 : 0] mg3e172;
reg [(`NUM_VC - 1) : 0] ykf0b91;
reg [(`NUM_VC - 1) : 0] oh85c89;
reg [(`NUM_VC - 1) : 0] mg2e44d;
reg [(24 * `NUM_VC) - 1 : 0] the3133;
reg [(24 * `NUM_VC) - 1 : 0] oh1899e;
reg [(24 * `NUM_VC) - 1 : 0] uic4cf4;
reg [`NUM_VC - 1 : 0] ec92947;
reg [`NUM_VC - 1 : 0] vx94a39;
reg [`NUM_VC - 1 : 0] xla51ce;
reg [2 : 0] pu1bbde;
reg [19 : 0] jpddef3;
reg [1 : 0] ay7db30;
reg [`NUM_VC - 1 : 0] psd00bd;
reg [`NUM_VC - 1 : 0] cmc1a07;
reg [(`NUM_VC * 3) - 1 : 0] wld039;
reg [(`NUM_VC * 8) - 1 : 0] kqfab49;
reg [2 : 0] fn643e6;
reg [2 : 0] jccf6b4;
reg [2 : 0] ri20490;
reg vicfd6b;
reg vvd8340;
reg ne426c2;
reg [FADDR : 0] ks824e7;
reg [D_WIDTH / 2 - 1 : 0] byc0589;
reg [D_WIDTH / 16 - 1 : 0] fp16254;
reg [D_WIDTH / 2 - 1 : 0] dm5d079;
reg [D_WIDTH / 16 - 1 : 0] yx41e5d;
reg [2 : 0] kqffcb0;
reg [1 : 0] fafe580;
reg [1 : 0] wjf2c03;
reg vv40150;
reg ne42cc0;
reg gqb3016;
reg [(8 * `NUM_VC) - 1 : 0] fn4523e;
reg [(8 * `NUM_VC) - 1 : 0] qv291f6;
reg [(12 * `NUM_VC) - 1 : 0] lq47dab;
reg [(12 * `NUM_VC) - 1 : 0] ks3ed5a;
reg [`NUM_VC - 1 : 0] ead4800;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] qva4000;
reg [`NUM_VC - 1 : 0] goef79e;
reg [`NUM_VC - 1 : 0] th7bcf0;
reg [`NUM_VC - 1 : 0] ykde786;
reg [`NUM_VC - 1 : 0] cmcef9d;
reg [`NUM_VC - 1 : 0] ui77ce8;
reg [`NUM_VC - 1 : 0] epbe740;
reg [`NUM_VC - 1 : 0] pff3a05;
reg [`NUM_VC - 1 : 0] bl40b8d;
reg [`NUM_VC - 1 : 0] mg5c6f;
reg [`NUM_VC - 1 : 0] wy2e379;
reg [`NUM_VC - 1 : 0] rt71bc8;
reg [(8 * `NUM_VC) - 1 : 0] ps791cc;
reg [(8 * `NUM_VC) - 1 : 0] vvc8e62;
reg [`NUM_VC - 1 : 0] czf852a;
reg [(`NUM_VC * 9) - 1 : 0] me4cef2;
reg [(`NUM_VC * 13) - 1 : 0] ay67791;
reg [(`NUM_VC * 9) - 1 : 0] lfa5532;
reg [(`NUM_VC * 13) - 1 : 0] fc2a997;
reg [(`NUM_VC * 9) - 1 : 0] bn8bfc6;
reg [(`NUM_VC * 13) - 1 : 0] qia65dc;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] wya6fcb;
reg [`NUM_VC - 1 : 0] qvbb830;
reg [`NUM_VC - 1 : 0] czdc184;
reg [`NUM_VC - 1 : 0] goe0c25;
reg [`NUM_VC - 1 : 0] ph6128;
reg [`NUM_VC - 1 : 0] vk30947;
reg [`NUM_VC - 1 : 0] ep3987d;
reg [12 : 0] ls251df;
reg [31 : 0] hd28efb;
reg zk477de;
reg wy3bef3;
reg xwdf798;
reg [31 : 0] zmbd482;
reg [31 : 0] uiea412;
reg zk52090;
reg cb90482;
reg co82415;
reg [2047:0] ux1852e;
wire [148:0] xjc2975;

`ifdef X1

`define PHY_INST pcie_x1_top_phy_x1

`define PIPE_INST pcie_x1_top_pipe_x1

`endif

`ifdef X4

`define PHY_INST phy

`define PIPE_INST pipe

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef WISHBONE

`ifdef X4

`endif

`else

`endif

`ifdef X4

`endif


`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif  

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 


`ifdef X4

`ifdef DOWN_X1

`else

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif


`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef X4

`ifdef DOWN_X2

`else

`ifdef DOWN_X1

`else

`ifdef FORCE_REG_X1

`else

`endif

`endif

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE


`ifdef X1

`endif

`ifdef X4

`endif


`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

localparam do14bae = 149,jra5d72 = 32'hfdffc70b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef X1


`define PHY_INST pcie_x1_top_phy_x1


`define PIPE_INST pcie_x1_top_pipe_x1


`endif


`ifdef X4


`define PHY_INST phy


`define PIPE_INST pipe


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef WISHBONE


`ifdef X4


`endif


`else


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else 


`ifdef DOWN_X2


`else 


`endif 


`endif 


`endif 


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else 


`ifdef DOWN_X2


`else 


`endif 


`endif 


`endif  


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else


`endif


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ID_INTF


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef X4


`ifdef DOWN_X2


`else


`ifdef DOWN_X1


`else


`ifdef FORCE_REG_X1


`else


`endif


`endif


`endif


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif


`ifdef WISHBONE


`ifdef X1


`endif


`ifdef X4


`endif


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif








`ifdef X1



`define PHY_INST pcie_x1_top_phy_x1



`define PIPE_INST pcie_x1_top_pipe_x1



`endif



`ifdef X4



`define PHY_INST phy



`define PIPE_INST pipe



`endif






`ifdef X4



`endif






























`ifdef ECRC
   

`endif







`ifdef X4
            


`endif





`ifdef WISHBONE
                                       


`ifdef X4



`endif



`else



`endif













`ifdef X4
   assign qgd1a4f = fn643e6[2];   assign ym15727 = fn643e6[1];

`endif




`PIPE_INST #(   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   anb1e4e (      .sys_clk             (sys_clk_125),   .rst_n               (rst_n),      .pclk                (sys_clk_250),


`ifdef X1
      .rx_data          (rxp_data),      .rx_data_k        (rxp_data_k),      .rx_valid         (rxp_valid),      .rx_elec_idle     (rxp_elec_idle),      .rx_status        (rxp_status),


`endif 



`ifdef X4



`ifdef DOWN_X1
         .rx_data          ( {rxp_data_ln0, 8'd0, 8'd0, 8'd0} ),         .rx_data_k        ( {rxp_data_k_ln0, 1'b0, 1'b0, 1'b0} ),         .rx_valid         ( {rxp_valid_ln0, 1'b0, 1'b0, 1'b0} ),         .rx_elec_idle     ( {rxp_elec_idle_ln0, 1'b1, 1'b1, 1'b1} ),         .rx_status        ( {rxp_status_ln0, 3'd0, 3'd0, 3'd0} ),


`else 



`ifdef DOWN_X2
            .rx_data          ( {rxp_data_ln0, rxp_data_ln1, 8'd0, 8'd0} ),            .rx_data_k        ( {rxp_data_k_ln0, rxp_data_k_ln1, 1'b0, 1'b0} ),            .rx_valid         ( {rxp_valid_ln0, rxp_valid_ln1, 1'b0, 1'b0} ),            .rx_elec_idle     ( {rxp_elec_idle_ln0, rxp_elec_idle_ln1, 1'b1, 1'b1} ),            .rx_status        ( {rxp_status_ln0, rxp_status_ln1, 3'd0, 3'd0} ),


`else 
            .rx_data          ( {rxp_data_ln0, rxp_data_ln1, rxp_data_ln2, rxp_data_ln3} ),            .rx_data_k        ( {rxp_data_k_ln0, rxp_data_k_ln1, rxp_data_k_ln2, rxp_data_k_ln3} ),            .rx_valid         ( {rxp_valid_ln0, rxp_valid_ln1, rxp_valid_ln2, rxp_valid_ln3} ),            .rx_elec_idle     ( {rxp_elec_idle_ln0, rxp_elec_idle_ln1, rxp_elec_idle_ln2, rxp_elec_idle_ln3} ),            .rx_status        ( {rxp_status_ln0, rxp_status_ln1, rxp_status_ln2, rxp_status_ln3} ),


`endif 



`endif 



`endif 
   .phy_status          (phy_status),
      .phy_inv_polar       (phy_inv_polar),   .phy_godet_rx        (phy_godet_rx),   .phy_fndisp          (phy_fndisp),


`ifdef X1
      .phy_disable_scr  (phy_disable_scr),      .phy_sloopback    (phy_sloopback),      .phy_snd_beacon   (phy_snd_beacon),      .phy_data         (phy_data),      .phy_kcntl        (phy_kcntl),      .phy_eidle_tx     (phy_eidle_tx),


`endif 



`ifdef X4
      .phy_disable_scr     ({4{phy_disable_scr}}),      .phy_sloopback       ({4{phy_sloopback}}),      .phy_snd_beacon      ({4{phy_snd_beacon}}),


`ifdef DOWN_X1
         .phy_data         ({phy_data[31:24], 8'd0, 8'd0, 8'd0}),         .phy_kcntl        ({phy_kcntl[3], 1'b0, 1'b0, 1'b0}),         .phy_eidle_tx     ({phy_eidle_tx[3], 1'b1, 1'b1, 1'b1}),


`else 



`ifdef DOWN_X2
            .phy_data         ({phy_data[31:16], 8'd0, 8'd0}),            .phy_kcntl        ({phy_kcntl[3:2], 1'b0, 1'b0}),            .phy_eidle_tx     ({phy_eidle_tx[3:2], 1'b1, 1'b1}),


`else 
            .phy_data         (phy_data),            .phy_kcntl        (phy_kcntl),            .phy_eidle_tx     (phy_eidle_tx),


`endif 



`endif 



`endif  
   .phy_ltssm_state     (phy_ltssm_state),   .l0s_tx_state        (phy_l0s_tx_state),   .l1_state            (phy_l1_state),   .l2_state            (phy_l2_state),
      .force_lsm_active     (force_lsm_active),   .force_rec_ei         (force_rec_ei),   .force_phy_status     (force_phy_status),      


`ifdef X1
      .tx_data          (txp_data),      .tx_data_k        (txp_data_k),      .tx_elec_idle     (txp_elec_idle),      .tx_compliance    (txp_compliance),      .rx_polarity      (rxp_polarity),


`endif 



`ifdef X4
      .tx_data          ({txp_data_ln0, txp_data_ln1, txp_data_ln2,txp_data_ln3}),      .tx_data_k        ({txp_data_k_ln0, txp_data_k_ln1, txp_data_k_ln2, txp_data_k_ln3}),      .tx_elec_idle     ({txp_elec_idle_ln0, txp_elec_idle_ln1, txp_elec_idle_ln2, txp_elec_idle_ln3}),      .tx_compliance    ({txp_compliance_ln0, txp_compliance_ln1, txp_compliance_ln2, txp_compliance_ln3}),      .rx_polarity      ({rxp_polarity_ln3, rxp_polarity_ln2, rxp_polarity_ln1, rxp_polarity_ln0}),


`endif 
   .tx_detect_rx_lb     (txp_detect_rx_lb),   .reset_n             (reset_n),   .power_down          (power_down),
   


`ifdef X4
      .asb_skip_found   (asb_skip_found),      .skip_added       (skip_added),      .skip_removed     (skip_removed),


`endif 



`ifdef X1
      .asb_dskew_rx     (asb_dskew_rx),


`endif 
   .asb_data            (asb_data),   .asb_kcntl           (asb_kcntl),   .asb_err             (asb_err),   .asb_eidle_rx        (asb_eidle_rx),   .asb_detdone_rx      (asb_detdone_rx),   .asb_detres_rx       (asb_detres_rx),   .asb_beacon_rx       (asb_beacon_rx),   .asb_lane_sync       (asb_lane_sync)   );



`PHY_INST # (   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   wjf8028 (      .clk_250_tx       (sys_clk_250),   .clk_250_rx       (sys_clk_250),   .sys_clk          (sys_clk_125),   .rst_n            (rst_n),
   .normal_time      (1'b1),   .reduce_idlecnt   (1'b0),


`ifdef X4



`ifdef DOWN_X1
         .phy_pcie_x1_top_mca_disable  (1'b1),


`else
         .phy_pcie_x1_top_mca_disable  (1'b0),


`endif



`endif

      .LINK_NUM         (8'h5A),   .N_FTS_INC        (5'd10),   .SKP_INS_CNT      (SKP_INS_CNT),   .TX_EIDL_CNT      (4'h2),
   


`ifdef X1
      .asb_dskew_rx  (asb_dskew_rx),      .asb_err       (asb_err),


`endif



`ifdef X4
      .asb_skip_found(asb_skip_found),      .skip_added    (skip_added),      .skip_removed  (skip_removed),      .asb_err       (mtb4eea),


`endif
   .asb_data         (asb_data),   .asb_kcntl        (asb_kcntl),   .asb_eidle_rx     (asb_eidle_rx),   .asb_detdone_rx   (asb_detdone_rx),   .asb_detres_rx    (asb_detres_rx),   .asb_beacon_rx    (asb_beacon_rx),   .asb_lane_sync    (asb_lane_sync),
      .force_disable_scr(force_disable_scr),   .hl_snd_beacon    (hl_snd_beacon),   .hl_disable_scr   (hl_disable_scr),   .hl_gto_dis       (hl_gto_dis),   .hl_gto_det       (hl_gto_det),   .hl_gto_hrst      (hl_gto_hrst),   .hl_gto_l0stx     (hl_gto_l0stx),   .hl_gto_l1        (hl_gto_l1),   .hl_gto_l2        (hl_gto_l2),   .hl_gto_l0stxfts  (hl_gto_l0stxfts),


`ifdef X1
      .hl_gto_lbk    (hl_gto_lbk),


`endif



`ifdef X4
      .hl_gto_lbk    ({hl_gto_lbk[0],hl_gto_lbk[1],hl_gto_lbk[2],hl_gto_lbk[3]}),


`endif
   .hl_gto_rcvry     (hl_gto_rcvry),   .hl_gto_cfg       (hl_gto_cfg),   .cfgcs_losel      (cfgcs_losel),   .cfg_rtrn_lnk     (qvbe22f) ,   .dll_rtrn_lnk     (mrd9d4b) ,   .ext_sync         (ext_sync),   .no_pcie_train    (no_pcie_train),
      .tdmux_data       (tdmux_data),   .tdmux_st         (tdmux_st),   .tdmux_end        (tdmux_end),   .tdmux_edb        (tdmux_edb),   .tdmux_skp        (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st (tdmux_dllp_st),      .tdmux_dllp_end(tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_val     (tdmux_val),      .tdmux_dwen    (ng96a8a),      .tdmux_dllp    (rvaa29e),


`endif

       .tx_lbk_data      (tx_lbk_data),   .tx_lbk_kcntl     (tx_lbk_kcntl),      .tx_lbk_rdy       (tx_lbk_rdy),   .rx_lbk_data      (rx_lbk_data),   .rx_lbk_kcntl     (rx_lbk_kcntl),   .phy_realign_req  (phy_realign_req),   .phy_ltssm_state  (phy_ltssm_state),   .phy_ltssm_substate (phy_ltssm_substate),   .phy_cfgln_sum    (phy_cfgln_sum),   .phy_cfgln        (phy_cfgln),   .pol_compliance   (phy_pol_compliance),
   


`ifdef X1
      .phy_skpq_nclks(),      .phy_skpq_val  (phy_skpq_val),


`endif



`ifdef X4
      .phy_skpq_nclks(phy_skpq_nclks),      .phy_skpq_val  (phy_skpq_val),      .pcie_x1_top_mca_aligned   (pcie_x1_top_mca_aligned),


`endif

      .phy_neg_lnkw     (kf2be2),   .phy_trn_err      (qtf80af),   .phy_lnk_trn      (byc057c),
      .phy_disable_scr  (phy_disable_scr),   .phy_sloopback    (phy_sloopback),   .phy_inv_polar    (phy_inv_polar),   .phy_eidle_tx     (phy_eidle_tx),   .phy_godet_rx     (phy_godet_rx),   .phy_snd_beacon   (phy_snd_beacon),   .phy_data         (phy_data),   .phy_kcntl        (phy_kcntl),   .phy_fndisp       (phy_fndisp),   .phy_linkup       (phy_link_up),   .phy_l0           (phy_l0),   .phy_l0s_tx_state (phy_l0s_tx_state),   .phy_l1_state     (phy_l1_state),   .phy_l2_state     (phy_l2_state),   .phy_l0_l0s       (phy_l0_l0s),
      .dfrm_ddata       (dfrm_ddata),   .dfrm_tdata       (dfrm_tdata),   .dfrm_tval        (dfrm_tval),   .dfrm_st          (dfrm_st),   .dfrm_end         (dfrm_end),   .dfrm_edb         (dfrm_edb),


`ifdef X1
      .dfrm_dllp_st  (dfrm_dllp_st),      .dfrm_dllp_end (dfrm_dllp_end),


`endif



`ifdef X4
      .dfrm_dval     (goe5a3f),      .dfrm_dwen     (co3b27d),      .dfrm_seq      (yxd93e9),      .dfrm_lcrc     (czc9f4d),


`endif
   .dfrm_perr        (dfrm_perr)    );


`ifdef X1
    assign ui53b38 = phy_cfgln;

`endif




assign ipd9cbb = ~ne426c2 ;
assign dl_up   = vk30947[0];
pcie_x1_top_hd2d292  #(   .FADDR           (FADDR),   .D_WIDTH         ( D_WIDTH ) )   wya3864 (      .sys_clk        (sys_clk_125),   .rst_n          (rst_n),         .tlp_debug        (tlp_debug),   .nefb397     (12'd4095),   .zkc5737  (zkc5737),      .db13b67     (db13b67),   .tlpgen_data    (irae41e),   .tlpgen_st      (tlpgen_st),   .tlpgen_end     (tlpgen_end),   .tlpgen_nlfy    (tlpgen_nlfy),   .tlpgen_rdy_ack (tlpgen_rdy_ack),   .ntba23f     (ntba23f),   .god11ff       (ecaca3e),   .ie88ff9       (cz651f0),   .vi47fc9     (vi47fc9),   .ng3fe4a       (vi47c2e),   .cmff252       (mg3e172),   .zxf9291   (ykf0b91),   .wjc948e  (oh85c89),   .bl4a474 (mg2e44d),
   .xw574e2           (the3133),   .ntba712          (oh1899e),   .ipd3897         (uic4cf4),      .dfrm_tdata     (dz715da),   .dfrm_tval      (dfrm_tval),   .dfrm_st        (dfrm_st),   .dfrm_end       (dfrm_end),   .dfrm_edb       (dfrm_edb),


`ifdef X1
      .ux2383c (xjcd123),      .dfrm_dllp_st   (dfrm_dllp_st),      .dfrm_dllp_end  (dfrm_dllp_end),


`endif



`ifdef X4
      .dfrm_ddata     (xjcd123[63:16]),      .goe5a3f      (goe5a3f),      .co3b27d      (co3b27d),      .yxd93e9       (ofe2fd3),      .czc9f4d      (ep17e9d),
      .phy_cfgln_sum  (phy_cfgln_sum),      .qgd1a4f     (qgd1a4f),      .ym15727     (ym15727),      .phy_skpq_nclks (phy_skpq_nclks),      .sw2b9ba    (sw2b9ba),      .uk3e9a1    (uk3e9a1),


`endif
   .phy_ltssm_state(phy_ltssm_state),   .phy_link_up    (phy_link_up),   .phy_l0         (phy_l0),   .ykce5dc         (cmc1a07),   .su72ee1       (wld039),   .ipd9cbb        (vvd8340),   .max_pl_size    (ri20490),   .phy_skpq_val   (phy_skpq_val),   .bn37447 (bn37447),   .trnc_st        (ep3987d),      .jcc59b0          (tx_dllp_val[0]),   .tx_pmtype      (tx_pmtype[2:0]),   .an2cd83      (tx_dllp_val[1]),   .tx_vsd_data    (tx_vsd_data),         .txtp_rdy       (txtp_rdy),      .tdmux_data     (tdmux_data),   .tdmux_st       (tdmux_st),   .tdmux_end      (tdmux_end),   .tdmux_edb      (tdmux_edb),   .tdmux_skip     (tdmux_skip),


`ifdef X1
      .tdmux_val      (),      .tdmux_dllp_st  (tdmux_dllp_st),      .tdmux_dllp_end (tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_val   (tdmux_val),      .co347bf   (co347bf),      .ng96a8a  (ng96a8a),      .rvaa29e  (rvaa29e),


`endif

      .rxtp_data      (rxtp_data),   .rxtp_st        (rxtp_st),   .rxtp_end       (rxtp_end),   .os62849  (os62849),   .do14249  (do14249),   .mta124b   (mta124b),   .coac509  (coac509),   .ayf58a1    ({vvcd2fd, rg697ee}),   .rxdp_vsd_data  (rxdp_vsd_data) ,   .rxdp_pmd_type  (rxdp_pmd_type[2:0]),   .rxdp_dllp_val  (rxdp_dllp_val),      .hq111f2     (hq111f2),   .qi88f93     (qi88f93),   .epa437e    (epa437e),   .aa21bf5   (aa21bf5),   .sjdfa8  (sjdfa8),      .vcneg_pend     (vcneg_pend),   .cb2c67b  (cb2c67b),   .ie5434     (ie5434),   .rxtp_bad_tlp   (rxtp_bad_tlp),   .mrd9d4b (mrd9d4b),   .ksa936e (ksa936e),      .dl_inactive    (dl_inactive),   .dl_init        (dl_init),   .dl_active      (dl_active),   .dl_up          (ld7b9ae),
      .tx_rbuf_empty  (tx_rbuf_empty),   .tx_dllp_pend   (tx_dllp_pend),   .rx_tlp_rcvd    (rx_tlp_rcvd),      .dll_pause_cnt  (dll_pause_cnt),      .mef516e   (tx_dllp_sent)    );




`ifdef X4
      always @(posedge sys_clk_250 or negedge rst_n) begin      if (!rst_n) begin         vka7755 <= 4'h0 ;         co3baaa <= 4'h0 ;      end      else begin         vka7755 <= phy_cfgln ;         co3baaa <= vka7755 ;      end   end      always @(posedge sys_clk_250 or negedge rst_n) begin      if (!rst_n)         mtb4eea <= 4'd0;      else         mtb4eea <= (asb_err & co3baaa);   end

`endif


pcie_x1_top_ir33b9d  #(   .FADDR                ( FADDR ),   .D_WIDTH              ( D_WIDTH ) )   tj8b978 (      .sys_clk              ( sys_clk_125 ),   .rst_n                ( rst_n ),      


`ifdef ID_INTF
      .yz1d92d      ( {device_id,vendor_id} )  ,      .zxec96c      ( {class_code,rev_id} )  ,      .bab2752      ( {subsys_id,subsys_ven_id} )  ,      .load_id           ( load_id )  ,


`else
      .yz1d92d      ( yz1d92d )  ,      .zxec96c      ( zxec96c )  ,      .bab2752      ( bab2752 )  ,      .load_id           ( 1'b1 )  ,


`endif

   .pf64b66         ( yk433df )  ,   .INIT_REG_010         ( rv19ef9 )  ,   .INIT_REG_014         ( tucf7ce )  ,   .INIT_REG_018         ( hb7be73 )  ,   .INIT_REG_01C         ( hodf39e )  ,   .INIT_REG_020         ( thf9cf2 )  ,   .INIT_REG_024         ( cmce797 )  ,   .zm964ea         ( zk73cb9 )  ,   .ls93a93         ( kdf2e56 )  ,   .wy9d49b         ( aa972b4 )  ,      .bl40242         ( lsb89df )  ,   .je1216         ( qgc4efb )  ,   .xl90b2    ( fp277d9 )  ,   .ho48596    ( ec3bece )  ,   .jc42cb2    ( jcdf670 )  ,   .xl16592    ( hofb382 )  ,   .lsb2c96    ( mrd9c13 )  ,   .je964b2    ( eace09c )  ,   .dob2592    ( qt704e1 )  ,   .aa92c93    ( wy8270c )  ,      .ng96499         ( bn13861 )  ,      .bl40756         ( je89e72 )  ,   .lf3ab6         ( fn4f393 )  ,   .mt1d5b6         ( xw79c9f )  ,   .iceadb5         ( icce4fb )  ,


`ifdef GEN2
      .kq56da9      ( kq56da9 )  ,


`endif
      .czf88d2         ( ec8d681 )  ,   .wwc4695         ( nr6b408 )  ,   


`ifdef CFG_VCC
      .ho57539      ( ho57539 )  ,


`endif

      .ykf5d6d           ( fn4523e ),   .ohaeb69          ( qv291f6 ),   .puada6d           ( lq47dab ),   .kq6d36a          ( ks3ed5a ),   .dm4da8a       ( dm4da8a ),   .go6d453       ( go6d453 ),   .wj6a299      ( wj6a299 ),   .qt514cc      ( qt514cc ),   .wwcb0de         ( wwcb0de ),
   .tlp_debug            ( tlp_debug ),
   .inta_n               ( ep1833c ),   .msi                  ( ayde440 ),   .msi_tc               ( qi3bc88 ),      .tx_req               ( ead4800 ),   .tx_data              ( qva4000 ),   .tx_st                ( goef79e ),   .tx_end               ( th7bcf0 ),   .tx_nlfy              ( ykde786 ),
      .phy_link_up          ( phy_link_up ),   .qtf80af        ( qtf80af ),   .byc057c     ( byc057c ),   .kf2be2            ( fn643e6 ),   .dfrm_perr            ( dfrm_perr ),   .phy_cfgln_sum        ( phy_cfgln_sum ),
      .dll_pause_cnt        ( ks824e7 ),   .txtp_rdy             ( txtp_rdy ),   .rxtp_data            ( lq7cb2d ),   .rxtp_st              ( rxtp_st ),   .rxtp_end             ( rxtp_end ),


`ifdef X4
      .db9b255           ( db9b255 ),      .co347bf         ( co347bf ),


`endif

   .rxtp_bad_tlp         ( rxtp_bad_tlp ),   .cb2c67b        ( cb2c67b ),   .ie5434           ( ie5434 ),   .mrd9d4b       ( mrd9d4b ),   .ksa936e       ( ksa936e ),
   .os62849        ( os62849 ),   .do14249        ( do14249 ),   .mta124b         ( mta124b ),   .coac509        ( ay7db30 ),   .vvcd2fd        ( pu1bbde ),   .rg697ee        ( jpddef3 ),   .dl_up                ( vk30947 ),   .dl_active            ( dl_active ),   .dl_inactive          ( dl_inactive ),
   .vcneg_pend           ( psd00bd ),   .phy_l0_l0s           ( phy_l0_l0s ),   .hq111f2           ( hq111f2 ),   .qi88f93           ( qi88f93 ),   .epa437e          ( ec92947 ),   .aa21bf5         ( vx94a39 ),   .sjdfa8        ( xla51ce ),   .kf39400        ( cmcef9d ),   .faca004        ( ui77ce8 ),   .zx50023       ( epbe740 ),   .gd8011f       ( pff3a05 ),   .ux23f0a         ( bl40b8d ),   .ym1f855         ( mg5c6f ),   .nph_processed        ( wy2e379 ),   .npd_processed        ( rt71bc8 ),   .oua9cc7               ( ps791cc ),   .en4e638              ( vvc8e62 ),


`ifdef ECRC
      .ecrc_gen_enb      ( ecrc_gen_enb ) ,      .ecrc_chk_enb      ( ecrc_chk_enb ) ,


`endif

   


`ifdef AER
      .err_tlp_header    ( err_tlp_header ),


`endif
   .cmpln_tout           ( ykfa589 ),   .cmpltr_abort_np      ( thd2c49 ),   .cmpltr_abort_p       ( je9624f ),   .unexp_cmpln          ( epb127a ),   .ur_np_ext            ( fc893d4 ) ,   .ur_p_ext             ( su49ea2 ) ,   .np_req_pend          ( zx4f511 ),   .pme_status           ( wlb1ee9 ),   .term_all_cfg         ( tu6cba7 ),         .ym31141    ( 1'b0 ),


`ifdef GEN2
      .flr_rdy_in        ( flr_rdy_in ),


`endif



`ifdef X4



`ifdef DOWN_X2
         .ie88a08      ( 1'b1 ),         .xj45041      ( 1'b0 ),


`else
         .ie88a08      ( 1'b0 ),


`ifdef DOWN_X1
            .xj45041      ( 1'b1 ),


`else



`ifdef FORCE_REG_X1
               .xj45041   ( 1'b1 ),


`else
               .xj45041   ( 1'b0 ),


`endif



`endif



`endif



`endif

      .ADR_I                ( ls251df[11:0] ) ,   .DAT_I                ( hd28efb ),   .WE_I                 ( wy3bef3 ),   .STB_I                ( xwdf798 & ~ls251df[12] ),
      .RDAT_O               ( kqea874 ),   .ACK_O                ( wld8b4 ),
      .db13b67           ( db13b67 ),   .tlpgen_data          ( tlpgen_data ),   .tlpgen_st            ( tlpgen_st ),   .tlpgen_end           ( tlpgen_end ),   .tlpgen_nlfy          ( tlpgen_nlfy ),   .tlpgen_rdy_ack       ( tlpgen_rdy_ack ),   .bn37447       ( bn37447 ),      .tx_rdy               ( tx_rdy ),   .tx_ca_ph             ( tx_ca_ph ),   .tx_ca_pd             ( tx_ca_pd ),   .kd70464            ( kd70464 ),   .aa82324            ( aa82324 ),   .tx_ca_cplh           ( tx_ca_cplh ),   .xy8c90a           ( xy8c90a ),   .gqbcc7e      ( tx_ca_p_recheck_vc0 ),   .fne63f1    ( tx_ca_cpl_recheck_vc0 ),      .rx_data              ( rx_data ),   .rx_st                ( rx_st ),   .rx_end               ( rx_end ),


`ifdef ECRC
      .rx_ecrc_err       ( rx_ecrc_err ),


`endif
   .rx_us_req            ( rx_us_req ),   .rx_malf_tlp          ( rx_malf_tlp ),   .rx_bar_hit           ( rx_bar_hit ),


`ifdef X4
      .sw2b9ba       ( sw2b9ba ),      .uk3e9a1       ( uk3e9a1 ),      .tx_val            ( tx_val ),      .zkfb019           ( zkfb019 ),


`endif

   .bus_num              ( bus_num ) ,   .dev_num              ( dev_num ) ,   .func_num             ( func_num ) ,   .pm_power_state       ( pm_power_state ) ,   .pme_en               ( pme_en ) ,   .mm_enable            ( mm_enable ) ,   .msi_enable           ( msi_enable ) ,   .mes_laddr            (  ) ,   .mes_uaddr            (  ) ,   .mes_data             (  ) ,   .cmd_reg_out          ( cmd_reg_out ),   .dev_cntl_out         ( dev_cntl_out ),   .lnk_cntl_out         ( lnk_cntl_out ),   .ftl_err_out          (  ),   .nftl_err_out         (  ),   .cor_err_out          (  ),


`ifdef GEN2
      .dev_cntl_2_out    ( dev_cntl_2_out ),      .initiate_flr      ( initiate_flr ),


`endif

   .max_pl_size          ( max_pl_size ),   .ext_sync             ( ext_sync ),   .xjd7c45         ( xjd7c45 ),   .qvbe22f          ( qvbe22f ),   .cfgcs_losel          ( cfgcs_losel ),   .swa09d                ( ykce5dc ),   .su72ee1             ( su72ee1 ),   .aa82cb0         ( aa82cb0 ),   .trnc_st              ( trnc_st ),   .ntba23f           ( ntba23f ),   .god11ff             ( god11ff ),   .ie88ff9             ( ie88ff9 ),   .vi47fc9           ( vi47fc9 ),   .ng3fe4a             ( ng3fe4a ),   .cmff252             ( cmff252 ),   .zxf9291        ( zxf9291 ),   .wjc948e       ( wjc948e ),   .bl4a474      ( bl4a474 ),   .xw574e2                 ( xw574e2 ),   .ntba712                ( ntba712 ),   .ipd3897               ( ipd3897 )    );




`ifdef WISHBONE
   pcie_x1_top_gb4e60b th40ae2   (      .sys_clk              (sys_clk_125),   .rst_n                (rst_n ),      .ADR_I                (ls251df[12:0]) ,   .DAT_I                (hd28efb),   .WE_I                 (wy3bef3),   .STB_I                (xwdf798),
      .tx_dllp_sent         (tx_dllp_sent),   .blc84d1          (rxdp_dllp_val),   .ne4268e            (rxdp_pmd_type),   .hd13473          (rxdp_vsd_data) ,      .phy_ltssm_state      ({1'b0,phy_ltssm_state}),


`ifdef X1
      .uid1cf4     (rxp_valid),


`endif



`ifdef X4
      .uid1cf4     ({rxp_valid_ln0, rxp_valid_ln1, rxp_valid_ln2, rxp_valid_ln3}),


`endif
   .asb_eidle_rx         (asb_eidle_rx),   .asb_detdone_rx       (asb_detdone_rx),   .asb_detres_rx        (asb_detres_rx),      .dl_inactive          (dl_inactive),   .dl_init              (dl_init),   .dl_active            (dl_active),   .dl_up                (dl_up),
         .RDAT_O               (cz543a1),   .ACK_O                (dm6c5a5),
      .tx_dllp_val          (tx_dllp_val),   .tx_pmtype            (tx_pmtype),   .tx_vsd_data          (tx_vsd_data),      .tlp_debug            (tlp_debug),   .hl_snd_beacon        (hl_snd_beacon),   .force_lsm_active     (force_lsm_active),   .force_rec_ei         (force_rec_ei),   .force_phy_status     (force_phy_status),   .force_disable_scr    (force_disable_scr),   .hl_disable_scr       (hl_disable_scr),   .hl_gto_dis           (hl_gto_dis),   .hl_gto_det           (hl_gto_det),   .hl_gto_hrst          (hl_gto_hrst),   .hl_gto_l0stx         (hl_gto_l0stx),   .hl_gto_l1            (hl_gto_l1),   .hl_gto_l2            (hl_gto_l2),   .hl_gto_l0stxfts      (hl_gto_l0stxfts),   .hl_gto_lbk           (hl_gto_lbk),   .hl_gto_rcvry         (hl_gto_rcvry),   .hl_gto_cfg           (hl_gto_cfg),   .no_pcie_train        (no_pcie_train),

   .N_FTS_INC            (),   .SKP_INS_CNT          (SKP_INS_CNT),   .zkc5737      (zkc5737),   .dm4da8a       (dm4da8a),   .go6d453       (go6d453),   .wj6a299      (wj6a299),   .qt514cc      (qt514cc),   .mt8a665     ( ),   .ay5332d     ( ),   .wwcb0de         (wwcb0de),   .LINK_NUM             ()  );   pcie_x1_top_thf98bb tjbac7c   (      .RST_I                ( RST_I ),   .CLK_I                ( CLK_I ),   .ADR_I                ( ADR_I ),   .DAT_I                ( DAT_I ),   .SEL_I                ( SEL_I ),   .WE_I                 ( WE_I ),   .STB_I                ( STB_I ),   .CYC_I                ( CYC_I ),   .DAT_O                ( DAT_O ),   .ACK_O                ( ACK_O ),   .IRQ_O                ( IRQ_O ),
      .CHAIN_RDAT_in        ( CHAIN_RDAT_in ),   .CHAIN_ACK_in         ( CHAIN_ACK_in ),      .lfbfaa1              ( sys_clk_125 ),   .offd50e           ( offd50e ),   .kqea874         ( zmbd482 ),   .cz543a1         ( uiea412 ),   .epa1d0d           ( epa1d0d ),   .xye86c       ( ),   .jp74362         ( jp74362 ),   .uxa1b16         ( uxa1b16 ),   .wld8b4          ( zk52090 ),   .dm6c5a5          ( cb90482 ),   .ww62d2b            ( 1'b0 )   );

`endif




      assign ykf5d6d           = neca763;   assign ohaeb69          = ic53b1b;   assign puada6d           = ym9d8d9;   assign kq6d36a          = zxec6c8;   assign tx_req               = rg63647;   assign tx_data              = qtd91d2;   assign tx_st                = rtc8e95;   assign tx_end               = ps474af;   assign tx_nlfy              = vk3a57b;   assign kf39400        = vvd2bdb;   assign faca004        = an95edf;   assign zx50023       = lfaf6fc;   assign gd8011f       = hb7b7e6;   assign ux23f0a         = kqdbf37;   assign ym1f855         = tudf9b9;   assign nph_processed        = pffcdcb;   assign npd_processed        = zxe6e5f;   assign oua9cc7               = ph372ff;   assign en4e638              = swb97ff;
      assign xl38230         = kqfab49;   assign tx_rdy_vc0           = czf852a[0];   assign tx_ca_ph_vc0         = me4cef2;   assign tx_ca_pd_vc0         = ay67791;   assign tx_ca_nph_vc0        = lfa5532;   assign tx_ca_npd_vc0        = fc2a997;   assign tx_ca_cplh_vc0       = bn8bfc6;   assign tx_ca_cpld_vc0       = qia65dc;   assign rx_data_vc0          = wya6fcb;   assign rx_st_vc0            = qvbb830[0];   assign rx_end_vc0           = czdc184[0];


`ifdef ECRC
      assign rx_ecrc_err_vc0   = rx_ecrc_err[0];


`endif
   assign rx_us_req_vc0        = goe0c25[0];   assign rx_malf_tlp_vc0      = ph6128[0];



`ifdef X4
   assign db9b255 = tx_dwen_vc0;   assign rx_dwen_vc0 = zkfb019[0];


`endif


always@* begin tu6cba7<=xjc2975[0];ep1833c<=xjc2975[1];ayde440<={msi>>1,xjc2975[2]};qi3bc88<={msi_tc>>1,xjc2975[3]};yk433df<={pf64b66>>1,xjc2975[4]};rv19ef9<={INIT_REG_010>>1,xjc2975[5]};tucf7ce<={INIT_REG_014>>1,xjc2975[6]};hb7be73<={INIT_REG_018>>1,xjc2975[7]};hodf39e<={INIT_REG_01C>>1,xjc2975[8]};thf9cf2<={INIT_REG_020>>1,xjc2975[9]};cmce797<={INIT_REG_024>>1,xjc2975[10]};zk73cb9<={zm964ea>>1,xjc2975[11]};kdf2e56<={ls93a93>>1,xjc2975[12]};aa972b4<={wy9d49b>>1,xjc2975[13]};lsb89df<={bl40242>>1,xjc2975[14]};qgc4efb<={je1216>>1,xjc2975[15]};fp277d9<={xl90b2>>1,xjc2975[16]};ec3bece<={ho48596>>1,xjc2975[17]};jcdf670<={jc42cb2>>1,xjc2975[18]};hofb382<={xl16592>>1,xjc2975[19]};mrd9c13<={lsb2c96>>1,xjc2975[20]};eace09c<={je964b2>>1,xjc2975[21]};qt704e1<={dob2592>>1,xjc2975[22]};wy8270c<={aa92c93>>1,xjc2975[23]};bn13861<={ng96499>>1,xjc2975[24]};je89e72<={bl40756>>1,xjc2975[25]};fn4f393<={lf3ab6>>1,xjc2975[26]};xw79c9f<={mt1d5b6>>1,xjc2975[27]};icce4fb<={iceadb5>>1,xjc2975[28]};ec8d681<={czf88d2>>1,xjc2975[29]};nr6b408<={wwc4695>>1,xjc2975[30]};neca763<={ic430e9>>1,xjc2975[31]};ic53b1b<={sj18749>>1,xjc2975[32]};ym9d8d9<={gbc3a4d>>1,xjc2975[33]};zxec6c8<={yz1d26c>>1,xjc2975[34]};rg63647<=xjc2975[35];qtd91d2<={tx_data_vc0>>1,xjc2975[36]};rtc8e95<=xjc2975[37];ps474af<=xjc2975[38];vk3a57b<=xjc2975[39];vvd2bdb<=xjc2975[40];an95edf<=xjc2975[41];lfaf6fc<=xjc2975[42];hb7b7e6<=xjc2975[43];kqdbf37<=xjc2975[44];tudf9b9<=xjc2975[45];pffcdcb<=xjc2975[46];zxe6e5f<=xjc2975[47];ph372ff<={pd_num_vc0>>1,xjc2975[48]};swb97ff<={npd_num_vc0>>1,xjc2975[49]};jcf1005<=xjc2975[50];ykfa589<=xjc2975[51];thd2c49<=xjc2975[52];je9624f<=xjc2975[53];epb127a<=xjc2975[54];fc893d4<=xjc2975[55];su49ea2<=xjc2975[56];zx4f511<=xjc2975[57];wlb1ee9<=xjc2975[58];ng969ba<={tx_lbk_data>>1,xjc2975[59]};ksa6e9d<={tx_lbk_kcntl>>1,xjc2975[60]};vxb5ae8<={tdmux_data>>1,xjc2975[61]};dz715da<={dfrm_tdata>>1,xjc2975[62]};ofe2fd3<={yxd93e9>>1,xjc2975[63]};ep17e9d<={czc9f4d>>1,xjc2975[64]};irae41e<={tlpgen_data>>1,xjc2975[65]};cob906a<={tlpdec_data>>1,xjc2975[66]};lq7cb2d<={rxtp_data>>1,xjc2975[67]};xjcd123<={dfrm_ddata>>1,xjc2975[68]};ecaca3e<={god11ff>>1,xjc2975[69]};cz651f0<={ie88ff9>>1,xjc2975[70]};vi47c2e<={ng3fe4a>>1,xjc2975[71]};mg3e172<={cmff252>>1,xjc2975[72]};ykf0b91<={zxf9291>>1,xjc2975[73]};oh85c89<={wjc948e>>1,xjc2975[74]};mg2e44d<={bl4a474>>1,xjc2975[75]};the3133<={xw574e2>>1,xjc2975[76]};oh1899e<={ntba712>>1,xjc2975[77]};uic4cf4<={ipd3897>>1,xjc2975[78]};ec92947<={epa437e>>1,xjc2975[79]};vx94a39<={aa21bf5>>1,xjc2975[80]};xla51ce<={sjdfa8>>1,xjc2975[81]};pu1bbde<={vvcd2fd>>1,xjc2975[82]};jpddef3<={rg697ee>>1,xjc2975[83]};ay7db30<={coac509>>1,xjc2975[84]};psd00bd<={vcneg_pend>>1,xjc2975[85]};cmc1a07<={ykce5dc>>1,xjc2975[86]};wld039<={su72ee1>>1,xjc2975[87]};kqfab49<={aa82cb0>>1,xjc2975[88]};fn643e6<={kf2be2>>1,xjc2975[89]};jccf6b4<={cfgcs_losel>>1,xjc2975[90]};ri20490<={max_pl_size>>1,xjc2975[91]};vicfd6b<=xjc2975[92];vvd8340<=xjc2975[93];ne426c2<=xjc2975[94];ks824e7<={dll_pause_cnt>>1,xjc2975[95]};byc0589<={phy_data>>1,xjc2975[96]};fp16254<={phy_kcntl>>1,xjc2975[97]};dm5d079<={asb_data>>1,xjc2975[98]};yx41e5d<={asb_kcntl>>1,xjc2975[99]};kqffcb0<={phy_l0s_tx_state>>1,xjc2975[100]};fafe580<={phy_l1_state>>1,xjc2975[101]};wjf2c03<={phy_l2_state>>1,xjc2975[102]};vv40150<=xjc2975[103];ne42cc0<=xjc2975[104];gqb3016<=xjc2975[105];fn4523e<={ykf5d6d>>1,xjc2975[106]};qv291f6<={ohaeb69>>1,xjc2975[107]};lq47dab<={puada6d>>1,xjc2975[108]};ks3ed5a<={kq6d36a>>1,xjc2975[109]};ead4800<={tx_req>>1,xjc2975[110]};qva4000<={tx_data>>1,xjc2975[111]};goef79e<={tx_st>>1,xjc2975[112]};th7bcf0<={tx_end>>1,xjc2975[113]};ykde786<={tx_nlfy>>1,xjc2975[114]};cmcef9d<={kf39400>>1,xjc2975[115]};ui77ce8<={faca004>>1,xjc2975[116]};epbe740<={zx50023>>1,xjc2975[117]};pff3a05<={gd8011f>>1,xjc2975[118]};bl40b8d<={ux23f0a>>1,xjc2975[119]};mg5c6f<={ym1f855>>1,xjc2975[120]};wy2e379<={nph_processed>>1,xjc2975[121]};rt71bc8<={npd_processed>>1,xjc2975[122]};ps791cc<={oua9cc7>>1,xjc2975[123]};vvc8e62<={en4e638>>1,xjc2975[124]};czf852a<={tx_rdy>>1,xjc2975[125]};me4cef2<={tx_ca_ph>>1,xjc2975[126]};ay67791<={tx_ca_pd>>1,xjc2975[127]};lfa5532<={kd70464>>1,xjc2975[128]};fc2a997<={aa82324>>1,xjc2975[129]};bn8bfc6<={tx_ca_cplh>>1,xjc2975[130]};qia65dc<={xy8c90a>>1,xjc2975[131]};wya6fcb<={rx_data>>1,xjc2975[132]};qvbb830<={rx_st>>1,xjc2975[133]};czdc184<={rx_end>>1,xjc2975[134]};goe0c25<={rx_us_req>>1,xjc2975[135]};ph6128<={rx_malf_tlp>>1,xjc2975[136]};vk30947<={ld7b9ae>>1,xjc2975[137]};ep3987d<={trnc_st>>1,xjc2975[138]};ls251df<={offd50e>>1,xjc2975[139]};hd28efb<={epa1d0d>>1,xjc2975[140]};zk477de<=xjc2975[141];wy3bef3<=xjc2975[142];xwdf798<=xjc2975[143];zmbd482<={kqea874>>1,xjc2975[144]};uiea412<={cz543a1>>1,xjc2975[145]};zk52090<=xjc2975[146];cb90482<=xjc2975[147];co82415<=xjc2975[148];end
always@* begin ux1852e[2047]<=inta_n;ux1852e[2046]<=msi[0];ux1852e[2044]<=msi_tc[0];ux1852e[2040]<=pf64b66[0];ux1852e[2032]<=INIT_REG_010[0];ux1852e[2016]<=INIT_REG_014[0];ux1852e[2014]<=ie88ff9[0];ux1852e[1985]<=INIT_REG_018[0];ux1852e[1981]<=ng3fe4a[0];ux1852e[1970]<=xw574e2[0];ux1852e[1927]<=dfrm_tdata[0];ux1852e[1922]<=INIT_REG_01C[0];ux1852e[1915]<=cmff252[0];ux1852e[1898]<=epa1d0d[0];ux1852e[1893]<=ntba712[0];ux1852e[1890]<=phy_snd_beacon;ux1852e[1867]<=xl16592[0];ux1852e[1861]<=max_pl_size[0];ux1852e[1807]<=yxd93e9[0];ux1852e[1804]<=npd_processed_vc0;ux1852e[1797]<=INIT_REG_020[0];ux1852e[1782]<=zxf9291[0];ux1852e[1761]<=ph_processed_vc0;ux1852e[1749]<=xye86c;ux1852e[1739]<=ipd3897[0];ux1852e[1738]<=gd8011f[0];ux1852e[1733]<=ykf5d6d[0];ux1852e[1708]<=kqea874[0];ux1852e[1686]<=lsb2c96[0];ux1852e[1675]<=xy8c90a[0];ux1852e[1674]<=ext_sync;ux1852e[1652]<=su72ee1[0];ux1852e[1625]<=sjdfa8[0];ux1852e[1623]<=unexp_cmpln;ux1852e[1617]<=nph_processed[0];ux1852e[1579]<=kq6d36a[0];ux1852e[1567]<=czc9f4d[0];ux1852e[1561]<=pd_num_vc0[0];ux1852e[1558]<=iceadb5[0];ux1852e[1547]<=INIT_REG_024[0];ux1852e[1542]<=tx_data_vc0[0];ux1852e[1516]<=wjc948e[0];ux1852e[1505]<=tx_lbk_kcntl[0];ux1852e[1498]<=trnc_st[0];ux1852e[1496]<=phy_disable_scr;ux1852e[1490]<=ho48596[0];ux1852e[1475]<=pd_processed_vc0;ux1852e[1458]<=faca004[0];ux1852e[1451]<=jp74362;ux1852e[1437]<=vcneg_pend[0];ux1852e[1430]<=epa437e[0];ux1852e[1428]<=ux23f0a[0];ux1852e[1418]<=ohaeb69[0];ux1852e[1413]<=lf3ab6[0];ux1852e[1409]<=yz1d26c[0];ux1852e[1400]<=pme_status;ux1852e[1398]<=phy_l1_state[0];ux1852e[1388]<=tx_nlfy[0];ux1852e[1378]<=dm6c5a5;ux1852e[1373]<=asb_kcntl[0];ux1852e[1368]<=cz543a1[0];ux1852e[1324]<=je964b2[0];ux1852e[1306]<=tx_rdy[0];ux1852e[1303]<=rx_data[0];ux1852e[1301]<=ipd9cbb;ux1852e[1256]<=aa82cb0[0];ux1852e[1203]<=vvcd2fd[0];ux1852e[1200]<=aa92c93[0];ux1852e[1199]<=ur_np_ext;ux1852e[1187]<=npd_processed[0];ux1852e[1128]<=tx_ca_pd[0];ux1852e[1117]<=rx_end[0];ux1852e[1110]<=tx_req[0];ux1852e[1109]<=dll_pause_cnt[0];ux1852e[1086]<=tlpgen_data[0];ux1852e[1074]<=npd_num_vc0[0];ux1852e[1068]<=czf88d2[0];ux1852e[1047]<=zm964ea[0];ux1852e[1037]<=tx_st_vc0;ux1852e[1023]<=term_all_cfg;ux1852e[1007]<=god11ff[0];ux1852e[985]<=bl4a474[0];ux1852e[963]<=tdmux_data[0];ux1852e[949]<=offd50e[0];ux1852e[945]<=phy_sloopback;ux1852e[933]<=jc42cb2[0];ux1852e[930]<=cfgcs_losel[0];ux1852e[902]<=nph_processed_vc0;ux1852e[880]<=npd_buf_status_vc0;ux1852e[869]<=zx50023[0];ux1852e[854]<=uxa1b16;ux1852e[837]<=tx_ca_cplh[0];ux1852e[826]<=ykce5dc[0];ux1852e[812]<=aa21bf5[0];ux1852e[811]<=cmpltr_abort_p;ux1852e[808]<=ym1f855[0];ux1852e[789]<=puada6d[0];ux1852e[779]<=mt1d5b6[0];ux1852e[771]<=tx_req_vc0;ux1852e[752]<=tx_lbk_data[0];ux1852e[749]<=ld7b9ae[0];ux1852e[748]<=phy_l2_state[0];ux1852e[745]<=xl90b2[0];ux1852e[729]<=kf39400[0];ux1852e[718]<=coac509[0];ux1852e[709]<=ww62d2b;ux1852e[706]<=bl40756[0];ux1852e[704]<=gbc3a4d[0];ux1852e[700]<=np_req_pend;ux1852e[699]<=phy_l0s_tx_state[0];ux1852e[694]<=tx_end[0];ux1852e[689]<=wld8b4;ux1852e[686]<=asb_data[0];ux1852e[653]<=en4e638[0];ux1852e[600]<=dob2592[0];ux1852e[564]<=tx_ca_ph[0];ux1852e[558]<=rx_st[0];ux1852e[554]<=xjd7c45;ux1852e[503]<=dfrm_ddata[0];ux1852e[465]<=kf2be2[0];ux1852e[440]<=nph_buf_status_vc0;ux1852e[418]<=aa82324[0];ux1852e[405]<=cmpltr_abort_np;ux1852e[374]<=rx_malf_tlp[0];ux1852e[372]<=je1216[0];ux1852e[359]<=rg697ee[0];ux1852e[353]<=ng96499[0];ux1852e[352]<=sj18749[0];ux1852e[350]<=ur_p_ext;ux1852e[347]<=tx_st[0];ux1852e[343]<=phy_kcntl[0];ux1852e[326]<=oua9cc7[0];ux1852e[251]<=rxtp_data[0];ux1852e[220]<=pd_buf_status_vc0;ux1852e[209]<=kd70464[0];ux1852e[202]<=cmpln_tout;ux1852e[187]<=rx_us_req[0];ux1852e[186]<=bl40242[0];ux1852e[176]<=ic430e9[0];ux1852e[173]<=tx_data[0];ux1852e[171]<=phy_data[0];ux1852e[125]<=tlpdec_data[0];ux1852e[110]<=ph_buf_status_vc0;ux1852e[101]<=phy_status;ux1852e[93]<=wy9d49b[0];ux1852e[88]<=wwc4695[0];ux1852e[55]<=tx_nlfy_vc0;ux1852e[46]<=ls93a93[0];ux1852e[27]<=tx_end_vc0;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_top_pcie_core_wrap #(
   parameter LANE_WIDTH = 4,   parameter D_WIDTH    = 64 )
   (
   input wire                sys_clk_250,     
   input wire                sys_clk_125,     
   input wire                rst_n,           

   input wire                inta_n,
   input wire  [7:0]         msi,

   `ifdef WISHBONE
      
      input wire             RST_I,           
      input wire             CLK_I,           
      input wire [3:0]       SEL_I,           
      input wire             WE_I,            
      input wire             STB_I,           
      input wire             CYC_I,           
      input wire [31:0]      DAT_I,           
      input wire [12:0]      ADR_I,           
      input wire [31:0]      CHAIN_RDAT_in,   
      input wire             CHAIN_ACK_in,    
   `else
      input wire             force_lsm_active, 
      input wire             force_rec_ei,     
      input wire             force_phy_status, 
      input wire             force_disable_scr,

      input wire             hl_snd_beacon,    
      input wire             hl_disable_scr,   
      input wire             hl_gto_dis,       
      input wire             hl_gto_det,       
      input wire             hl_gto_hrst,      
      input wire             hl_gto_l0stx,     
      input wire             hl_gto_l1,        
      input wire             hl_gto_l2,        
      input wire             hl_gto_l0stxfts,  
      input wire [LANE_WIDTH-1:0] hl_gto_lbk,       
      input wire             hl_gto_rcvry,     
      input wire             hl_gto_cfg,       
      input wire             no_pcie_train,    

      
      input wire  [1:0]      tx_dllp_val,      
      input wire  [2:0]      tx_pmtype,        
      input wire  [23:0]     tx_vsd_data,      
   `endif
   `ifdef ID_INTF
      input wire [15:0]      vendor_id ,      
      input wire [15:0]      device_id ,      
      input wire [7:0]       rev_id ,         
      input wire [23:0]      class_code ,     
      input wire [15:0]      subsys_ven_id ,  
      input wire [15:0]      subsys_id ,      
      input wire             load_id ,        
   `endif
   `ifdef BAR_REG_PORTS
   input wire [31:0]         INIT_REG_010 ,   
   input wire [31:0]         INIT_REG_014 ,   
   input wire [31:0]         INIT_REG_018 ,   
   input wire [31:0]         INIT_REG_01C ,   
   input wire [31:0]         INIT_REG_020 ,   
   input wire [31:0]         INIT_REG_024 ,   
   `endif
   
   input wire                tx_req_vc0,          
   input wire [D_WIDTH-1:0]  tx_data_vc0,         
   input wire                tx_st_vc0,           
   input wire                tx_end_vc0,          
   input wire                tx_nlfy_vc0,         
   input wire                ph_buf_status_vc0,   
   input wire                pd_buf_status_vc0,   
   input wire                nph_buf_status_vc0,  
   input wire                npd_buf_status_vc0,  
   input wire                ph_processed_vc0,    
   input wire                pd_processed_vc0,    
   input wire                nph_processed_vc0,   
   input wire                npd_processed_vc0,   
   input wire [7:0]          pd_num_vc0,          
   input wire [7:0]          npd_num_vc0,         
   `ifdef X4
      input wire             tx_dwen_vc0,         
   `endif

   
   `ifdef X1
      input wire  [7:0]     rxp_data,        
      input wire            rxp_data_k,      
      input wire            rxp_valid,       
      input wire            rxp_elec_idle,   
      input wire  [2:0]     rxp_status,      
   `endif
   `ifdef X4
      input wire  [7:0]      rxp_data_ln0,        
      input wire             rxp_data_k_ln0,      
      input wire             rxp_valid_ln0,       
      input wire             rxp_elec_idle_ln0,   
      input wire  [2:0]      rxp_status_ln0,      

      input wire  [7:0]      rxp_data_ln1,        
      input wire             rxp_data_k_ln1,      
      input wire             rxp_valid_ln1,       
      input wire             rxp_elec_idle_ln1,   
      input wire  [2:0]      rxp_status_ln1,      

      input wire  [7:0]      rxp_data_ln2,        
      input wire             rxp_data_k_ln2,      
      input wire             rxp_valid_ln2,       
      input wire             rxp_elec_idle_ln2,   
      input wire  [2:0]      rxp_status_ln2,      

      input wire  [7:0]      rxp_data_ln3,        
      input wire             rxp_data_k_ln3,      
      input wire             rxp_valid_ln3,       
      input wire             rxp_elec_idle_ln3,   
      input wire  [2:0]      rxp_status_ln3,      
   `endif
   input wire                phy_status,      

   `ifdef AER
      `ifdef ECRC
         output wire         ecrc_gen_enb ,
         output wire         ecrc_chk_enb ,
      `endif
   `endif

   
   `ifdef AER
      input [127:0]          err_tlp_header , 
                                              
   `endif

   input wire                cmpln_tout ,     
   input wire                cmpltr_abort_np ,
   input wire                cmpltr_abort_p , 
   input wire                unexp_cmpln ,    
   input wire                ur_np_ext ,      
   input wire                ur_p_ext ,       
   input wire                np_req_pend ,    
   input wire                pme_status ,     
   `ifdef GEN2
      input wire             flr_rdy_in ,     
   `endif

   
   input wire  [D_WIDTH-1:0]   tx_lbk_data,   
   input wire  [D_WIDTH/8-1:0] tx_lbk_kcntl,  

   output wire                  tx_lbk_rdy,   
   output wire [D_WIDTH-1:0]    rx_lbk_data,  
   output wire [D_WIDTH/8-1:0]  rx_lbk_kcntl, 
   `ifdef WISHBONE
      
      output wire            ACK_O,           
      output wire            IRQ_O,           
      output wire [31:0]     DAT_O,           
   `else
      
      output wire            tx_dllp_sent,    
      output wire [2:0]      rxdp_pmd_type,   
      output wire [23:0]     rxdp_vsd_data ,  
      output wire [1:0]      rxdp_dllp_val,   
   `endif

   `ifdef X1
      output wire [7:0]     txp_data,        
      output wire           txp_data_k,      
      output wire           txp_elec_idle,   
      output wire           txp_compliance,  
      output wire           rxp_polarity,    
   `endif
   `ifdef X4
      output wire [7:0]      txp_data_ln0,        
      output wire            txp_data_k_ln0,      
      output wire            txp_elec_idle_ln0,   
      output wire            txp_compliance_ln0,  
      output wire            rxp_polarity_ln0,    

      output wire [7:0]      txp_data_ln1,        
      output wire            txp_data_k_ln1,      
      output wire            txp_elec_idle_ln1,   
      output wire            txp_compliance_ln1,  
      output wire            rxp_polarity_ln1,    

      output wire [7:0]      txp_data_ln2,        
      output wire            txp_data_k_ln2,      
      output wire            txp_elec_idle_ln2,   
      output wire            txp_compliance_ln2,  
      output wire            rxp_polarity_ln2,    

      output wire [7:0]      txp_data_ln3,        
      output wire            txp_data_k_ln3,      
      output wire            txp_elec_idle_ln3,   
      output wire            txp_compliance_ln3,  
      output wire            rxp_polarity_ln3,    
   `endif
   output wire               txp_detect_rx_lb,
   output wire               reset_n,         
   output wire [1:0]         power_down,      

   output wire               phy_pol_compliance,
   output wire [3:0]         phy_ltssm_state, 
   `ifdef X4
      output wire [2:0]      phy_cfgln_sum,   
      output wire [3:0]      phy_cfgln,       
      output wire            tx_val,          
   `endif
   output wire               tx_rdy_vc0,      
   output wire [8:0]         tx_ca_ph_vc0,    
   output wire [12:0]        tx_ca_pd_vc0,    
   output wire [8:0]         tx_ca_nph_vc0,   
   output wire [12:0]        tx_ca_npd_vc0,   
   output wire [8:0]         tx_ca_cplh_vc0,  
   output wire [12:0]        tx_ca_cpld_vc0,  
   output wire               tx_ca_p_recheck_vc0, 
   output wire               tx_ca_cpl_recheck_vc0, 
   output wire [D_WIDTH-1:0] rx_data_vc0,     
   output wire               rx_st_vc0,       
   output wire               rx_end_vc0,      
   `ifdef X4
      output wire            rx_dwen_vc0,     
   `endif
   `ifdef ECRC
      output wire            rx_ecrc_err_vc0 ,
   `endif
   output wire               rx_us_req_vc0 ,  
   output wire               rx_malf_tlp_vc0 ,

   output wire [6:0]         rx_bar_hit ,     

   output wire [2:0]         mm_enable ,     
   output wire               msi_enable ,    

   
   output wire [7:0]         bus_num ,        
   output wire [4:0]         dev_num ,        
   output wire [2:0]         func_num ,       
   output wire [1:0]         pm_power_state , 
   output wire               pme_en ,         
   output wire [5:0]         cmd_reg_out ,    
   output wire [14:0]        dev_cntl_out ,   
   output wire [7:0]         lnk_cntl_out ,   
   `ifdef GEN2
      output wire [4:0]      dev_cntl_2_out , 
      output wire            initiate_flr ,   
   `endif

   
   output wire               tx_rbuf_empty,   
   output wire               tx_dllp_pend,    
   output wire               rx_tlp_rcvd,     

   
   output wire               dl_inactive,     
   output wire               dl_init,         
   output wire               dl_active,       
   output wire               dl_up              ) ;

`ifdef WISHBONE

`else

`endif

`ifdef ID_INTF

`else

`endif

`ifdef BAR_REG_PORTS

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`ifdef ECRC

`endif

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif
reg rst_n_split;
reg ep1833c;
reg [7 : 0] ayde440;
reg rg63647;
reg [D_WIDTH - 1 : 0] qtd91d2;
reg rtc8e95;
reg ps474af;
reg vk3a57b;
reg vvd2bdb;
reg an95edf;
reg lfaf6fc;
reg hb7b7e6;
reg kqdbf37;
reg tudf9b9;
reg pffcdcb;
reg zxe6e5f;
reg [7 : 0] ph372ff;
reg [7 : 0] swb97ff;
reg jcf1005;
reg ykfa589;
reg thd2c49;
reg je9624f;
reg epb127a;
reg fc893d4;
reg su49ea2;
reg zx4f511;
reg wlb1ee9;
reg [D_WIDTH - 1 : 0] ng969ba;
reg [D_WIDTH / 8 - 1 : 0] ksa6e9d;
reg [2047:0] ux1852e;
wire [28:0] xjc2975;


`ifdef WISHBONE

`else

`endif

`ifdef ID_INTF

`else

`endif

`ifdef BAR_REG_PORTS

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`ifdef ECRC

`endif

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

localparam do14bae = 29,jra5d72 = 32'hfdffca4b;
localparam [31:0] ks2eb96 = jra5d72;
localparam uxae58d = jra5d72 & 4'hf;
localparam [11:0] je96360 = 'h7ff;
wire [(1 << uxae58d) -1:0] ie8d815;
reg [do14bae-1:0] mr6054b;
reg [uxae58d-1:0] ie152ec [0:1];
reg [uxae58d-1:0] kd4bb09;
reg ho5d84c;
integer thec262;
integer xj61317;


`ifdef WISHBONE


`else


`endif


`ifdef ID_INTF


`else


`endif


`ifdef BAR_REG_PORTS


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef AER


`ifdef ECRC


`endif


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef WISHBONE


`else


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif






pcie_x1_top_rtf3a33 #(   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   ofc37ec(      .sys_clk_250                ( sys_clk_250 ) ,   .sys_clk_125                ( sys_clk_125 ) ,   .rst_n                      ( rst_n_split ),   .term_all_cfg               ( `TERM_ALL_CFG ),   .inta_n                     ( ep1833c ),   .msi                        ( ayde440 ),   .msi_tc                     ( 3'b000 ),   


`ifdef WISHBONE
            .RST_I                   ( rst_n_split ),      .CLK_I                   ( CLK_I ),      .ADR_I                   ( ADR_I ),      .DAT_I                   ( DAT_I ),      .SEL_I                   ( SEL_I ),      .WE_I                    ( WE_I ),      .STB_I                   ( STB_I ),      .CYC_I                   ( CYC_I ),      .CHAIN_RDAT_in           ( CHAIN_RDAT_in ),      .CHAIN_ACK_in            ( CHAIN_ACK_in ),


`else
      .SKP_INS_CNT             ( `SKP_INS_CNT ),      .zkc5737         ( `ACKNAK_LAT_TIME ),      .dm4da8a          ( `UPDATE_FREQ_PH ),      .go6d453          ( `UPDATE_FREQ_PD ),      .wj6a299         ( `UPDATE_FREQ_NPH ),      .qt514cc         ( `UPDATE_FREQ_NPD ),      .wwcb0de            ( `UPDATE_TIMER ),      .tlp_debug               ( `TLP_DEBUG ),      .force_lsm_active        ( force_lsm_active ),      .force_rec_ei            ( force_rec_ei ),      .force_phy_status        ( force_phy_status ),      .force_disable_scr       ( force_disable_scr ),      .hl_snd_beacon           ( hl_snd_beacon ),      .hl_disable_scr          ( hl_disable_scr ),      .hl_gto_dis              ( hl_gto_dis ),      .hl_gto_det              ( hl_gto_det ),      .hl_gto_hrst             ( hl_gto_hrst ),      .hl_gto_l0stx            ( hl_gto_l0stx ),      .hl_gto_l1               ( hl_gto_l1 ),      .hl_gto_l2               ( hl_gto_l2 ),      .hl_gto_l0stxfts         ( hl_gto_l0stxfts ),      .hl_gto_lbk              ( hl_gto_lbk ),      .hl_gto_rcvry            ( hl_gto_rcvry ),      .hl_gto_cfg              ( hl_gto_cfg ),      .no_pcie_train           ( no_pcie_train ),            .tx_dllp_val             ( tx_dllp_val ),      .tx_pmtype               ( tx_pmtype ),      .tx_vsd_data             ( tx_vsd_data ),


`endif

      


`ifdef ID_INTF
      .vendor_id               ( vendor_id ),      .device_id               ( device_id ),      .rev_id                  ( rev_id ),      .class_code              ( class_code ),      .subsys_ven_id           ( subsys_ven_id ),      .subsys_id               ( subsys_id ),      .load_id                 ( load_id ),


`else
      .yz1d92d            ( `INIT_REG_000 ) ,      .zxec96c            ( `INIT_REG_008 ) ,      .bab2752            ( `INIT_REG_02C ) ,


`endif
   .pf64b66               ( `INIT_REG_00C ) ,


`ifdef BAR_REG_PORTS
   .INIT_REG_010               (  INIT_REG_010 ) ,   .INIT_REG_014               (  INIT_REG_014 ) ,   .INIT_REG_018               (  INIT_REG_018 ) ,   .INIT_REG_01C               (  INIT_REG_01C ) ,   .INIT_REG_020               (  INIT_REG_020 ) ,   .INIT_REG_024               (  INIT_REG_024 ) ,


`else
   .INIT_REG_010               ( `INIT_REG_010 ) ,   .INIT_REG_014               ( `INIT_REG_014 ) ,   .INIT_REG_018               ( `INIT_REG_018 ) ,   .INIT_REG_01C               ( `INIT_REG_01C ) ,   .INIT_REG_020               ( `INIT_REG_020 ) ,   .INIT_REG_024               ( `INIT_REG_024 ) ,


`endif
   .zm964ea               ( `INIT_REG_028 ) ,   .ls93a93               ( `INIT_REG_030 ) ,   .wy9d49b               ( `INIT_REG_03C ) ,      .bl40242               ( `INIT_REG_050 ) ,   .je1216               ( `INIT_REG_054 ) ,   .xl90b2          ( `INIT_PM_DS_DATA_0 ) ,   .ho48596          ( `INIT_PM_DS_DATA_1 ) ,   .jc42cb2          ( `INIT_PM_DS_DATA_2 ) ,   .xl16592          ( `INIT_PM_DS_DATA_3 ) ,   .lsb2c96          ( `INIT_PM_DS_DATA_4 ) ,   .je964b2          ( `INIT_PM_DS_DATA_5 ) ,   .dob2592          ( `INIT_PM_DS_DATA_6 ) ,   .aa92c93          ( `INIT_PM_DS_DATA_7 ) ,      .ng96499               ( `INIT_REG_070 ) ,      .bl40756               ( `INIT_REG_090 ) ,   .lf3ab6               ( `INIT_REG_094 ) ,   .mt1d5b6               ( `INIT_REG_09C ) ,   .iceadb5               ( `INIT_REG_0A0 ) ,


`ifdef GEN2
      .kq56da9            ( `INIT_REG_0B4 ) ,


`endif
      .czf88d2               ( `INIT_REG_104 ) ,   .wwc4695               ( `INIT_REG_108 ) ,   


`ifdef CFG_VCC
      .ho57539            ( `INIT_REG_10C ) ,


`endif

   .ic430e9          ( `INIT_PH_FC_VC0 ),   .sj18749         ( `INIT_NPH_FC_VC0 ),   .gbc3a4d          ( `INIT_PD_FC_VC0 ),   .yz1d26c         ( `INIT_NPD_FC_VC0 ),   .tx_req_vc0              ( rg63647 ),   .tx_data_vc0             ( qtd91d2 ),   .tx_st_vc0               ( rtc8e95 ),   .tx_end_vc0              ( ps474af ),   .tx_nlfy_vc0             ( vk3a57b ),   .ph_buf_status_vc0       ( vvd2bdb ),   .pd_buf_status_vc0       ( an95edf ),   .nph_buf_status_vc0      ( lfaf6fc ),   .npd_buf_status_vc0      ( hb7b7e6 ),   .ph_processed_vc0        ( kqdbf37 ),   .pd_processed_vc0        ( tudf9b9 ),   .nph_processed_vc0       ( pffcdcb ),   .npd_processed_vc0       ( zxe6e5f ),   .pd_num_vc0              ( ph372ff ),   .npd_num_vc0             ( swb97ff ),


`ifdef X4
      .tx_dwen_vc0          ( tx_dwen_vc0 ),


`endif

    


`ifdef X1
      .rxp_data             ( rxp_data ),      .rxp_data_k           ( rxp_data_k ),      .rxp_valid            ( rxp_valid ),      .rxp_elec_idle        ( rxp_elec_idle ),      .rxp_status           ( rxp_status ),


`endif



`ifdef X4
      .rxp_data_ln0         ( rxp_data_ln0 ),      .rxp_data_k_ln0       ( rxp_data_k_ln0 ),      .rxp_valid_ln0        ( rxp_valid_ln0 ),      .rxp_elec_idle_ln0    ( rxp_elec_idle_ln0 ),      .rxp_status_ln0       ( rxp_status_ln0 ),      .rxp_data_ln1         ( rxp_data_ln1 ),      .rxp_data_k_ln1       ( rxp_data_k_ln1 ),      .rxp_valid_ln1        ( rxp_valid_ln1 ),      .rxp_elec_idle_ln1    ( rxp_elec_idle_ln1 ),      .rxp_status_ln1       ( rxp_status_ln1 ),      .rxp_data_ln2         ( rxp_data_ln2 ),      .rxp_data_k_ln2       ( rxp_data_k_ln2 ),      .rxp_valid_ln2        ( rxp_valid_ln2 ),      .rxp_elec_idle_ln2    ( rxp_elec_idle_ln2 ),      .rxp_status_ln2       ( rxp_status_ln2 ),      .rxp_data_ln3         ( rxp_data_ln3 ),      .rxp_data_k_ln3       ( rxp_data_k_ln3 ),      .rxp_valid_ln3        ( rxp_valid_ln3 ),      .rxp_elec_idle_ln3    ( rxp_elec_idle_ln3 ),      .rxp_status_ln3       ( rxp_status_ln3 ),


`endif
   .phy_status              ( jcf1005),


`ifdef AER



`ifdef ECRC
         .ecrc_gen_enb         ( ecrc_gen_enb ) ,         .ecrc_chk_enb         ( ecrc_chk_enb ) ,


`endif



`endif
   


`ifdef AER
      .err_tlp_header          ( err_tlp_header ),


`endif
   .cmpln_tout                 ( ykfa589 ),   .cmpltr_abort_np            ( thd2c49 ),   .cmpltr_abort_p             ( je9624f ),   .unexp_cmpln                ( epb127a ),   .ur_np_ext                  ( fc893d4 ) ,   .ur_p_ext                   ( su49ea2 ) ,   .np_req_pend                ( zx4f511 ),   .pme_status                 ( wlb1ee9 ),


`ifdef GEN2
      .flr_rdy_in              ( flr_rdy_in ),


`endif

      .tx_lbk_data                ( ng969ba ),   .tx_lbk_kcntl               ( ksa6e9d ),   .tx_lbk_rdy                 ( tx_lbk_rdy ),   .rx_lbk_data                ( rx_lbk_data ),   .rx_lbk_kcntl               ( rx_lbk_kcntl ),


`ifdef WISHBONE
            .DAT_O                   ( DAT_O ),      .ACK_O                   ( ACK_O ),      .IRQ_O                   ( IRQ_O ),


`else
            .tx_dllp_sent            ( tx_dllp_sent ),      .rxdp_pmd_type           ( rxdp_pmd_type ),      .rxdp_vsd_data           ( rxdp_vsd_data ),      .rxdp_dllp_val           ( rxdp_dllp_val ),


`endif




`ifdef X1
      .txp_data               ( txp_data ),      .txp_data_k             ( txp_data_k ),      .txp_elec_idle          ( txp_elec_idle ),      .txp_compliance         ( txp_compliance ),      .rxp_polarity           ( rxp_polarity ),


`endif



`ifdef X4
      .txp_data_ln0               ( txp_data_ln0 ),      .txp_data_k_ln0             ( txp_data_k_ln0 ),      .txp_elec_idle_ln0          ( txp_elec_idle_ln0 ),      .txp_compliance_ln0         ( txp_compliance_ln0 ),      .rxp_polarity_ln0           ( rxp_polarity_ln0 ),      .txp_data_ln1               ( txp_data_ln1 ),      .txp_data_k_ln1             ( txp_data_k_ln1 ),      .txp_elec_idle_ln1          ( txp_elec_idle_ln1 ),      .txp_compliance_ln1         ( txp_compliance_ln1 ),      .rxp_polarity_ln1           ( rxp_polarity_ln1 ),      .txp_data_ln2               ( txp_data_ln2 ),      .txp_data_k_ln2             ( txp_data_k_ln2 ),      .txp_elec_idle_ln2          ( txp_elec_idle_ln2 ),      .txp_compliance_ln2         ( txp_compliance_ln2 ),      .rxp_polarity_ln2           ( rxp_polarity_ln2 ),      .txp_data_ln3               ( txp_data_ln3 ),      .txp_data_k_ln3             ( txp_data_k_ln3 ),      .txp_elec_idle_ln3          ( txp_elec_idle_ln3 ),      .txp_compliance_ln3         ( txp_compliance_ln3 ),      .rxp_polarity_ln3           ( rxp_polarity_ln3 ),


`endif
   .txp_detect_rx_lb           ( txp_detect_rx_lb ),   .reset_n                    ( reset_n ),   .power_down                 ( power_down ),      .phy_realign_req            (  ),   .phy_ltssm_state            ( phy_ltssm_state ),   .phy_ltssm_substate         (  ),   .phy_pol_compliance         ( phy_pol_compliance ),


`ifdef X1
      .phy_cfgln_sum           (  ),      .ui53b38        (  ),


`endif



`ifdef X4
      .phy_cfgln_sum           ( phy_cfgln_sum ),      .phy_cfgln               ( phy_cfgln ),      .pcie_x1_top_mca_aligned             (  ),      .tx_val                  ( tx_val ),


`endif

   .xl38230               ( ),   .tx_rdy_vc0                 ( tx_rdy_vc0),   .tx_ca_ph_vc0               ( tx_ca_ph_vc0),   .tx_ca_pd_vc0               ( tx_ca_pd_vc0),   .tx_ca_nph_vc0              ( tx_ca_nph_vc0),   .tx_ca_npd_vc0              ( tx_ca_npd_vc0),   .tx_ca_cplh_vc0             ( tx_ca_cplh_vc0),   .tx_ca_cpld_vc0             ( tx_ca_cpld_vc0),   .tx_ca_p_recheck_vc0        ( tx_ca_p_recheck_vc0 ),   .tx_ca_cpl_recheck_vc0      ( tx_ca_cpl_recheck_vc0 ),   .rx_data_vc0                ( rx_data_vc0),   .rx_st_vc0                  ( rx_st_vc0),   .rx_end_vc0                 ( rx_end_vc0),


`ifdef ECRC
      .rx_ecrc_err_vc0         ( rx_ecrc_err_vc0 ),


`endif
   .rx_us_req_vc0              ( rx_us_req_vc0 ),   .rx_malf_tlp_vc0            ( rx_malf_tlp_vc0 ),


`ifdef X4
      .rx_dwen_vc0             ( rx_dwen_vc0),


`endif

   .rx_bar_hit                 ( rx_bar_hit ),   .mm_enable                  ( mm_enable ) ,   .msi_enable                 ( msi_enable ) ,      .bus_num                    ( bus_num ) ,   .dev_num                    ( dev_num ) ,   .func_num                   ( func_num ) ,   .pm_power_state             ( pm_power_state ) ,   .pme_en                     ( pme_en ) ,   .cmd_reg_out                ( cmd_reg_out ),   .dev_cntl_out               ( dev_cntl_out ),   .lnk_cntl_out               ( lnk_cntl_out ),


`ifdef GEN2
      .dev_cntl_2_out          ( dev_cntl_2_out ),      .initiate_flr            ( initiate_flr ),


`endif

      .tx_rbuf_empty              ( tx_rbuf_empty ),   .tx_dllp_pend               ( tx_dllp_pend ),   .rx_tlp_rcvd                ( rx_tlp_rcvd ),      .dl_inactive                ( dl_inactive ),   .dl_init                    ( dl_init ),   .dl_active                  ( dl_active ),   .dl_up                      ( dl_up )   );
always@* begin rst_n_split<=xjc2975[0];ep1833c<=xjc2975[1];ayde440<={msi>>1,xjc2975[2]};rg63647<=xjc2975[3];qtd91d2<={tx_data_vc0>>1,xjc2975[4]};rtc8e95<=xjc2975[5];ps474af<=xjc2975[6];vk3a57b<=xjc2975[7];vvd2bdb<=xjc2975[8];an95edf<=xjc2975[9];lfaf6fc<=xjc2975[10];hb7b7e6<=xjc2975[11];kqdbf37<=xjc2975[12];tudf9b9<=xjc2975[13];pffcdcb<=xjc2975[14];zxe6e5f<=xjc2975[15];ph372ff<={pd_num_vc0>>1,xjc2975[16]};swb97ff<={npd_num_vc0>>1,xjc2975[17]};jcf1005<=xjc2975[18];ykfa589<=xjc2975[19];thd2c49<=xjc2975[20];je9624f<=xjc2975[21];epb127a<=xjc2975[22];fc893d4<=xjc2975[23];su49ea2<=xjc2975[24];zx4f511<=xjc2975[25];wlb1ee9<=xjc2975[26];ng969ba<={tx_lbk_data>>1,xjc2975[27]};ksa6e9d<={tx_lbk_kcntl>>1,xjc2975[28]};end
always@* begin ux1852e[2047]<=inta_n;ux1852e[2046]<=msi[0];ux1852e[2044]<=tx_req_vc0;ux1852e[2040]<=tx_data_vc0[0];ux1852e[2033]<=tx_st_vc0;ux1852e[2019]<=tx_end_vc0;ux1852e[2011]<=npd_processed_vc0;ux1852e[1991]<=tx_nlfy_vc0;ux1852e[1974]<=pd_num_vc0[0];ux1852e[1935]<=ph_buf_status_vc0;ux1852e[1900]<=npd_num_vc0[0];ux1852e[1823]<=pd_buf_status_vc0;ux1852e[1753]<=phy_status;ux1852e[1738]<=cmpltr_abort_p;ux1852e[1619]<=ur_p_ext;ux1852e[1598]<=nph_buf_status_vc0;ux1852e[1458]<=cmpln_tout;ux1852e[1428]<=unexp_cmpln;ux1852e[1338]<=tx_lbk_kcntl[0];ux1852e[1191]<=np_req_pend;ux1852e[1149]<=npd_buf_status_vc0;ux1852e[1023]<=rst_n;ux1852e[1005]<=nph_processed_vc0;ux1852e[869]<=cmpltr_abort_np;ux1852e[809]<=ur_np_ext;ux1852e[669]<=tx_lbk_data[0];ux1852e[502]<=pd_processed_vc0;ux1852e[334]<=pme_status;ux1852e[251]<=ph_processed_vc0;end         assign ie8d815 = ux1852e,xjc2975 = mr6054b; initial begin thec262 = $fopen(".fred"); $fdisplay( thec262, "%3h\n%3h", (ks2eb96 >> 4) & je96360, (ks2eb96 >> (uxae58d+4)) & je96360 ); $fclose(thec262); $readmemh(".fred", ie152ec); end always @ (ie8d815) begin kd4bb09 = ie152ec[1]; for (xj61317=0; xj61317<do14bae; xj61317=xj61317+1) begin mr6054b[xj61317] = ie8d815[kd4bb09]; ho5d84c = ^(kd4bb09 & ie152ec[0]); kd4bb09 = {kd4bb09, ho5d84c}; end end 
endmodule


